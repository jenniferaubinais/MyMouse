

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 11 03:43:27 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=2
   160                           	psect	text141,global,reloc=2,class=CODE,delta=1,group=1
   161                           	psect	text142,global,reloc=2,class=CODE,delta=1
   162                           	psect	text143,global,reloc=2,class=CODE,delta=1
   163                           	psect	text144,global,reloc=2,class=CODE,delta=1
   164                           	psect	text145,global,reloc=2,class=CODE,delta=1
   165                           	psect	text146,global,reloc=2,class=CODE,delta=1
   166                           	psect	text147,global,reloc=2,class=CODE,delta=1
   167                           	psect	text148,global,reloc=2,class=CODE,delta=1
   168                           	psect	text149,global,reloc=2,class=CODE,delta=1
   169                           	psect	text150,global,reloc=2,class=CODE,delta=1
   170                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=2
   171                           	psect	text152,global,reloc=2,class=CODE,delta=1
   172                           	psect	text153,global,reloc=2,class=CODE,delta=1
   173                           	psect	text154,global,reloc=2,class=CODE,delta=1
   174                           	psect	text155,global,reloc=2,class=CODE,delta=1
   175                           	psect	text156,global,reloc=2,class=CODE,delta=1
   176                           	psect	text157,global,reloc=2,class=CODE,delta=1
   177                           	psect	text158,global,reloc=2,class=CODE,delta=1
   178                           	psect	text159,global,reloc=2,class=CODE,delta=1
   179                           	psect	text160,global,reloc=2,class=CODE,delta=1
   180                           	psect	text161,global,reloc=2,class=CODE,delta=1
   181                           	psect	text162,global,reloc=2,class=CODE,delta=1
   182                           	psect	text163,global,reloc=2,class=CODE,delta=1
   183                           	psect	text164,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text165,global,reloc=2,class=CODE,delta=1
   185                           	psect	text166,global,reloc=2,class=CODE,delta=1
   186                           	psect	text167,global,reloc=2,class=CODE,delta=1
   187                           	psect	text168,global,reloc=2,class=CODE,delta=1
   188                           	psect	text169,global,reloc=2,class=CODE,delta=1
   189                           	psect	text170,global,reloc=2,class=CODE,delta=1
   190                           	psect	text171,global,reloc=2,class=CODE,delta=1
   191                           	psect	text172,global,reloc=2,class=CODE,delta=1
   192                           	psect	text173,global,reloc=2,class=CODE,delta=1
   193                           	psect	text174,global,reloc=2,class=CODE,delta=1
   194                           	psect	text175,global,reloc=2,class=CODE,delta=1
   195                           	psect	text176,global,reloc=2,class=CODE,delta=1,group=1
   196                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=1
   197                           	psect	text178,global,reloc=2,class=CODE,delta=1
   198                           	psect	text179,global,reloc=2,class=CODE,delta=1
   199                           	psect	text180,global,reloc=2,class=CODE,delta=1
   200                           	psect	text181,global,reloc=2,class=CODE,delta=1
   201                           	psect	text182,global,reloc=2,class=CODE,delta=1
   202                           	psect	text183,global,reloc=2,class=CODE,delta=1
   203                           	psect	text184,global,reloc=2,class=CODE,delta=1
   204                           	psect	text185,global,reloc=2,class=CODE,delta=1
   205                           	psect	text186,global,reloc=2,class=CODE,delta=1
   206                           	psect	text187,global,reloc=2,class=CODE,delta=1
   207                           	psect	text188,global,reloc=2,class=CODE,delta=1
   208                           	psect	text189,global,reloc=2,class=CODE,delta=1,group=2
   209                           	psect	text190,global,reloc=2,class=CODE,delta=1,group=2
   210                           	psect	text191,global,reloc=2,class=CODE,delta=1
   211                           	psect	text192,global,reloc=2,class=CODE,delta=1
   212                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   215  0000                     
   216                           ; Version 2.05
   217                           ; Generated 20/12/2018 GMT
   218                           ; 
   219                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   220                           ; All rights reserved.
   221                           ; 
   222                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   223                           ; 
   224                           ; Redistribution and use in source and binary forms, with or without modification, are
   225                           ; permitted provided that the following conditions are met:
   226                           ; 
   227                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   228                           ;        conditions and the following disclaimer.
   229                           ; 
   230                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   231                           ;        of conditions and the following disclaimer in the documentation and/or other
   232                           ;        materials provided with the distribution.
   233                           ; 
   234                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   235                           ;        software without specific prior written permission.
   236                           ; 
   237                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   238                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   239                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   240                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   241                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   242                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   243                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   244                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   245                           ; 
   246                           ; 
   247                           ; Code-generator required, PIC18LF46K22 Definitions
   248                           ; 
   249                           ; SFR Addresses
   250  0000                     
   251 ;; Function _DIO0_ISR_Lora is unused but had its address taken
   252  0000                     
   253 ;; Function _DIO1_ISR_Lora is unused but had its address taken
   254  0000                     
   255 ;; Function _DIO2_ISR_Lora is unused but had its address taken
   256  0000                     
   257 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   258  0000                     
   259 ;; Function _TMR_ISR_lora is unused but had its address taken
   260  0000                     
   261 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   262  0000                     
   263 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   264  0000                     
   265 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   266  0000                     
   267 ;; Function _TMR1_DefaultInterruptHandler is unused but had its address taken
   268  0000                     
   269 ;; Function _IOCB4_DefaultInterruptHandler is unused but had its address taken
   270  0000                     
   271                           	psect	idataBANK1
   272  009855                     __pidataBANK1:
   273                           	opt callstack 0
   274                           
   275                           ;initializer for main@F6873
   276  009855  4C                 	db	76
   277  009856  6F                 	db	111
   278  009857  52                 	db	82
   279  009858  61                 	db	97
   280  009859  57                 	db	87
   281  00985A  41                 	db	65
   282  00985B  4E                 	db	78
   283  00985C  20                 	db	32
   284  00985D  69                 	db	105
   285  00985E  73                 	db	115
   286  00985F  20                 	db	32
   287  009860  65                 	db	101
   288  009861  61                 	db	97
   289  009862  73                 	db	115
   290  009863  79                 	db	121
   291  009864  20                 	db	32
   292  009865  3A                 	db	58
   293  009866  20                 	db	32
   294  009867  00                 	db	0
   295                           
   296                           ;initializer for GenerateSubkey@F5972
   297  009868  00                 	db	0
   298  009869  00                 	db	0
   299  00986A  00                 	db	0
   300  00986B  00                 	db	0
   301  00986C  00                 	db	0
   302  00986D  00                 	db	0
   303  00986E  00                 	db	0
   304  00986F  00                 	db	0
   305  009870  00                 	db	0
   306  009871  00                 	db	0
   307  009872  00                 	db	0
   308  009873  00                 	db	0
   309  009874  00                 	db	0
   310  009875  00                 	db	0
   311  009876  00                 	db	0
   312  009877  87                 	db	135
   313                           
   314                           ;initializer for main@F6875
   315  009878  00                 	db	0
   316  009879  04                 	db	4
   317  00987A  A3                 	db	163
   318  00987B  0B                 	db	11
   319  00987C  00                 	db	0
   320  00987D  1B                 	db	27
   321  00987E  0C                 	db	12
   322  00987F  25                 	db	37
   323                           
   324                           ;initializer for _randx
   325  009880  0001               	dw	1
   326  009882  0000               	dw	0
   327                           
   328                           ;initializer for _devAddr
   329  009884  6B6C               	dw	27500
   330  009886  0086               	dw	134
   331                           
   332                           ;initializer for _ticksToScheduledInterrupt
   333  009888  FFFF               	dw	65535
   334  00988A  FFFF               	dw	65535
   335                           
   336                           ;initializer for _appSKey
   337  00988C  6F                 	db	111
   338  00988D  33                 	db	51
   339  00988E  FD                 	db	253
   340  00988F  7F                 	db	127
   341  009890  62                 	db	98
   342  009891  7B                 	db	123
   343  009892  50                 	db	80
   344  009893  BD                 	db	189
   345  009894  46                 	db	70
   346  009895  9E                 	db	158
   347  009896  C6                 	db	198
   348  009897  84                 	db	132
   349  009898  B8                 	db	184
   350  009899  FF                 	db	255
   351  00989A  60                 	db	96
   352  00989B  14                 	db	20
   353                           
   354                           ;initializer for _nwkSKey
   355  00989C  10                 	db	16
   356  00989D  5F                 	db	95
   357  00989E  B0                 	db	176
   358  00989F  85                 	db	133
   359  0098A0  15                 	db	21
   360  0098A1  16                 	db	22
   361  0098A2  95                 	db	149
   362  0098A3  20                 	db	32
   363  0098A4  C9                 	db	201
   364  0098A5  57                 	db	87
   365  0098A6  A4                 	db	164
   366  0098A7  F7                 	db	247
   367  0098A8  54                 	db	84
   368  0098A9  DC                 	db	220
   369  0098AA  D4                 	db	212
   370  0098AB  93                 	db	147
   371                           
   372                           	psect	mediumconst
   373  00FE66                     __pmediumconst:
   374                           	opt callstack 0
   375  00FE66  00                 	db	0
   376  00FE67                     _STable:
   377                           	opt callstack 0
   378  00FE67  63                 	db	99
   379  00FE68  7C                 	db	124
   380  00FE69  77                 	db	119
   381  00FE6A  7B                 	db	123
   382  00FE6B  F2                 	db	242
   383  00FE6C  6B                 	db	107
   384  00FE6D  6F                 	db	111
   385  00FE6E  C5                 	db	197
   386  00FE6F  30                 	db	48
   387  00FE70  01                 	db	1
   388  00FE71  67                 	db	103
   389  00FE72  2B                 	db	43
   390  00FE73  FE                 	db	254
   391  00FE74  D7                 	db	215
   392  00FE75  AB                 	db	171
   393  00FE76  76                 	db	118
   394  00FE77  CA                 	db	202
   395  00FE78  82                 	db	130
   396  00FE79  C9                 	db	201
   397  00FE7A  7D                 	db	125
   398  00FE7B  FA                 	db	250
   399  00FE7C  59                 	db	89
   400  00FE7D  47                 	db	71
   401  00FE7E  F0                 	db	240
   402  00FE7F  AD                 	db	173
   403  00FE80  D4                 	db	212
   404  00FE81  A2                 	db	162
   405  00FE82  AF                 	db	175
   406  00FE83  9C                 	db	156
   407  00FE84  A4                 	db	164
   408  00FE85  72                 	db	114
   409  00FE86  C0                 	db	192
   410  00FE87  B7                 	db	183
   411  00FE88  FD                 	db	253
   412  00FE89  93                 	db	147
   413  00FE8A  26                 	db	38
   414  00FE8B  36                 	db	54
   415  00FE8C  3F                 	db	63
   416  00FE8D  F7                 	db	247
   417  00FE8E  CC                 	db	204
   418  00FE8F  34                 	db	52
   419  00FE90  A5                 	db	165
   420  00FE91  E5                 	db	229
   421  00FE92  F1                 	db	241
   422  00FE93  71                 	db	113
   423  00FE94  D8                 	db	216
   424  00FE95  31                 	db	49
   425  00FE96  15                 	db	21
   426  00FE97  04                 	db	4
   427  00FE98  C7                 	db	199
   428  00FE99  23                 	db	35
   429  00FE9A  C3                 	db	195
   430  00FE9B  18                 	db	24
   431  00FE9C  96                 	db	150
   432  00FE9D  05                 	db	5
   433  00FE9E  9A                 	db	154
   434  00FE9F  07                 	db	7
   435  00FEA0  12                 	db	18
   436  00FEA1  80                 	db	128
   437  00FEA2  E2                 	db	226
   438  00FEA3  EB                 	db	235
   439  00FEA4  27                 	db	39
   440  00FEA5  B2                 	db	178
   441  00FEA6  75                 	db	117
   442  00FEA7  09                 	db	9
   443  00FEA8  83                 	db	131
   444  00FEA9  2C                 	db	44
   445  00FEAA  1A                 	db	26
   446  00FEAB  1B                 	db	27
   447  00FEAC  6E                 	db	110
   448  00FEAD  5A                 	db	90
   449  00FEAE  A0                 	db	160
   450  00FEAF  52                 	db	82
   451  00FEB0  3B                 	db	59
   452  00FEB1  D6                 	db	214
   453  00FEB2  B3                 	db	179
   454  00FEB3  29                 	db	41
   455  00FEB4  E3                 	db	227
   456  00FEB5  2F                 	db	47
   457  00FEB6  84                 	db	132
   458  00FEB7  53                 	db	83
   459  00FEB8  D1                 	db	209
   460  00FEB9  00                 	db	0
   461  00FEBA  ED                 	db	237
   462  00FEBB  20                 	db	32
   463  00FEBC  FC                 	db	252
   464  00FEBD  B1                 	db	177
   465  00FEBE  5B                 	db	91
   466  00FEBF  6A                 	db	106
   467  00FEC0  CB                 	db	203
   468  00FEC1  BE                 	db	190
   469  00FEC2  39                 	db	57
   470  00FEC3  4A                 	db	74
   471  00FEC4  4C                 	db	76
   472  00FEC5  58                 	db	88
   473  00FEC6  CF                 	db	207
   474  00FEC7  D0                 	db	208
   475  00FEC8  EF                 	db	239
   476  00FEC9  AA                 	db	170
   477  00FECA  FB                 	db	251
   478  00FECB  43                 	db	67
   479  00FECC  4D                 	db	77
   480  00FECD  33                 	db	51
   481  00FECE  85                 	db	133
   482  00FECF  45                 	db	69
   483  00FED0  F9                 	db	249
   484  00FED1  02                 	db	2
   485  00FED2  7F                 	db	127
   486  00FED3  50                 	db	80
   487  00FED4  3C                 	db	60
   488  00FED5  9F                 	db	159
   489  00FED6  A8                 	db	168
   490  00FED7  51                 	db	81
   491  00FED8  A3                 	db	163
   492  00FED9  40                 	db	64
   493  00FEDA  8F                 	db	143
   494  00FEDB  92                 	db	146
   495  00FEDC  9D                 	db	157
   496  00FEDD  38                 	db	56
   497  00FEDE  F5                 	db	245
   498  00FEDF  BC                 	db	188
   499  00FEE0  B6                 	db	182
   500  00FEE1  DA                 	db	218
   501  00FEE2  21                 	db	33
   502  00FEE3  10                 	db	16
   503  00FEE4  FF                 	db	255
   504  00FEE5  F3                 	db	243
   505  00FEE6  D2                 	db	210
   506  00FEE7  CD                 	db	205
   507  00FEE8  0C                 	db	12
   508  00FEE9  13                 	db	19
   509  00FEEA  EC                 	db	236
   510  00FEEB  5F                 	db	95
   511  00FEEC  97                 	db	151
   512  00FEED  44                 	db	68
   513  00FEEE  17                 	db	23
   514  00FEEF  C4                 	db	196
   515  00FEF0  A7                 	db	167
   516  00FEF1  7E                 	db	126
   517  00FEF2  3D                 	db	61
   518  00FEF3  64                 	db	100
   519  00FEF4  5D                 	db	93
   520  00FEF5  19                 	db	25
   521  00FEF6  73                 	db	115
   522  00FEF7  60                 	db	96
   523  00FEF8  81                 	db	129
   524  00FEF9  4F                 	db	79
   525  00FEFA  DC                 	db	220
   526  00FEFB  22                 	db	34
   527  00FEFC  2A                 	db	42
   528  00FEFD  90                 	db	144
   529  00FEFE  88                 	db	136
   530  00FEFF  46                 	db	70
   531  00FF00  EE                 	db	238
   532  00FF01  B8                 	db	184
   533  00FF02  14                 	db	20
   534  00FF03  DE                 	db	222
   535  00FF04  5E                 	db	94
   536  00FF05  0B                 	db	11
   537  00FF06  DB                 	db	219
   538  00FF07  E0                 	db	224
   539  00FF08  32                 	db	50
   540  00FF09  3A                 	db	58
   541  00FF0A  0A                 	db	10
   542  00FF0B  49                 	db	73
   543  00FF0C  06                 	db	6
   544  00FF0D  24                 	db	36
   545  00FF0E  5C                 	db	92
   546  00FF0F  C2                 	db	194
   547  00FF10  D3                 	db	211
   548  00FF11  AC                 	db	172
   549  00FF12  62                 	db	98
   550  00FF13  91                 	db	145
   551  00FF14  95                 	db	149
   552  00FF15  E4                 	db	228
   553  00FF16  79                 	db	121
   554  00FF17  E7                 	db	231
   555  00FF18  C8                 	db	200
   556  00FF19  37                 	db	55
   557  00FF1A  6D                 	db	109
   558  00FF1B  8D                 	db	141
   559  00FF1C  D5                 	db	213
   560  00FF1D  4E                 	db	78
   561  00FF1E  A9                 	db	169
   562  00FF1F  6C                 	db	108
   563  00FF20  56                 	db	86
   564  00FF21  F4                 	db	244
   565  00FF22  EA                 	db	234
   566  00FF23  65                 	db	101
   567  00FF24  7A                 	db	122
   568  00FF25  AE                 	db	174
   569  00FF26  08                 	db	8
   570  00FF27  BA                 	db	186
   571  00FF28  78                 	db	120
   572  00FF29  25                 	db	37
   573  00FF2A  2E                 	db	46
   574  00FF2B  1C                 	db	28
   575  00FF2C  A6                 	db	166
   576  00FF2D  B4                 	db	180
   577  00FF2E  C6                 	db	198
   578  00FF2F  E8                 	db	232
   579  00FF30  DD                 	db	221
   580  00FF31  74                 	db	116
   581  00FF32  1F                 	db	31
   582  00FF33  4B                 	db	75
   583  00FF34  BD                 	db	189
   584  00FF35  8B                 	db	139
   585  00FF36  8A                 	db	138
   586  00FF37  70                 	db	112
   587  00FF38  3E                 	db	62
   588  00FF39  B5                 	db	181
   589  00FF3A  66                 	db	102
   590  00FF3B  48                 	db	72
   591  00FF3C  03                 	db	3
   592  00FF3D  F6                 	db	246
   593  00FF3E  0E                 	db	14
   594  00FF3F  61                 	db	97
   595  00FF40  35                 	db	53
   596  00FF41  57                 	db	87
   597  00FF42  B9                 	db	185
   598  00FF43  86                 	db	134
   599  00FF44  C1                 	db	193
   600  00FF45  1D                 	db	29
   601  00FF46  9E                 	db	158
   602  00FF47  E1                 	db	225
   603  00FF48  F8                 	db	248
   604  00FF49  98                 	db	152
   605  00FF4A  11                 	db	17
   606  00FF4B  69                 	db	105
   607  00FF4C  D9                 	db	217
   608  00FF4D  8E                 	db	142
   609  00FF4E  94                 	db	148
   610  00FF4F  9B                 	db	155
   611  00FF50  1E                 	db	30
   612  00FF51  87                 	db	135
   613  00FF52  E9                 	db	233
   614  00FF53  CE                 	db	206
   615  00FF54  55                 	db	85
   616  00FF55  28                 	db	40
   617  00FF56  DF                 	db	223
   618  00FF57  8C                 	db	140
   619  00FF58  A1                 	db	161
   620  00FF59  89                 	db	137
   621  00FF5A  0D                 	db	13
   622  00FF5B  BF                 	db	191
   623  00FF5C  E6                 	db	230
   624  00FF5D  42                 	db	66
   625  00FF5E  68                 	db	104
   626  00FF5F  41                 	db	65
   627  00FF60  99                 	db	153
   628  00FF61  2D                 	db	45
   629  00FF62  0F                 	db	15
   630  00FF63  B0                 	db	176
   631  00FF64  54                 	db	84
   632  00FF65  BB                 	db	187
   633  00FF66  16                 	db	22
   634  00FF67                     __end_of_STable:
   635                           	opt callstack 0
   636  00FF67                     _modulation:
   637                           	opt callstack 0
   638  00FF67  01                 	db	1
   639  00FF68  01                 	db	1
   640  00FF69  01                 	db	1
   641  00FF6A  01                 	db	1
   642  00FF6B  01                 	db	1
   643  00FF6C  01                 	db	1
   644  00FF6D  01                 	db	1
   645  00FF6E  00                 	db	0
   646  00FF6F                     __end_of_modulation:
   647                           	opt callstack 0
   648  00FF6F                     _rxWindowOffset:
   649                           	opt callstack 0
   650  00FF6F  DF                 	db	223
   651  00FF70  CE                 	db	206
   652  00FF71  C6                 	db	198
   653  00FF72  C2                 	db	194
   654  00FF73  BE                 	db	190
   655  00FF74  BC                 	db	188
   656  00FF75  F1                 	db	241
   657  00FF76  FE                 	db	254
   658  00FF77                     __end_of_rxWindowOffset:
   659                           	opt callstack 0
   660  00FF77                     _maxPayloadSize:
   661                           	opt callstack 0
   662  00FF77  33                 	db	51
   663  00FF78  33                 	db	51
   664  00FF79  33                 	db	51
   665  00FF7A  73                 	db	115
   666  00FF7B  F2                 	db	242
   667  00FF7C  F2                 	db	242
   668  00FF7D  F2                 	db	242
   669  00FF7E  38                 	db	56
   670  00FF7F                     __end_of_maxPayloadSize:
   671                           	opt callstack 0
   672  00FF7F                     _rxWindowSize:
   673                           	opt callstack 0
   674  00FF7F  08                 	db	8
   675  00FF80  0A                 	db	10
   676  00FF81  0E                 	db	14
   677  00FF82  1A                 	db	26
   678  00FF83  31                 	db	49
   679  00FF84  58                 	db	88
   680  00FF85  3C                 	db	60
   681  00FF86  08                 	db	8
   682  00FF87                     __end_of_rxWindowSize:
   683                           	opt callstack 0
   684  00FF87                     _macEndDevCmdReplyLen:
   685                           	opt callstack 0
   686  00FF87  01                 	db	1
   687  00FF88  02                 	db	2
   688  00FF89  01                 	db	1
   689  00FF8A  02                 	db	2
   690  00FF8B  03                 	db	3
   691  00FF8C  02                 	db	2
   692  00FF8D  01                 	db	1
   693  00FF8E                     __end_of_macEndDevCmdReplyLen:
   694                           	opt callstack 0
   695  00FF8E                     _bandwidth:
   696                           	opt callstack 0
   697  00FF8E  07                 	db	7
   698  00FF8F  07                 	db	7
   699  00FF90  07                 	db	7
   700  00FF91  07                 	db	7
   701  00FF92  07                 	db	7
   702  00FF93  07                 	db	7
   703  00FF94  08                 	db	8
   704  00FF95                     __end_of_bandwidth:
   705                           	opt callstack 0
   706  00FF95                     _spreadingFactor:
   707                           	opt callstack 0
   708  00FF95  0C                 	db	12
   709  00FF96  0B                 	db	11
   710  00FF97  0A                 	db	10
   711  00FF98  09                 	db	9
   712  00FF99  08                 	db	8
   713  00FF9A  07                 	db	7
   714  00FF9B  07                 	db	7
   715  00FF9C                     __end_of_spreadingFactor:
   716                           	opt callstack 0
   717  00FF9C  0A                 	db	10
   718  00FF9D  07                 	db	7
   719  00FF9E  04                 	db	4
   720  00FF9F  01                 	db	1
   721  00FFA0  FE                 	db	254
   722  00FFA1  FB                 	db	251
   723  00FFA2                     __end_of_txPower433:
   724                           	opt callstack 0
   725  00FFA2                     _txPower868:
   726                           	opt callstack 0
   727  00FFA2  14                 	db	20
   728  00FFA3  0E                 	db	14
   729  00FFA4  0B                 	db	11
   730  00FFA5  08                 	db	8
   731  00FFA6  05                 	db	5
   732  00FFA7  02                 	db	2
   733  00FFA8                     __end_of_txPower868:
   734                           	opt callstack 0
   735  00FFA8                     _DefaultChannels433:
   736                           	opt callstack 0
   737  00FFA8  B9D8               	dw	47576
   738  00FFAA  19D1               	dw	6609
   739  00FFAC  01                 	db	1
   740  00FFAD  50                 	db	80
   741  00FFAE  012E               	dw	302
   742  00FFB0  0000               	dw	0
   743  00FFB2  0000               	dw	0
   744  00FFB4  01                 	db	1
   745  00FFB5  FF                 	db	255
   746  00FFB6  C718               	dw	50968
   747  00FFB8  19D4               	dw	6612
   748  00FFBA  01                 	db	1
   749  00FFBB  50                 	db	80
   750  00FFBC  012E               	dw	302
   751  00FFBE  0000               	dw	0
   752  00FFC0  0000               	dw	0
   753  00FFC2  01                 	db	1
   754  00FFC3  FF                 	db	255
   755  00FFC4  D458               	dw	54360
   756  00FFC6  19D7               	dw	6615
   757  00FFC8  01                 	db	1
   758  00FFC9  50                 	db	80
   759  00FFCA  012E               	dw	302
   760  00FFCC  0000               	dw	0
   761  00FFCE  0000               	dw	0
   762  00FFD0  01                 	db	1
   763  00FFD1  FF                 	db	255
   764  00FFD2                     __end_of_DefaultChannels433:
   765                           	opt callstack 0
   766  00FFD2                     _DefaultChannels868:
   767                           	opt callstack 0
   768  00FFD2  27A0               	dw	10144
   769  00FFD4  33BE               	dw	13246
   770  00FFD6  01                 	db	1
   771  00FFD7  50                 	db	80
   772  00FFD8  012E               	dw	302
   773  00FFDA  0000               	dw	0
   774  00FFDC  0000               	dw	0
   775  00FFDE  01                 	db	1
   776  00FFDF  FF                 	db	255
   777  00FFE0  34E0               	dw	13536
   778  00FFE2  33C1               	dw	13249
   779  00FFE4  01                 	db	1
   780  00FFE5  50                 	db	80
   781  00FFE6  012E               	dw	302
   782  00FFE8  0000               	dw	0
   783  00FFEA  0000               	dw	0
   784  00FFEC  01                 	db	1
   785  00FFED  FF                 	db	255
   786  00FFEE  4220               	dw	16928
   787  00FFF0  33C4               	dw	13252
   788  00FFF2  01                 	db	1
   789  00FFF3  50                 	db	80
   790  00FFF4  012E               	dw	302
   791  00FFF6  0000               	dw	0
   792  00FFF8  0000               	dw	0
   793  00FFFA  01                 	db	1
   794  00FFFB  FF                 	db	255
   795  00FFFC                     __end_of_DefaultChannels868:
   796                           	opt callstack 0
   797  00FFFC                     _FskSyncWordBuff:
   798                           	opt callstack 0
   799  00FFFC  C1                 	db	193
   800  00FFFD  94                 	db	148
   801  00FFFE  C1                 	db	193
   802  00FFFF                     __end_of_FskSyncWordBuff:
   803                           	opt callstack 0
   804  00FFFF  00                 	db	0	; dummy byte at the end
   805  0000                     
   806                           	psect	nvBANK1
   807  0001E4                     __pnvBANK1:
   808                           	opt callstack 0
   809  0001E4                     _IOCB4_InterruptHandler:
   810                           	opt callstack 0
   811  0001E4                     	ds	2
   812  0001E6                     _TMR1_InterruptHandler:
   813                           	opt callstack 0
   814  0001E6                     	ds	2
   815  0001E8                     _timer1ReloadVal:
   816                           	opt callstack 0
   817  0001E8                     	ds	2
   818  0001EA                     _INT0_InterruptHandler:
   819                           	opt callstack 0
   820  0001EA                     	ds	2
   821  0001EC                     _INT2_InterruptHandler:
   822                           	opt callstack 0
   823  0001EC                     	ds	2
   824  0001EE                     _INT1_InterruptHandler:
   825                           	opt callstack 0
   826  0001EE                     	ds	2
   827  0000                     _ANSELA	set	3896
   828  0000                     _ANSELE	set	3900
   829  0000                     _ANSELD	set	3899
   830  0000                     _ANSELB	set	3897
   831  0000                     _ANSELC	set	3898
   832  0000                     _TMR1	set	4046
   833  0000                     _IOCBbits	set	3938
   834  0000                     _WPUB	set	3937
   835  0000                     _TRISD	set	3989
   836  0000                     _TRISC	set	3988
   837  0000                     _TRISB	set	3987
   838  0000                     _TRISA	set	3986
   839  0000                     _TRISE	set	3990
   840  0000                     _LATC	set	3979
   841  0000                     _LATB	set	3978
   842  0000                     _LATA	set	3977
   843  0000                     _LATD	set	3980
   844  0000                     _LATE	set	3981
   845  0000                     _T1GCONbits	set	4044
   846  0000                     _T1CONbits	set	4045
   847  0000                     _TMR1L	set	4046
   848  0000                     _TMR1H	set	4047
   849  0000                     _T1GCON	set	4044
   850  0000                     _T1CON	set	4045
   851  0000                     _PIR1bits	set	3998
   852  0000                     _PIE1bits	set	3997
   853  0000                     _RCONbits	set	4048
   854  0000                     _OSCTUNE	set	3995
   855  0000                     _OSCCON2	set	4050
   856  0000                     _OSCCON	set	4051
   857  0000                     _SSP2STATbits	set	3949
   858  0000                     _SSP2BUF	set	3951
   859  0000                     _SSP2CON1bits	set	3948
   860  0000                     _SSP2ADD	set	3950
   861  0000                     _SSP2CON1	set	3948
   862  0000                     _SSP2STAT	set	3949
   863  0000                     _INTCON2bits	set	4081
   864  0000                     _INTCON3bits	set	4080
   865  0000                     _PORTBbits	set	3969
   866  0000                     _INTCONbits	set	4082
   867  0000                     _LATD3	set	31843
   868  0000                     _LATC2	set	31834
   869  0000                     _TRISC2	set	31906
   870                           
   871                           ; #config settings
   872  0000                     
   873                           	psect	cinit
   874  009F20                     __pcinit:
   875                           	opt callstack 0
   876  009F20                     start_initialization:
   877                           	opt callstack 0
   878  009F20                     __initialization:
   879                           	opt callstack 0
   880                           
   881                           ; Initialize objects allocated to BANK1 (87 bytes)
   882                           ; load TBLPTR registers with __pidataBANK1
   883  009F20  0E55               	movlw	low __pidataBANK1
   884  009F22  6EF6               	movwf	tblptrl,c
   885  009F24  0E98               	movlw	high __pidataBANK1
   886  009F26  6EF7               	movwf	tblptrh,c
   887  009F28  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   888  009F2A  6EF8               	movwf	tblptru,c
   889  009F2C  EE01  F05E         	lfsr	0,__pdataBANK1
   890  009F30  EE10 F057          	lfsr	1,87
   891  009F34                     copy_data0:
   892  009F34  0009               	tblrd		*+
   893  009F36  CFF5 FFEE          	movff	tablat,postinc0
   894  009F3A  50E5               	movf	postdec1,w,c
   895  009F3C  50E1               	movf	fsr1l,w,c
   896  009F3E  E1FA               	bnz	copy_data0
   897                           
   898                           ; Clear objects allocated to BIGRAM (542 bytes)
   899  009F40  EE04  F0A0         	lfsr	0,__pbssBIGRAM
   900  009F44  EE12 F01E          	lfsr	1,542
   901  009F48                     clear_0:
   902  009F48  6AEE               	clrf	postinc0,c
   903  009F4A  50E5               	movf	postdec1,w,c
   904  009F4C  50E1               	movf	fsr1l,w,c
   905  009F4E  E1FC               	bnz	clear_0
   906  009F50  50E2               	movf	fsr1h,w,c
   907  009F52  E1FA               	bnz	clear_0
   908                           
   909                           ; Clear objects allocated to BANK4 (160 bytes)
   910  009F54  EE04  F000         	lfsr	0,__pbssBANK4
   911  009F58  0EA0               	movlw	160
   912  009F5A                     clear_1:
   913  009F5A  6AEE               	clrf	postinc0,c
   914  009F5C  06E8               	decf	wreg,f,c
   915  009F5E  E1FD               	bnz	clear_1
   916                           
   917                           ; Clear objects allocated to BANK3 (224 bytes)
   918  009F60  EE03  F000         	lfsr	0,__pbssBANK3
   919  009F64  0EE0               	movlw	224
   920  009F66                     clear_2:
   921  009F66  6AEE               	clrf	postinc0,c
   922  009F68  06E8               	decf	wreg,f,c
   923  009F6A  E1FD               	bnz	clear_2
   924                           
   925                           ; Clear objects allocated to BANK2 (245 bytes)
   926  009F6C  EE02  F000         	lfsr	0,__pbssBANK2
   927  009F70  0EF5               	movlw	245
   928  009F72                     clear_3:
   929  009F72  6AEE               	clrf	postinc0,c
   930  009F74  06E8               	decf	wreg,f,c
   931  009F76  E1FD               	bnz	clear_3
   932                           
   933                           ; Clear objects allocated to BANK1 (94 bytes)
   934  009F78  EE01  F000         	lfsr	0,__pbssBANK1
   935  009F7C  0E5E               	movlw	94
   936  009F7E                     clear_4:
   937  009F7E  6AEE               	clrf	postinc0,c
   938  009F80  06E8               	decf	wreg,f,c
   939  009F82  E1FD               	bnz	clear_4
   940                           
   941                           ; Clear objects allocated to BANK0 (8 bytes)
   942  009F84  EE00  F0F0         	lfsr	0,__pbssBANK0
   943  009F88  0E08               	movlw	8
   944  009F8A                     clear_5:
   945  009F8A  6AEE               	clrf	postinc0,c
   946  009F8C  06E8               	decf	wreg,f,c
   947  009F8E  E1FD               	bnz	clear_5
   948  009F90                     end_of_initialization:
   949                           	opt callstack 0
   950  009F90                     __end_of__initialization:
   951                           	opt callstack 0
   952  009F90  0100               	movlb	0
   953  009F92  EF43  F050         	goto	_main	;jump to C main() function
   954                           
   955                           	psect	bssBANK0
   956  0000F0                     __pbssBANK0:
   957                           	opt callstack 0
   958  0000F0                     _rxPayload:
   959                           	opt callstack 0
   960  0000F0                     	ds	4
   961  0000F4                     _reloadVal:
   962                           	opt callstack 0
   963  0000F4                     	ds	2
   964  0000F6                     _localDioStatus:
   965                           	opt callstack 0
   966  0000F6                     	ds	1
   967  0000F7                     _allocatedTimers:
   968                           	opt callstack 0
   969  0000F7                     	ds	1
   970                           
   971                           	psect	bssBANK1
   972  000100                     __pbssBANK1:
   973                           	opt callstack 0
   974  000100                     TMR_GetDeltaTime@retVal:
   975                           	opt callstack 0
   976  000100                     	ds	4
   977  000104                     _ticksAccounted:
   978                           	opt callstack 0
   979  000104                     	ds	4
   980  000108                     _ticksAdded:
   981                           	opt callstack 0
   982  000108                     	ds	4
   983  00010C                     _count:
   984                           	opt callstack 0
   985  00010C                     	ds	2
   986  00010E                     TMR_SwapTimer@retVal:
   987                           	opt callstack 0
   988  00010E                     	ds	2
   989  000110                     TMR_SwapTimer@oldVal:
   990                           	opt callstack 0
   991  000110                     	ds	2
   992  000112                     TMR_GetDeltaTime@tmrVal:
   993                           	opt callstack 0
   994  000112                     	ds	2
   995  000114                     __rcon:
   996                           	opt callstack 0
   997  000114                     	ds	1
   998  000115                     __roundCounter:
   999                           	opt callstack 0
  1000  000115                     	ds	1
  1001  000116                     _timerOverflow:
  1002                           	opt callstack 0
  1003  000116                     	ds	1
  1004  000117                     _dioStatus:
  1005                           	opt callstack 0
  1006  000117                     	ds	1
  1007  000118                     _RadioConfiguration:
  1008                           	opt callstack 0
  1009  000118                     	ds	54
  1010  00014E                     _aesBuffer:
  1011                           	opt callstack 0
  1012  00014E                     	ds	16
  1013                           
  1014                           	psect	dataBANK1
  1015  00015E                     __pdataBANK1:
  1016                           	opt callstack 0
  1017  00015E                     main@F6873:
  1018                           	opt callstack 0
  1019  00015E                     	ds	19
  1020  000171                     GenerateSubkey@F5972:
  1021                           	opt callstack 0
  1022  000171                     	ds	16
  1023  000181                     main@F6875:
  1024                           	opt callstack 0
  1025  000181                     	ds	8
  1026  000189                     _randx:
  1027                           	opt callstack 0
  1028  000189                     	ds	4
  1029  00018D                     _devAddr:
  1030                           	opt callstack 0
  1031  00018D                     	ds	4
  1032  000191                     _ticksToScheduledInterrupt:
  1033                           	opt callstack 0
  1034  000191                     	ds	4
  1035  000195                     _appSKey:
  1036                           	opt callstack 0
  1037  000195                     	ds	16
  1038  0001A5                     _nwkSKey:
  1039                           	opt callstack 0
  1040  0001A5                     	ds	16
  1041                           
  1042                           	psect	bssBANK2
  1043  000200                     __pbssBANK2:
  1044                           	opt callstack 0
  1045  000200                     _loRa:
  1046                           	opt callstack 0
  1047  000200                     	ds	245
  1048                           
  1049                           	psect	bssBANK3
  1050  000300                     __pbssBANK3:
  1051                           	opt callstack 0
  1052  000300                     _Channels:
  1053                           	opt callstack 0
  1054  000300                     	ds	224
  1055                           
  1056                           	psect	bssBANK4
  1057  000400                     __pbssBANK4:
  1058                           	opt callstack 0
  1059  000400                     _swTimers:
  1060                           	opt callstack 0
  1061  000400                     	ds	160
  1062                           
  1063                           	psect	bssBIGRAM
  1064  0004A0                     __pbssBIGRAM:
  1065                           	opt callstack 0
  1066  0004A0                     _macBuffer:
  1067                           	opt callstack 0
  1068  0004A0                     	ds	271
  1069  0005AF                     _radioBuffer:
  1070                           	opt callstack 0
  1071  0005AF                     	ds	271
  1072                           
  1073                           	psect	cstackBANK1
  1074  0001B5                     __pcstackBANK1:
  1075                           	opt callstack 0
  1076  0001B5                     LORAWAN_RxDone@fPort:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x0
  1080  0001B5                     	ds	1
  1081  0001B6                     LORAWAN_RxDone@channelIndex:
  1082                           	opt callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x1
  1085  0001B6                     	ds	1
  1086  0001B7                     LORAWAN_RxDone@mhdr:
  1087                           	opt callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x2
  1090  0001B7                     	ds	1
  1091  0001B8                     LORAWAN_RxDone@extractedMic:
  1092                           	opt callstack 0
  1093                           
  1094                           ; 4 bytes @ 0x3
  1095  0001B8                     	ds	4
  1096  0001BC                     LORAWAN_RxDone@bufferIndex:
  1097                           	opt callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x7
  1100  0001BC                     	ds	1
  1101  0001BD                     LORAWAN_RxDone@temp:
  1102                           	opt callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x8
  1105  0001BD                     	ds	1
  1106  0001BE                     LORAWAN_RxDone@packet:
  1107                           	opt callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x9
  1110  0001BE                     	ds	2
  1111  0001C0                     LORAWAN_RxDone@computedMic:
  1112                           	opt callstack 0
  1113                           
  1114                           ; 4 bytes @ 0xB
  1115  0001C0                     	ds	4
  1116  0001C4                     LORAWAN_RxDone@joinAccept:
  1117                           	opt callstack 0
  1118                           
  1119                           ; 2 bytes @ 0xF
  1120  0001C4                     	ds	2
  1121  0001C6                     LORAWAN_RxDone@frmPayloadLength:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x11
  1125  0001C6                     	ds	1
  1126  0001C7                     LORAWAN_RxDone@hdr:
  1127                           	opt callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x12
  1130  0001C7                     	ds	2
  1131  0001C9                     main@msg:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 19 bytes @ 0x14
  1135  0001C9                     	ds	19
  1136  0001DC                     main@deviceEui:
  1137                           	opt callstack 0
  1138                           
  1139                           ; 8 bytes @ 0x27
  1140  0001DC                     	ds	8
  1141                           
  1142                           	psect	cstackBANK0
  1143  000060                     __pcstackBANK0:
  1144                           	opt callstack 0
  1145  000060                     AESCmac@key:
  1146                           	opt callstack 0
  1147  000060                     _LORAWAN_TxDone$1671:
  1148                           	opt callstack 0
  1149  000060                     LORAWAN_RxTimeout@minim:
  1150                           	opt callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x0
  1153  000060                     	ds	2
  1154  000062                     AESCmac@output:
  1155                           	opt callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x2
  1158  000062                     	ds	2
  1159  000064                     LORAWAN_RxTimeout@i:
  1160                           	opt callstack 0
  1161  000064                     AESCmac@input:
  1162                           	opt callstack 0
  1163  000064                     _LORAWAN_TxDone$1672:
  1164                           	opt callstack 0
  1165                           
  1166                           ; 4 bytes @ 0x4
  1167  000064                     	ds	1
  1168  000065                     RADIO_DIO1@dioMapping:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x5
  1172  000065                     	ds	1
  1173  000066                     AESCmac@size:
  1174                           	opt callstack 0
  1175                           
  1176                           ; 1 bytes @ 0x6
  1177  000066                     	ds	1
  1178  000067                     ??_AESCmac:
  1179                           
  1180                           ; 1 bytes @ 0x7
  1181  000067                     	ds	1
  1182  000068                     LORAWAN_TxDone@found:
  1183                           	opt callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x8
  1186  000068                     	ds	1
  1187  000069                     LORAWAN_TxDone@delta:
  1188                           	opt callstack 0
  1189                           
  1190                           ; 4 bytes @ 0x9
  1191  000069                     	ds	4
  1192  00006D                     _LORAWAN_TxDone$5110:
  1193                           	opt callstack 0
  1194                           
  1195                           ; 4 bytes @ 0xD
  1196  00006D                     	ds	1
  1197  00006E                     AESCmac@k2:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 16 bytes @ 0xE
  1201  00006E                     	ds	3
  1202  000071                     LORAWAN_TxDone@ticks:
  1203                           	opt callstack 0
  1204                           
  1205                           ; 4 bytes @ 0x11
  1206  000071                     	ds	4
  1207  000075                     LORAWAN_TxDone@minim:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x15
  1211  000075                     	ds	4
  1212  000079                     LORAWAN_TxDone@i:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 1 bytes @ 0x19
  1216  000079                     	ds	1
  1217  00007A                     RADIO_TxDone@timeOnAir:
  1218                           	opt callstack 0
  1219  00007A                     RADIO_FSKPacketSent@timeOnAir:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x1A
  1223  00007A                     	ds	4
  1224  00007E                     _RADIO_TxDone$795:
  1225                           	opt callstack 0
  1226  00007E                     _RADIO_FSKPacketSent$799:
  1227                           	opt callstack 0
  1228  00007E                     AESCmac@k1:
  1229                           	opt callstack 0
  1230                           
  1231                           ; 16 bytes @ 0x1E
  1232  00007E                     	ds	4
  1233  000082                     RADIO_FSKPacketSent@irqFlags:
  1234                           	opt callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x22
  1237  000082                     	ds	12
  1238  00008E                     AESCmac@mLast:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 16 bytes @ 0x2E
  1242  00008E                     	ds	16
  1243  00009E                     AESCmac@padded:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 16 bytes @ 0x3E
  1247  00009E                     	ds	16
  1248  0000AE                     AESCmac@y:
  1249                           	opt callstack 0
  1250                           
  1251                           ; 16 bytes @ 0x4E
  1252  0000AE                     	ds	16
  1253  0000BE                     AESCmac@x:
  1254                           	opt callstack 0
  1255                           
  1256                           ; 16 bytes @ 0x5E
  1257  0000BE                     	ds	16
  1258  0000CE                     AESCmac@ptr:
  1259                           	opt callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x6E
  1262  0000CE                     	ds	2
  1263  0000D0                     AESCmac@flag:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 1 bytes @ 0x70
  1267  0000D0                     	ds	1
  1268  0000D1                     AESCmac@n:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x71
  1272  0000D1                     	ds	1
  1273  0000D2                     AESCmac@j:
  1274                           	opt callstack 0
  1275                           
  1276                           ; 1 bytes @ 0x72
  1277  0000D2                     	ds	1
  1278  0000D3                     AESCmac@i:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 1 bytes @ 0x73
  1282  0000D3                     	ds	1
  1283  0000D4                     ??_AssemblePacket:
  1284  0000D4                     ComputeMic@mic:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x74
  1288  0000D4                     	ds	2
  1289  0000D6                     AssemblePacket@confirmed:
  1290                           	opt callstack 0
  1291                           
  1292                           ; 1 bytes @ 0x76
  1293  0000D6                     	ds	1
  1294  0000D7                     AssemblePacket@mhdr:
  1295                           	opt callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x77
  1298  0000D7                     	ds	1
  1299  0000D8                     ??_PrepareJoinRequestFrame:
  1300  0000D8                     AssemblePacket@fCtrl:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x78
  1304  0000D8                     	ds	1
  1305  0000D9                     AssemblePacket@macCmdIdx:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x79
  1309  0000D9                     	ds	1
  1310  0000DA                     AssemblePacket@bufferIndex:
  1311                           	opt callstack 0
  1312  0000DA                     PrepareJoinRequestFrame@mic:
  1313                           	opt callstack 0
  1314                           
  1315                           ; 4 bytes @ 0x7A
  1316  0000DA                     	ds	1
  1317  0000DB                     LORAWAN_Send@port:
  1318                           	opt callstack 0
  1319                           
  1320                           ; 1 bytes @ 0x7B
  1321  0000DB                     	ds	1
  1322  0000DC                     LORAWAN_Send@buffer:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x7C
  1326  0000DC                     	ds	2
  1327  0000DE                     LORAWAN_Send@bufferLength:
  1328                           	opt callstack 0
  1329  0000DE                     PrepareJoinRequestFrame@mhdr:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 1 bytes @ 0x7E
  1333  0000DE                     	ds	1
  1334  0000DF                     ??_LORAWAN_Send:
  1335  0000DF                     PrepareJoinRequestFrame@iCtr:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 1 bytes @ 0x7F
  1339  0000DF                     	ds	1
  1340  0000E0                     LORAWAN_Send@result:
  1341                           	opt callstack 0
  1342  0000E0                     PrepareJoinRequestFrame@bufferIndex:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 1 bytes @ 0x80
  1346  0000E0                     	ds	1
  1347  0000E1                     LORAWAN_Join@bufferIndex:
  1348                           	opt callstack 0
  1349  0000E1                     LORAWAN_Send@confirmed:
  1350                           	opt callstack 0
  1351                           
  1352                           ; 1 bytes @ 0x81
  1353  0000E1                     	ds	1
  1354  0000E2                     ??_SwTimersExecute:
  1355  0000E2                     LORAWAN_Join@result:
  1356                           	opt callstack 0
  1357  0000E2                     LORAWAN_RxDone@buffer:
  1358                           	opt callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x82
  1361  0000E2                     	ds	1
  1362  0000E3                     LORAWAN_Join@activationTypeNew:
  1363                           	opt callstack 0
  1364                           
  1365                           ; 1 bytes @ 0x83
  1366  0000E3                     	ds	1
  1367  0000E4                     LORAWAN_RxDone@bufferLength:
  1368                           	opt callstack 0
  1369                           
  1370                           ; 1 bytes @ 0x84
  1371  0000E4                     	ds	1
  1372  0000E5                     ??_LORAWAN_RxDone:
  1373                           
  1374                           ; 1 bytes @ 0x85
  1375  0000E5                     	ds	1
  1376  0000E6                     SwTimersExecute@i:
  1377                           	opt callstack 0
  1378                           
  1379                           ; 1 bytes @ 0x86
  1380  0000E6                     	ds	4
  1381  0000EA                     RADIO_RxDone@irqFlags:
  1382                           	opt callstack 0
  1383  0000EA                     RADIO_FSKPayloadReady@irqFlags:
  1384                           	opt callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x8A
  1387  0000EA                     	ds	1
  1388  0000EB                     RADIO_RxDone@i:
  1389                           	opt callstack 0
  1390  0000EB                     RADIO_FSKPayloadReady@i:
  1391                           	opt callstack 0
  1392                           
  1393                           ; 1 bytes @ 0x8B
  1394  0000EB                     	ds	1
  1395  0000EC                     ??_RADIO_DIO0:
  1396                           
  1397                           ; 1 bytes @ 0x8C
  1398  0000EC                     	ds	2
  1399  0000EE                     RADIO_DIO0@dioMapping:
  1400                           	opt callstack 0
  1401                           
  1402                           ; 1 bytes @ 0x8E
  1403  0000EE                     	ds	1
  1404  0000EF                     RADIO_DIO0@opMode:
  1405                           	opt callstack 0
  1406                           
  1407                           ; 1 bytes @ 0x8F
  1408  0000EF                     	ds	1
  1409                           
  1410                           	psect	cstackCOMRAM
  1411  000001                     __pcstackCOMRAM:
  1412                           	opt callstack 0
  1413  000001                     ??_UpdateMinMaxChDataRate:
  1414  000001                     ??_FindSmallestDataRate:
  1415  000001                     ??_CountfOptsLength:
  1416  000001                     ?_TMR1_ReadTimer:
  1417                           	opt callstack 0
  1418  000001                     ?_ExecuteDutyCycle:
  1419                           	opt callstack 0
  1420  000001                     ?_ExecuteDevStatus:
  1421                           	opt callstack 0
  1422  000001                     ?_ExecuteLinkCheck:
  1423                           	opt callstack 0
  1424  000001                     ?___wmul:
  1425                           	opt callstack 0
  1426  000001                     ?___awdiv:
  1427                           	opt callstack 0
  1428  000001                     ?_GetRx1Freq:
  1429                           	opt callstack 0
  1430  000001                     ?___lldiv:
  1431                           	opt callstack 0
  1432  000001                     ?___llmod:
  1433                           	opt callstack 0
  1434  000001                     INTERRUPT_GetDioStatus@a:
  1435                           	opt callstack 0
  1436  000001                     HALResetPinOutputValue@value:
  1437                           	opt callstack 0
  1438  000001                     SwTimerCreate@retVal:
  1439                           	opt callstack 0
  1440  000001                     SwTimerIsRunning@timerId:
  1441                           	opt callstack 0
  1442  000001                     SwTimerStop@timerId:
  1443                           	opt callstack 0
  1444  000001                     RADIO_SetLoRaSyncWord@syncWord:
  1445                           	opt callstack 0
  1446  000001                     RADIO_SetSpreadingFactor@spreadingFactor:
  1447                           	opt callstack 0
  1448  000001                     RADIO_SetOutputPower@power:
  1449                           	opt callstack 0
  1450  000001                     RADIO_SetCRC@crc:
  1451                           	opt callstack 0
  1452  000001                     RADIO_SetIQInverted@iqInverted:
  1453                           	opt callstack 0
  1454  000001                     RADIO_SetBandwidth@bandwidth:
  1455                           	opt callstack 0
  1456  000001                     RADIO_SetModulation@modulation:
  1457                           	opt callstack 0
  1458  000001                     ValidateDataRate@dataRate:
  1459                           	opt callstack 0
  1460  000001                     ValidateTxPower@result:
  1461                           	opt callstack 0
  1462  000001                     UpdateDLSettings@dlRx1DrOffset:
  1463                           	opt callstack 0
  1464  000001                     UpdateDataRange@dataRangeNew:
  1465                           	opt callstack 0
  1466  000001                     UpdateChannelIdStatus@statusNew:
  1467                           	opt callstack 0
  1468  000001                     ValidateRxOffset@rxOffset:
  1469                           	opt callstack 0
  1470  000001                     ValidateChannelId@allowedForDefaultChannels:
  1471                           	opt callstack 0
  1472  000001                     ValidateChannelMaskCntl@result:
  1473                           	opt callstack 0
  1474  000001                     UpdateCurrentDataRate@valueNew:
  1475                           	opt callstack 0
  1476  000001                     UpdateTxPower@txPowerNew:
  1477                           	opt callstack 0
  1478  000001                     UpdateJoinInProgress@state:
  1479                           	opt callstack 0
  1480  000001                     SPI2_Exchange8bit@data:
  1481                           	opt callstack 0
  1482  000001                     ___abdiv@divisor:
  1483                           	opt callstack 0
  1484  000001                     FillSubKey@source:
  1485                           	opt callstack 0
  1486  000001                     SwTimerSetCallback@callback:
  1487                           	opt callstack 0
  1488  000001                     EncKeySchedule@key:
  1489                           	opt callstack 0
  1490  000001                     EncodeShiftRow@stateTable:
  1491                           	opt callstack 0
  1492  000001                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1493                           	opt callstack 0
  1494  000001                     ExecuteDutyCycle@ptr:
  1495                           	opt callstack 0
  1496  000001                     ExecuteDevStatus@ptr:
  1497                           	opt callstack 0
  1498  000001                     UpdateDutyCycle@dutyCycleNew:
  1499                           	opt callstack 0
  1500  000001                     ValidateChannelMask@channelMask:
  1501                           	opt callstack 0
  1502  000001                     ExecuteLinkCheck@ptr:
  1503                           	opt callstack 0
  1504  000001                     IncludeMacCommandsResponse@macBuffer:
  1505                           	opt callstack 0
  1506  000001                     CheckFlags@hdr:
  1507                           	opt callstack 0
  1508  000001                     CheckMcastFlags@hdr:
  1509                           	opt callstack 0
  1510  000001                     INT1_SetInterruptHandler@InterruptHandler:
  1511                           	opt callstack 0
  1512  000001                     INT2_SetInterruptHandler@InterruptHandler:
  1513                           	opt callstack 0
  1514  000001                     INT0_SetInterruptHandler@InterruptHandler:
  1515                           	opt callstack 0
  1516  000001                     TMR1_WriteTimer@timerVal:
  1517                           	opt callstack 0
  1518  000001                     TMR1_SetInterruptHandler@InterruptHandler:
  1519                           	opt callstack 0
  1520  000001                     IOCB4_SetInterruptHandler@InterruptHandler:
  1521                           	opt callstack 0
  1522  000001                     RxData@pData:
  1523                           	opt callstack 0
  1524  000001                     ___wmul@multiplier:
  1525                           	opt callstack 0
  1526  000001                     ___awdiv@dividend:
  1527                           	opt callstack 0
  1528  000001                     memcpy@d1:
  1529                           	opt callstack 0
  1530  000001                     memset@p1:
  1531                           	opt callstack 0
  1532  000001                     SystemBlockingWaitMs@ms:
  1533                           	opt callstack 0
  1534  000001                     RADIO_SetChannelFrequency@frequency:
  1535                           	opt callstack 0
  1536  000001                     ValidateFrequency@frequencyNew:
  1537                           	opt callstack 0
  1538  000001                     UpdateFrequency@frequencyNew:
  1539                           	opt callstack 0
  1540  000001                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1541                           	opt callstack 0
  1542  000001                     UpdateReceiveWindow2Parameters@frequency:
  1543                           	opt callstack 0
  1544  000001                     ___lldiv@dividend:
  1545                           	opt callstack 0
  1546  000001                     ___llmod@dividend:
  1547                           	opt callstack 0
  1548                           
  1549                           ; 4 bytes @ 0x0
  1550  000001                     	ds	1
  1551  000002                     ??_UpdateDataRange:
  1552  000002                     ??_UpdateChannelIdStatus:
  1553  000002                     ??___abdiv:
  1554  000002                     HALSPISend@data:
  1555                           	opt callstack 0
  1556  000002                     SwTimerIsRunning@isRunning:
  1557                           	opt callstack 0
  1558  000002                     ValidateDataRate@result:
  1559                           	opt callstack 0
  1560  000002                     ValidateTxPower@txPowerNew:
  1561                           	opt callstack 0
  1562  000002                     UpdateDLSettings@dlRx2Dr:
  1563                           	opt callstack 0
  1564  000002                     ValidateRxOffset@result:
  1565                           	opt callstack 0
  1566  000002                     ValidateChannelId@result:
  1567                           	opt callstack 0
  1568  000002                     ValidateChannelMaskCntl@channelMaskCntl:
  1569                           	opt callstack 0
  1570  000002                     UpdateMinMaxChDataRate@i:
  1571                           	opt callstack 0
  1572  000002                     FindSmallestDataRate@found:
  1573                           	opt callstack 0
  1574                           
  1575                           ; 1 bytes @ 0x1
  1576  000002                     	ds	1
  1577  000003                     ??_TMR1_ReadTimer:
  1578  000003                     ??_EncKeySchedule:
  1579  000003                     ??_ValidateChannelMask:
  1580  000003                     ??_ExecuteDutyCycle:
  1581  000003                     SwTimerSetCallback@callbackParameter:
  1582                           	opt callstack 0
  1583  000003                     EncodeShiftRow@temp:
  1584                           	opt callstack 0
  1585  000003                     RADIO_RegisterWrite@value:
  1586                           	opt callstack 0
  1587  000003                     RADIO_RegisterRead@reg:
  1588                           	opt callstack 0
  1589  000003                     UpdateDataRange@channelId:
  1590                           	opt callstack 0
  1591  000003                     UpdateChannelIdStatus@channelId:
  1592                           	opt callstack 0
  1593  000003                     ValidateDataRange@result:
  1594                           	opt callstack 0
  1595  000003                     ValidateChannelId@channelId:
  1596                           	opt callstack 0
  1597  000003                     UpdateDutyCycle@channelId:
  1598                           	opt callstack 0
  1599  000003                     FindSmallestDataRate@i:
  1600                           	opt callstack 0
  1601  000003                     RxData@dataLength:
  1602                           	opt callstack 0
  1603  000003                     FillSubKey@key:
  1604                           	opt callstack 0
  1605  000003                     IncludeMacCommandsResponse@pBufferIndex:
  1606                           	opt callstack 0
  1607  000003                     ___wmul@multiplicand:
  1608                           	opt callstack 0
  1609  000003                     ___awdiv@divisor:
  1610                           	opt callstack 0
  1611  000003                     memcpy@s1:
  1612                           	opt callstack 0
  1613  000003                     memset@c:
  1614                           	opt callstack 0
  1615                           
  1616                           ; 2 bytes @ 0x2
  1617  000003                     	ds	1
  1618  000004                     SwTimerSetCallback@timerId:
  1619                           	opt callstack 0
  1620  000004                     RADIO_RegisterWrite@reg:
  1621                           	opt callstack 0
  1622  000004                     RADIO_RegisterRead@readValue:
  1623                           	opt callstack 0
  1624  000004                     UpdateDataRange@i:
  1625                           	opt callstack 0
  1626  000004                     UpdateChannelIdStatus@i:
  1627                           	opt callstack 0
  1628  000004                     ValidateDataRange@dataRangeNew:
  1629                           	opt callstack 0
  1630  000004                     FindSmallestDataRate@dataRate:
  1631                           	opt callstack 0
  1632  000004                     RxData@status:
  1633                           	opt callstack 0
  1634  000004                     ___abdiv@counter:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 1 bytes @ 0x3
  1638  000004                     	ds	1
  1639  000005                     ??_SystemBlockingWaitMs:
  1640  000005                     FillSubKey@size:
  1641                           	opt callstack 0
  1642  000005                     RADIO_WritePower@ocp:
  1643                           	opt callstack 0
  1644  000005                     RADIO_UnhandledInterrupt@modulation:
  1645                           	opt callstack 0
  1646  000005                     LORAWAN_SetChannelIdStatus@statusNew:
  1647                           	opt callstack 0
  1648  000005                     ValidateFrequency@result:
  1649                           	opt callstack 0
  1650  000005                     ValidateDataRange@dataRateMax:
  1651                           	opt callstack 0
  1652  000005                     UpdateFrequency@channelId:
  1653                           	opt callstack 0
  1654  000005                     ValidateChannelMask@i:
  1655                           	opt callstack 0
  1656  000005                     UpdateReceiveWindow2Parameters@dataRate:
  1657                           	opt callstack 0
  1658  000005                     IncludeMacCommandsResponse@bIncludeInFopts:
  1659                           	opt callstack 0
  1660  000005                     ___abdiv@sign:
  1661                           	opt callstack 0
  1662  000005                     ___awdiv@counter:
  1663                           	opt callstack 0
  1664  000005                     EnableChannels1@channelMask:
  1665                           	opt callstack 0
  1666  000005                     TMR1_ReadTimer@readVal:
  1667                           	opt callstack 0
  1668  000005                     ___wmul@product:
  1669                           	opt callstack 0
  1670  000005                     memcpy@n:
  1671                           	opt callstack 0
  1672  000005                     memset@n:
  1673                           	opt callstack 0
  1674  000005                     ___lldiv@divisor:
  1675                           	opt callstack 0
  1676  000005                     ___llmod@divisor:
  1677                           	opt callstack 0
  1678                           
  1679                           ; 4 bytes @ 0x4
  1680  000005                     	ds	1
  1681  000006                     ??_FillSubKey:
  1682  000006                     ??_IncludeMacCommandsResponse:
  1683  000006                     ??_RADIO_DIO3:
  1684  000006                     ??_RADIO_DIO4:
  1685  000006                     ??_RADIO_DIO5:
  1686  000006                     RADIO_WriteMode@newModulation:
  1687                           	opt callstack 0
  1688  000006                     RADIO_WritePower@paDac:
  1689                           	opt callstack 0
  1690  000006                     ExecuteDutyCycle@maxDCycle:
  1691                           	opt callstack 0
  1692  000006                     ValidateDataRange@dataRateMin:
  1693                           	opt callstack 0
  1694  000006                     ___abdiv@quotient:
  1695                           	opt callstack 0
  1696  000006                     ___awdiv@sign:
  1697                           	opt callstack 0
  1698  000006                     _EncKeySchedule$520:
  1699                           	opt callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x5
  1702  000006                     	ds	1
  1703  000007                     FillSubKey@carry:
  1704                           	opt callstack 0
  1705  000007                     RADIO_WriteMode@blocking:
  1706                           	opt callstack 0
  1707  000007                     RADIO_WritePower@power:
  1708                           	opt callstack 0
  1709  000007                     LORAWAN_SetChannelIdStatus@channelId:
  1710                           	opt callstack 0
  1711  000007                     EnableChannels1@channelMaskCntl:
  1712                           	opt callstack 0
  1713  000007                     UpdateReceiveDelays@delay:
  1714                           	opt callstack 0
  1715  000007                     CountfOptsLength@macCommandLength:
  1716                           	opt callstack 0
  1717  000007                     TMR1_ReadTimer@readValHigh:
  1718                           	opt callstack 0
  1719  000007                     ___abdiv@dividend:
  1720                           	opt callstack 0
  1721  000007                     memcpy@tmp:
  1722                           	opt callstack 0
  1723  000007                     ___awdiv@quotient:
  1724                           	opt callstack 0
  1725  000007                     memset@p:
  1726                           	opt callstack 0
  1727                           
  1728                           ; 2 bytes @ 0x6
  1729  000007                     	ds	1
  1730  000008                     ?_ExecuteRxTimingSetup:
  1731                           	opt callstack 0
  1732  000008                     FillSubKey@i:
  1733                           	opt callstack 0
  1734  000008                     RADIO_WriteMode@currentModulation:
  1735                           	opt callstack 0
  1736  000008                     EnableChannels1@channelIndexMin:
  1737                           	opt callstack 0
  1738  000008                     CountfOptsLength@i:
  1739                           	opt callstack 0
  1740  000008                     TMR1_ReadTimer@readValLow:
  1741                           	opt callstack 0
  1742  000008                     AESEncode@block:
  1743                           	opt callstack 0
  1744  000008                     ExecuteRxTimingSetup@ptr:
  1745                           	opt callstack 0
  1746  000008                     memcpy@d:
  1747                           	opt callstack 0
  1748                           
  1749                           ; 2 bytes @ 0x7
  1750  000008                     	ds	1
  1751  000009                     ??_LORAWAN_GetMaxPayloadSize:
  1752  000009                     ?_TMR_SwapTimer:
  1753                           	opt callstack 0
  1754  000009                     ?_TMR_GetDeltaTime:
  1755                           	opt callstack 0
  1756  000009                     RADIO_WriteMode@dioMapping:
  1757                           	opt callstack 0
  1758  000009                     EnableChannels1@channelIndexMax:
  1759                           	opt callstack 0
  1760  000009                     ___llmod@counter:
  1761                           	opt callstack 0
  1762  000009                     TMR_SwapTimer@timerVal:
  1763                           	opt callstack 0
  1764  000009                     ___lldiv@quotient:
  1765                           	opt callstack 0
  1766                           
  1767                           ; 4 bytes @ 0x8
  1768  000009                     	ds	1
  1769  00000A                     ??_EnableChannels1:
  1770  00000A                     RADIO_WriteMode@currentMode:
  1771                           	opt callstack 0
  1772  00000A                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1773                           	opt callstack 0
  1774  00000A                     ExecuteRxTimingSetup@delay:
  1775                           	opt callstack 0
  1776  00000A                     AESEncode@key:
  1777                           	opt callstack 0
  1778  00000A                     memcpy@s:
  1779                           	opt callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x9
  1782  00000A                     	ds	1
  1783  00000B                     RADIO_WriteMode@newMode:
  1784                           	opt callstack 0
  1785  00000B                     LORAWAN_GetMaxPayloadSize@result:
  1786                           	opt callstack 0
  1787  00000B                     TMR_OverrideRemaining@ticksRemaining:
  1788                           	opt callstack 0
  1789                           
  1790                           ; 4 bytes @ 0xA
  1791  00000B                     	ds	1
  1792  00000C                     ??_AESEncode:
  1793  00000C                     ?_ExtractMic:
  1794                           	opt callstack 0
  1795  00000C                     RADIO_WriteMode@opMode:
  1796                           	opt callstack 0
  1797  00000C                     InitDefault868Channels@i:
  1798                           	opt callstack 0
  1799  00000C                     InitDefault433Channels@i:
  1800                           	opt callstack 0
  1801  00000C                     EnableChannels1@i:
  1802                           	opt callstack 0
  1803  00000C                     RADIO_SetFSKSyncWord@syncWord:
  1804                           	opt callstack 0
  1805  00000C                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1806                           	opt callstack 0
  1807  00000C                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1808                           	opt callstack 0
  1809  00000C                     PrepareSessionKeys@sessionKey:
  1810                           	opt callstack 0
  1811  00000C                     ExtractMic@buffer:
  1812                           	opt callstack 0
  1813  00000C                     AssembleEncryptionBlock@frameCounter:
  1814                           	opt callstack 0
  1815                           
  1816                           ; 4 bytes @ 0xB
  1817  00000C                     	ds	1
  1818  00000D                     ??_TMR_GetDeltaTime:
  1819  00000D                     ?_RADIO_ReadRandom:
  1820                           	opt callstack 0
  1821  00000D                     RADIO_RxFSKTimeout@irqFlags:
  1822                           	opt callstack 0
  1823  00000D                     IncludeMacCommandsResponse@i:
  1824                           	opt callstack 0
  1825  00000D                     ___lldiv@counter:
  1826                           	opt callstack 0
  1827  00000D                     EnableChannels@channelMask:
  1828                           	opt callstack 0
  1829                           
  1830                           ; 2 bytes @ 0xC
  1831  00000D                     	ds	1
  1832  00000E                     RADIO_SetFSKSyncWord@syncWordLen:
  1833                           	opt callstack 0
  1834  00000E                     IncludeMacCommandsResponse@bufferIndex:
  1835                           	opt callstack 0
  1836  00000E                     ExtractMic@bufferLength:
  1837                           	opt callstack 0
  1838  00000E                     PrepareSessionKeys@appNonce:
  1839                           	opt callstack 0
  1840  00000E                     SwTimerSetTimeout@timeout:
  1841                           	opt callstack 0
  1842  00000E                     RADIO_WriteFrequency@frequency:
  1843                           	opt callstack 0
  1844  00000E                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1845                           	opt callstack 0
  1846  00000E                     RADIO_WriteFSKBitRate@bitRate:
  1847                           	opt callstack 0
  1848                           
  1849                           ; 4 bytes @ 0xD
  1850  00000E                     	ds	1
  1851  00000F                     ??_TMR_OverrideRemaining:
  1852  00000F                     ??_RADIO_ReadRandom:
  1853  00000F                     EnableChannels@channelMaskCntl:
  1854                           	opt callstack 0
  1855  00000F                     ConfigureRadio@freq:
  1856                           	opt callstack 0
  1857                           
  1858                           ; 4 bytes @ 0xE
  1859  00000F                     	ds	1
  1860  000010                     ??_ExtractMic:
  1861  000010                     ?_ExecuteLinkAdr:
  1862                           	opt callstack 0
  1863  000010                     AssembleEncryptionBlock@blockId:
  1864                           	opt callstack 0
  1865  000010                     RADIO_ReadRandom@retVal:
  1866                           	opt callstack 0
  1867  000010                     ExecuteLinkAdr@ptr:
  1868                           	opt callstack 0
  1869  000010                     PrepareSessionKeys@networkId:
  1870                           	opt callstack 0
  1871                           
  1872                           ; 2 bytes @ 0xF
  1873  000010                     	ds	1
  1874  000011                     AssembleEncryptionBlock@firstByte:
  1875                           	opt callstack 0
  1876  000011                     TMR_OverrideRemaining@tmrVal:
  1877                           	opt callstack 0
  1878                           
  1879                           ; 2 bytes @ 0x10
  1880  000011                     	ds	1
  1881  000012                     ??_ExecuteLinkAdr:
  1882  000012                     ??_SwTimerSetTimeout:
  1883  000012                     RADIO_ReadRandom@i:
  1884                           	opt callstack 0
  1885  000012                     PrepareSessionKeys@index:
  1886                           	opt callstack 0
  1887  000012                     AssembleEncryptionBlock@multicastStatus:
  1888                           	opt callstack 0
  1889  000012                     RADIO_WriteFrequency@num_mod:
  1890                           	opt callstack 0
  1891  000012                     RADIO_WriteFSKFrequencyDeviation@num:
  1892                           	opt callstack 0
  1893  000012                     RADIO_WriteFSKBitRate@num:
  1894                           	opt callstack 0
  1895  000012                     ExtractMic@mic:
  1896                           	opt callstack 0
  1897                           
  1898                           ; 4 bytes @ 0x11
  1899  000012                     	ds	1
  1900  000013                     ConfigureRadio@dataRate:
  1901                           	opt callstack 0
  1902  000013                     AssembleEncryptionBlock@dir:
  1903                           	opt callstack 0
  1904  000013                     TMR_OverrideRemaining@oldReloadVal:
  1905                           	opt callstack 0
  1906  000013                     ExecuteLinkAdr@channelMask:
  1907                           	opt callstack 0
  1908  000013                     srand@x:
  1909                           	opt callstack 0
  1910                           
  1911                           ; 2 bytes @ 0x12
  1912  000013                     	ds	1
  1913  000014                     AssembleEncryptionBlock@bufferIndex:
  1914                           	opt callstack 0
  1915  000014                     _AESEncode$515:
  1916                           	opt callstack 0
  1917  000014                     ConfigureRadioTx@freq:
  1918                           	opt callstack 0
  1919  000014                     ConfigureRadioRx@freq:
  1920                           	opt callstack 0
  1921                           
  1922                           ; 4 bytes @ 0x13
  1923  000014                     	ds	1
  1924  000015                     ExecuteLinkAdr@txPower:
  1925                           	opt callstack 0
  1926                           
  1927                           ; 1 bytes @ 0x14
  1928  000015                     	ds	1
  1929  000016                     SwTimerSetTimeout@timerId:
  1930                           	opt callstack 0
  1931  000016                     _AESEncode$516:
  1932                           	opt callstack 0
  1933  000016                     ExecuteLinkAdr@redundancy:
  1934                           	opt callstack 0
  1935  000016                     RADIO_WriteFrequency@num:
  1936                           	opt callstack 0
  1937                           
  1938                           ; 4 bytes @ 0x15
  1939  000016                     	ds	2
  1940  000018                     ExecuteLinkAdr@dataRate:
  1941                           	opt callstack 0
  1942  000018                     ConfigureRadioTx@dataRate:
  1943                           	opt callstack 0
  1944  000018                     ConfigureRadioRx@dataRate:
  1945                           	opt callstack 0
  1946  000018                     _AESEncode$517:
  1947                           	opt callstack 0
  1948                           
  1949                           ; 2 bytes @ 0x17
  1950  000018                     	ds	1
  1951  000019                     ?_SwTimersInterrupt:
  1952                           	opt callstack 0
  1953  000019                     ConfigureRadioTx@txPower:
  1954                           	opt callstack 0
  1955                           
  1956                           ; 1 bytes @ 0x18
  1957  000019                     	ds	1
  1958  00001A                     AESEncode@aux:
  1959                           	opt callstack 0
  1960  00001A                     RADIO_Init@radioBuffer:
  1961                           	opt callstack 0
  1962                           
  1963                           ; 2 bytes @ 0x19
  1964  00001A                     	ds	1
  1965  00001B                     ??_RADIO_DIO2:
  1966  00001B                     AESEncode@aux2:
  1967                           	opt callstack 0
  1968                           
  1969                           ; 1 bytes @ 0x1A
  1970  00001B                     	ds	1
  1971  00001C                     AESEncode@aux1:
  1972                           	opt callstack 0
  1973  00001C                     RADIO_Init@frequency:
  1974                           	opt callstack 0
  1975                           
  1976                           ; 4 bytes @ 0x1B
  1977  00001C                     	ds	1
  1978  00001D                     AESEncode@aux3:
  1979                           	opt callstack 0
  1980  00001D                     RADIO_DIO2@dioMapping:
  1981                           	opt callstack 0
  1982                           
  1983                           ; 1 bytes @ 0x1C
  1984  00001D                     	ds	1
  1985  00001E                     AESEncode@i:
  1986                           	opt callstack 0
  1987                           
  1988                           ; 1 bytes @ 0x1D
  1989  00001E                     	ds	1
  1990  00001F                     AESEncodeLoRa@block:
  1991                           	opt callstack 0
  1992                           
  1993                           ; 2 bytes @ 0x1E
  1994  00001F                     	ds	1
  1995  000020                     ??_RADIO_Init:
  1996                           
  1997                           ; 1 bytes @ 0x1F
  1998  000020                     	ds	1
  1999  000021                     AESEncodeLoRa@key:
  2000                           	opt callstack 0
  2001  000021                     SwTimersInterrupt@timeElapsed:
  2002                           	opt callstack 0
  2003                           
  2004                           ; 4 bytes @ 0x20
  2005  000021                     	ds	2
  2006  000023                     AESEncodeLoRa@useKey:
  2007                           	opt callstack 0
  2008                           
  2009                           ; 16 bytes @ 0x22
  2010  000023                     	ds	2
  2011  000025                     SwTimersInterrupt@ticksToNextTimerEvent:
  2012                           	opt callstack 0
  2013                           
  2014                           ; 4 bytes @ 0x24
  2015  000025                     	ds	4
  2016  000029                     SwTimersInterrupt@i:
  2017                           	opt callstack 0
  2018                           
  2019                           ; 1 bytes @ 0x28
  2020  000029                     	ds	1
  2021  00002A                     ?_SwTimerReadValue:
  2022                           	opt callstack 0
  2023                           
  2024                           ; 4 bytes @ 0x29
  2025  00002A                     	ds	4
  2026  00002E                     SwTimerReadValue@ticksCount:
  2027                           	opt callstack 0
  2028  00002E                     SwTimerStart@ticksRemaining:
  2029                           	opt callstack 0
  2030                           
  2031                           ; 4 bytes @ 0x2D
  2032  00002E                     	ds	4
  2033  000032                     SwTimerReadValue@timerId:
  2034                           	opt callstack 0
  2035  000032                     SwTimerStart@timerId:
  2036                           	opt callstack 0
  2037                           
  2038                           ; 1 bytes @ 0x31
  2039  000032                     	ds	1
  2040  000033                     ??_LORAWAN_LinkCheckCallback:
  2041  000033                     ??_UpdateJoinSuccessState:
  2042  000033                     ??_DutyCycleCallback:
  2043  000033                     ??_UpdateRetransmissionAckTimeoutState:
  2044  000033                     ??_StartReTxTimer:
  2045  000033                     ?___lmul:
  2046                           	opt callstack 0
  2047  000033                     GenerateSubkey@key:
  2048                           	opt callstack 0
  2049  000033                     ComputeSessionKeys@joinAcceptBuffer:
  2050                           	opt callstack 0
  2051  000033                     EncryptFRMPayload@buffer:
  2052                           	opt callstack 0
  2053  000033                     ___lmul@multiplier:
  2054                           	opt callstack 0
  2055                           
  2056                           ; 4 bytes @ 0x32
  2057  000033                     	ds	2
  2058  000035                     EncryptFRMPayload@bufferLength:
  2059                           	opt callstack 0
  2060  000035                     GenerateSubkey@k1:
  2061                           	opt callstack 0
  2062                           
  2063                           ; 2 bytes @ 0x34
  2064  000035                     	ds	1
  2065  000036                     EncryptFRMPayload@dir:
  2066                           	opt callstack 0
  2067                           
  2068                           ; 1 bytes @ 0x35
  2069  000036                     	ds	1
  2070  000037                     GenerateSubkey@k2:
  2071                           	opt callstack 0
  2072  000037                     StartReTxTimer@minim:
  2073                           	opt callstack 0
  2074  000037                     _LORAWAN_LinkCheckCallback$2509:
  2075                           	opt callstack 0
  2076  000037                     _UpdateJoinSuccessState$2526:
  2077                           	opt callstack 0
  2078  000037                     EncryptFRMPayload@frameCounter:
  2079                           	opt callstack 0
  2080  000037                     ___lmul@multiplicand:
  2081                           	opt callstack 0
  2082                           
  2083                           ; 4 bytes @ 0x36
  2084  000037                     	ds	2
  2085  000039                     ??_GenerateSubkey:
  2086                           
  2087                           ; 1 bytes @ 0x38
  2088  000039                     	ds	1
  2089  00003A                     GenerateSubkey@const_Rb:
  2090                           	opt callstack 0
  2091                           
  2092                           ; 16 bytes @ 0x39
  2093  00003A                     	ds	1
  2094  00003B                     StartReTxTimer@i:
  2095                           	opt callstack 0
  2096  00003B                     LORAWAN_LinkCheckCallback@iCtr:
  2097                           	opt callstack 0
  2098  00003B                     EncryptFRMPayload@key:
  2099                           	opt callstack 0
  2100  00003B                     _DutyCycleCallback$1857:
  2101                           	opt callstack 0
  2102  00003B                     ___lmul@product:
  2103                           	opt callstack 0
  2104                           
  2105                           ; 4 bytes @ 0x3A
  2106  00003B                     	ds	2
  2107  00003D                     EncryptFRMPayload@macBufferIndex:
  2108                           	opt callstack 0
  2109                           
  2110                           ; 1 bytes @ 0x3C
  2111  00003D                     	ds	1
  2112  00003E                     EncryptFRMPayload@bufferToBeEncrypted:
  2113                           	opt callstack 0
  2114                           
  2115                           ; 2 bytes @ 0x3D
  2116  00003E                     	ds	1
  2117  00003F                     ?_ExecuteNewChannel:
  2118                           	opt callstack 0
  2119  00003F                     ?_ExecuteRxParamSetupReq:
  2120                           	opt callstack 0
  2121  00003F                     ?_rand:
  2122                           	opt callstack 0
  2123  00003F                     DutyCycleCallback@found:
  2124                           	opt callstack 0
  2125  00003F                     RADIO_WriteConfiguration@symbolTimeout:
  2126                           	opt callstack 0
  2127  00003F                     ExecuteNewChannel@ptr:
  2128                           	opt callstack 0
  2129  00003F                     ExecuteRxParamSetupReq@ptr:
  2130                           	opt callstack 0
  2131  00003F                     UpdateCfList@joinAccept:
  2132                           	opt callstack 0
  2133  00003F                     LORAWAN_LinkCheckConfigure@period:
  2134                           	opt callstack 0
  2135                           
  2136                           ; 2 bytes @ 0x3E
  2137  00003F                     	ds	1
  2138  000040                     EncryptFRMPayload@multicastStatus:
  2139                           	opt callstack 0
  2140  000040                     DutyCycleCallback@minim:
  2141                           	opt callstack 0
  2142                           
  2143                           ; 4 bytes @ 0x3F
  2144  000040                     	ds	1
  2145  000041                     ??_LORAWAN_LinkCheckConfigure:
  2146  000041                     ??_EncryptFRMPayload:
  2147  000041                     ??_RADIO_WriteConfiguration:
  2148  000041                     ??_UpdateCfList:
  2149  000041                     ?___lwmod:
  2150                           	opt callstack 0
  2151  000041                     ExecuteNewChannel@drRange:
  2152                           	opt callstack 0
  2153  000041                     ___lwmod@dividend:
  2154                           	opt callstack 0
  2155  000041                     ExecuteRxParamSetupReq@frequency:
  2156                           	opt callstack 0
  2157                           
  2158                           ; 4 bytes @ 0x40
  2159  000041                     	ds	1
  2160  000042                     ExecuteNewChannel@frequency:
  2161                           	opt callstack 0
  2162                           
  2163                           ; 4 bytes @ 0x41
  2164  000042                     	ds	1
  2165  000043                     ___lwmod@divisor:
  2166                           	opt callstack 0
  2167                           
  2168                           ; 2 bytes @ 0x42
  2169  000043                     	ds	1
  2170  000044                     RADIO_WriteConfiguration@i:
  2171                           	opt callstack 0
  2172  000044                     DutyCycleCallback@i:
  2173                           	opt callstack 0
  2174                           
  2175                           ; 1 bytes @ 0x43
  2176  000044                     	ds	1
  2177  000045                     ExecuteRxParamSetupReq@dlSettings:
  2178                           	opt callstack 0
  2179  000045                     UpdateCfList@bufferLength:
  2180                           	opt callstack 0
  2181  000045                     ___lwmod@counter:
  2182                           	opt callstack 0
  2183  000045                     RADIO_WriteConfiguration@tempValue:
  2184                           	opt callstack 0
  2185  000045                     _LORAWAN_LinkCheckConfigure$2496:
  2186                           	opt callstack 0
  2187                           
  2188                           ; 4 bytes @ 0x44
  2189  000045                     	ds	1
  2190  000046                     ?_Random:
  2191                           	opt callstack 0
  2192  000046                     ExecuteNewChannel@channelIndex:
  2193                           	opt callstack 0
  2194  000046                     EncryptFRMPayload@k:
  2195                           	opt callstack 0
  2196  000046                     Random@max:
  2197                           	opt callstack 0
  2198  000046                     UpdateCfList@frequency:
  2199                           	opt callstack 0
  2200                           
  2201                           ; 4 bytes @ 0x45
  2202  000046                     	ds	1
  2203  000047                     ?_MacExecuteCommands:
  2204                           	opt callstack 0
  2205  000047                     EncryptFRMPayload@i:
  2206                           	opt callstack 0
  2207  000047                     MacExecuteCommands@buffer:
  2208                           	opt callstack 0
  2209                           
  2210                           ; 2 bytes @ 0x46
  2211  000047                     	ds	1
  2212  000048                     SearchAvailableChannel@transmissionType:
  2213                           	opt callstack 0
  2214  000048                     EncryptFRMPayload@j:
  2215                           	opt callstack 0
  2216                           
  2217                           ; 1 bytes @ 0x47
  2218  000048                     	ds	1
  2219  000049                     RADIO_WriteConfiguration@regValue:
  2220                           	opt callstack 0
  2221  000049                     LORAWAN_LinkCheckConfigure@iCtr:
  2222                           	opt callstack 0
  2223  000049                     MacExecuteCommands@fOptsLen:
  2224                           	opt callstack 0
  2225  000049                     SearchAvailableChannel@channelIndex:
  2226                           	opt callstack 0
  2227                           
  2228                           ; 2 bytes @ 0x48
  2229  000049                     	ds	1
  2230  00004A                     ??_MacExecuteCommands:
  2231  00004A                     ?_RADIO_Transmit:
  2232                           	opt callstack 0
  2233  00004A                     ?_RADIO_ReceiveStart:
  2234                           	opt callstack 0
  2235  00004A                     LORAWAN_Reset@ismBandNew:
  2236                           	opt callstack 0
  2237  00004A                     UpdateCfList@channelIndex:
  2238                           	opt callstack 0
  2239  00004A                     RADIO_Transmit@buffer:
  2240                           	opt callstack 0
  2241  00004A                     RADIO_ReceiveStart@rxWindowSize:
  2242                           	opt callstack 0
  2243  00004A                     GenerateSubkey@l:
  2244                           	opt callstack 0
  2245                           
  2246                           ; 16 bytes @ 0x49
  2247  00004A                     	ds	1
  2248  00004B                     ??_SearchAvailableChannel:
  2249  00004B                     UpdateCfList@i:
  2250                           	opt callstack 0
  2251  00004B                     LORAWAN_Init@RxPayload:
  2252                           	opt callstack 0
  2253                           
  2254                           ; 2 bytes @ 0x4A
  2255  00004B                     	ds	1
  2256  00004C                     ??_RADIO_ReceiveStart:
  2257  00004C                     RADIO_Transmit@bufferLen:
  2258                           	opt callstack 0
  2259  00004C                     MacExecuteCommands@done:
  2260                           	opt callstack 0
  2261                           
  2262                           ; 1 bytes @ 0x4B
  2263  00004C                     	ds	1
  2264  00004D                     ??_RADIO_Transmit:
  2265  00004D                     LORAWAN_Init@RxJoinResponse:
  2266                           	opt callstack 0
  2267  00004D                     MacExecuteCommands@ptr:
  2268                           	opt callstack 0
  2269                           
  2270                           ; 2 bytes @ 0x4C
  2271  00004D                     	ds	2
  2272  00004F                     SearchAvailableChannel@randomNumberCopy:
  2273                           	opt callstack 0
  2274                           
  2275                           ; 1 bytes @ 0x4E
  2276  00004F                     	ds	1
  2277  000050                     SearchAvailableChannel@result:
  2278                           	opt callstack 0
  2279  000050                     _RADIO_ReceiveStart$783:
  2280                           	opt callstack 0
  2281                           
  2282                           ; 4 bytes @ 0x4F
  2283  000050                     	ds	1
  2284  000051                     SearchAvailableChannel@maxChannels:
  2285                           	opt callstack 0
  2286                           
  2287                           ; 1 bytes @ 0x50
  2288  000051                     	ds	1
  2289  000052                     SearchAvailableChannel@randomNumber:
  2290                           	opt callstack 0
  2291                           
  2292                           ; 1 bytes @ 0x51
  2293  000052                     	ds	1
  2294  000053                     SearchAvailableChannel@i:
  2295                           	opt callstack 0
  2296                           
  2297                           ; 1 bytes @ 0x52
  2298  000053                     	ds	1
  2299  000054                     ??_LORAWAN_ReceiveWindow2Callback:
  2300  000054                     SelectChannelForTransmission@transmissionType:
  2301                           	opt callstack 0
  2302  000054                     LORAWAN_TxDone@timeOnAir:
  2303                           	opt callstack 0
  2304  000054                     LORAWAN_ReceiveWindow1Callback@freq:
  2305                           	opt callstack 0
  2306                           
  2307                           ; 4 bytes @ 0x53
  2308  000054                     	ds	1
  2309  000055                     SelectChannelForTransmission@result:
  2310                           	opt callstack 0
  2311  000055                     _RADIO_Transmit$780:
  2312                           	opt callstack 0
  2313                           
  2314                           ; 4 bytes @ 0x54
  2315  000055                     	ds	1
  2316  000056                     ??_LORAWAN_TxDone:
  2317  000056                     SelectChannelForTransmission@channelIndex:
  2318                           	opt callstack 0
  2319                           
  2320                           ; 1 bytes @ 0x55
  2321  000056                     	ds	3
  2322  000059                     RADIO_Transmit@regValue:
  2323                           	opt callstack 0
  2324                           
  2325                           ; 1 bytes @ 0x58
  2326  000059                     	ds	1
  2327  00005A                     GenerateSubkey@i:
  2328                           	opt callstack 0
  2329  00005A                     RADIO_Transmit@i:
  2330                           	opt callstack 0
  2331                           
  2332                           ; 1 bytes @ 0x59
  2333  00005A                     	ds	1
  2334  00005B                     ??_LORAWAN_RxTimeout:
  2335  00005B                     ??_AckRetransmissionCallback:
  2336  00005B                     ?_ComputeMic:
  2337                           	opt callstack 0
  2338  00005B                     AssemblePacket@port:
  2339                           	opt callstack 0
  2340  00005B                     ComputeMic@key:
  2341                           	opt callstack 0
  2342                           
  2343                           ; 2 bytes @ 0x5A
  2344  00005B                     	ds	1
  2345  00005C                     AssemblePacket@buffer:
  2346                           	opt callstack 0
  2347                           
  2348                           ; 2 bytes @ 0x5B
  2349  00005C                     	ds	1
  2350  00005D                     ComputeMic@buffer:
  2351                           	opt callstack 0
  2352                           
  2353                           ; 2 bytes @ 0x5C
  2354  00005D                     	ds	1
  2355  00005E                     AssemblePacket@bufferLength:
  2356                           	opt callstack 0
  2357                           
  2358                           ; 2 bytes @ 0x5D
  2359  00005E                     	ds	1
  2360  00005F                     ??_RADIO_DIO1:
  2361  00005F                     AckRetransmissionCallback@maximumPacketSize:
  2362                           	opt callstack 0
  2363  00005F                     ComputeMic@bufferLength:
  2364                           	opt callstack 0
  2365                           
  2366                           ; 1 bytes @ 0x5E
  2367  00005F                     	ds	1
  2368  000060                     
  2369                           ; 1 bytes @ 0x5F
  2370 ;;
  2371 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2372 ;;
  2373 ;; *************** function _main *****************
  2374 ;; Defined at:
  2375 ;;		line 24 in file "main.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  msg            19   20[BANK1 ] unsigned char [19]
  2380 ;;  deviceEui       8   39[BANK1 ] unsigned char [8]
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      void 
  2383 ;; Registers used:
  2384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2393 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;Total ram usage:       27 bytes
  2395 ;; Hardware stack levels required when called:   12
  2396 ;; This function calls:
  2397 ;;		_LORAWAN_Init
  2398 ;;		_LORAWAN_Join
  2399 ;;		_LORAWAN_Mainloop
  2400 ;;		_LORAWAN_SetApplicationSessionKey
  2401 ;;		_LORAWAN_SetDeviceAddress
  2402 ;;		_LORAWAN_SetNetworkSessionKey
  2403 ;;		_SYSTEM_Initialize
  2404 ;; This function is called by:
  2405 ;;		Startup code after reset
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text0
  2410  00A086                     __ptext0:
  2411                           	opt callstack 0
  2412  00A086                     _main:
  2413                           	opt callstack 19
  2414                           
  2415                           ;main.c: 26: char msg[] = "LoRaWAN is easy : ";
  2416                           
  2417                           ;incstack = 0
  2418  00A086  EE21  F05E         	lfsr	2,main@F6873
  2419  00A08A  EE11  F0C9         	lfsr	1,main@msg
  2420  00A08E  0E12               	movlw	18
  2421  00A090                     u18251:
  2422  00A090  CFDB FFE3          	movff	plusw2,plusw1
  2423  00A094  06E8               	decf	wreg,f,c
  2424  00A096  E2FC               	bc	u18251
  2425                           
  2426                           ;main.c: 29: SYSTEM_Initialize();
  2427  00A098  EC9E  F046         	call	_SYSTEM_Initialize	;wreg free
  2428                           
  2429                           ;main.c: 32: (INTCONbits.GIE = 1);
  2430  00A09C  8EF2               	bsf	4082,7,c	;volatile
  2431                           
  2432                           ;main.c: 35: (INTCONbits.PEIE = 1);
  2433  00A09E  8CF2               	bsf	4082,6,c	;volatile
  2434                           
  2435                           ;main.c: 38: uint8_t deviceEui[8] = { 0x00, 0x04, 0xA3, 0x0B, 0x00, 0x1B, 0x0C, 0x25 };
  2436  00A0A0  EE21  F081         	lfsr	2,main@F6875
  2437  00A0A4  EE11  F0DC         	lfsr	1,main@deviceEui
  2438  00A0A8  0E07               	movlw	7
  2439  00A0AA                     u18261:
  2440  00A0AA  CFDB FFE3          	movff	plusw2,plusw1
  2441  00A0AE  06E8               	decf	wreg,f,c
  2442  00A0B0  E2FC               	bc	u18261
  2443                           
  2444                           ;main.c: 40: LORAWAN_Init (RxData, RxJoinResponse);
  2445  00A0B2  0EB4               	movlw	low _RxData
  2446  00A0B4  6E4B               	movwf	LORAWAN_Init@RxPayload,c
  2447  00A0B6  0E89               	movlw	high _RxData
  2448  00A0B8  6E4C               	movwf	LORAWAN_Init@RxPayload+1,c
  2449  00A0BA  0EB6               	movlw	low _RxJoinResponse
  2450  00A0BC  6E4D               	movwf	LORAWAN_Init@RxJoinResponse,c
  2451  00A0BE  0E89               	movlw	high _RxJoinResponse
  2452  00A0C0  6E4E               	movwf	LORAWAN_Init@RxJoinResponse+1,c
  2453  00A0C2  EC84  F04C         	call	_LORAWAN_Init	;wreg free
  2454                           
  2455                           ;main.c: 41: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2456  00A0C6  0EA5               	movlw	low _nwkSKey
  2457  00A0C8  6E0C               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,c
  2458  00A0CA  0E01               	movlw	high _nwkSKey
  2459  00A0CC  6E0D               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,c
  2460  00A0CE  ECFE  F047         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2461                           
  2462                           ;main.c: 42: LORAWAN_SetApplicationSessionKey(appSKey);
  2463  00A0D2  0E95               	movlw	low _appSKey
  2464  00A0D4  6E0C               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,c
  2465  00A0D6  0E01               	movlw	high _appSKey
  2466  00A0D8  6E0D               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,c
  2467  00A0DA  ECE8  F047         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2468                           
  2469                           ;main.c: 43: LORAWAN_SetDeviceAddress(devAddr);
  2470  00A0DE  0E6C               	movlw	108
  2471  00A0E0  6E01               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew,c
  2472  00A0E2  0E6B               	movlw	107
  2473  00A0E4  6E02               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew+1,c
  2474  00A0E6  0E86               	movlw	134
  2475  00A0E8  6E03               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew+2,c
  2476  00A0EA  0E00               	movlw	0
  2477  00A0EC  6E04               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew+3,c
  2478  00A0EE  ECEB  F045         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2479                           
  2480                           ;main.c: 45: LORAWAN_Join(ABP);
  2481  00A0F2  0E01               	movlw	1
  2482  00A0F4  EC68  F053         	call	_LORAWAN_Join
  2483  00A0F8                     l15794:
  2484                           
  2485                           ;main.c: 48: {;main.c: 50: LORAWAN_Mainloop();
  2486  00A0F8  EC3D  F049         	call	_LORAWAN_Mainloop	;wreg free
  2487  00A0FC  D7FD               	goto	l15794
  2488  00A0FE                     __end_of_main:
  2489                           	opt callstack 0
  2490                           
  2491 ;; *************** function _SYSTEM_Initialize *****************
  2492 ;; Defined at:
  2493 ;;		line 111 in file "mcc_generated_files/mcc.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    3
  2514 ;; This function calls:
  2515 ;;		_EXT_INT_Initialize
  2516 ;;		_INTERRUPT_Initialize
  2517 ;;		_LORAWAN_PlatformInit
  2518 ;;		_OSCILLATOR_Initialize
  2519 ;;		_PIN_MANAGER_Initialize
  2520 ;;		_SPI2_Initialize
  2521 ;;		_TMR1_Initialize
  2522 ;; This function is called by:
  2523 ;;		_main
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text1
  2528  008D3C                     __ptext1:
  2529                           	opt callstack 0
  2530  008D3C                     _SYSTEM_Initialize:
  2531                           	opt callstack 27
  2532                           
  2533                           ;mcc.c: 114: INTERRUPT_Initialize();
  2534                           
  2535                           ;incstack = 0
  2536  008D3C  ECE6  F044         	call	_INTERRUPT_Initialize	;wreg free
  2537                           
  2538                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  2539  008D40  EC30  F04B         	call	_PIN_MANAGER_Initialize	;wreg free
  2540                           
  2541                           ;mcc.c: 116: OSCILLATOR_Initialize();
  2542  008D44  EC73  F045         	call	_OSCILLATOR_Initialize	;wreg free
  2543                           
  2544                           ;mcc.c: 117: SPI2_Initialize();
  2545  008D48  EC7A  F045         	call	_SPI2_Initialize	;wreg free
  2546                           
  2547                           ;mcc.c: 118: TMR1_Initialize();
  2548  008D4C  EC14  F048         	call	_TMR1_Initialize	;wreg free
  2549                           
  2550                           ;mcc.c: 119: EXT_INT_Initialize();
  2551  008D50  EC74  F048         	call	_EXT_INT_Initialize	;wreg free
  2552                           
  2553                           ;mcc.c: 120: LORAWAN_PlatformInit();
  2554  008D54  ECDF  F046         	call	_LORAWAN_PlatformInit	;wreg free
  2555  008D58  0012               	return		;funcret
  2556  008D5A                     __end_of_SYSTEM_Initialize:
  2557                           	opt callstack 0
  2558                           
  2559 ;; *************** function _TMR1_Initialize *****************
  2560 ;; Defined at:
  2561 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;Total ram usage:        0 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    1
  2582 ;; This function calls:
  2583 ;;		_TMR1_SetInterruptHandler
  2584 ;;		_TMR1_StartTimer
  2585 ;; This function is called by:
  2586 ;;		_SYSTEM_Initialize
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text2
  2591  009028                     __ptext2:
  2592                           	opt callstack 0
  2593  009028                     _TMR1_Initialize:
  2594                           	opt callstack 28
  2595                           
  2596                           ;tmr1.c: 67: T1CON = 0x8C;
  2597                           
  2598                           ;incstack = 0
  2599  009028  0E8C               	movlw	140
  2600  00902A  6ECD               	movwf	4045,c	;volatile
  2601                           
  2602                           ;tmr1.c: 70: T1GCON = 0x00;
  2603  00902C  0E00               	movlw	0
  2604  00902E  6ECC               	movwf	4044,c	;volatile
  2605                           
  2606                           ;tmr1.c: 73: TMR1H = 0x00;
  2607  009030  0E00               	movlw	0
  2608  009032  6ECF               	movwf	4047,c	;volatile
  2609                           
  2610                           ;tmr1.c: 76: TMR1L = 0x00;
  2611  009034  0E00               	movlw	0
  2612  009036  6ECE               	movwf	4046,c	;volatile
  2613                           
  2614                           ;tmr1.c: 79: timer1ReloadVal=TMR1;
  2615  009038  CFCE F1E8          	movff	4046,_timer1ReloadVal	;volatile
  2616  00903C  CFCF F1E9          	movff	4047,_timer1ReloadVal+1	;volatile
  2617                           
  2618                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  2619  009040  909E               	bcf	3998,0,c	;volatile
  2620                           
  2621                           ;tmr1.c: 85: PIE1bits.TMR1IE = 1;
  2622  009042  809D               	bsf	3997,0,c	;volatile
  2623                           
  2624                           ;tmr1.c: 88: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2625  009044  0E00               	movlw	0
  2626  009046  6E01               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  2627  009048  0E00               	movlw	0
  2628  00904A  6E02               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  2629  00904C  EC3E  F045         	call	_TMR1_SetInterruptHandler	;wreg free
  2630                           
  2631                           ;tmr1.c: 91: TMR1_StartTimer();
  2632  009050  ECE8  F044         	call	_TMR1_StartTimer	;wreg free
  2633  009054  0012               	return		;funcret
  2634  009056                     __end_of_TMR1_Initialize:
  2635                           	opt callstack 0
  2636                           
  2637 ;; *************** function _TMR1_StartTimer *****************
  2638 ;; Defined at:
  2639 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		None
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;Total ram usage:        0 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_TMR1_Initialize
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text3
  2667  0089D0                     __ptext3:
  2668                           	opt callstack 0
  2669  0089D0                     _TMR1_StartTimer:
  2670                           	opt callstack 28
  2671                           
  2672                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  2673                           
  2674                           ;incstack = 0
  2675  0089D0  80CD               	bsf	4045,0,c	;volatile
  2676  0089D2  0012               	return		;funcret
  2677  0089D4                     __end_of_TMR1_StartTimer:
  2678                           	opt callstack 0
  2679                           
  2680 ;; *************** function _SPI2_Initialize *****************
  2681 ;; Defined at:
  2682 ;;		line 63 in file "mcc_generated_files/spi2.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_SYSTEM_Initialize
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text4
  2710  008AF4                     __ptext4:
  2711                           	opt callstack 0
  2712  008AF4                     _SPI2_Initialize:
  2713                           	opt callstack 29
  2714                           
  2715                           ;spi2.c: 68: SSP2STAT = 0x40;
  2716                           
  2717                           ;incstack = 0
  2718  008AF4  0E40               	movlw	64
  2719  008AF6  6E6D               	movwf	3949,c	;volatile
  2720                           
  2721                           ;spi2.c: 71: SSP2CON1 = 0x20;
  2722  008AF8  0E20               	movlw	32
  2723  008AFA  6E6C               	movwf	3948,c	;volatile
  2724                           
  2725                           ;spi2.c: 74: SSP2ADD = 0x00;
  2726  008AFC  0E00               	movlw	0
  2727  008AFE  6E6E               	movwf	3950,c	;volatile
  2728  008B00  0012               	return		;funcret
  2729  008B02                     __end_of_SPI2_Initialize:
  2730                           	opt callstack 0
  2731                           
  2732 ;; *************** function _PIN_MANAGER_Initialize *****************
  2733 ;; Defined at:
  2734 ;;		line 53 in file "mcc_generated_files/pin_manager.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;Total ram usage:        0 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    1
  2755 ;; This function calls:
  2756 ;;		_IOCB4_SetInterruptHandler
  2757 ;; This function is called by:
  2758 ;;		_SYSTEM_Initialize
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text5
  2763  009660                     __ptext5:
  2764                           	opt callstack 0
  2765  009660                     _PIN_MANAGER_Initialize:
  2766                           	opt callstack 28
  2767                           
  2768                           ;pin_manager.c: 58: LATE = 0x00;
  2769                           
  2770                           ;incstack = 0
  2771  009660  0E00               	movlw	0
  2772  009662  6E8D               	movwf	3981,c	;volatile
  2773                           
  2774                           ;pin_manager.c: 59: LATD = 0x00;
  2775  009664  0E00               	movlw	0
  2776  009666  6E8C               	movwf	3980,c	;volatile
  2777                           
  2778                           ;pin_manager.c: 60: LATA = 0x00;
  2779  009668  0E00               	movlw	0
  2780  00966A  6E89               	movwf	3977,c	;volatile
  2781                           
  2782                           ;pin_manager.c: 61: LATB = 0x00;
  2783  00966C  0E00               	movlw	0
  2784  00966E  6E8A               	movwf	3978,c	;volatile
  2785                           
  2786                           ;pin_manager.c: 62: LATC = 0x00;
  2787  009670  0E00               	movlw	0
  2788  009672  6E8B               	movwf	3979,c	;volatile
  2789                           
  2790                           ;pin_manager.c: 67: TRISE = 0x07;
  2791  009674  0E07               	movlw	7
  2792  009676  6E96               	movwf	3990,c	;volatile
  2793                           
  2794                           ;pin_manager.c: 68: TRISA = 0xFF;
  2795  009678  6892               	setf	3986,c	;volatile
  2796                           
  2797                           ;pin_manager.c: 69: TRISB = 0xFF;
  2798  00967A  6893               	setf	3987,c	;volatile
  2799                           
  2800                           ;pin_manager.c: 70: TRISC = 0xDF;
  2801  00967C  0EDF               	movlw	223
  2802  00967E  6E94               	movwf	3988,c	;volatile
  2803                           
  2804                           ;pin_manager.c: 71: TRISD = 0xC6;
  2805  009680  0EC6               	movlw	198
  2806  009682  6E95               	movwf	3989,c	;volatile
  2807                           
  2808                           ;pin_manager.c: 76: ANSELC = 0xD8;
  2809  009684  0ED8               	movlw	216
  2810  009686  010F               	movlb	15	; () banked
  2811  009688  6F3A               	movwf	58,b	;volatile
  2812                           
  2813                           ;pin_manager.c: 77: ANSELB = 0x28;
  2814  00968A  0E28               	movlw	40
  2815  00968C  6F39               	movwf	57,b	;volatile
  2816                           
  2817                           ;pin_manager.c: 78: ANSELD = 0xC4;
  2818  00968E  0EC4               	movlw	196
  2819  009690  6F3B               	movwf	59,b	;volatile
  2820                           
  2821                           ;pin_manager.c: 79: ANSELE = 0x07;
  2822  009692  0E07               	movlw	7
  2823  009694  6F3C               	movwf	60,b	;volatile
  2824                           
  2825                           ;pin_manager.c: 80: ANSELA = 0x2F;
  2826  009696  0E2F               	movlw	47
  2827  009698  6F38               	movwf	56,b	;volatile
  2828                           
  2829                           ; BSR set to: 15
  2830                           ;pin_manager.c: 85: WPUB = 0xFF;
  2831  00969A  6861               	setf	3937,c	;volatile
  2832                           
  2833                           ; BSR set to: 15
  2834                           ;pin_manager.c: 86: INTCON2bits.nRBPU = 1;
  2835  00969C  8EF1               	bsf	4081,7,c	;volatile
  2836                           
  2837                           ; BSR set to: 15
  2838                           ;pin_manager.c: 94: IOCBbits.IOCB4 = 1;
  2839  00969E  8862               	bsf	3938,4,c	;volatile
  2840                           
  2841                           ; BSR set to: 15
  2842                           ;pin_manager.c: 97: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  2843  0096A0  0E00               	movlw	0
  2844  0096A2  6E01               	movwf	IOCB4_SetInterruptHandler@InterruptHandler,c
  2845  0096A4  0E00               	movlw	0
  2846  0096A6  6E02               	movwf	IOCB4_SetInterruptHandler@InterruptHandler+1,c
  2847  0096A8  EC39  F045         	call	_IOCB4_SetInterruptHandler	;wreg free
  2848                           
  2849                           ;pin_manager.c: 100: INTCONbits.RBIE = 1;
  2850  0096AC  86F2               	bsf	4082,3,c	;volatile
  2851  0096AE  0012               	return		;funcret
  2852  0096B0                     __end_of_PIN_MANAGER_Initialize:
  2853                           	opt callstack 0
  2854                           
  2855 ;; *************** function _OSCILLATOR_Initialize *****************
  2856 ;; Defined at:
  2857 ;;		line 123 in file "mcc_generated_files/mcc.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;Total ram usage:        0 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_SYSTEM_Initialize
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text6
  2885  008AE6                     __ptext6:
  2886                           	opt callstack 0
  2887  008AE6                     _OSCILLATOR_Initialize:
  2888                           	opt callstack 29
  2889                           
  2890                           ;mcc.c: 126: OSCCON = 0x70;
  2891                           
  2892                           ;incstack = 0
  2893  008AE6  0E70               	movlw	112
  2894  008AE8  6ED3               	movwf	4051,c	;volatile
  2895                           
  2896                           ;mcc.c: 128: OSCCON2 = 0x04;
  2897  008AEA  0E04               	movlw	4
  2898  008AEC  6ED2               	movwf	4050,c	;volatile
  2899                           
  2900                           ;mcc.c: 130: OSCTUNE = 0x00;
  2901  008AEE  0E00               	movlw	0
  2902  008AF0  6E9B               	movwf	3995,c	;volatile
  2903  008AF2  0012               	return		;funcret
  2904  008AF4                     __end_of_OSCILLATOR_Initialize:
  2905                           	opt callstack 0
  2906                           
  2907 ;; *************** function _LORAWAN_PlatformInit *****************
  2908 ;; Defined at:
  2909 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    2
  2930 ;; This function calls:
  2931 ;;		_DIO0_ISR_Lora_Init
  2932 ;;		_DIO1_ISR_Lora_Init
  2933 ;;		_DIO2_ISR_Lora_Init
  2934 ;;		_DIO3_ISR_Lora_Init
  2935 ;;		_DIO4_ISR_Lora_Init
  2936 ;;		_DIO5_ISR_Lora_Init
  2937 ;;		_SystemTimerInit
  2938 ;;		_TMR_ISR_Lora_Init
  2939 ;; This function is called by:
  2940 ;;		_SYSTEM_Initialize
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text7
  2945  008DBE                     __ptext7:
  2946                           	opt callstack 0
  2947  008DBE                     _LORAWAN_PlatformInit:
  2948                           	opt callstack 27
  2949                           
  2950                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  2951                           
  2952                           ;incstack = 0
  2953  008DBE  EC6C  F045         	call	_TMR_ISR_Lora_Init	;wreg free
  2954                           
  2955                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  2956  008DC2  EC50  F045         	call	_DIO0_ISR_Lora_Init	;wreg free
  2957                           
  2958                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  2959  008DC6  EC57  F045         	call	_DIO1_ISR_Lora_Init	;wreg free
  2960                           
  2961                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  2962  008DCA  EC5E  F045         	call	_DIO2_ISR_Lora_Init	;wreg free
  2963                           
  2964                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  2965  008DCE  ECDC  F044         	call	_DIO3_ISR_Lora_Init	;wreg free
  2966                           
  2967                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  2968  008DD2  ECDD  F044         	call	_DIO4_ISR_Lora_Init	;wreg free
  2969                           
  2970                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  2971  008DD6  EC65  F045         	call	_DIO5_ISR_Lora_Init	;wreg free
  2972                           
  2973                           ;lorawan_init.c: 81: SystemTimerInit();
  2974  008DDA  EC17  F045         	call	_SystemTimerInit	;wreg free
  2975  008DDE  0012               	return		;funcret
  2976  008DE0                     __end_of_LORAWAN_PlatformInit:
  2977                           	opt callstack 0
  2978                           
  2979 ;; *************** function _TMR_ISR_Lora_Init *****************
  2980 ;; Defined at:
  2981 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, status,2, status,0, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:    1
  3002 ;; This function calls:
  3003 ;;		_TMR1_SetInterruptHandler
  3004 ;; This function is called by:
  3005 ;;		_LORAWAN_PlatformInit
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text8
  3010  008AD8                     __ptext8:
  3011                           	opt callstack 0
  3012  008AD8                     _TMR_ISR_Lora_Init:
  3013                           	opt callstack 27
  3014                           
  3015                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  3016                           
  3017                           ;incstack = 0
  3018  008AD8  0E00               	movlw	0
  3019  008ADA  6E01               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  3020  008ADC  0E00               	movlw	0
  3021  008ADE  6E02               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  3022  008AE0  EC3E  F045         	call	_TMR1_SetInterruptHandler	;wreg free
  3023  008AE4  0012               	return		;funcret
  3024  008AE6                     __end_of_TMR_ISR_Lora_Init:
  3025                           	opt callstack 0
  3026                           
  3027 ;; *************** function _TMR1_SetInterruptHandler *****************
  3028 ;; Defined at:
  3029 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  InterruptHan    2    0[COMRAM] PTR void 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;Total ram usage:        2 bytes
  3048 ;; Hardware stack levels used:    1
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_TMR_ISR_Lora_Init
  3053 ;;		_TMR1_Initialize
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text9
  3058  008A7C                     __ptext9:
  3059                           	opt callstack 0
  3060  008A7C                     _TMR1_SetInterruptHandler:
  3061                           	opt callstack 28
  3062                           
  3063                           ;tmr1.c: 184: TMR1_InterruptHandler = InterruptHandler;
  3064                           
  3065                           ;incstack = 0
  3066  008A7C  C001  F1E6         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  3067  008A80  C002  F1E7         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  3068  008A84  0012               	return		;funcret
  3069  008A86                     __end_of_TMR1_SetInterruptHandler:
  3070                           	opt callstack 0
  3071                           
  3072 ;; *************** function _SystemTimerInit *****************
  3073 ;; Defined at:
  3074 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_LORAWAN_PlatformInit
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text10
  3102  008A2E                     __ptext10:
  3103                           	opt callstack 0
  3104  008A2E                     _SystemTimerInit:
  3105                           	opt callstack 28
  3106                           
  3107                           ;sw_timer.c: 137: allocatedTimers = 0;
  3108                           
  3109                           ;incstack = 0
  3110  008A2E  0E00               	movlw	0
  3111  008A30  0100               	movlb	0	; () banked
  3112  008A32  6FF7               	movwf	_allocatedTimers& (0+255),b	;volatile
  3113                           
  3114                           ; BSR set to: 0
  3115  008A34  0012               	return		;funcret
  3116  008A36                     __end_of_SystemTimerInit:
  3117                           	opt callstack 0
  3118                           
  3119 ;; *************** function _DIO5_ISR_Lora_Init *****************
  3120 ;; Defined at:
  3121 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;Total ram usage:        0 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    1
  3142 ;; This function calls:
  3143 ;;		_INT0_SetInterruptHandler
  3144 ;; This function is called by:
  3145 ;;		_LORAWAN_PlatformInit
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text11
  3150  008ACA                     __ptext11:
  3151                           	opt callstack 0
  3152  008ACA                     _DIO5_ISR_Lora_Init:
  3153                           	opt callstack 27
  3154                           
  3155                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;incstack = 0
  3159  008ACA  0E00               	movlw	0
  3160  008ACC  6E01               	movwf	INT0_SetInterruptHandler@InterruptHandler,c
  3161  008ACE  0E00               	movlw	0
  3162  008AD0  6E02               	movwf	INT0_SetInterruptHandler@InterruptHandler+1,c
  3163  008AD2  EC2A  F045         	call	_INT0_SetInterruptHandler	;wreg free
  3164  008AD6  0012               	return		;funcret
  3165  008AD8                     __end_of_DIO5_ISR_Lora_Init:
  3166                           	opt callstack 0
  3167                           
  3168 ;; *************** function _DIO4_ISR_Lora_Init *****************
  3169 ;; Defined at:
  3170 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		None
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;Total ram usage:        0 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; This function calls:
  3191 ;;		Nothing
  3192 ;; This function is called by:
  3193 ;;		_LORAWAN_PlatformInit
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text12
  3198  0089BA                     __ptext12:
  3199                           	opt callstack 0
  3200  0089BA                     _DIO4_ISR_Lora_Init:
  3201                           	opt callstack 28
  3202                           
  3203                           ;incstack = 0
  3204  0089BA  0012               	return		;funcret
  3205  0089BC                     __end_of_DIO4_ISR_Lora_Init:
  3206                           	opt callstack 0
  3207                           
  3208 ;; *************** function _DIO3_ISR_Lora_Init *****************
  3209 ;; Defined at:
  3210 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;		None
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;		None
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		None
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;Total ram usage:        0 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; This function calls:
  3231 ;;		Nothing
  3232 ;; This function is called by:
  3233 ;;		_LORAWAN_PlatformInit
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text13
  3238  0089B8                     __ptext13:
  3239                           	opt callstack 0
  3240  0089B8                     _DIO3_ISR_Lora_Init:
  3241                           	opt callstack 28
  3242                           
  3243                           ;incstack = 0
  3244  0089B8  0012               	return		;funcret
  3245  0089BA                     __end_of_DIO3_ISR_Lora_Init:
  3246                           	opt callstack 0
  3247                           
  3248 ;; *************** function _DIO2_ISR_Lora_Init *****************
  3249 ;; Defined at:
  3250 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;Total ram usage:        0 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    1
  3271 ;; This function calls:
  3272 ;;		_IOCB4_SetInterruptHandler
  3273 ;; This function is called by:
  3274 ;;		_LORAWAN_PlatformInit
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text14
  3279  008ABC                     __ptext14:
  3280                           	opt callstack 0
  3281  008ABC                     _DIO2_ISR_Lora_Init:
  3282                           	opt callstack 27
  3283                           
  3284                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  3285                           
  3286                           ;incstack = 0
  3287  008ABC  0E00               	movlw	0
  3288  008ABE  6E01               	movwf	IOCB4_SetInterruptHandler@InterruptHandler,c
  3289  008AC0  0E00               	movlw	0
  3290  008AC2  6E02               	movwf	IOCB4_SetInterruptHandler@InterruptHandler+1,c
  3291  008AC4  EC39  F045         	call	_IOCB4_SetInterruptHandler	;wreg free
  3292  008AC8  0012               	return		;funcret
  3293  008ACA                     __end_of_DIO2_ISR_Lora_Init:
  3294                           	opt callstack 0
  3295                           
  3296 ;; *************** function _IOCB4_SetInterruptHandler *****************
  3297 ;; Defined at:
  3298 ;;		line 134 in file "mcc_generated_files/pin_manager.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  InterruptHan    2    0[COMRAM] PTR void 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3312 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;Total ram usage:        2 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_DIO2_ISR_Lora_Init
  3322 ;;		_PIN_MANAGER_Initialize
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text15
  3327  008A72                     __ptext15:
  3328                           	opt callstack 0
  3329  008A72                     _IOCB4_SetInterruptHandler:
  3330                           	opt callstack 28
  3331                           
  3332                           ;pin_manager.c: 135: IOCB4_InterruptHandler = InterruptHandler;
  3333                           
  3334                           ;incstack = 0
  3335  008A72  C001  F1E4         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  3336  008A76  C002  F1E5         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  3337  008A7A  0012               	return		;funcret
  3338  008A7C                     __end_of_IOCB4_SetInterruptHandler:
  3339                           	opt callstack 0
  3340                           
  3341 ;; *************** function _DIO1_ISR_Lora_Init *****************
  3342 ;; Defined at:
  3343 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;Total ram usage:        0 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    1
  3364 ;; This function calls:
  3365 ;;		_INT2_SetInterruptHandler
  3366 ;; This function is called by:
  3367 ;;		_LORAWAN_PlatformInit
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text16
  3372  008AAE                     __ptext16:
  3373                           	opt callstack 0
  3374  008AAE                     _DIO1_ISR_Lora_Init:
  3375                           	opt callstack 27
  3376                           
  3377                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  3378                           
  3379                           ;incstack = 0
  3380  008AAE  0E00               	movlw	0
  3381  008AB0  6E01               	movwf	INT2_SetInterruptHandler@InterruptHandler,c
  3382  008AB2  0E00               	movlw	0
  3383  008AB4  6E02               	movwf	INT2_SetInterruptHandler@InterruptHandler+1,c
  3384  008AB6  EC34  F045         	call	_INT2_SetInterruptHandler	;wreg free
  3385  008ABA  0012               	return		;funcret
  3386  008ABC                     __end_of_DIO1_ISR_Lora_Init:
  3387                           	opt callstack 0
  3388                           
  3389 ;; *************** function _DIO0_ISR_Lora_Init *****************
  3390 ;; Defined at:
  3391 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;Total ram usage:        0 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:    1
  3412 ;; This function calls:
  3413 ;;		_INT1_SetInterruptHandler
  3414 ;; This function is called by:
  3415 ;;		_LORAWAN_PlatformInit
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text17
  3420  008AA0                     __ptext17:
  3421                           	opt callstack 0
  3422  008AA0                     _DIO0_ISR_Lora_Init:
  3423                           	opt callstack 27
  3424                           
  3425                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  3426                           
  3427                           ;incstack = 0
  3428  008AA0  0E00               	movlw	0
  3429  008AA2  6E01               	movwf	INT1_SetInterruptHandler@InterruptHandler,c
  3430  008AA4  0E00               	movlw	0
  3431  008AA6  6E02               	movwf	INT1_SetInterruptHandler@InterruptHandler+1,c
  3432  008AA8  EC2F  F045         	call	_INT1_SetInterruptHandler	;wreg free
  3433  008AAC  0012               	return		;funcret
  3434  008AAE                     __end_of_DIO0_ISR_Lora_Init:
  3435                           	opt callstack 0
  3436                           
  3437 ;; *************** function _INTERRUPT_Initialize *****************
  3438 ;; Defined at:
  3439 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;		None
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;		None
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		None
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;Total ram usage:        0 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_SYSTEM_Initialize
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text18
  3467  0089CC                     __ptext18:
  3468                           	opt callstack 0
  3469  0089CC                     _INTERRUPT_Initialize:
  3470                           	opt callstack 29
  3471                           
  3472                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  3473                           
  3474                           ;incstack = 0
  3475  0089CC  9ED0               	bcf	4048,7,c	;volatile
  3476  0089CE  0012               	return		;funcret
  3477  0089D0                     __end_of_INTERRUPT_Initialize:
  3478                           	opt callstack 0
  3479                           
  3480 ;; *************** function _EXT_INT_Initialize *****************
  3481 ;; Defined at:
  3482 ;;		line 176 in file "mcc_generated_files/ext_int.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    1
  3503 ;; This function calls:
  3504 ;;		_INT0_SetInterruptHandler
  3505 ;;		_INT1_SetInterruptHandler
  3506 ;;		_INT2_SetInterruptHandler
  3507 ;; This function is called by:
  3508 ;;		_SYSTEM_Initialize
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text19
  3513  0090E8                     __ptext19:
  3514                           	opt callstack 0
  3515  0090E8                     _EXT_INT_Initialize:
  3516                           	opt callstack 28
  3517                           
  3518                           ;ext_int.c: 185: (INTCON3bits.INT1IF = 0);
  3519                           
  3520                           ;incstack = 0
  3521  0090E8  90F0               	bcf	4080,0,c	;volatile
  3522                           
  3523                           ;ext_int.c: 186: (INTCON2bits.INTEDG1 = 1);
  3524  0090EA  8AF1               	bsf	4081,5,c	;volatile
  3525                           
  3526                           ;ext_int.c: 188: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  3527  0090EC  0E00               	movlw	0
  3528  0090EE  6E01               	movwf	INT1_SetInterruptHandler@InterruptHandler,c
  3529  0090F0  0E00               	movlw	0
  3530  0090F2  6E02               	movwf	INT1_SetInterruptHandler@InterruptHandler+1,c
  3531  0090F4  EC2F  F045         	call	_INT1_SetInterruptHandler	;wreg free
  3532                           
  3533                           ;ext_int.c: 189: (INTCON3bits.INT1IE = 1);
  3534  0090F8  86F0               	bsf	4080,3,c	;volatile
  3535                           
  3536                           ;ext_int.c: 198: (INTCON3bits.INT2IF = 0);
  3537  0090FA  92F0               	bcf	4080,1,c	;volatile
  3538                           
  3539                           ;ext_int.c: 199: (INTCON2bits.INTEDG2 = 1);
  3540  0090FC  88F1               	bsf	4081,4,c	;volatile
  3541                           
  3542                           ;ext_int.c: 201: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  3543  0090FE  0E00               	movlw	0
  3544  009100  6E01               	movwf	INT2_SetInterruptHandler@InterruptHandler,c
  3545  009102  0E00               	movlw	0
  3546  009104  6E02               	movwf	INT2_SetInterruptHandler@InterruptHandler+1,c
  3547  009106  EC34  F045         	call	_INT2_SetInterruptHandler	;wreg free
  3548                           
  3549                           ;ext_int.c: 202: (INTCON3bits.INT2IE = 1);
  3550  00910A  88F0               	bsf	4080,4,c	;volatile
  3551                           
  3552                           ;ext_int.c: 211: (INTCONbits.INT0IF = 0);
  3553  00910C  92F2               	bcf	4082,1,c	;volatile
  3554                           
  3555                           ;ext_int.c: 212: (INTCON2bits.INTEDG0 = 1);
  3556  00910E  8CF1               	bsf	4081,6,c	;volatile
  3557                           
  3558                           ;ext_int.c: 214: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  3559  009110  0E00               	movlw	0
  3560  009112  6E01               	movwf	INT0_SetInterruptHandler@InterruptHandler,c
  3561  009114  0E00               	movlw	0
  3562  009116  6E02               	movwf	INT0_SetInterruptHandler@InterruptHandler+1,c
  3563  009118  EC2A  F045         	call	_INT0_SetInterruptHandler	;wreg free
  3564  00911C  0012               	return		;funcret
  3565  00911E                     __end_of_EXT_INT_Initialize:
  3566                           	opt callstack 0
  3567                           
  3568 ;; *************** function _INT2_SetInterruptHandler *****************
  3569 ;; Defined at:
  3570 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  InterruptHan    2    0[COMRAM] PTR void 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2, status,0
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;Total ram usage:        2 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_DIO1_ISR_Lora_Init
  3594 ;;		_EXT_INT_Initialize
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text20
  3599  008A68                     __ptext20:
  3600                           	opt callstack 0
  3601  008A68                     _INT2_SetInterruptHandler:
  3602                           	opt callstack 27
  3603                           
  3604                           ;ext_int.c: 114: INT2_InterruptHandler = InterruptHandler;
  3605                           
  3606                           ;incstack = 0
  3607  008A68  C001  F1EC         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3608  008A6C  C002  F1ED         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3609  008A70  0012               	return		;funcret
  3610  008A72                     __end_of_INT2_SetInterruptHandler:
  3611                           	opt callstack 0
  3612                           
  3613 ;; *************** function _INT1_SetInterruptHandler *****************
  3614 ;; Defined at:
  3615 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  InterruptHan    2    0[COMRAM] PTR void 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;Total ram usage:        2 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_DIO0_ISR_Lora_Init
  3639 ;;		_EXT_INT_Initialize
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text21
  3644  008A5E                     __ptext21:
  3645                           	opt callstack 0
  3646  008A5E                     _INT1_SetInterruptHandler:
  3647                           	opt callstack 27
  3648                           
  3649                           ;ext_int.c: 73: INT1_InterruptHandler = InterruptHandler;
  3650                           
  3651                           ;incstack = 0
  3652  008A5E  C001  F1EE         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3653  008A62  C002  F1EF         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3654  008A66  0012               	return		;funcret
  3655  008A68                     __end_of_INT1_SetInterruptHandler:
  3656                           	opt callstack 0
  3657                           
  3658 ;; *************** function _INT0_SetInterruptHandler *****************
  3659 ;; Defined at:
  3660 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  InterruptHan    2    0[COMRAM] PTR void 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;Total ram usage:        2 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_DIO5_ISR_Lora_Init
  3684 ;;		_EXT_INT_Initialize
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text22
  3689  008A54                     __ptext22:
  3690                           	opt callstack 0
  3691  008A54                     _INT0_SetInterruptHandler:
  3692                           	opt callstack 27
  3693                           
  3694                           ;ext_int.c: 155: INT0_InterruptHandler = InterruptHandler;
  3695                           
  3696                           ;incstack = 0
  3697  008A54  C001  F1EA         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  3698  008A58  C002  F1EB         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  3699  008A5C  0012               	return		;funcret
  3700  008A5E                     __end_of_INT0_SetInterruptHandler:
  3701                           	opt callstack 0
  3702                           
  3703 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  3704 ;; Defined at:
  3705 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  networkSessi    2   11[COMRAM] PTR unsigned char 
  3708 ;;		 -> nwkSKey(16), 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3724 ;;Total ram usage:        2 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:    1
  3727 ;; This function calls:
  3728 ;;		_memcpy
  3729 ;; This function is called by:
  3730 ;;		_main
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text23
  3735  008FFC                     __ptext23:
  3736                           	opt callstack 0
  3737  008FFC                     _LORAWAN_SetNetworkSessionKey:
  3738                           	opt callstack 29
  3739                           
  3740                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  3741                           
  3742                           ;incstack = 0
  3743  008FFC  500C               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,w,c
  3744  008FFE  100D               	iorwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,w,c
  3745  009000  B4D8               	btfsc	status,2,c
  3746  009002  0012               	return	
  3747                           
  3748                           ;lorawan.c: 382: {;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, n
      +                          etworkSessionKeyNew, 16);
  3749  009004  0E22               	movlw	low (_loRa+34)
  3750  009006  6E01               	movwf	memcpy@d1,c
  3751  009008  0E02               	movlw	high (_loRa+34)
  3752  00900A  6E02               	movwf	memcpy@d1+1,c
  3753  00900C  C00C  F003         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  3754  009010  C00D  F004         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  3755  009014  0E00               	movlw	0
  3756  009016  6E06               	movwf	memcpy@n+1,c
  3757  009018  0E10               	movlw	16
  3758  00901A  6E05               	movwf	memcpy@n,c
  3759  00901C  EC56  F04C         	call	_memcpy	;wreg free
  3760                           
  3761                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  3762  009020  0102               	movlb	2	; () banked
  3763  009022  89A5               	bsf	(_loRa+165)& (0+255),4,b
  3764                           
  3765                           ; BSR set to: 2
  3766                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  3767  009024  9902               	bcf	(_loRa+2)& (0+255),4,b
  3768  009026  0012               	return		;funcret
  3769  009028                     __end_of_LORAWAN_SetNetworkSessionKey:
  3770                           	opt callstack 0
  3771                           
  3772 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  3773 ;; Defined at:
  3774 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  deviceAddres    4    0[COMRAM] unsigned long 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;		None
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		None
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;Total ram usage:        4 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text24
  3802  008BD6                     __ptext24:
  3803                           	opt callstack 0
  3804  008BD6                     _LORAWAN_SetDeviceAddress:
  3805                           	opt callstack 30
  3806                           
  3807                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  3808                           
  3809                           ;incstack = 0
  3810  008BD6  C001  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  3811  008BDA  C002  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  3812  008BDE  C003  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  3813  008BE2  C004  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  3814                           
  3815                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  3816  008BE6  0102               	movlb	2	; () banked
  3817  008BE8  85A5               	bsf	(_loRa+165)& (0+255),2,b
  3818                           
  3819                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  3820  008BEA  9902               	bcf	(_loRa+2)& (0+255),4,b
  3821                           
  3822                           ; BSR set to: 2
  3823  008BEC  0012               	return		;funcret
  3824  008BEE                     __end_of_LORAWAN_SetDeviceAddress:
  3825                           	opt callstack 0
  3826                           
  3827 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  3828 ;; Defined at:
  3829 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  applicationS    2   11[COMRAM] PTR unsigned char 
  3832 ;;		 -> appSKey(16), 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;Total ram usage:        2 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    1
  3851 ;; This function calls:
  3852 ;;		_memcpy
  3853 ;; This function is called by:
  3854 ;;		_main
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text25
  3859  008FD0                     __ptext25:
  3860                           	opt callstack 0
  3861  008FD0                     _LORAWAN_SetApplicationSessionKey:
  3862                           	opt callstack 29
  3863                           
  3864                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  3865                           
  3866                           ; BSR set to: 2
  3867                           ;incstack = 0
  3868  008FD0  500C               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,w,c
  3869  008FD2  100D               	iorwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,w,c
  3870  008FD4  B4D8               	btfsc	status,2,c
  3871  008FD6  0012               	return	
  3872                           
  3873                           ;lorawan.c: 397: {;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionK
      +                          ey, applicationSessionKeyNew, 16);
  3874  008FD8  0E32               	movlw	low (_loRa+50)
  3875  008FDA  6E01               	movwf	memcpy@d1,c
  3876  008FDC  0E02               	movlw	high (_loRa+50)
  3877  008FDE  6E02               	movwf	memcpy@d1+1,c
  3878  008FE0  C00C  F003         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  3879  008FE4  C00D  F004         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  3880  008FE8  0E00               	movlw	0
  3881  008FEA  6E06               	movwf	memcpy@n+1,c
  3882  008FEC  0E10               	movlw	16
  3883  008FEE  6E05               	movwf	memcpy@n,c
  3884  008FF0  EC56  F04C         	call	_memcpy	;wreg free
  3885                           
  3886                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  3887  008FF4  0102               	movlb	2	; () banked
  3888  008FF6  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  3889                           
  3890                           ; BSR set to: 2
  3891                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  3892  008FF8  9902               	bcf	(_loRa+2)& (0+255),4,b
  3893  008FFA  0012               	return		;funcret
  3894  008FFC                     __end_of_LORAWAN_SetApplicationSessionKey:
  3895                           	opt callstack 0
  3896                           
  3897 ;; *************** function _LORAWAN_Mainloop *****************
  3898 ;; Defined at:
  3899 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;		None
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;Total ram usage:        0 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:   11
  3920 ;; This function calls:
  3921 ;;		_INTERRUPT_GetDioStatus
  3922 ;;		_RADIO_DIO0
  3923 ;;		_RADIO_DIO1
  3924 ;;		_RADIO_DIO2
  3925 ;;		_RADIO_DIO3
  3926 ;;		_RADIO_DIO4
  3927 ;;		_RADIO_DIO5
  3928 ;;		_SwTimersExecute
  3929 ;; This function is called by:
  3930 ;;		_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text26
  3935  00927A                     __ptext26:
  3936                           	opt callstack 0
  3937  00927A                     _LORAWAN_Mainloop:
  3938                           	opt callstack 19
  3939                           
  3940                           ;lorawan.c: 2240: SwTimersExecute();
  3941                           
  3942                           ;incstack = 0
  3943  00927A  ECC4  F054         	call	_SwTimersExecute	;wreg free
  3944                           
  3945                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  3946  00927E  EC99  F045         	call	_INTERRUPT_GetDioStatus	;wreg free
  3947  009282  0100               	movlb	0	; () banked
  3948  009284  6FF6               	movwf	_localDioStatus& (0+255),b
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  3952  009286  B1F6               	btfsc	_localDioStatus& (0+255),0,b
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;lorawan.c: 2246: {;lorawan.c: 2247: RADIO_DIO0();
  3956  009288  EC4B  F052         	call	_RADIO_DIO0	;wreg free
  3957                           
  3958                           ;lorawan.c: 2248: };lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  3959  00928C  0100               	movlb	0	; () banked
  3960  00928E  B3F6               	btfsc	_localDioStatus& (0+255),1,b
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;lorawan.c: 2250: {;lorawan.c: 2251: RADIO_DIO1();
  3964  009290  ECB9  F04A         	call	_RADIO_DIO1	;wreg free
  3965                           
  3966                           ;lorawan.c: 2252: };lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  3967  009294  0100               	movlb	0	; () banked
  3968  009296  B5F6               	btfsc	_localDioStatus& (0+255),2,b
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;lorawan.c: 2254: {;lorawan.c: 2255: RADIO_DIO2();
  3972  009298  EC6C  F04A         	call	_RADIO_DIO2	;wreg free
  3973                           
  3974                           ;lorawan.c: 2256: };lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  3975  00929C  0100               	movlb	0	; () banked
  3976  00929E  B7F6               	btfsc	_localDioStatus& (0+255),3,b
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;lorawan.c: 2258: {;lorawan.c: 2259: RADIO_DIO3();
  3980  0092A0  EC11  F046         	call	_RADIO_DIO3	;wreg free
  3981                           
  3982                           ;lorawan.c: 2260: };lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  3983  0092A4  0100               	movlb	0	; () banked
  3984  0092A6  B9F6               	btfsc	_localDioStatus& (0+255),4,b
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;lorawan.c: 2262: {;lorawan.c: 2263: RADIO_DIO4();
  3988  0092A8  EC1E  F046         	call	_RADIO_DIO4	;wreg free
  3989                           
  3990                           ;lorawan.c: 2264: };lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  3991  0092AC  0100               	movlb	0	; () banked
  3992  0092AE  ABF6               	btfss	_localDioStatus& (0+255),5,b
  3993  0092B0  0012               	return	
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;lorawan.c: 2266: {;lorawan.c: 2267: RADIO_DIO5();
  3997  0092B2  EC2B  F046         	call	_RADIO_DIO5	;wreg free
  3998  0092B6  0012               	return		;funcret
  3999  0092B8                     __end_of_LORAWAN_Mainloop:
  4000                           	opt callstack 0
  4001                           
  4002 ;; *************** function _SwTimersExecute *****************
  4003 ;; Defined at:
  4004 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  i               1  134[BANK0 ] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;Total ram usage:        5 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:   10
  4025 ;; This function calls:
  4026 ;;		Absolute function
  4027 ;;		_AckRetransmissionCallback
  4028 ;;		_AutomaticReplyCallback
  4029 ;;		_DutyCycleCallback
  4030 ;;		_LORAWAN_LinkCheckCallback
  4031 ;;		_LORAWAN_ReceiveWindow1Callback
  4032 ;;		_LORAWAN_ReceiveWindow2Callback
  4033 ;;		_RADIO_RxFSKTimeout
  4034 ;;		_RADIO_WatchdogTimeout
  4035 ;;		_UnconfirmedTransmissionCallback
  4036 ;;		_UpdateJoinSuccessState
  4037 ;; This function is called by:
  4038 ;;		_LORAWAN_Mainloop
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text27
  4043  00A988                     __ptext27:
  4044                           	opt callstack 0
  4045  00A988                     _SwTimersExecute:
  4046                           	opt callstack 19
  4047                           
  4048                           ;sw_timer.c: 262: uint8_t i;;sw_timer.c: 264: (INTCONbits.GIE = 0);
  4049                           
  4050                           ;incstack = 0
  4051  00A988  9EF2               	bcf	4082,7,c	;volatile
  4052                           
  4053                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  4054  00A98A  0E00               	movlw	0
  4055  00A98C  0100               	movlb	0	; () banked
  4056  00A98E  6FE6               	movwf	SwTimersExecute@i& (0+255),b
  4057  00A990  D053               	goto	l15168
  4058  00A992                     l15154:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;sw_timer.c: 266: {;sw_timer.c: 269: if (swTimers[i].running == 1)
  4062  00A992  51E6               	movf	SwTimersExecute@i& (0+255),w,b
  4063  00A994  0D08               	mullw	8
  4064  00A996  0E04               	movlw	low (_swTimers+4)
  4065  00A998  24F3               	addwf	prodl,w,c
  4066  00A99A  6ED9               	movwf	fsr2l,c
  4067  00A99C  0E04               	movlw	high (_swTimers+4)
  4068  00A99E  20F4               	addwfc	prodh,w,c
  4069  00A9A0  6EDA               	movwf	fsr2h,c
  4070  00A9A2  04DE               	decf	postinc2,w,c
  4071  00A9A4  A4D8               	btfss	status,2,c
  4072  00A9A6  D046               	goto	l15166
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;sw_timer.c: 270: {;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  4076  00A9A8  51E6               	movf	SwTimersExecute@i& (0+255),w,b
  4077  00A9AA  0D08               	mullw	8
  4078  00A9AC  0E00               	movlw	low _swTimers
  4079  00A9AE  24F3               	addwf	prodl,w,c
  4080  00A9B0  6ED9               	movwf	fsr2l,c
  4081  00A9B2  0E04               	movlw	high _swTimers
  4082  00A9B4  20F4               	addwfc	prodh,w,c
  4083  00A9B6  6EDA               	movwf	fsr2h,c
  4084  00A9B8  50DE               	movf	postinc2,w,c
  4085  00A9BA  10DE               	iorwf	postinc2,w,c
  4086  00A9BC  10DE               	iorwf	postinc2,w,c
  4087  00A9BE  10DE               	iorwf	postinc2,w,c
  4088  00A9C0  A4D8               	btfss	status,2,c
  4089  00A9C2  D038               	goto	l15166
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;sw_timer.c: 272: {;sw_timer.c: 273: swTimers[i].running = 0;
  4093  00A9C4  51E6               	movf	SwTimersExecute@i& (0+255),w,b
  4094  00A9C6  0D08               	mullw	8
  4095  00A9C8  0E04               	movlw	low (_swTimers+4)
  4096  00A9CA  24F3               	addwf	prodl,w,c
  4097  00A9CC  6ED9               	movwf	fsr2l,c
  4098  00A9CE  0E04               	movlw	high (_swTimers+4)
  4099  00A9D0  20F4               	addwfc	prodh,w,c
  4100  00A9D2  6EDA               	movwf	fsr2h,c
  4101  00A9D4  0E00               	movlw	0
  4102  00A9D6  6EDF               	movwf	indf2,c
  4103                           
  4104                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  4105  00A9D8  51E6               	movf	SwTimersExecute@i& (0+255),w,b
  4106  00A9DA  0D08               	mullw	8
  4107  00A9DC  0E06               	movlw	low (_swTimers+6)
  4108  00A9DE  24F3               	addwf	prodl,w,c
  4109  00A9E0  6ED9               	movwf	fsr2l,c
  4110  00A9E2  0E04               	movlw	high (_swTimers+6)
  4111  00A9E4  20F4               	addwfc	prodh,w,c
  4112  00A9E6  6EDA               	movwf	fsr2h,c
  4113  00A9E8  50DE               	movf	postinc2,w,c
  4114  00A9EA  10DE               	iorwf	postinc2,w,c
  4115  00A9EC  B4D8               	btfsc	status,2,c
  4116  00A9EE  D022               	goto	l15166
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;sw_timer.c: 275: {;sw_timer.c: 276: (INTCONbits.GIE = 1);
  4120  00A9F0  8EF2               	bsf	4082,7,c	;volatile
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  4124  00A9F2  51E6               	movf	SwTimersExecute@i& (0+255),w,b
  4125  00A9F4  0D08               	mullw	8
  4126  00A9F6  0E06               	movlw	low (_swTimers+6)
  4127  00A9F8  24F3               	addwf	prodl,w,c
  4128  00A9FA  6ED9               	movwf	fsr2l,c
  4129  00A9FC  0E04               	movlw	high (_swTimers+6)
  4130  00A9FE  20F4               	addwfc	prodh,w,c
  4131  00AA00  6EDA               	movwf	fsr2h,c
  4132  00AA02  CFDE F0E2          	movff	postinc2,??_SwTimersExecute
  4133  00AA06  CFDD F0E3          	movff	postdec2,??_SwTimersExecute+1
  4134  00AA0A  D801               	call	u17548
  4135  00AA0C  D012               	goto	u17549
  4136  00AA0E                     u17548:
  4137  00AA0E  0005               	push	
  4138  00AA10  6EFA               	movwf	pclath,c
  4139  00AA12  51E2               	movf	??_SwTimersExecute& (0+255),w,b
  4140  00AA14  6EFD               	movwf	tosl,c
  4141  00AA16  51E3               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  4142  00AA18  6EFE               	movwf	tosh,c
  4143  00AA1A  6AFF               	clrf	tosu,c
  4144  00AA1C  50FA               	movf	pclath,w,c
  4145  00AA1E  51E6               	movf	SwTimersExecute@i& (0+255),w,b
  4146  00AA20  0D08               	mullw	8
  4147  00AA22  0E05               	movlw	low (_swTimers+5)
  4148  00AA24  24F3               	addwf	prodl,w,c
  4149  00AA26  6ED9               	movwf	fsr2l,c
  4150  00AA28  0E04               	movlw	high (_swTimers+5)
  4151  00AA2A  20F4               	addwfc	prodh,w,c
  4152  00AA2C  6EDA               	movwf	fsr2h,c
  4153  00AA2E  50DF               	movf	indf2,w,c
  4154  00AA30  0012               	return		;indir
  4155  00AA32                     u17549:
  4156                           
  4157                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  4158  00AA32  9EF2               	bcf	4082,7,c	;volatile
  4159  00AA34                     l15166:
  4160  00AA34  0100               	movlb	0	; () banked
  4161  00AA36  2BE6               	incf	SwTimersExecute@i& (0+255),f,b
  4162  00AA38                     l15168:
  4163                           
  4164                           ; BSR set to: 0
  4165  00AA38  51F7               	movf	_allocatedTimers& (0+255),w,b	;volatile
  4166  00AA3A  5DE6               	subwf	SwTimersExecute@i& (0+255),w,b
  4167  00AA3C  A0D8               	btfss	status,0,c
  4168  00AA3E  D7A9               	goto	l15154
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;sw_timer.c: 279: };sw_timer.c: 280: };sw_timer.c: 281: };sw_timer.c: 282: };sw_timer.c:
      +                           283: (INTCONbits.GIE = 1);
  4172  00AA40  8EF2               	bsf	4082,7,c	;volatile
  4173                           
  4174                           ; BSR set to: 0
  4175  00AA42  0012               	return		;funcret
  4176  00AA44                     __end_of_SwTimersExecute:
  4177                           	opt callstack 0
  4178                           
  4179 ;; *************** function _DutyCycleCallback *****************
  4180 ;; Defined at:
  4181 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  param           1    wreg     unsigned char 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  param           1    0[COMRAM] unsigned char 
  4186 ;;  minim           4   63[COMRAM] unsigned long 
  4187 ;;  i               1   67[COMRAM] unsigned char 
  4188 ;;  found           1   62[COMRAM] unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4199 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;Total ram usage:       18 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    4
  4205 ;; This function calls:
  4206 ;;		_SwTimerSetTimeout
  4207 ;;		_SwTimerStart
  4208 ;;		___lldiv
  4209 ;; This function is called by:
  4210 ;;		_SetCallbackSoftwareTimers
  4211 ;;		_SwTimersExecute
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text28
  4216  00D3FE                     __ptext28:
  4217                           	opt callstack 0
  4218  00D3FE                     _DutyCycleCallback:
  4219                           	opt callstack 24
  4220                           
  4221                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;incstack = 0
  4225  00D3FE  6840               	setf	DutyCycleCallback@minim,c
  4226  00D400  6841               	setf	DutyCycleCallback@minim+1,c
  4227  00D402  6842               	setf	DutyCycleCallback@minim+2,c
  4228  00D404  6843               	setf	DutyCycleCallback@minim+3,c
  4229                           
  4230                           ;lorawan_eu.c: 1224: bool found = 0;
  4231  00D406  0E00               	movlw	0
  4232  00D408  6E3F               	movwf	DutyCycleCallback@found,c
  4233                           
  4234                           ;lorawan_eu.c: 1225: uint8_t i;;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  4235  00D40A  0E00               	movlw	0
  4236  00D40C  6E44               	movwf	DutyCycleCallback@i,c
  4237  00D40E                     l14984:
  4238                           
  4239                           ;lorawan_eu.c: 1228: {;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i
      +                          ].channelTimer != 0 ))
  4240  00D40E  5044               	movf	DutyCycleCallback@i,w,c
  4241  00D410  0D0E               	mullw	14
  4242  00D412  0E04               	movlw	low (_Channels+4)
  4243  00D414  24F3               	addwf	prodl,w,c
  4244  00D416  6ED9               	movwf	fsr2l,c
  4245  00D418  0E03               	movlw	high (_Channels+4)
  4246  00D41A  20F4               	addwfc	prodh,w,c
  4247  00D41C  6EDA               	movwf	fsr2h,c
  4248  00D41E  04DE               	decf	postinc2,w,c
  4249  00D420  A4D8               	btfss	status,2,c
  4250  00D422  D08C               	goto	l15000
  4251  00D424  5044               	movf	DutyCycleCallback@i,w,c
  4252  00D426  0D0E               	mullw	14
  4253  00D428  0E08               	movlw	low (_Channels+8)
  4254  00D42A  24F3               	addwf	prodl,w,c
  4255  00D42C  6ED9               	movwf	fsr2l,c
  4256  00D42E  0E03               	movlw	high (_Channels+8)
  4257  00D430  20F4               	addwfc	prodh,w,c
  4258  00D432  6EDA               	movwf	fsr2h,c
  4259  00D434  50DE               	movf	postinc2,w,c
  4260  00D436  10DE               	iorwf	postinc2,w,c
  4261  00D438  10DE               	iorwf	postinc2,w,c
  4262  00D43A  10DE               	iorwf	postinc2,w,c
  4263  00D43C  B4D8               	btfsc	status,2,c
  4264  00D43E  D07E               	goto	l15000
  4265                           
  4266                           ;lorawan_eu.c: 1231: {;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTime
      +                          rValue )
  4267  00D440  5044               	movf	DutyCycleCallback@i,w,c
  4268  00D442  0D0E               	mullw	14
  4269  00D444  0E08               	movlw	low (_Channels+8)
  4270  00D446  24F3               	addwf	prodl,w,c
  4271  00D448  6ED9               	movwf	fsr2l,c
  4272  00D44A  0E03               	movlw	high (_Channels+8)
  4273  00D44C  20F4               	addwfc	prodh,w,c
  4274  00D44E  6EDA               	movwf	fsr2h,c
  4275  00D450  50DE               	movf	postinc2,w,c
  4276  00D452  0102               	movlb	2	; () banked
  4277  00D454  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  4278  00D456  50DE               	movf	postinc2,w,c
  4279  00D458  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  4280  00D45A  50DE               	movf	postinc2,w,c
  4281  00D45C  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  4282  00D45E  50DE               	movf	postinc2,w,c
  4283  00D460  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  4284  00D462  B0D8               	btfsc	status,0,c
  4285  00D464  D02D               	goto	l14992
  4286                           
  4287                           ; BSR set to: 2
  4288                           ;lorawan_eu.c: 1233: {;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channe
      +                          lTimer - loRa.lastTimerValue;
  4289  00D466  5044               	movf	DutyCycleCallback@i,w,c
  4290  00D468  0D0E               	mullw	14
  4291  00D46A  0E08               	movlw	low (_Channels+8)
  4292  00D46C  24F3               	addwf	prodl,w,c
  4293  00D46E  6ED9               	movwf	fsr2l,c
  4294  00D470  0E03               	movlw	high (_Channels+8)
  4295  00D472  20F4               	addwfc	prodh,w,c
  4296  00D474  6EDA               	movwf	fsr2h,c
  4297  00D476  CFDE F033          	movff	postinc2,??_DutyCycleCallback
  4298  00D47A  CFDE F034          	movff	postinc2,??_DutyCycleCallback+1
  4299  00D47E  CFDE F035          	movff	postinc2,??_DutyCycleCallback+2
  4300  00D482  CFDE F036          	movff	postinc2,??_DutyCycleCallback+3
  4301  00D486  51C8               	movf	(_loRa+200)& (0+255),w,b
  4302  00D488  5C33               	subwf	??_DutyCycleCallback,w,c
  4303  00D48A  6E37               	movwf	(??_DutyCycleCallback+4)& (0+255),c
  4304  00D48C  51C9               	movf	(_loRa+201)& (0+255),w,b
  4305  00D48E  5834               	subwfb	??_DutyCycleCallback+1,w,c
  4306  00D490  6E38               	movwf	(??_DutyCycleCallback+5)& (0+255),c
  4307  00D492  51CA               	movf	(_loRa+202)& (0+255),w,b
  4308  00D494  5835               	subwfb	??_DutyCycleCallback+2,w,c
  4309  00D496  6E39               	movwf	(??_DutyCycleCallback+6)& (0+255),c
  4310  00D498  51CB               	movf	(_loRa+203)& (0+255),w,b
  4311  00D49A  5836               	subwfb	??_DutyCycleCallback+3,w,c
  4312  00D49C  6E3A               	movwf	(??_DutyCycleCallback+7)& (0+255),c
  4313  00D49E  5044               	movf	DutyCycleCallback@i,w,c
  4314  00D4A0  0D0E               	mullw	14
  4315  00D4A2  0E08               	movlw	low (_Channels+8)
  4316  00D4A4  24F3               	addwf	prodl,w,c
  4317  00D4A6  6ED9               	movwf	fsr2l,c
  4318  00D4A8  0E03               	movlw	high (_Channels+8)
  4319  00D4AA  20F4               	addwfc	prodh,w,c
  4320  00D4AC  6EDA               	movwf	fsr2h,c
  4321  00D4AE  C037  FFDE         	movff	??_DutyCycleCallback+4,postinc2
  4322  00D4B2  C038  FFDE         	movff	??_DutyCycleCallback+5,postinc2
  4323  00D4B6  C039  FFDE         	movff	??_DutyCycleCallback+6,postinc2
  4324  00D4BA  C03A  FFDE         	movff	??_DutyCycleCallback+7,postinc2
  4325                           
  4326                           ;lorawan_eu.c: 1235: }
  4327  00D4BE  D00C               	goto	l1303
  4328  00D4C0                     l14992:
  4329                           
  4330                           ; BSR set to: 2
  4331                           ;lorawan_eu.c: 1236: else;lorawan_eu.c: 1237: {;lorawan_eu.c: 1238: Channels[i].channelT
      +                          imer = 0;
  4332  00D4C0  5044               	movf	DutyCycleCallback@i,w,c
  4333  00D4C2  0D0E               	mullw	14
  4334  00D4C4  0E08               	movlw	low (_Channels+8)
  4335  00D4C6  24F3               	addwf	prodl,w,c
  4336  00D4C8  6ED9               	movwf	fsr2l,c
  4337  00D4CA  0E03               	movlw	high (_Channels+8)
  4338  00D4CC  20F4               	addwfc	prodh,w,c
  4339  00D4CE  6EDA               	movwf	fsr2h,c
  4340  00D4D0  6ADE               	clrf	postinc2,c
  4341  00D4D2  6ADE               	clrf	postinc2,c
  4342  00D4D4  6ADE               	clrf	postinc2,c
  4343  00D4D6  6ADD               	clrf	postdec2,c
  4344  00D4D8                     l1303:
  4345                           
  4346                           ; BSR set to: 2
  4347                           ;lorawan_eu.c: 1239: };lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (
      +                          Channels[i].channelTimer != 0) )
  4348  00D4D8  5044               	movf	DutyCycleCallback@i,w,c
  4349  00D4DA  0D0E               	mullw	14
  4350  00D4DC  0E08               	movlw	low (_Channels+8)
  4351  00D4DE  24F3               	addwf	prodl,w,c
  4352  00D4E0  6ED9               	movwf	fsr2l,c
  4353  00D4E2  0E03               	movlw	high (_Channels+8)
  4354  00D4E4  20F4               	addwfc	prodh,w,c
  4355  00D4E6  6EDA               	movwf	fsr2h,c
  4356  00D4E8  50DE               	movf	postinc2,w,c
  4357  00D4EA  5C40               	subwf	DutyCycleCallback@minim,w,c
  4358  00D4EC  50DE               	movf	postinc2,w,c
  4359  00D4EE  5841               	subwfb	DutyCycleCallback@minim+1,w,c
  4360  00D4F0  50DE               	movf	postinc2,w,c
  4361  00D4F2  5842               	subwfb	DutyCycleCallback@minim+2,w,c
  4362  00D4F4  50DE               	movf	postinc2,w,c
  4363  00D4F6  5843               	subwfb	DutyCycleCallback@minim+3,w,c
  4364  00D4F8  A0D8               	btfss	status,0,c
  4365  00D4FA  D020               	goto	l15000
  4366                           
  4367                           ; BSR set to: 2
  4368  00D4FC  5044               	movf	DutyCycleCallback@i,w,c
  4369  00D4FE  0D0E               	mullw	14
  4370  00D500  0E08               	movlw	low (_Channels+8)
  4371  00D502  24F3               	addwf	prodl,w,c
  4372  00D504  6ED9               	movwf	fsr2l,c
  4373  00D506  0E03               	movlw	high (_Channels+8)
  4374  00D508  20F4               	addwfc	prodh,w,c
  4375  00D50A  6EDA               	movwf	fsr2h,c
  4376  00D50C  50DE               	movf	postinc2,w,c
  4377  00D50E  10DE               	iorwf	postinc2,w,c
  4378  00D510  10DE               	iorwf	postinc2,w,c
  4379  00D512  10DE               	iorwf	postinc2,w,c
  4380  00D514  B4D8               	btfsc	status,2,c
  4381  00D516  D012               	goto	l15000
  4382                           
  4383                           ; BSR set to: 2
  4384                           ;lorawan_eu.c: 1241: {;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  4385  00D518  5044               	movf	DutyCycleCallback@i,w,c
  4386  00D51A  0D0E               	mullw	14
  4387  00D51C  0E08               	movlw	low (_Channels+8)
  4388  00D51E  24F3               	addwf	prodl,w,c
  4389  00D520  6ED9               	movwf	fsr2l,c
  4390  00D522  0E03               	movlw	high (_Channels+8)
  4391  00D524  20F4               	addwfc	prodh,w,c
  4392  00D526  6EDA               	movwf	fsr2h,c
  4393  00D528  CFDE F040          	movff	postinc2,DutyCycleCallback@minim
  4394  00D52C  CFDE F041          	movff	postinc2,DutyCycleCallback@minim+1
  4395  00D530  CFDE F042          	movff	postinc2,DutyCycleCallback@minim+2
  4396  00D534  CFDE F043          	movff	postinc2,DutyCycleCallback@minim+3
  4397                           
  4398                           ; BSR set to: 2
  4399                           ;lorawan_eu.c: 1243: found = 1;
  4400  00D538  0E01               	movlw	1
  4401  00D53A  6E3F               	movwf	DutyCycleCallback@found,c
  4402  00D53C                     l15000:
  4403  00D53C  2A44               	incf	DutyCycleCallback@i,f,c
  4404  00D53E  0E0F               	movlw	15
  4405  00D540  6444               	cpfsgt	DutyCycleCallback@i,c
  4406  00D542  D765               	goto	l14984
  4407                           
  4408                           ;lorawan_eu.c: 1244: };lorawan_eu.c: 1245: };lorawan_eu.c: 1246: };lorawan_eu.c: 1247: i
      +                          f ( found == 1 )
  4409  00D544  043F               	decf	DutyCycleCallback@found,w,c
  4410  00D546  A4D8               	btfss	status,2,c
  4411  00D548  0012               	return	
  4412                           
  4413                           ;lorawan_eu.c: 1248: {;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  4414  00D54A  C040  F2C8         	movff	DutyCycleCallback@minim,_loRa+200
  4415  00D54E  C041  F2C9         	movff	DutyCycleCallback@minim+1,_loRa+201
  4416  00D552  C042  F2CA         	movff	DutyCycleCallback@minim+2,_loRa+202
  4417  00D556  C043  F2CB         	movff	DutyCycleCallback@minim+3,_loRa+203
  4418                           
  4419                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  4420  00D55A  5043               	movf	DutyCycleCallback@minim+3,w,c
  4421  00D55C  E107               	bnz	u17170
  4422  00D55E  2840               	incf	DutyCycleCallback@minim,w,c
  4423  00D560  0EFF               	movlw	255
  4424  00D562  5841               	subwfb	DutyCycleCallback@minim+1,w,c
  4425  00D564  0E0F               	movlw	15
  4426  00D566  5842               	subwfb	DutyCycleCallback@minim+2,w,c
  4427  00D568  A0D8               	btfss	status,0,c
  4428  00D56A  D01B               	goto	l15012
  4429  00D56C                     u17170:
  4430  00D56C  C040  F001         	movff	DutyCycleCallback@minim,___lldiv@dividend
  4431  00D570  C041  F002         	movff	DutyCycleCallback@minim+1,___lldiv@dividend+1
  4432  00D574  C042  F003         	movff	DutyCycleCallback@minim+2,___lldiv@dividend+2
  4433  00D578  C043  F004         	movff	DutyCycleCallback@minim+3,___lldiv@dividend+3
  4434  00D57C  0E7D               	movlw	125
  4435  00D57E  6E05               	movwf	___lldiv@divisor,c
  4436  00D580  0E00               	movlw	0
  4437  00D582  6E06               	movwf	___lldiv@divisor+1,c
  4438  00D584  0E00               	movlw	0
  4439  00D586  6E07               	movwf	___lldiv@divisor+2,c
  4440  00D588  0E00               	movlw	0
  4441  00D58A  6E08               	movwf	___lldiv@divisor+3,c
  4442  00D58C  ECFE  F050         	call	___lldiv
  4443  00D590  0E0C               	movlw	12
  4444  00D592                     u17185:
  4445  00D592  90D8               	bcf	status,0,c
  4446  00D594  3601               	rlcf	?___lldiv,f,c
  4447  00D596  3602               	rlcf	?___lldiv+1,f,c
  4448  00D598  3603               	rlcf	?___lldiv+2,f,c
  4449  00D59A  3604               	rlcf	?___lldiv+3,f,c
  4450  00D59C  2EE8               	decfsz	wreg,f,c
  4451  00D59E  D7F9               	goto	u17185
  4452  00D5A0  D022               	goto	L1
  4453  00D5A2                     l15012:
  4454  00D5A2  C040  F033         	movff	DutyCycleCallback@minim,??_DutyCycleCallback
  4455  00D5A6  C041  F034         	movff	DutyCycleCallback@minim+1,??_DutyCycleCallback+1
  4456  00D5AA  C042  F035         	movff	DutyCycleCallback@minim+2,??_DutyCycleCallback+2
  4457  00D5AE  C043  F036         	movff	DutyCycleCallback@minim+3,??_DutyCycleCallback+3
  4458  00D5B2  0E0C               	movlw	12
  4459  00D5B4                     u17195:
  4460  00D5B4  90D8               	bcf	status,0,c
  4461  00D5B6  3633               	rlcf	??_DutyCycleCallback,f,c
  4462  00D5B8  3634               	rlcf	??_DutyCycleCallback+1,f,c
  4463  00D5BA  3635               	rlcf	??_DutyCycleCallback+2,f,c
  4464  00D5BC  3636               	rlcf	??_DutyCycleCallback+3,f,c
  4465  00D5BE  2EE8               	decfsz	wreg,f,c
  4466  00D5C0  D7F9               	goto	u17195
  4467  00D5C2  C033  F001         	movff	??_DutyCycleCallback,___lldiv@dividend
  4468  00D5C6  C034  F002         	movff	??_DutyCycleCallback+1,___lldiv@dividend+1
  4469  00D5CA  C035  F003         	movff	??_DutyCycleCallback+2,___lldiv@dividend+2
  4470  00D5CE  C036  F004         	movff	??_DutyCycleCallback+3,___lldiv@dividend+3
  4471  00D5D2  0E7D               	movlw	125
  4472  00D5D4  6E05               	movwf	___lldiv@divisor,c
  4473  00D5D6  0E00               	movlw	0
  4474  00D5D8  6E06               	movwf	___lldiv@divisor+1,c
  4475  00D5DA  0E00               	movlw	0
  4476  00D5DC  6E07               	movwf	___lldiv@divisor+2,c
  4477  00D5DE  0E00               	movlw	0
  4478  00D5E0  6E08               	movwf	___lldiv@divisor+3,c
  4479  00D5E2  ECFE  F050         	call	___lldiv	;wreg free
  4480  00D5E6                     L1:
  4481  00D5E6  C001  F03B         	movff	?___lldiv,_DutyCycleCallback$1857
  4482  00D5EA  C002  F03C         	movff	?___lldiv+1,_DutyCycleCallback$1857+1
  4483  00D5EE  C003  F03D         	movff	?___lldiv+2,_DutyCycleCallback$1857+2
  4484  00D5F2  C004  F03E         	movff	?___lldiv+3,_DutyCycleCallback$1857+3
  4485  00D5F6  C03B  F00E         	movff	_DutyCycleCallback$1857,SwTimerSetTimeout@timeout
  4486  00D5FA  C03C  F00F         	movff	_DutyCycleCallback$1857+1,SwTimerSetTimeout@timeout+1
  4487  00D5FE  C03D  F010         	movff	_DutyCycleCallback$1857+2,SwTimerSetTimeout@timeout+2
  4488  00D602  C03E  F011         	movff	_DutyCycleCallback$1857+3,SwTimerSetTimeout@timeout+3
  4489  00D606  0102               	movlb	2	; () banked
  4490  00D608  51E9               	movf	(_loRa+233)& (0+255),w,b
  4491  00D60A  EC5C  F049         	call	_SwTimerSetTimeout
  4492                           
  4493                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  4494  00D60E  0102               	movlb	2	; () banked
  4495  00D610  51E9               	movf	(_loRa+233)& (0+255),w,b
  4496  00D612  ECC3  F051         	call	_SwTimerStart
  4497  00D616  0012               	return		;funcret
  4498  00D618                     __end_of_DutyCycleCallback:
  4499                           	opt callstack 0
  4500                           
  4501 ;; *************** function _UpdateJoinSuccessState *****************
  4502 ;; Defined at:
  4503 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;  param           1    wreg     unsigned char 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  param           1    0[COMRAM] unsigned char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;Total ram usage:        8 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:    4
  4524 ;; This function calls:
  4525 ;;		_RxJoinResponse
  4526 ;;		_SwTimerSetTimeout
  4527 ;;		_SwTimerStart
  4528 ;;		___lldiv
  4529 ;; This function is called by:
  4530 ;;		_SetCallbackSoftwareTimers
  4531 ;;		_LORAWAN_RxDone
  4532 ;;		_SwTimersExecute
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text29
  4537  00B4A2                     __ptext29:
  4538                           	opt callstack 0
  4539  00B4A2                     _UpdateJoinSuccessState:
  4540                           	opt callstack 24
  4541                           
  4542                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  4543                           
  4544                           ;incstack = 0
  4545  00B4A2  0102               	movlb	2	; () banked
  4546  00B4A4  9500               	bcf	_loRa& (0+255),2,b
  4547                           
  4548                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  4549  00B4A6  8902               	bsf	(_loRa+2)& (0+255),4,b
  4550                           
  4551                           ; BSR set to: 2
  4552                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  4553  00B4A8  0EF0               	movlw	-16
  4554  00B4AA  1702               	andwf	(_loRa+2)& (0+255),f,b
  4555                           
  4556                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  4557  00B4AC  0E00               	movlw	0
  4558  00B4AE  6FD1               	movwf	(_loRa+209)& (0+255),b
  4559  00B4B0  0E00               	movlw	0
  4560  00B4B2  6FD0               	movwf	(_loRa+208)& (0+255),b
  4561                           
  4562                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  4563  00B4B4  0E00               	movlw	0
  4564  00B4B6  6FEE               	movwf	(_loRa+238)& (0+255),b
  4565                           
  4566                           ; BSR set to: 2
  4567                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  4568  00B4B8  A503               	btfss	(_loRa+3)& (0+255),2,b
  4569  00B4BA  D05E               	goto	l13992
  4570                           
  4571                           ; BSR set to: 2
  4572                           ;lorawan.c: 1052: {;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.per
      +                          iodForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 12
      +                          5UL ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  4573  00B4BC  51CF               	movf	(_loRa+207)& (0+255),w,b
  4574  00B4BE  E107               	bnz	u15340
  4575  00B4C0  29CC               	incf	(_loRa+204)& (0+255),w,b
  4576  00B4C2  0EFF               	movlw	255
  4577  00B4C4  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  4578  00B4C6  0E0F               	movlw	15
  4579  00B4C8  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  4580  00B4CA  A0D8               	btfss	status,0,c
  4581  00B4CC  D01B               	goto	l13986
  4582  00B4CE                     u15340:
  4583                           
  4584                           ; BSR set to: 2
  4585  00B4CE  C2CC  F001         	movff	_loRa+204,___lldiv@dividend
  4586  00B4D2  C2CD  F002         	movff	_loRa+205,___lldiv@dividend+1
  4587  00B4D6  C2CE  F003         	movff	_loRa+206,___lldiv@dividend+2
  4588  00B4DA  C2CF  F004         	movff	_loRa+207,___lldiv@dividend+3
  4589  00B4DE  0E7D               	movlw	125
  4590  00B4E0  6E05               	movwf	___lldiv@divisor,c
  4591  00B4E2  0E00               	movlw	0
  4592  00B4E4  6E06               	movwf	___lldiv@divisor+1,c
  4593  00B4E6  0E00               	movlw	0
  4594  00B4E8  6E07               	movwf	___lldiv@divisor+2,c
  4595  00B4EA  0E00               	movlw	0
  4596  00B4EC  6E08               	movwf	___lldiv@divisor+3,c
  4597  00B4EE  ECFE  F050         	call	___lldiv	;wreg free
  4598  00B4F2  0E0C               	movlw	12
  4599  00B4F4                     u15355:
  4600  00B4F4  90D8               	bcf	status,0,c
  4601  00B4F6  3601               	rlcf	?___lldiv,f,c
  4602  00B4F8  3602               	rlcf	?___lldiv+1,f,c
  4603  00B4FA  3603               	rlcf	?___lldiv+2,f,c
  4604  00B4FC  3604               	rlcf	?___lldiv+3,f,c
  4605  00B4FE  2EE8               	decfsz	wreg,f,c
  4606  00B500  D7F9               	goto	u15355
  4607  00B502  D022               	goto	L2
  4608  00B504                     l13986:
  4609                           
  4610                           ; BSR set to: 2
  4611  00B504  C2CC  F033         	movff	_loRa+204,??_UpdateJoinSuccessState
  4612  00B508  C2CD  F034         	movff	_loRa+205,??_UpdateJoinSuccessState+1
  4613  00B50C  C2CE  F035         	movff	_loRa+206,??_UpdateJoinSuccessState+2
  4614  00B510  C2CF  F036         	movff	_loRa+207,??_UpdateJoinSuccessState+3
  4615  00B514  0E0C               	movlw	12
  4616  00B516                     u15365:
  4617  00B516  90D8               	bcf	status,0,c
  4618  00B518  3633               	rlcf	??_UpdateJoinSuccessState,f,c
  4619  00B51A  3634               	rlcf	??_UpdateJoinSuccessState+1,f,c
  4620  00B51C  3635               	rlcf	??_UpdateJoinSuccessState+2,f,c
  4621  00B51E  3636               	rlcf	??_UpdateJoinSuccessState+3,f,c
  4622  00B520  2EE8               	decfsz	wreg,f,c
  4623  00B522  D7F9               	goto	u15365
  4624  00B524  C033  F001         	movff	??_UpdateJoinSuccessState,___lldiv@dividend
  4625  00B528  C034  F002         	movff	??_UpdateJoinSuccessState+1,___lldiv@dividend+1
  4626  00B52C  C035  F003         	movff	??_UpdateJoinSuccessState+2,___lldiv@dividend+2
  4627  00B530  C036  F004         	movff	??_UpdateJoinSuccessState+3,___lldiv@dividend+3
  4628  00B534  0E7D               	movlw	125
  4629  00B536  6E05               	movwf	___lldiv@divisor,c
  4630  00B538  0E00               	movlw	0
  4631  00B53A  6E06               	movwf	___lldiv@divisor+1,c
  4632  00B53C  0E00               	movlw	0
  4633  00B53E  6E07               	movwf	___lldiv@divisor+2,c
  4634  00B540  0E00               	movlw	0
  4635  00B542  6E08               	movwf	___lldiv@divisor+3,c
  4636  00B544  ECFE  F050         	call	___lldiv	;wreg free
  4637  00B548                     L2:
  4638  00B548  C001  F037         	movff	?___lldiv,_UpdateJoinSuccessState$2526
  4639  00B54C  C002  F038         	movff	?___lldiv+1,_UpdateJoinSuccessState$2526+1
  4640  00B550  C003  F039         	movff	?___lldiv+2,_UpdateJoinSuccessState$2526+2
  4641  00B554  C004  F03A         	movff	?___lldiv+3,_UpdateJoinSuccessState$2526+3
  4642  00B558  C037  F00E         	movff	_UpdateJoinSuccessState$2526,SwTimerSetTimeout@timeout
  4643  00B55C  C038  F00F         	movff	_UpdateJoinSuccessState$2526+1,SwTimerSetTimeout@timeout+1
  4644  00B560  C039  F010         	movff	_UpdateJoinSuccessState$2526+2,SwTimerSetTimeout@timeout+2
  4645  00B564  C03A  F011         	movff	_UpdateJoinSuccessState$2526+3,SwTimerSetTimeout@timeout+3
  4646  00B568  0102               	movlb	2	; () banked
  4647  00B56A  51E7               	movf	(_loRa+231)& (0+255),w,b
  4648  00B56C  EC5C  F049         	call	_SwTimerSetTimeout
  4649                           
  4650                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  4651  00B570  0102               	movlb	2	; () banked
  4652  00B572  51E7               	movf	(_loRa+231)& (0+255),w,b
  4653  00B574  ECC3  F051         	call	_SwTimerStart
  4654  00B578                     l13992:
  4655                           
  4656                           ;lorawan.c: 1055: };lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  4657  00B578  0100               	movlb	0	; () banked
  4658  00B57A  51F2               	movf	(_rxPayload+2)& (0+255),w,b
  4659  00B57C  11F3               	iorwf	(_rxPayload+3)& (0+255),w,b
  4660  00B57E  B4D8               	btfsc	status,2,c
  4661  00B580  0012               	return	
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;lorawan.c: 1058: {;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  4665  00B582  D801               	call	u15388
  4666  00B584  0012               	return	
  4667  00B586                     u15388:
  4668  00B586  0005               	push	
  4669  00B588  6EFA               	movwf	pclath,c
  4670  00B58A  51F2               	movf	(_rxPayload+2)& (0+255),w,b
  4671  00B58C  6EFD               	movwf	tosl,c
  4672  00B58E  51F3               	movf	(_rxPayload+3)& (0+255),w,b
  4673  00B590  6EFE               	movwf	tosh,c
  4674  00B592  6AFF               	clrf	tosu,c
  4675  00B594  50FA               	movf	pclath,w,c
  4676  00B596  0E01               	movlw	1
  4677  00B598  0012               	return		;indir
  4678  00B59A                     __end_of_UpdateJoinSuccessState:
  4679                           	opt callstack 0
  4680                           
  4681 ;; *************** function _AutomaticReplyCallback *****************
  4682 ;; Defined at:
  4683 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  param           1    wreg     unsigned char 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  param           1    0[COMRAM] unsigned char 
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      void 
  4690 ;; Registers used:
  4691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    7
  4704 ;; This function calls:
  4705 ;;		_LORAWAN_Send
  4706 ;; This function is called by:
  4707 ;;		_SetCallbackSoftwareTimers
  4708 ;;		_SwTimersExecute
  4709 ;; This function uses a non-reentrant model
  4710 ;;
  4711                           
  4712                           	psect	text30
  4713  008DE0                     __ptext30:
  4714                           	opt callstack 0
  4715  008DE0                     _AutomaticReplyCallback:
  4716                           	opt callstack 21
  4717                           
  4718                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  4719                           
  4720                           ;incstack = 0
  4721  008DE0  0EF0               	movlw	-16
  4722  008DE2  0102               	movlb	2	; () banked
  4723  008DE4  1702               	andwf	(_loRa+2)& (0+255),f,b
  4724                           
  4725                           ; BSR set to: 2
  4726                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  4727  008DE6  0E00               	movlw	0
  4728  008DE8  0100               	movlb	0	; () banked
  4729  008DEA  6FDB               	movwf	LORAWAN_Send@port& (0+255),b
  4730  008DEC  0E00               	movlw	0
  4731  008DEE  6FDC               	movwf	LORAWAN_Send@buffer& (0+255),b
  4732  008DF0  0E00               	movlw	0
  4733  008DF2  6FDD               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  4734  008DF4  0E00               	movlw	0
  4735  008DF6  6FDE               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  4736  008DF8  0E00               	movlw	0
  4737  008DFA  ECB2  F056         	call	_LORAWAN_Send
  4738                           
  4739                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  4740  008DFE  0102               	movlb	2	; () banked
  4741  008E00  9700               	bcf	_loRa& (0+255),3,b
  4742                           
  4743                           ; BSR set to: 2
  4744  008E02  0012               	return		;funcret
  4745  008E04                     __end_of_AutomaticReplyCallback:
  4746                           	opt callstack 0
  4747                           
  4748 ;; *************** function _AckRetransmissionCallback *****************
  4749 ;; Defined at:
  4750 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  param           1    wreg     unsigned char 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  param           1    0[COMRAM] unsigned char 
  4755 ;;  maximumPacke    1   94[COMRAM] unsigned char 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;Total ram usage:        5 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:    6
  4772 ;; This function calls:
  4773 ;;		_FindSmallestDataRate
  4774 ;;		_LORAWAN_GetMaxPayloadSize
  4775 ;;		_RADIO_Transmit
  4776 ;;		_ResetParametersForConfirmedTransmission
  4777 ;;		_RxData
  4778 ;;		_SelectChannelForTransmission
  4779 ;;		_UpdateRetransmissionAckTimeoutState
  4780 ;; This function is called by:
  4781 ;;		_SetCallbackSoftwareTimers
  4782 ;;		_SwTimersExecute
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text31
  4787  00B8A4                     __ptext31:
  4788                           	opt callstack 0
  4789  00B8A4                     _AckRetransmissionCallback:
  4790                           	opt callstack 22
  4791                           
  4792                           ;lorawan.c: 936: uint8_t maximumPacketSize;;lorawan.c: 938: if (loRa.macStatus.macPause 
      +                          == 0)
  4793                           
  4794                           ; BSR set to: 2
  4795                           ;incstack = 0
  4796  00B8A4  0102               	movlb	2	; () banked
  4797  00B8A6  B103               	btfsc	(_loRa+3)& (0+255),0,b
  4798  00B8A8  D080               	goto	l15120
  4799                           
  4800                           ; BSR set to: 2
  4801                           ;lorawan.c: 939: {;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.ma
      +                          xRepetitionsConfirmedUplink)
  4802  00B8AA  51D9               	movf	(_loRa+217)& (0+255),w,b
  4803  00B8AC  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  4804  00B8AE  A0D8               	btfss	status,0,c
  4805  00B8B0  D05C               	goto	l15110
  4806                           
  4807                           ; BSR set to: 2
  4808                           ;lorawan.c: 941: {;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13
      +                          ;
  4809  00B8B2  EC47  F04A         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  4810  00B8B6  0F0D               	addlw	13
  4811  00B8B8  6E5F               	movwf	AckRetransmissionCallback@maximumPacketSize,c
  4812                           
  4813                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  4814  00B8BA  505F               	movf	AckRetransmissionCallback@maximumPacketSize,w,c
  4815  00B8BC  6E5B               	movwf	??_AckRetransmissionCallback& (0+255),c
  4816  00B8BE  6A5C               	clrf	(??_AckRetransmissionCallback+1)& (0+255),c
  4817  00B8C0  0102               	movlb	2	; () banked
  4818  00B8C2  51D4               	movf	(_loRa+212)& (0+255),w,b
  4819  00B8C4  5C5B               	subwf	??_AckRetransmissionCallback,w,c
  4820  00B8C6  51D5               	movf	(_loRa+213)& (0+255),w,b
  4821  00B8C8  585C               	subwfb	??_AckRetransmissionCallback+1,w,c
  4822  00B8CA  A0D8               	btfss	status,0,c
  4823  00B8CC  D034               	goto	l15104
  4824                           
  4825                           ; BSR set to: 2
  4826                           ;lorawan.c: 946: {;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  4827  00B8CE  0E01               	movlw	1
  4828  00B8D0  ECE4  F04C         	call	_SelectChannelForTransmission
  4829  00B8D4  0900               	iorlw	0
  4830  00B8D6  A4D8               	btfss	status,2,c
  4831  00B8D8  D02B               	goto	l15100
  4832                           
  4833                           ;lorawan.c: 948: {;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLe
      +                          ngth) == OK)
  4834  00B8DA  0EB0               	movlw	low (_macBuffer+16)
  4835  00B8DC  6E4A               	movwf	RADIO_Transmit@buffer,c
  4836  00B8DE  0E04               	movlw	high (_macBuffer+16)
  4837  00B8E0  6E4B               	movwf	RADIO_Transmit@buffer+1,c
  4838  00B8E2  C2D4  F04C         	movff	_loRa+212,RADIO_Transmit@bufferLen
  4839  00B8E6  ECF7  F065         	call	_RADIO_Transmit	;wreg free
  4840  00B8EA  504A               	movf	?_RADIO_Transmit,w,c
  4841  00B8EC  104B               	iorwf	?_RADIO_Transmit+1,w,c
  4842  00B8EE  A4D8               	btfss	status,2,c
  4843  00B8F0  D01F               	goto	l15100
  4844                           
  4845                           ;lorawan.c: 951: {;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  4846  00B8F2  0102               	movlb	2	; () banked
  4847  00B8F4  5102               	movf	(_loRa+2)& (0+255),w,b
  4848  00B8F6  0BF0               	andlw	-16
  4849  00B8F8  0901               	iorlw	1
  4850  00B8FA  6F02               	movwf	(_loRa+2)& (0+255),b
  4851                           
  4852                           ; BSR set to: 2
  4853                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  4854  00B8FC  2BD9               	incf	(_loRa+217)& (0+255),f,b
  4855                           
  4856                           ; BSR set to: 2
  4857                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  4858  00B8FE  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  4859  00B900  0012               	return	
  4860                           
  4861                           ; BSR set to: 2
  4862  00B902  51DF               	movf	(_loRa+223)& (0+255),w,b
  4863  00B904  B4D8               	btfsc	status,2,c
  4864  00B906  0012               	return	
  4865                           
  4866                           ; BSR set to: 2
  4867  00B908  51D9               	movf	(_loRa+217)& (0+255),w,b
  4868  00B90A  6E5B               	movwf	??_AckRetransmissionCallback& (0+255),c
  4869  00B90C  6A5C               	clrf	(??_AckRetransmissionCallback+1)& (0+255),c
  4870  00B90E  51D7               	movf	(_loRa+215)& (0+255),w,b
  4871  00B910  6E5D               	movwf	(??_AckRetransmissionCallback+2)& (0+255),c
  4872  00B912  6A5E               	clrf	(??_AckRetransmissionCallback+3)& (0+255),c
  4873  00B914  0E01               	movlw	1
  4874  00B916  265D               	addwf	??_AckRetransmissionCallback+2,f,c
  4875  00B918  0E00               	movlw	0
  4876  00B91A  225E               	addwfc	??_AckRetransmissionCallback+3,f,c
  4877  00B91C  505B               	movf	??_AckRetransmissionCallback,w,c
  4878  00B91E  185D               	xorwf	??_AckRetransmissionCallback+2,w,c
  4879  00B920  E104               	bnz	u17400
  4880  00B922  505C               	movf	??_AckRetransmissionCallback+1,w,c
  4881  00B924  185E               	xorwf	??_AckRetransmissionCallback+3,w,c
  4882  00B926  B4D8               	btfsc	status,2,c
  4883  00B928  0012               	return	
  4884  00B92A                     u17400:
  4885                           
  4886                           ; BSR set to: 2
  4887                           ;lorawan.c: 957: {;lorawan.c: 958: FindSmallestDataRate();
  4888  00B92A  ECB8  F053         	call	_FindSmallestDataRate	;wreg free
  4889  00B92E  0012               	return	
  4890  00B930                     l15100:
  4891                           
  4892                           ;lorawan.c: 961: else;lorawan.c: 962: {;lorawan.c: 964: UpdateRetransmissionAckTimeoutSt
      +                          ate ();
  4893  00B930  EC76  F04E         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  4894  00B934  0012               	return	
  4895  00B936                     l15104:
  4896                           
  4897                           ; BSR set to: 2
  4898                           ;lorawan.c: 973: else;lorawan.c: 974: {;lorawan.c: 975: ResetParametersForConfirmedTrans
      +                          mission ();
  4899  00B936  EC49  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  4900                           
  4901                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  4902  00B93A  0100               	movlb	0	; () banked
  4903  00B93C  51F0               	movf	_rxPayload& (0+255),w,b
  4904  00B93E  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  4905  00B940  B4D8               	btfsc	status,2,c
  4906  00B942  0012               	return	
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;lorawan.c: 977: {;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  4910  00B944  0E00               	movlw	0
  4911  00B946  6E01               	movwf	RxData@pData,c
  4912  00B948  0E00               	movlw	0
  4913  00B94A  6E02               	movwf	RxData@pData+1,c
  4914  00B94C  0E00               	movlw	0
  4915  00B94E  6E03               	movwf	RxData@dataLength,c
  4916  00B950  0E04               	movlw	4
  4917  00B952  6E04               	movwf	RxData@status,c
  4918  00B954  D801               	call	u17428
  4919  00B956  0012               	return	
  4920  00B958                     u17428:
  4921  00B958  0005               	push	
  4922  00B95A  6EFA               	movwf	pclath,c
  4923  00B95C  51F0               	movf	_rxPayload& (0+255),w,b
  4924  00B95E  6EFD               	movwf	tosl,c
  4925  00B960  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  4926  00B962  6EFE               	movwf	tosh,c
  4927  00B964  6AFF               	clrf	tosu,c
  4928  00B966  50FA               	movf	pclath,w,c
  4929  00B968  0012               	return		;indir
  4930  00B96A                     l15110:
  4931                           
  4932                           ; BSR set to: 2
  4933                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  4934  00B96A  51D9               	movf	(_loRa+217)& (0+255),w,b
  4935  00B96C  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  4936  00B96E  B0D8               	btfsc	status,0,c
  4937  00B970  0012               	return	
  4938                           
  4939                           ; BSR set to: 2
  4940  00B972  B103               	btfsc	(_loRa+3)& (0+255),0,b
  4941  00B974  0012               	return	
  4942                           
  4943                           ; BSR set to: 2
  4944                           ;lorawan.c: 983: {;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  4945  00B976  EC49  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  4946                           
  4947                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  4948  00B97A  0100               	movlb	0	; () banked
  4949  00B97C  51F0               	movf	_rxPayload& (0+255),w,b
  4950  00B97E  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  4951  00B980  B4D8               	btfsc	status,2,c
  4952  00B982  0012               	return	
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;lorawan.c: 986: {;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  4956  00B984  0E00               	movlw	0
  4957  00B986  6E01               	movwf	RxData@pData,c
  4958  00B988  0E00               	movlw	0
  4959  00B98A  6E02               	movwf	RxData@pData+1,c
  4960  00B98C  0E00               	movlw	0
  4961  00B98E  6E03               	movwf	RxData@dataLength,c
  4962  00B990  0E00               	movlw	0
  4963  00B992  6E04               	movwf	RxData@status,c
  4964  00B994  D801               	call	u17468
  4965  00B996  0012               	return	
  4966  00B998                     u17468:
  4967  00B998  0005               	push	
  4968  00B99A  6EFA               	movwf	pclath,c
  4969  00B99C  51F0               	movf	_rxPayload& (0+255),w,b
  4970  00B99E  6EFD               	movwf	tosl,c
  4971  00B9A0  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  4972  00B9A2  6EFE               	movwf	tosh,c
  4973  00B9A4  6AFF               	clrf	tosu,c
  4974  00B9A6  50FA               	movf	pclath,w,c
  4975  00B9A8  0012               	return		;indir
  4976  00B9AA                     l15120:
  4977                           
  4978                           ; BSR set to: 2
  4979                           ;lorawan.c: 991: else;lorawan.c: 992: {;lorawan.c: 993: ResetParametersForConfirmedTrans
      +                          mission ();
  4980  00B9AA  EC49  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  4981  00B9AE  0012               	return		;funcret
  4982  00B9B0                     __end_of_AckRetransmissionCallback:
  4983                           	opt callstack 0
  4984                           
  4985 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  4986 ;; Defined at:
  4987 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  param           1    wreg     unsigned char 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  param           1    0[COMRAM] unsigned char 
  4992 ;;  iCtr            1   58[COMRAM] unsigned char 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;Total ram usage:        9 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:    4
  5009 ;; This function calls:
  5010 ;;		_SwTimerSetTimeout
  5011 ;;		_SwTimerStart
  5012 ;;		___lldiv
  5013 ;; This function is called by:
  5014 ;;		_SetCallbackSoftwareTimers
  5015 ;;		_SwTimersExecute
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text32
  5020  00BAC0                     __ptext32:
  5021                           	opt callstack 0
  5022  00BAC0                     _LORAWAN_LinkCheckCallback:
  5023                           	opt callstack 24
  5024                           
  5025                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  5026                           
  5027                           ;incstack = 0
  5028  00BAC0  0102               	movlb	2	; () banked
  5029  00BAC2  A103               	btfss	(_loRa+3)& (0+255),0,b
  5030                           
  5031                           ; BSR set to: 2
  5032  00BAC4  A503               	btfss	(_loRa+3)& (0+255),2,b
  5033  00BAC6  D026               	goto	l15064
  5034                           
  5035                           ; BSR set to: 2
  5036                           ;lorawan.c: 886: {;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  5037  00BAC8  0E00               	movlw	0
  5038  00BACA  6E3B               	movwf	LORAWAN_LinkCheckCallback@iCtr,c
  5039  00BACC  D00D               	goto	l15054
  5040  00BACE                     l15048:
  5041                           
  5042                           ; BSR set to: 2
  5043                           ;lorawan.c: 889: {;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_C
      +                          ID)
  5044  00BACE  503B               	movf	LORAWAN_LinkCheckCallback@iCtr,w,c
  5045  00BAD0  0D02               	mullw	2
  5046  00BAD2  0EA8               	movlw	low (_loRa+168)
  5047  00BAD4  24F3               	addwf	prodl,w,c
  5048  00BAD6  6ED9               	movwf	fsr2l,c
  5049  00BAD8  0E02               	movlw	high (_loRa+168)
  5050  00BADA  20F4               	addwfc	prodh,w,c
  5051  00BADC  6EDA               	movwf	fsr2h,c
  5052  00BADE  0E02               	movlw	2
  5053  00BAE0  18DE               	xorwf	postinc2,w,c
  5054  00BAE2  B4D8               	btfsc	status,2,c
  5055  00BAE4  D005               	goto	u17260
  5056                           
  5057                           ; BSR set to: 2
  5058  00BAE6  2A3B               	incf	LORAWAN_LinkCheckCallback@iCtr,f,c
  5059  00BAE8                     l15054:
  5060                           
  5061                           ; BSR set to: 2
  5062  00BAE8  51A7               	movf	(_loRa+167)& (0+255),w,b
  5063  00BAEA  5C3B               	subwf	LORAWAN_LinkCheckCallback@iCtr,w,c
  5064  00BAEC  A0D8               	btfss	status,0,c
  5065  00BAEE  D7EF               	goto	l15048
  5066  00BAF0                     u17260:
  5067                           
  5068                           ; BSR set to: 2
  5069                           ;lorawan.c: 893: };lorawan.c: 894: };lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  5070  00BAF0  503B               	movf	LORAWAN_LinkCheckCallback@iCtr,w,c
  5071  00BAF2  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  5072  00BAF4  A4D8               	btfss	status,2,c
  5073  00BAF6  D00E               	goto	l15064
  5074                           
  5075                           ; BSR set to: 2
  5076                           ;lorawan.c: 897: {;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = L
      +                          INK_CHECK_CID;
  5077  00BAF8  51A7               	movf	(_loRa+167)& (0+255),w,b
  5078  00BAFA  0D02               	mullw	2
  5079  00BAFC  0EA8               	movlw	low (_loRa+168)
  5080  00BAFE  24F3               	addwf	prodl,w,c
  5081  00BB00  6ED9               	movwf	fsr2l,c
  5082  00BB02  0E02               	movlw	high (_loRa+168)
  5083  00BB04  20F4               	addwfc	prodh,w,c
  5084  00BB06  6EDA               	movwf	fsr2h,c
  5085  00BB08  0E02               	movlw	2
  5086  00BB0A  6EDF               	movwf	indf2,c
  5087                           
  5088                           ; BSR set to: 2
  5089                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  5090  00BB0C  0E10               	movlw	16
  5091  00BB0E  61A7               	cpfslt	(_loRa+167)& (0+255),b
  5092  00BB10  D001               	goto	l15064
  5093                           
  5094                           ; BSR set to: 2
  5095                           ;lorawan.c: 901: {;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  5096  00BB12  2BA7               	incf	(_loRa+167)& (0+255),f,b
  5097  00BB14                     l15064:
  5098                           
  5099                           ; BSR set to: 2
  5100                           ;lorawan.c: 903: };lorawan.c: 904: };lorawan.c: 905: };lorawan.c: 908: if (loRa.macStatu
      +                          s.linkCheck == 1)
  5101  00BB14  A503               	btfss	(_loRa+3)& (0+255),2,b
  5102  00BB16  0012               	return	
  5103                           
  5104                           ; BSR set to: 2
  5105                           ;lorawan.c: 909: {;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.perio
      +                          dForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125U
      +                          L ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  5106  00BB18  51CF               	movf	(_loRa+207)& (0+255),w,b
  5107  00BB1A  E107               	bnz	u17300
  5108  00BB1C  29CC               	incf	(_loRa+204)& (0+255),w,b
  5109  00BB1E  0EFF               	movlw	255
  5110  00BB20  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  5111  00BB22  0E0F               	movlw	15
  5112  00BB24  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  5113  00BB26  A0D8               	btfss	status,0,c
  5114  00BB28  D01B               	goto	l15070
  5115  00BB2A                     u17300:
  5116                           
  5117                           ; BSR set to: 2
  5118  00BB2A  C2CC  F001         	movff	_loRa+204,___lldiv@dividend
  5119  00BB2E  C2CD  F002         	movff	_loRa+205,___lldiv@dividend+1
  5120  00BB32  C2CE  F003         	movff	_loRa+206,___lldiv@dividend+2
  5121  00BB36  C2CF  F004         	movff	_loRa+207,___lldiv@dividend+3
  5122  00BB3A  0E7D               	movlw	125
  5123  00BB3C  6E05               	movwf	___lldiv@divisor,c
  5124  00BB3E  0E00               	movlw	0
  5125  00BB40  6E06               	movwf	___lldiv@divisor+1,c
  5126  00BB42  0E00               	movlw	0
  5127  00BB44  6E07               	movwf	___lldiv@divisor+2,c
  5128  00BB46  0E00               	movlw	0
  5129  00BB48  6E08               	movwf	___lldiv@divisor+3,c
  5130  00BB4A  ECFE  F050         	call	___lldiv	;wreg free
  5131  00BB4E  0E0C               	movlw	12
  5132  00BB50                     u17315:
  5133  00BB50  90D8               	bcf	status,0,c
  5134  00BB52  3601               	rlcf	?___lldiv,f,c
  5135  00BB54  3602               	rlcf	?___lldiv+1,f,c
  5136  00BB56  3603               	rlcf	?___lldiv+2,f,c
  5137  00BB58  3604               	rlcf	?___lldiv+3,f,c
  5138  00BB5A  2EE8               	decfsz	wreg,f,c
  5139  00BB5C  D7F9               	goto	u17315
  5140  00BB5E  D022               	goto	L3
  5141  00BB60                     l15070:
  5142                           
  5143                           ; BSR set to: 2
  5144  00BB60  C2CC  F033         	movff	_loRa+204,??_LORAWAN_LinkCheckCallback
  5145  00BB64  C2CD  F034         	movff	_loRa+205,??_LORAWAN_LinkCheckCallback+1
  5146  00BB68  C2CE  F035         	movff	_loRa+206,??_LORAWAN_LinkCheckCallback+2
  5147  00BB6C  C2CF  F036         	movff	_loRa+207,??_LORAWAN_LinkCheckCallback+3
  5148  00BB70  0E0C               	movlw	12
  5149  00BB72                     u17325:
  5150  00BB72  90D8               	bcf	status,0,c
  5151  00BB74  3633               	rlcf	??_LORAWAN_LinkCheckCallback,f,c
  5152  00BB76  3634               	rlcf	??_LORAWAN_LinkCheckCallback+1,f,c
  5153  00BB78  3635               	rlcf	??_LORAWAN_LinkCheckCallback+2,f,c
  5154  00BB7A  3636               	rlcf	??_LORAWAN_LinkCheckCallback+3,f,c
  5155  00BB7C  2EE8               	decfsz	wreg,f,c
  5156  00BB7E  D7F9               	goto	u17325
  5157  00BB80  C033  F001         	movff	??_LORAWAN_LinkCheckCallback,___lldiv@dividend
  5158  00BB84  C034  F002         	movff	??_LORAWAN_LinkCheckCallback+1,___lldiv@dividend+1
  5159  00BB88  C035  F003         	movff	??_LORAWAN_LinkCheckCallback+2,___lldiv@dividend+2
  5160  00BB8C  C036  F004         	movff	??_LORAWAN_LinkCheckCallback+3,___lldiv@dividend+3
  5161  00BB90  0E7D               	movlw	125
  5162  00BB92  6E05               	movwf	___lldiv@divisor,c
  5163  00BB94  0E00               	movlw	0
  5164  00BB96  6E06               	movwf	___lldiv@divisor+1,c
  5165  00BB98  0E00               	movlw	0
  5166  00BB9A  6E07               	movwf	___lldiv@divisor+2,c
  5167  00BB9C  0E00               	movlw	0
  5168  00BB9E  6E08               	movwf	___lldiv@divisor+3,c
  5169  00BBA0  ECFE  F050         	call	___lldiv	;wreg free
  5170  00BBA4                     L3:
  5171  00BBA4  C001  F037         	movff	?___lldiv,_LORAWAN_LinkCheckCallback$2509
  5172  00BBA8  C002  F038         	movff	?___lldiv+1,_LORAWAN_LinkCheckCallback$2509+1
  5173  00BBAC  C003  F039         	movff	?___lldiv+2,_LORAWAN_LinkCheckCallback$2509+2
  5174  00BBB0  C004  F03A         	movff	?___lldiv+3,_LORAWAN_LinkCheckCallback$2509+3
  5175  00BBB4  C037  F00E         	movff	_LORAWAN_LinkCheckCallback$2509,SwTimerSetTimeout@timeout
  5176  00BBB8  C038  F00F         	movff	_LORAWAN_LinkCheckCallback$2509+1,SwTimerSetTimeout@timeout+1
  5177  00BBBC  C039  F010         	movff	_LORAWAN_LinkCheckCallback$2509+2,SwTimerSetTimeout@timeout+2
  5178  00BBC0  C03A  F011         	movff	_LORAWAN_LinkCheckCallback$2509+3,SwTimerSetTimeout@timeout+3
  5179  00BBC4  0102               	movlb	2	; () banked
  5180  00BBC6  51E7               	movf	(_loRa+231)& (0+255),w,b
  5181  00BBC8  EC5C  F049         	call	_SwTimerSetTimeout
  5182                           
  5183                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  5184  00BBCC  0102               	movlb	2	; () banked
  5185  00BBCE  51E7               	movf	(_loRa+231)& (0+255),w,b
  5186  00BBD0  ECC3  F051         	call	_SwTimerStart
  5187  00BBD4  0012               	return		;funcret
  5188  00BBD6                     __end_of_LORAWAN_LinkCheckCallback:
  5189                           	opt callstack 0
  5190                           
  5191 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  5192 ;; Defined at:
  5193 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  param           1    wreg     unsigned char 
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  param           1    0[COMRAM] unsigned char 
  5198 ;;  freq            4   83[COMRAM] unsigned long 
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;Total ram usage:        4 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    6
  5215 ;; This function calls:
  5216 ;;		_ConfigureRadioRx
  5217 ;;		_GetRx1Freq
  5218 ;;		_RADIO_ReceiveStart
  5219 ;;		_RADIO_ReceiveStop
  5220 ;;		_RADIO_ReleaseData
  5221 ;; This function is called by:
  5222 ;;		_SetCallbackSoftwareTimers
  5223 ;;		_SwTimersExecute
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text33
  5228  00A17C                     __ptext33:
  5229                           	opt callstack 0
  5230  00A17C                     _LORAWAN_ReceiveWindow1Callback:
  5231                           	opt callstack 22
  5232                           
  5233                           ;lorawan.c: 798: uint32_t freq;;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  5234                           
  5235                           ;incstack = 0
  5236  00A17C  0102               	movlb	2	; () banked
  5237  00A17E  B103               	btfsc	(_loRa+3)& (0+255),0,b
  5238  00A180  0012               	return	
  5239                           
  5240                           ; BSR set to: 2
  5241                           ;lorawan.c: 801: {;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  5242  00A182  0E02               	movlw	2
  5243  00A184  1912               	xorwf	(_loRa+18)& (0+255),w,b
  5244  00A186  B4D8               	btfsc	status,2,c
  5245                           
  5246                           ; BSR set to: 2
  5247                           ;lorawan.c: 803: {;lorawan.c: 804: RADIO_ReceiveStop();
  5248  00A188  EC80  F046         	call	_RADIO_ReceiveStop	;wreg free
  5249                           
  5250                           ;lorawan.c: 805: };lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.of
      +                          fset)
  5251  00A18C  0102               	movlb	2	; () banked
  5252  00A18E  51EF               	movf	(_loRa+239)& (0+255),w,b
  5253  00A190  5D17               	subwf	(_loRa+23)& (0+255),w,b
  5254  00A192  A0D8               	btfss	status,0,c
  5255  00A194  D003               	goto	l15028
  5256                           
  5257                           ; BSR set to: 2
  5258                           ;lorawan.c: 807: {;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receive
      +                          Window1Parameters.dataRate - loRa.offset;
  5259  00A196  51EF               	movf	(_loRa+239)& (0+255),w,b
  5260  00A198  5D17               	subwf	(_loRa+23)& (0+255),w,b
  5261  00A19A  D001               	goto	L4
  5262  00A19C                     l15028:
  5263                           
  5264                           ; BSR set to: 2
  5265                           ;lorawan.c: 810: else;lorawan.c: 811: {;lorawan.c: 812: loRa.receiveWindow1Parameters.da
      +                          taRate = 0;
  5266  00A19C  0E00               	movlw	0
  5267  00A19E                     L4:
  5268  00A19E  6F17               	movwf	(_loRa+23)& (0+255),b
  5269                           
  5270                           ; BSR set to: 2
  5271                           ;lorawan.c: 813: };lorawan.c: 815: freq = GetRx1Freq();
  5272  00A1A0  ECA2  F045         	call	_GetRx1Freq	;wreg free
  5273  00A1A4  C001  F054         	movff	?_GetRx1Freq,LORAWAN_ReceiveWindow1Callback@freq
  5274  00A1A8  C002  F055         	movff	?_GetRx1Freq+1,LORAWAN_ReceiveWindow1Callback@freq+1
  5275  00A1AC  C003  F056         	movff	?_GetRx1Freq+2,LORAWAN_ReceiveWindow1Callback@freq+2
  5276  00A1B0  C004  F057         	movff	?_GetRx1Freq+3,LORAWAN_ReceiveWindow1Callback@freq+3
  5277                           
  5278                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  5279  00A1B4  0102               	movlb	2	; () banked
  5280  00A1B6  5102               	movf	(_loRa+2)& (0+255),w,b
  5281  00A1B8  0BF0               	andlw	-16
  5282  00A1BA  0903               	iorlw	3
  5283  00A1BC  6F02               	movwf	(_loRa+2)& (0+255),b
  5284                           
  5285                           ; BSR set to: 2
  5286                           ;lorawan.c: 819: RADIO_ReleaseData();
  5287  00A1BE  ECEA  F044         	call	_RADIO_ReleaseData	;wreg free
  5288                           
  5289                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  5290  00A1C2  C054  F014         	movff	LORAWAN_ReceiveWindow1Callback@freq,ConfigureRadioRx@freq
  5291  00A1C6  C055  F015         	movff	LORAWAN_ReceiveWindow1Callback@freq+1,ConfigureRadioRx@freq+1
  5292  00A1CA  C056  F016         	movff	LORAWAN_ReceiveWindow1Callback@freq+2,ConfigureRadioRx@freq+2
  5293  00A1CE  C057  F017         	movff	LORAWAN_ReceiveWindow1Callback@freq+3,ConfigureRadioRx@freq+3
  5294  00A1D2  0102               	movlb	2	; () banked
  5295  00A1D4  5117               	movf	(_loRa+23)& (0+255),w,b
  5296  00A1D6  EC02  F047         	call	_ConfigureRadioRx
  5297                           
  5298                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  5299  00A1DA  0E7F               	movlw	low _rxWindowSize
  5300  00A1DC  0102               	movlb	2	; () banked
  5301  00A1DE  2517               	addwf	(_loRa+23)& (0+255),w,b
  5302  00A1E0  6EF6               	movwf	tblptrl,c
  5303  00A1E2  6AF7               	clrf	tblptrh,c
  5304  00A1E4  0EFF               	movlw	high _rxWindowSize
  5305  00A1E6  22F7               	addwfc	tblptrh,f,c
  5306  00A1E8                     	if	1	;There are 3 active tblptr bytes
  5307  00A1E8  6AF8               	clrf	tblptru,c
  5308  00A1EA  0E00               	movlw	low (__mediumconst shr (0+16))
  5309  00A1EC  22F8               	addwfc	tblptru,f,c
  5310  00A1EE                     	endif
  5311  00A1EE  0008               	tblrd		*
  5312  00A1F0  50F5               	movf	tablat,w,c
  5313  00A1F2  6E4A               	movwf	RADIO_ReceiveStart@rxWindowSize,c
  5314  00A1F4  6A4B               	clrf	RADIO_ReceiveStart@rxWindowSize+1,c
  5315  00A1F6  ECF7  F068         	call	_RADIO_ReceiveStart	;wreg free
  5316  00A1FA  0012               	return		;funcret
  5317  00A1FC                     __end_of_LORAWAN_ReceiveWindow1Callback:
  5318                           	opt callstack 0
  5319                           
  5320 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  5321 ;; Defined at:
  5322 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;  param           1    wreg     unsigned char 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  param           1    0[COMRAM] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;Total ram usage:        1 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:    7
  5343 ;; This function calls:
  5344 ;;		_ConfigureRadioRx
  5345 ;;		_LORAWAN_EnterContinuousReceive
  5346 ;;		_RADIO_GetStatus
  5347 ;;		_RADIO_ReceiveStart
  5348 ;;		_RADIO_ReceiveStop
  5349 ;;		_RADIO_ReleaseData
  5350 ;;		_ResetParametersForConfirmedTransmission
  5351 ;;		_ResetParametersForUnconfirmedTransmission
  5352 ;;		_RxData
  5353 ;; This function is called by:
  5354 ;;		_LORAWAN_RxTimeout
  5355 ;;		_SetCallbackSoftwareTimers
  5356 ;;		_SwTimersExecute
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text34
  5361  00ABD2                     __ptext34:
  5362                           	opt callstack 0
  5363  00ABD2                     _LORAWAN_ReceiveWindow2Callback:
  5364                           	opt callstack 19
  5365                           
  5366                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  5367                           
  5368                           ;incstack = 0
  5369  00ABD2  0102               	movlb	2	; () banked
  5370  00ABD4  B103               	btfsc	(_loRa+3)& (0+255),0,b
  5371  00ABD6  D058               	goto	l1805
  5372                           
  5373                           ; BSR set to: 2
  5374                           ;lorawan.c: 831: {;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  5375  00ABD8  ECED  F044         	call	_RADIO_GetStatus	;wreg free
  5376  00ABDC  6E54               	movwf	??_LORAWAN_ReceiveWindow2Callback& (0+255),c
  5377  00ABDE  B254               	btfsc	??_LORAWAN_ReceiveWindow2Callback,1,c
  5378  00ABE0  D04F               	goto	l13850
  5379                           
  5380                           ;lorawan.c: 833: {;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  5381  00ABE2  0102               	movlb	2	; () banked
  5382  00ABE4  5102               	movf	(_loRa+2)& (0+255),w,b
  5383  00ABE6  0BF0               	andlw	-16
  5384  00ABE8  0905               	iorlw	5
  5385  00ABEA  6F02               	movwf	(_loRa+2)& (0+255),b
  5386                           
  5387                           ; BSR set to: 2
  5388                           ;lorawan.c: 836: RADIO_ReceiveStop();
  5389  00ABEC  EC80  F046         	call	_RADIO_ReceiveStop	;wreg free
  5390                           
  5391                           ;lorawan.c: 837: RADIO_ReleaseData();
  5392  00ABF0  ECEA  F044         	call	_RADIO_ReleaseData	;wreg free
  5393                           
  5394                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  5395  00ABF4  C218  F014         	movff	_loRa+24,ConfigureRadioRx@freq
  5396  00ABF8  C219  F015         	movff	_loRa+25,ConfigureRadioRx@freq+1
  5397  00ABFC  C21A  F016         	movff	_loRa+26,ConfigureRadioRx@freq+2
  5398  00AC00  C21B  F017         	movff	_loRa+27,ConfigureRadioRx@freq+3
  5399  00AC04  0102               	movlb	2	; () banked
  5400  00AC06  511C               	movf	(_loRa+28)& (0+255),w,b
  5401  00AC08  EC02  F047         	call	_ConfigureRadioRx
  5402                           
  5403                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  5404  00AC0C  0102               	movlb	2	; () banked
  5405  00AC0E  5112               	movf	(_loRa+18)& (0+255),w,b
  5406  00AC10  A4D8               	btfss	status,2,c
  5407  00AC12  D02F               	goto	l13846
  5408                           
  5409                           ; BSR set to: 2
  5410                           ;lorawan.c: 842: {;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindo
      +                          w2Parameters.dataRate]) != OK)
  5411  00AC14  0E7F               	movlw	low _rxWindowSize
  5412  00AC16  251C               	addwf	(_loRa+28)& (0+255),w,b
  5413  00AC18  6EF6               	movwf	tblptrl,c
  5414  00AC1A  6AF7               	clrf	tblptrh,c
  5415  00AC1C  0EFF               	movlw	high _rxWindowSize
  5416  00AC1E  22F7               	addwfc	tblptrh,f,c
  5417  00AC20                     	if	1	;There are 3 active tblptr bytes
  5418  00AC20  6AF8               	clrf	tblptru,c
  5419  00AC22  0E00               	movlw	low (__mediumconst shr (0+16))
  5420  00AC24  22F8               	addwfc	tblptru,f,c
  5421  00AC26                     	endif
  5422  00AC26  0008               	tblrd		*
  5423  00AC28  50F5               	movf	tablat,w,c
  5424  00AC2A  6E4A               	movwf	RADIO_ReceiveStart@rxWindowSize,c
  5425  00AC2C  6A4B               	clrf	RADIO_ReceiveStart@rxWindowSize+1,c
  5426  00AC2E  ECF7  F068         	call	_RADIO_ReceiveStart	;wreg free
  5427  00AC32  504A               	movf	?_RADIO_ReceiveStart,w,c
  5428  00AC34  104B               	iorwf	?_RADIO_ReceiveStart+1,w,c
  5429  00AC36  B4D8               	btfsc	status,2,c
  5430  00AC38  0012               	return	
  5431                           
  5432                           ;lorawan.c: 844: {;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  5433  00AC3A  EC49  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  5434                           
  5435                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  5436  00AC3E  EC91  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  5437                           
  5438                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  5439  00AC42  0100               	movlb	0	; () banked
  5440  00AC44  51F0               	movf	_rxPayload& (0+255),w,b
  5441  00AC46  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  5442  00AC48  B4D8               	btfsc	status,2,c
  5443  00AC4A  0012               	return	
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;lorawan.c: 848: {;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  5447  00AC4C  0E00               	movlw	0
  5448  00AC4E  6E01               	movwf	RxData@pData,c
  5449  00AC50  0E00               	movlw	0
  5450  00AC52  6E02               	movwf	RxData@pData+1,c
  5451  00AC54  0E00               	movlw	0
  5452  00AC56  6E03               	movwf	RxData@dataLength,c
  5453  00AC58  0E00               	movlw	0
  5454  00AC5A  6E04               	movwf	RxData@status,c
  5455  00AC5C  D801               	call	u15048
  5456  00AC5E  0012               	return	
  5457  00AC60                     u15048:
  5458  00AC60  0005               	push	
  5459  00AC62  6EFA               	movwf	pclath,c
  5460  00AC64  51F0               	movf	_rxPayload& (0+255),w,b
  5461  00AC66  6EFD               	movwf	tosl,c
  5462  00AC68  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  5463  00AC6A  6EFE               	movwf	tosh,c
  5464  00AC6C  6AFF               	clrf	tosu,c
  5465  00AC6E  50FA               	movf	pclath,w,c
  5466  00AC70  0012               	return		;indir
  5467  00AC72                     l13846:
  5468                           
  5469                           ; BSR set to: 2
  5470                           ;lorawan.c: 853: else;lorawan.c: 854: {;lorawan.c: 855: loRa.macStatus.macState = CLASS_
      +                          C_RX2_2_OPEN;
  5471  00AC72  5102               	movf	(_loRa+2)& (0+255),w,b
  5472  00AC74  0BF0               	andlw	-16
  5473  00AC76  0909               	iorlw	9
  5474  00AC78  6F02               	movwf	(_loRa+2)& (0+255),b
  5475                           
  5476                           ; BSR set to: 2
  5477                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  5478  00AC7A  EC57  F04F         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  5479  00AC7E  0012               	return	
  5480  00AC80                     l13850:
  5481                           
  5482                           ;lorawan.c: 859: else;lorawan.c: 860: {;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  5483  00AC80  0E01               	movlw	1
  5484  00AC82  0102               	movlb	2	; () banked
  5485  00AC84  6FF1               	movwf	(_loRa+241)& (0+255),b
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;lorawan.c: 864: };lorawan.c: 865: }
  5489  00AC86  0012               	return	
  5490  00AC88                     l1805:
  5491                           
  5492                           ; BSR set to: 2
  5493                           ;lorawan.c: 866: else;lorawan.c: 867: {;lorawan.c: 870: if (loRa.lorawanMacStatus.joinin
      +                          g == 1)
  5494  00AC88  A500               	btfss	_loRa& (0+255),2,b
  5495  00AC8A  D002               	goto	l13854
  5496                           
  5497                           ; BSR set to: 2
  5498                           ;lorawan.c: 871: {;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  5499  00AC8C  9500               	bcf	_loRa& (0+255),2,b
  5500                           
  5501                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  5502  00AC8E  9902               	bcf	(_loRa+2)& (0+255),4,b
  5503  00AC90                     l13854:
  5504                           
  5505                           ; BSR set to: 2
  5506                           ;lorawan.c: 874: };lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  5507  00AC90  EC91  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  5508                           
  5509                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  5510  00AC94  EC49  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  5511  00AC98  0012               	return		;funcret
  5512  00AC9A                     __end_of_LORAWAN_ReceiveWindow2Callback:
  5513                           	opt callstack 0
  5514                           
  5515 ;; *************** function _RADIO_WatchdogTimeout *****************
  5516 ;; Defined at:
  5517 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  param           1    wreg     unsigned char 
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;  param           1    0[COMRAM] unsigned char 
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  1    wreg      void 
  5524 ;; Registers used:
  5525 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;Total ram usage:        0 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    9
  5538 ;; This function calls:
  5539 ;;		_LORAWAN_RxTimeout
  5540 ;;		_LORAWAN_TxDone
  5541 ;;		_RADIO_WriteMode
  5542 ;; This function is called by:
  5543 ;;		_RADIO_Init
  5544 ;;		_SwTimersExecute
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           	psect	text35
  5549  0092F8                     __ptext35:
  5550                           	opt callstack 0
  5551  0092F8                     _RADIO_WatchdogTimeout:
  5552                           	opt callstack 19
  5553                           
  5554                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  5555                           
  5556                           ;incstack = 0
  5557  0092F8  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  5558  0092FC  0E01               	movlw	1
  5559  0092FE  6E07               	movwf	RADIO_WriteMode@blocking,c
  5560  009300  0E01               	movlw	1
  5561  009302  EC6A  F058         	call	_RADIO_WriteMode
  5562                           
  5563                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  5564  009306  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  5565  00930A  0E00               	movlw	0
  5566  00930C  6E07               	movwf	RADIO_WriteMode@blocking,c
  5567  00930E  0E00               	movlw	0
  5568  009310  EC6A  F058         	call	_RADIO_WriteMode
  5569                           
  5570                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  5571  009314  0101               	movlb	1	; () banked
  5572  009316  893B               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  5573                           
  5574                           ; BSR set to: 1
  5575                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  5576  009318  A33B               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  5577  00931A  D004               	goto	l686
  5578                           
  5579                           ; BSR set to: 1
  5580                           ;radio_driver_SX1276.c: 1414: {;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &=
      +                           ~(1 << (1));
  5581  00931C  933B               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  5582                           
  5583                           ; BSR set to: 1
  5584                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  5585  00931E  EC5A  F06C         	call	_LORAWAN_RxTimeout	;wreg free
  5586                           
  5587                           ;radio_driver_SX1276.c: 1417: }
  5588  009322  0012               	return	
  5589  009324                     l686:
  5590                           
  5591                           ; BSR set to: 1
  5592                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  5593  009324  A13B               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  5594  009326  0012               	return	
  5595                           
  5596                           ; BSR set to: 1
  5597                           ;radio_driver_SX1276.c: 1419: {;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &=
      +                           ~(1 << (0));
  5598  009328  913B               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  5599                           
  5600                           ; BSR set to: 1
  5601                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  5602  00932A  C142  F054         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  5603  00932E  C143  F055         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  5604  009332  EC48  F076         	call	_LORAWAN_TxDone	;wreg free
  5605  009336  0012               	return		;funcret
  5606  009338                     __end_of_RADIO_WatchdogTimeout:
  5607                           	opt callstack 0
  5608                           
  5609 ;; *************** function _RADIO_RxFSKTimeout *****************
  5610 ;; Defined at:
  5611 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  param           1    wreg     unsigned char 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  param           1    0[COMRAM] unsigned char 
  5616 ;;  irqFlags        1   12[COMRAM] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      void 
  5619 ;; Registers used:
  5620 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5630 ;;Total ram usage:        1 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    9
  5633 ;; This function calls:
  5634 ;;		_LORAWAN_RxTimeout
  5635 ;;		_RADIO_RegisterRead
  5636 ;;		_RADIO_WriteMode
  5637 ;;		_SwTimerStop
  5638 ;; This function is called by:
  5639 ;;		_RADIO_Init
  5640 ;;		_SwTimersExecute
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text36
  5645  008FA4                     __ptext36:
  5646                           	opt callstack 0
  5647  008FA4                     _RADIO_RxFSKTimeout:
  5648                           	opt callstack 19
  5649                           
  5650                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;;radio_driver_SX1276.c: 1395: irqFlags = 
      +                          RADIO_RegisterRead(0x3E);
  5651                           
  5652                           ;incstack = 0
  5653  008FA4  0E3E               	movlw	62
  5654  008FA6  EC71  F046         	call	_RADIO_RegisterRead
  5655  008FAA  6E0D               	movwf	RADIO_RxFSKTimeout@irqFlags,c
  5656                           
  5657                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  5658  008FAC  B00D               	btfsc	RADIO_RxFSKTimeout@irqFlags,0,c
  5659  008FAE  0012               	return	
  5660                           
  5661                           ;radio_driver_SX1276.c: 1397: {;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
  5662  008FB0  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  5663  008FB4  0E00               	movlw	0
  5664  008FB6  6E07               	movwf	RADIO_WriteMode@blocking,c
  5665  008FB8  0E00               	movlw	0
  5666  008FBA  EC6A  F058         	call	_RADIO_WriteMode
  5667                           
  5668                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  5669  008FBE  0101               	movlb	1	; () banked
  5670  008FC0  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
  5671  008FC2  EC46  F046         	call	_SwTimerStop
  5672                           
  5673                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  5674  008FC6  0101               	movlb	1	; () banked
  5675  008FC8  933B               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  5676                           
  5677                           ; BSR set to: 1
  5678                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  5679  008FCA  EC5A  F06C         	call	_LORAWAN_RxTimeout	;wreg free
  5680  008FCE  0012               	return		;funcret
  5681  008FD0                     __end_of_RADIO_RxFSKTimeout:
  5682                           	opt callstack 0
  5683                           
  5684 ;; *************** function _UnconfirmedTransmissionCallback *****************
  5685 ;; Defined at:
  5686 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  param           1    wreg     unsigned char 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  param           1    0[COMRAM] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;Total ram usage:        0 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    6
  5707 ;; This function calls:
  5708 ;;		_RADIO_Transmit
  5709 ;;		_ResetParametersForUnconfirmedTransmission
  5710 ;;		_RxData
  5711 ;;		_SelectChannelForTransmission
  5712 ;; This function is called by:
  5713 ;;		_SetCallbackSoftwareTimers
  5714 ;;		_SwTimersExecute
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text37
  5719  009C1E                     __ptext37:
  5720                           	opt callstack 0
  5721  009C1E                     _UnconfirmedTransmissionCallback:
  5722                           	opt callstack 22
  5723                           
  5724                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  5725                           
  5726                           ;incstack = 0
  5727  009C1E  0E01               	movlw	1
  5728  009C20  ECE4  F04C         	call	_SelectChannelForTransmission
  5729  009C24  0900               	iorlw	0
  5730  009C26  A4D8               	btfss	status,2,c
  5731  009C28  D013               	goto	l15130
  5732  009C2A  0EB0               	movlw	low (_macBuffer+16)
  5733  009C2C  6E4A               	movwf	RADIO_Transmit@buffer,c
  5734  009C2E  0E04               	movlw	high (_macBuffer+16)
  5735  009C30  6E4B               	movwf	RADIO_Transmit@buffer+1,c
  5736  009C32  C2D4  F04C         	movff	_loRa+212,RADIO_Transmit@bufferLen
  5737  009C36  ECF7  F065         	call	_RADIO_Transmit	;wreg free
  5738  009C3A  504A               	movf	?_RADIO_Transmit,w,c
  5739  009C3C  104B               	iorwf	?_RADIO_Transmit+1,w,c
  5740  009C3E  A4D8               	btfss	status,2,c
  5741  009C40  D007               	goto	l15130
  5742                           
  5743                           ;lorawan.c: 1001: {;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  5744  009C42  0102               	movlb	2	; () banked
  5745  009C44  2BD8               	incf	(_loRa+216)& (0+255),f,b
  5746                           
  5747                           ; BSR set to: 2
  5748                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  5749  009C46  5102               	movf	(_loRa+2)& (0+255),w,b
  5750  009C48  0BF0               	andlw	-16
  5751  009C4A  0901               	iorlw	1
  5752  009C4C  6F02               	movwf	(_loRa+2)& (0+255),b
  5753                           
  5754                           ;lorawan.c: 1005: }
  5755  009C4E  0012               	return	
  5756  009C50                     l15130:
  5757                           
  5758                           ;lorawan.c: 1006: else;lorawan.c: 1008: {;lorawan.c: 1009: ResetParametersForUnconfirmed
      +                          Transmission ();
  5759  009C50  EC91  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  5760                           
  5761                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  5762  009C54  0100               	movlb	0	; () banked
  5763  009C56  51F0               	movf	_rxPayload& (0+255),w,b
  5764  009C58  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  5765  009C5A  B4D8               	btfsc	status,2,c
  5766  009C5C  0012               	return	
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;lorawan.c: 1011: {;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  5770  009C5E  0E00               	movlw	0
  5771  009C60  6E01               	movwf	RxData@pData,c
  5772  009C62  0E00               	movlw	0
  5773  009C64  6E02               	movwf	RxData@pData+1,c
  5774  009C66  0E00               	movlw	0
  5775  009C68  6E03               	movwf	RxData@dataLength,c
  5776  009C6A  0E00               	movlw	0
  5777  009C6C  6E04               	movwf	RxData@status,c
  5778  009C6E  D801               	call	u17508
  5779  009C70  0012               	return	
  5780  009C72                     u17508:
  5781  009C72  0005               	push	
  5782  009C74  6EFA               	movwf	pclath,c
  5783  009C76  51F0               	movf	_rxPayload& (0+255),w,b
  5784  009C78  6EFD               	movwf	tosl,c
  5785  009C7A  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  5786  009C7C  6EFE               	movwf	tosh,c
  5787  009C7E  6AFF               	clrf	tosu,c
  5788  009C80  50FA               	movf	pclath,w,c
  5789  009C82  0012               	return		;indir
  5790  009C84                     __end_of_UnconfirmedTransmissionCallback:
  5791                           	opt callstack 0
  5792                           
  5793 ;; *************** function _GetRx1Freq *****************
  5794 ;; Defined at:
  5795 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;		None
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;		None
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  4    0[COMRAM] unsigned long 
  5802 ;; Registers used:
  5803 ;;		None
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;Total ram usage:        4 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_LORAWAN_ReceiveWindow1Callback
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text38
  5823  008B44                     __ptext38:
  5824                           	opt callstack 0
  5825  008B44                     _GetRx1Freq:
  5826                           	opt callstack 27
  5827                           
  5828                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  5829                           
  5830                           ;incstack = 0
  5831  008B44  C213  F001         	movff	_loRa+19,?_GetRx1Freq
  5832  008B48  C214  F002         	movff	_loRa+20,?_GetRx1Freq+1
  5833  008B4C  C215  F003         	movff	_loRa+21,?_GetRx1Freq+2
  5834  008B50  C216  F004         	movff	_loRa+22,?_GetRx1Freq+3
  5835  008B54  0012               	return		;funcret
  5836  008B56                     __end_of_GetRx1Freq:
  5837                           	opt callstack 0
  5838                           
  5839 ;; *************** function _RADIO_DIO5 *****************
  5840 ;; Defined at:
  5841 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  dioMapping      1    0        unsigned char 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      void 
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;Total ram usage:        2 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; Hardware stack levels required when called:    4
  5862 ;; This function calls:
  5863 ;;		_RADIO_RegisterRead
  5864 ;;		_RADIO_UnhandledInterrupt
  5865 ;; This function is called by:
  5866 ;;		_LORAWAN_Mainloop
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text39
  5871  008C56                     __ptext39:
  5872                           	opt callstack 0
  5873  008C56                     _RADIO_DIO5:
  5874                           	opt callstack 25
  5875                           
  5876                           ;incstack = 0
  5877  008C56  0E41               	movlw	65
  5878  008C58  EC71  F046         	call	_RADIO_RegisterRead
  5879                           
  5880                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  5881  008C5C  0E01               	movlw	1
  5882  008C5E  EC71  F046         	call	_RADIO_RegisterRead
  5883  008C62  6E06               	movwf	??_RADIO_DIO5& (0+255),c
  5884  008C64  AE06               	btfss	??_RADIO_DIO5,7,c
  5885  008C66  0012               	return	
  5886                           
  5887                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  5888  008C68  0E01               	movlw	1
  5889  008C6A  EC50  F047         	call	_RADIO_UnhandledInterrupt
  5890                           
  5891                           ;radio_driver_SX1276.c: 1357: break;
  5892  008C6E  0012               	return		;funcret
  5893  008C70                     __end_of_RADIO_DIO5:
  5894                           	opt callstack 0
  5895                           
  5896 ;; *************** function _RADIO_DIO4 *****************
  5897 ;; Defined at:
  5898 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;  dioMapping      1    0        unsigned char 
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, status,0, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;Total ram usage:        2 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    4
  5919 ;; This function calls:
  5920 ;;		_RADIO_RegisterRead
  5921 ;;		_RADIO_UnhandledInterrupt
  5922 ;; This function is called by:
  5923 ;;		_LORAWAN_Mainloop
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text40
  5928  008C3C                     __ptext40:
  5929                           	opt callstack 0
  5930  008C3C                     _RADIO_DIO4:
  5931                           	opt callstack 25
  5932                           
  5933                           ;incstack = 0
  5934  008C3C  0E41               	movlw	65
  5935  008C3E  EC71  F046         	call	_RADIO_RegisterRead
  5936                           
  5937                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  5938  008C42  0E01               	movlw	1
  5939  008C44  EC71  F046         	call	_RADIO_RegisterRead
  5940  008C48  6E06               	movwf	??_RADIO_DIO4& (0+255),c
  5941  008C4A  AE06               	btfss	??_RADIO_DIO4,7,c
  5942  008C4C  0012               	return	
  5943                           
  5944                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  5945  008C4E  0E01               	movlw	1
  5946  008C50  EC50  F047         	call	_RADIO_UnhandledInterrupt
  5947                           
  5948                           ;radio_driver_SX1276.c: 1334: break;
  5949  008C54  0012               	return		;funcret
  5950  008C56                     __end_of_RADIO_DIO4:
  5951                           	opt callstack 0
  5952                           
  5953 ;; *************** function _RADIO_DIO3 *****************
  5954 ;; Defined at:
  5955 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;		None
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  dioMapping      1    0        unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1    wreg      void 
  5962 ;; Registers used:
  5963 ;;		wreg, status,2, status,0, cstack
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;Total ram usage:        2 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:    4
  5976 ;; This function calls:
  5977 ;;		_RADIO_RegisterRead
  5978 ;;		_RADIO_UnhandledInterrupt
  5979 ;; This function is called by:
  5980 ;;		_LORAWAN_Mainloop
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text41
  5985  008C22                     __ptext41:
  5986                           	opt callstack 0
  5987  008C22                     _RADIO_DIO3:
  5988                           	opt callstack 25
  5989                           
  5990                           ;incstack = 0
  5991  008C22  0E40               	movlw	64
  5992  008C24  EC71  F046         	call	_RADIO_RegisterRead
  5993                           
  5994                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  5995  008C28  0E01               	movlw	1
  5996  008C2A  EC71  F046         	call	_RADIO_RegisterRead
  5997  008C2E  6E06               	movwf	??_RADIO_DIO3& (0+255),c
  5998  008C30  AE06               	btfss	??_RADIO_DIO3,7,c
  5999  008C32  0012               	return	
  6000                           
  6001                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  6002  008C34  0E01               	movlw	1
  6003  008C36  EC50  F047         	call	_RADIO_UnhandledInterrupt
  6004                           
  6005                           ;radio_driver_SX1276.c: 1311: break;
  6006  008C3A  0012               	return		;funcret
  6007  008C3C                     __end_of_RADIO_DIO3:
  6008                           	opt callstack 0
  6009                           
  6010 ;; *************** function _RADIO_DIO2 *****************
  6011 ;; Defined at:
  6012 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;		None
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  dioMapping      1   28[COMRAM] unsigned char 
  6017 ;;  opMode          1    0        unsigned char 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  1    wreg      void 
  6020 ;; Registers used:
  6021 ;;		wreg, status,2, status,0, cstack
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6030 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;Total ram usage:        3 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:    5
  6034 ;; This function calls:
  6035 ;;		_RADIO_FHSSChangeChannel
  6036 ;;		_RADIO_RegisterRead
  6037 ;;		_RADIO_UnhandledInterrupt
  6038 ;; This function is called by:
  6039 ;;		_LORAWAN_Mainloop
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text42
  6044  0094D8                     __ptext42:
  6045                           	opt callstack 0
  6046  0094D8                     _RADIO_DIO2:
  6047                           	opt callstack 24
  6048                           
  6049                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;;radio_driver_SX1276.c: 1272: uint8_t o
      +                          pMode;;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2
      +                          );
  6050                           
  6051                           ;incstack = 0
  6052  0094D8  0E40               	movlw	64
  6053  0094DA  EC71  F046         	call	_RADIO_RegisterRead
  6054  0094DE  6E1B               	movwf	??_RADIO_DIO2& (0+255),c
  6055  0094E0  90D8               	bcf	status,0,c
  6056  0094E2  321B               	rrcf	??_RADIO_DIO2,f,c
  6057  0094E4  90D8               	bcf	status,0,c
  6058  0094E6  301B               	rrcf	??_RADIO_DIO2,w,c
  6059  0094E8  0B03               	andlw	3
  6060  0094EA  6E1D               	movwf	RADIO_DIO2@dioMapping,c
  6061  0094EC  0E01               	movlw	1
  6062  0094EE  EC71  F046         	call	_RADIO_RegisterRead
  6063                           
  6064                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  6065  0094F2  0E01               	movlw	1
  6066  0094F4  EC71  F046         	call	_RADIO_RegisterRead
  6067  0094F8  6E1B               	movwf	??_RADIO_DIO2& (0+255),c
  6068  0094FA  AE1B               	btfss	??_RADIO_DIO2,7,c
  6069  0094FC  0012               	return	
  6070  0094FE  D007               	goto	l15230
  6071  009500                     l15224:
  6072                           
  6073                           ;radio_driver_SX1276.c: 1283: case 0x01:;radio_driver_SX1276.c: 1284: case 0x02:;radio_d
      +                          river_SX1276.c: 1285: RADIO_FHSSChangeChannel();
  6074  009500  ECC7  F048         	call	_RADIO_FHSSChangeChannel	;wreg free
  6075                           
  6076                           ;radio_driver_SX1276.c: 1286: break;
  6077  009504  0012               	return	
  6078  009506                     l15226:
  6079                           
  6080                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  6081  009506  0E01               	movlw	1
  6082  009508  EC50  F047         	call	_RADIO_UnhandledInterrupt
  6083                           
  6084                           ;radio_driver_SX1276.c: 1289: break;
  6085  00950C  0012               	return	
  6086  00950E                     l15230:
  6087  00950E  501D               	movf	RADIO_DIO2@dioMapping,w,c
  6088                           
  6089                           ; Switch size 1, requested type "simple"
  6090                           ; Number of cases is 3, Range of values is 0 to 2
  6091                           ; switch strategies available:
  6092                           ; Name         Instructions Cycles
  6093                           ; simple_byte           10     6 (average)
  6094                           ;	Chosen strategy is simple_byte
  6095  009510  0A00               	xorlw	0	; case 0
  6096  009512  B4D8               	btfsc	status,2,c
  6097  009514  D7F5               	goto	l15224
  6098  009516  0A01               	xorlw	1	; case 1
  6099  009518  B4D8               	btfsc	status,2,c
  6100  00951A  D7F2               	goto	l15224
  6101  00951C  0A03               	xorlw	3	; case 2
  6102  00951E  B4D8               	btfsc	status,2,c
  6103  009520  D7EF               	goto	l15224
  6104  009522  D7F1               	goto	l15226
  6105  009524                     __end_of_RADIO_DIO2:
  6106                           	opt callstack 0
  6107                           
  6108 ;; *************** function _RADIO_DIO1 *****************
  6109 ;; Defined at:
  6110 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  dioMapping      1    5[BANK0 ] unsigned char 
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;Total ram usage:        2 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:   10
  6131 ;; This function calls:
  6132 ;;		_RADIO_FHSSChangeChannel
  6133 ;;		_RADIO_RegisterRead
  6134 ;;		_RADIO_RxTimeout
  6135 ;;		_RADIO_UnhandledInterrupt
  6136 ;; This function is called by:
  6137 ;;		_LORAWAN_Mainloop
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text43
  6142  009572                     __ptext43:
  6143                           	opt callstack 0
  6144  009572                     _RADIO_DIO1:
  6145                           	opt callstack 19
  6146                           
  6147                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;;radio_driver_SX1276.c: 1235: dioMappin
      +                          g = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  6148                           
  6149                           ;incstack = 0
  6150  009572  0E40               	movlw	64
  6151  009574  EC71  F046         	call	_RADIO_RegisterRead
  6152  009578  6E5F               	movwf	??_RADIO_DIO1& (0+255),c
  6153  00957A  385F               	swapf	??_RADIO_DIO1,w,c
  6154  00957C  0B0F               	andlw	15
  6155  00957E  0B03               	andlw	3
  6156  009580  0100               	movlb	0	; () banked
  6157  009582  6F65               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  6158                           
  6159                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  6160  009584  0E01               	movlw	1
  6161  009586  EC71  F046         	call	_RADIO_RegisterRead
  6162  00958A  6E5F               	movwf	??_RADIO_DIO1& (0+255),c
  6163  00958C  BE5F               	btfsc	??_RADIO_DIO1,7,c
  6164  00958E  D00B               	goto	l15214
  6165  009590  D013               	goto	l15218
  6166  009592                     l15206:
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
  6170  009592  EC65  F047         	call	_RADIO_RxTimeout	;wreg free
  6171                           
  6172                           ;radio_driver_SX1276.c: 1244: break;
  6173  009596  0012               	return	
  6174  009598                     l15208:
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
  6178  009598  ECC7  F048         	call	_RADIO_FHSSChangeChannel	;wreg free
  6179                           
  6180                           ;radio_driver_SX1276.c: 1247: break;
  6181  00959C  0012               	return	
  6182  00959E                     l15210:
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  6186  00959E  0E01               	movlw	1
  6187  0095A0  EC50  F047         	call	_RADIO_UnhandledInterrupt
  6188                           
  6189                           ;radio_driver_SX1276.c: 1250: break;
  6190  0095A4  0012               	return	
  6191  0095A6                     l15214:
  6192  0095A6  0100               	movlb	0	; () banked
  6193  0095A8  5165               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  6194                           
  6195                           ; Switch size 1, requested type "simple"
  6196                           ; Number of cases is 2, Range of values is 0 to 1
  6197                           ; switch strategies available:
  6198                           ; Name         Instructions Cycles
  6199                           ; simple_byte            7     4 (average)
  6200                           ;	Chosen strategy is simple_byte
  6201  0095AA  0A00               	xorlw	0	; case 0
  6202  0095AC  B4D8               	btfsc	status,2,c
  6203  0095AE  D7F1               	goto	l15206
  6204  0095B0  0A01               	xorlw	1	; case 1
  6205  0095B2  B4D8               	btfsc	status,2,c
  6206  0095B4  D7F1               	goto	l15208
  6207  0095B6  D7F3               	goto	l15210
  6208  0095B8                     l15218:
  6209  0095B8  0100               	movlb	0	; () banked
  6210  0095BA  5165               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  6211                           
  6212                           ; Switch size 1, requested type "simple"
  6213                           ; Number of cases is 1, Range of values is 0 to 0
  6214                           ; switch strategies available:
  6215                           ; Name         Instructions Cycles
  6216                           ; simple_byte            4     3 (average)
  6217                           ;	Chosen strategy is simple_byte
  6218  0095BC  0A00               	xorlw	0	; case 0
  6219  0095BE  0012               	return	
  6220  0095C0                     __end_of_RADIO_DIO1:
  6221                           	opt callstack 0
  6222                           
  6223 ;; *************** function _RADIO_RxTimeout *****************
  6224 ;; Defined at:
  6225 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;		None
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;Total ram usage:        0 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; Hardware stack levels required when called:    9
  6246 ;; This function calls:
  6247 ;;		_LORAWAN_RxTimeout
  6248 ;;		_RADIO_RegisterWrite
  6249 ;;		_RADIO_WriteMode
  6250 ;;		_SwTimerStop
  6251 ;; This function is called by:
  6252 ;;		_RADIO_DIO1
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           	psect	text44
  6257  008ECA                     __ptext44:
  6258                           	opt callstack 0
  6259  008ECA                     _RADIO_RxTimeout:
  6260                           	opt callstack 19
  6261                           
  6262                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  6263                           
  6264                           ;incstack = 0
  6265  008ECA  0101               	movlb	1	; () banked
  6266  008ECC  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
  6267  008ECE  EC46  F046         	call	_SwTimerStop
  6268                           
  6269                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  6270  008ED2  0E80               	movlw	128
  6271  008ED4  6E03               	movwf	RADIO_RegisterWrite@value,c
  6272  008ED6  0E12               	movlw	18
  6273  008ED8  ECF7  F045         	call	_RADIO_RegisterWrite
  6274                           
  6275                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  6276  008EDC  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6277  008EE0  0E00               	movlw	0
  6278  008EE2  6E07               	movwf	RADIO_WriteMode@blocking,c
  6279  008EE4  0E00               	movlw	0
  6280  008EE6  EC6A  F058         	call	_RADIO_WriteMode
  6281                           
  6282                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  6283  008EEA  0101               	movlb	1	; () banked
  6284  008EEC  933B               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  6285                           
  6286                           ; BSR set to: 1
  6287                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  6288  008EEE  EC5A  F06C         	call	_LORAWAN_RxTimeout	;wreg free
  6289  008EF2  0012               	return		;funcret
  6290  008EF4                     __end_of_RADIO_RxTimeout:
  6291                           	opt callstack 0
  6292                           
  6293 ;; *************** function _RADIO_FHSSChangeChannel *****************
  6294 ;; Defined at:
  6295 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  irqFlags        1    0        unsigned char 
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		wreg, status,2, status,0, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6312 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;Total ram usage:        1 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    4
  6316 ;; This function calls:
  6317 ;;		_RADIO_RegisterRead
  6318 ;;		_RADIO_RegisterWrite
  6319 ;;		_RADIO_WriteFrequency
  6320 ;; This function is called by:
  6321 ;;		_RADIO_DIO1
  6322 ;;		_RADIO_DIO2
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text45
  6327  00918E                     __ptext45:
  6328                           	opt callstack 0
  6329  00918E                     _RADIO_FHSSChangeChannel:
  6330                           	opt callstack 24
  6331                           
  6332                           ;incstack = 0
  6333  00918E  0E12               	movlw	18
  6334  009190  EC71  F046         	call	_RADIO_RegisterRead
  6335                           
  6336                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  6337  009194  0101               	movlb	1	; () banked
  6338  009196  5136               	movf	(_RadioConfiguration+30)& (0+255),w,b
  6339  009198  1137               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  6340  00919A  B4D8               	btfsc	status,2,c
  6341  00919C  D00E               	goto	l605
  6342                           
  6343                           ; BSR set to: 1
  6344                           ;radio_driver_SX1276.c: 1164: {;radio_driver_SX1276.c: 1165: if ((0) != RadioConfigurati
      +                          on.fhssNextFrequency)
  6345  00919E  5147               	movf	(_RadioConfiguration+47)& (0+255),w,b
  6346  0091A0  1148               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  6347  0091A2  B4D8               	btfsc	status,2,c
  6348  0091A4  D00A               	goto	l605
  6349                           
  6350                           ; BSR set to: 1
  6351                           ;radio_driver_SX1276.c: 1166: {;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioC
      +                          onfiguration.fhssNextFrequency());
  6352  0091A6  0E00               	movlw	0
  6353  0091A8  6E0E               	movwf	RADIO_WriteFrequency@frequency,c
  6354  0091AA  0E00               	movlw	0
  6355  0091AC  6E0F               	movwf	RADIO_WriteFrequency@frequency+1,c
  6356  0091AE  0E00               	movlw	0
  6357  0091B0  6E10               	movwf	RADIO_WriteFrequency@frequency+2,c
  6358  0091B2  0E00               	movlw	0
  6359  0091B4  6E11               	movwf	RADIO_WriteFrequency@frequency+3,c
  6360  0091B6  ECF6  F057         	call	_RADIO_WriteFrequency	;wreg free
  6361  0091BA                     l605:
  6362                           
  6363                           ;radio_driver_SX1276.c: 1168: };radio_driver_SX1276.c: 1169: };radio_driver_SX1276.c: 11
      +                          72: RADIO_RegisterWrite(0x12, 1<<(1));
  6364  0091BA  0E02               	movlw	2
  6365  0091BC  6E03               	movwf	RADIO_RegisterWrite@value,c
  6366  0091BE  0E12               	movlw	18
  6367  0091C0  ECF7  F045         	call	_RADIO_RegisterWrite
  6368  0091C4  0012               	return		;funcret
  6369  0091C6                     __end_of_RADIO_FHSSChangeChannel:
  6370                           	opt callstack 0
  6371                           
  6372 ;; *************** function _RADIO_DIO0 *****************
  6373 ;; Defined at:
  6374 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;		None
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  opMode          1  143[BANK0 ] unsigned char 
  6379 ;;  dioMapping      1  142[BANK0 ] unsigned char 
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6392 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6393 ;;Total ram usage:        4 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:   10
  6396 ;; This function calls:
  6397 ;;		_RADIO_FSKPacketSent
  6398 ;;		_RADIO_FSKPayloadReady
  6399 ;;		_RADIO_RegisterRead
  6400 ;;		_RADIO_RxDone
  6401 ;;		_RADIO_TxDone
  6402 ;;		_RADIO_UnhandledInterrupt
  6403 ;; This function is called by:
  6404 ;;		_LORAWAN_Mainloop
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text46
  6409  00A496                     __ptext46:
  6410                           	opt callstack 0
  6411  00A496                     _RADIO_DIO0:
  6412                           	opt callstack 19
  6413                           
  6414                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;;radio_driver_SX1276.c: 1180: uint8_t o
      +                          pMode;;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6
      +                          );
  6415                           
  6416                           ;incstack = 0
  6417  00A496  0E40               	movlw	64
  6418  00A498  EC71  F046         	call	_RADIO_RegisterRead
  6419  00A49C  0100               	movlb	0	; () banked
  6420  00A49E  6FEC               	movwf	??_RADIO_DIO0& (0+255),b
  6421  00A4A0  0E06               	movlw	6
  6422  00A4A2  6FED               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  6423  00A4A4                     u17565:
  6424  00A4A4  90D8               	bcf	status,0,c
  6425  00A4A6  33EC               	rrcf	??_RADIO_DIO0& (0+255),f,b
  6426  00A4A8  2FED               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  6427  00A4AA  D7FC               	goto	u17565
  6428  00A4AC  51EC               	movf	??_RADIO_DIO0& (0+255),w,b
  6429  00A4AE  0B03               	andlw	3
  6430  00A4B0  6FEE               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  6431                           
  6432                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  6433  00A4B2  0E01               	movlw	1
  6434  00A4B4  EC71  F046         	call	_RADIO_RegisterRead
  6435  00A4B8  0100               	movlb	0	; () banked
  6436  00A4BA  6FEF               	movwf	RADIO_DIO0@opMode& (0+255),b
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  6440  00A4BC  BFEF               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
  6441  00A4BE  D00B               	goto	l15184
  6442  00A4C0  D02A               	goto	l15200
  6443  00A4C2                     l15176:
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
  6447  00A4C2  EC19  F057         	call	_RADIO_RxDone	;wreg free
  6448                           
  6449                           ;radio_driver_SX1276.c: 1191: break;
  6450  00A4C6  0012               	return	
  6451  00A4C8                     l15178:
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
  6455  00A4C8  ECD5  F059         	call	_RADIO_TxDone	;wreg free
  6456                           
  6457                           ;radio_driver_SX1276.c: 1194: break;
  6458  00A4CC  0012               	return	
  6459  00A4CE                     l15180:
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  6463  00A4CE  0E01               	movlw	1
  6464  00A4D0  EC50  F047         	call	_RADIO_UnhandledInterrupt
  6465                           
  6466                           ;radio_driver_SX1276.c: 1197: break;
  6467  00A4D4  0012               	return	
  6468  00A4D6                     l15184:
  6469                           
  6470                           ; BSR set to: 0
  6471  00A4D6  51EE               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  6472                           
  6473                           ; Switch size 1, requested type "simple"
  6474                           ; Number of cases is 2, Range of values is 0 to 1
  6475                           ; switch strategies available:
  6476                           ; Name         Instructions Cycles
  6477                           ; simple_byte            7     4 (average)
  6478                           ;	Chosen strategy is simple_byte
  6479  00A4D8  0A00               	xorlw	0	; case 0
  6480  00A4DA  B4D8               	btfsc	status,2,c
  6481  00A4DC  D7F2               	goto	l15176
  6482  00A4DE  0A01               	xorlw	1	; case 1
  6483  00A4E0  B4D8               	btfsc	status,2,c
  6484  00A4E2  D7F2               	goto	l15178
  6485  00A4E4  D7F4               	goto	l15180
  6486  00A4E6                     l15186:
  6487                           
  6488                           ; BSR set to: 0
  6489                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  6490  00A4E6  0E07               	movlw	7
  6491  00A4E8  17EF               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  6492                           
  6493                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  6494  00A4EA  0E03               	movlw	3
  6495  00A4EC  19EF               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  6496  00A4EE  A4D8               	btfss	status,2,c
  6497  00A4F0  D003               	goto	l15190
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;radio_driver_SX1276.c: 1209: {;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  6501  00A4F2  EC4A  F05B         	call	_RADIO_FSKPacketSent	;wreg free
  6502                           
  6503                           ;radio_driver_SX1276.c: 1212: }
  6504  00A4F6  0012               	return	
  6505  00A4F8                     l15190:
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  6509  00A4F8  0E05               	movlw	5
  6510  00A4FA  19EF               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  6511  00A4FC  A4D8               	btfss	status,2,c
  6512  00A4FE  D003               	goto	l15194
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;radio_driver_SX1276.c: 1214: {;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  6516  00A500  EC0F  F054         	call	_RADIO_FSKPayloadReady	;wreg free
  6517                           
  6518                           ;radio_driver_SX1276.c: 1217: }
  6519  00A504  0012               	return	
  6520  00A506                     l15194:
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;radio_driver_SX1276.c: 1218: else;radio_driver_SX1276.c: 1219: {;radio_driver_SX1276.c:
      +                           1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
  6524  00A506  0E00               	movlw	0
  6525  00A508  EC50  F047         	call	_RADIO_UnhandledInterrupt
  6526  00A50C  0012               	return	
  6527  00A50E                     l15196:
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  6531  00A50E  0E00               	movlw	0
  6532  00A510  EC50  F047         	call	_RADIO_UnhandledInterrupt
  6533                           
  6534                           ;radio_driver_SX1276.c: 1225: break;
  6535  00A514  0012               	return	
  6536  00A516                     l15200:
  6537                           
  6538                           ; BSR set to: 0
  6539  00A516  51EE               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  6540                           
  6541                           ; Switch size 1, requested type "simple"
  6542                           ; Number of cases is 1, Range of values is 0 to 0
  6543                           ; switch strategies available:
  6544                           ; Name         Instructions Cycles
  6545                           ; simple_byte            4     3 (average)
  6546                           ;	Chosen strategy is simple_byte
  6547  00A518  0A00               	xorlw	0	; case 0
  6548  00A51A  B4D8               	btfsc	status,2,c
  6549  00A51C  D7E4               	goto	l15186
  6550  00A51E  D7F7               	goto	l15196
  6551  00A520                     __end_of_RADIO_DIO0:
  6552                           	opt callstack 0
  6553                           
  6554 ;; *************** function _RADIO_UnhandledInterrupt *****************
  6555 ;; Defined at:
  6556 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  modulation      1    wreg     enum E5853
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  modulation      1    4[COMRAM] enum E5853
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      void 
  6563 ;; Registers used:
  6564 ;;		wreg, status,2, status,0, cstack
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;Total ram usage:        1 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    3
  6577 ;; This function calls:
  6578 ;;		_RADIO_RegisterWrite
  6579 ;; This function is called by:
  6580 ;;		_RADIO_DIO0
  6581 ;;		_RADIO_DIO1
  6582 ;;		_RADIO_DIO2
  6583 ;;		_RADIO_DIO3
  6584 ;;		_RADIO_DIO4
  6585 ;;		_RADIO_DIO5
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text47
  6590  008EA0                     __ptext47:
  6591                           	opt callstack 0
  6592  008EA0                     _RADIO_UnhandledInterrupt:
  6593                           	opt callstack 25
  6594                           
  6595                           ;incstack = 0
  6596                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  6597  008EA0  6E05               	movwf	RADIO_UnhandledInterrupt@modulation,c
  6598                           
  6599                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  6600  008EA2  0405               	decf	RADIO_UnhandledInterrupt@modulation,w,c
  6601  008EA4  A4D8               	btfss	status,2,c
  6602  008EA6  D006               	goto	l14876
  6603                           
  6604                           ;radio_driver_SX1276.c: 1145: {;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0
      +                          xFF);
  6605  008EA8  0EFF               	movlw	255
  6606  008EAA  6E03               	movwf	RADIO_RegisterWrite@value,c
  6607  008EAC  0E12               	movlw	18
  6608  008EAE  ECF7  F045         	call	_RADIO_RegisterWrite
  6609                           
  6610                           ;radio_driver_SX1276.c: 1147: }
  6611  008EB2  0012               	return	
  6612  008EB4                     l14876:
  6613                           
  6614                           ;radio_driver_SX1276.c: 1148: else;radio_driver_SX1276.c: 1149: {;radio_driver_SX1276.c:
      +                           1152: RADIO_RegisterWrite(0x3E, 0xFF);
  6615  008EB4  0EFF               	movlw	255
  6616  008EB6  6E03               	movwf	RADIO_RegisterWrite@value,c
  6617  008EB8  0E3E               	movlw	62
  6618  008EBA  ECF7  F045         	call	_RADIO_RegisterWrite
  6619                           
  6620                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  6621  008EBE  0EFF               	movlw	255
  6622  008EC0  6E03               	movwf	RADIO_RegisterWrite@value,c
  6623  008EC2  0E3F               	movlw	63
  6624  008EC4  ECF7  F045         	call	_RADIO_RegisterWrite
  6625  008EC8  0012               	return		;funcret
  6626  008ECA                     __end_of_RADIO_UnhandledInterrupt:
  6627                           	opt callstack 0
  6628                           
  6629 ;; *************** function _RADIO_TxDone *****************
  6630 ;; Defined at:
  6631 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  timeOnAir       4   26[BANK0 ] unsigned long 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;Total ram usage:        8 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    8
  6652 ;; This function calls:
  6653 ;;		_LORAWAN_TxDone
  6654 ;;		_RADIO_RegisterWrite
  6655 ;;		_RADIO_WriteMode
  6656 ;;		_SwTimerReadValue
  6657 ;;		_SwTimerStop
  6658 ;;		___lmul
  6659 ;; This function is called by:
  6660 ;;		_RADIO_DIO0
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664                           	psect	text48
  6665  00B3AA                     __ptext48:
  6666                           	opt callstack 0
  6667  00B3AA                     _RADIO_TxDone:
  6668                           	opt callstack 20
  6669                           
  6670                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;;radio_driver_SX1276.c: 1082: SwTimerSt
      +                          op(RadioConfiguration.watchdogTimerId);
  6671                           
  6672                           ;incstack = 0
  6673  00B3AA  0101               	movlb	1	; () banked
  6674  00B3AC  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
  6675  00B3AE  EC46  F046         	call	_SwTimerStop
  6676                           
  6677                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  6678  00B3B2  0E08               	movlw	8
  6679  00B3B4  6E03               	movwf	RADIO_RegisterWrite@value,c
  6680  00B3B6  0E12               	movlw	18
  6681  00B3B8  ECF7  F045         	call	_RADIO_RegisterWrite
  6682                           
  6683                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  6684  00B3BC  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6685  00B3C0  0E00               	movlw	0
  6686  00B3C2  6E07               	movwf	RADIO_WriteMode@blocking,c
  6687  00B3C4  0E00               	movlw	0
  6688  00B3C6  EC6A  F058         	call	_RADIO_WriteMode
  6689                           
  6690                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  6691  00B3CA  0101               	movlb	1	; () banked
  6692  00B3CC  913B               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  6693                           
  6694                           ; BSR set to: 1
  6695                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  6696  00B3CE  B93B               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  6697  00B3D0  0012               	return	
  6698                           
  6699                           ; BSR set to: 1
  6700                           ;radio_driver_SX1276.c: 1087: {;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)2000
      +                          0) - ((SwTimerReadValue(RadioConfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint
      +                          32_t)(SwTimerReadValue(RadioConfiguration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((
      +                          uint32_t)(SwTimerReadValue(RadioConfiguration.t
  6701  00B3D2  513F               	movf	(_RadioConfiguration+39)& (0+255),w,b
  6702  00B3D4  ECE3  F048         	call	_SwTimerReadValue
  6703  00B3D8  502D               	movf	?_SwTimerReadValue+3,w,c
  6704  00B3DA  E108               	bnz	u16870
  6705  00B3DC  0E1F               	movlw	31
  6706  00B3DE  5C2A               	subwf	?_SwTimerReadValue,w,c
  6707  00B3E0  0EAC               	movlw	172
  6708  00B3E2  582B               	subwfb	?_SwTimerReadValue+1,w,c
  6709  00B3E4  0EDF               	movlw	223
  6710  00B3E6  582C               	subwfb	?_SwTimerReadValue+2,w,c
  6711  00B3E8  A0D8               	btfss	status,0,c
  6712  00B3EA  D020               	goto	l14842
  6713  00B3EC                     u16870:
  6714  00B3EC  0101               	movlb	1	; () banked
  6715  00B3EE  513F               	movf	(_RadioConfiguration+39)& (0+255),w,b
  6716  00B3F0  ECE3  F048         	call	_SwTimerReadValue
  6717  00B3F4  0E0D               	movlw	13
  6718  00B3F6  D005               	goto	u16880
  6719  00B3F8                     u16885:
  6720  00B3F8  90D8               	bcf	status,0,c
  6721  00B3FA  322D               	rrcf	?_SwTimerReadValue+3,f,c
  6722  00B3FC  322C               	rrcf	?_SwTimerReadValue+2,f,c
  6723  00B3FE  322B               	rrcf	?_SwTimerReadValue+1,f,c
  6724  00B400  322A               	rrcf	?_SwTimerReadValue,f,c
  6725  00B402                     u16880:
  6726  00B402  2EE8               	decfsz	wreg,f,c
  6727  00B404  D7F9               	goto	u16885
  6728  00B406  C02A  F033         	movff	?_SwTimerReadValue,___lmul@multiplier
  6729  00B40A  C02B  F034         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  6730  00B40E  C02C  F035         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  6731  00B412  C02D  F036         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  6732  00B416  0E7D               	movlw	125
  6733  00B418  6E37               	movwf	___lmul@multiplicand,c
  6734  00B41A  0E00               	movlw	0
  6735  00B41C  6E38               	movwf	___lmul@multiplicand+1,c
  6736  00B41E  0E00               	movlw	0
  6737  00B420  6E39               	movwf	___lmul@multiplicand+2,c
  6738  00B422  0E00               	movlw	0
  6739  00B424  6E3A               	movwf	___lmul@multiplicand+3,c
  6740  00B426  ECD4  F04B         	call	___lmul	;wreg free
  6741  00B42A  D01F               	goto	L5
  6742  00B42C                     l14842:
  6743  00B42C  0101               	movlb	1	; () banked
  6744  00B42E  513F               	movf	(_RadioConfiguration+39)& (0+255),w,b
  6745  00B430  ECE3  F048         	call	_SwTimerReadValue
  6746  00B434  C02A  F033         	movff	?_SwTimerReadValue,___lmul@multiplier
  6747  00B438  C02B  F034         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  6748  00B43C  C02C  F035         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  6749  00B440  C02D  F036         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  6750  00B444  0E7D               	movlw	125
  6751  00B446  6E37               	movwf	___lmul@multiplicand,c
  6752  00B448  0E00               	movlw	0
  6753  00B44A  6E38               	movwf	___lmul@multiplicand+1,c
  6754  00B44C  0E00               	movlw	0
  6755  00B44E  6E39               	movwf	___lmul@multiplicand+2,c
  6756  00B450  0E00               	movlw	0
  6757  00B452  6E3A               	movwf	___lmul@multiplicand+3,c
  6758  00B454  ECD4  F04B         	call	___lmul	;wreg free
  6759  00B458  0E0D               	movlw	13
  6760  00B45A  D005               	goto	u16890
  6761  00B45C                     u16895:
  6762  00B45C  90D8               	bcf	status,0,c
  6763  00B45E  3236               	rrcf	?___lmul+3,f,c
  6764  00B460  3235               	rrcf	?___lmul+2,f,c
  6765  00B462  3234               	rrcf	?___lmul+1,f,c
  6766  00B464  3233               	rrcf	?___lmul,f,c
  6767  00B466                     u16890:
  6768  00B466  2EE8               	decfsz	wreg,f,c
  6769  00B468  D7F9               	goto	u16895
  6770  00B46A                     L5:
  6771  00B46A  C033  F07E         	movff	?___lmul,_RADIO_TxDone$795
  6772  00B46E  C034  F07F         	movff	?___lmul+1,_RADIO_TxDone$795+1
  6773  00B472  C035  F080         	movff	?___lmul+2,_RADIO_TxDone$795+2
  6774  00B476  C036  F081         	movff	?___lmul+3,_RADIO_TxDone$795+3
  6775  00B47A  0100               	movlb	0	; () banked
  6776  00B47C  517E               	movf	_RADIO_TxDone$795& (0+255),w,b
  6777  00B47E  0820               	sublw	32
  6778  00B480  6F7A               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  6779  00B482  0E4E               	movlw	78
  6780  00B484  557F               	subfwb	(_RADIO_TxDone$795+1)& (0+255),w,b
  6781  00B486  6F7B               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  6782  00B488  0E00               	movlw	0
  6783  00B48A  5580               	subfwb	(_RADIO_TxDone$795+2)& (0+255),w,b
  6784  00B48C  6F7C               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  6785  00B48E  0E00               	movlw	0
  6786  00B490  5581               	subfwb	(_RADIO_TxDone$795+3)& (0+255),w,b
  6787  00B492  6F7D               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  6791  00B494  C07A  F054         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  6792  00B498  C07B  F055         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  6793  00B49C  EC48  F076         	call	_LORAWAN_TxDone	;wreg free
  6794  00B4A0  0012               	return		;funcret
  6795  00B4A2                     __end_of_RADIO_TxDone:
  6796                           	opt callstack 0
  6797                           
  6798 ;; *************** function _RADIO_RxDone *****************
  6799 ;; Defined at:
  6800 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;		None
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  i               1  139[BANK0 ] unsigned char 
  6805 ;;  irqFlags        1  138[BANK0 ] unsigned char 
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  1    wreg      void 
  6808 ;; Registers used:
  6809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6816 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;Total ram usage:        2 bytes
  6820 ;; Hardware stack levels used:    1
  6821 ;; Hardware stack levels required when called:    9
  6822 ;; This function calls:
  6823 ;;		_HALSPICSAssert
  6824 ;;		_HALSPICSDeassert
  6825 ;;		_HALSPISend
  6826 ;;		_LORAWAN_RxDone
  6827 ;;		_RADIO_RegisterRead
  6828 ;;		_RADIO_RegisterWrite
  6829 ;;		_RADIO_WriteMode
  6830 ;;		_SwTimerStop
  6831 ;;		___abdiv
  6832 ;; This function is called by:
  6833 ;;		_RADIO_DIO0
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text49
  6838  00AE32                     __ptext49:
  6839                           	opt callstack 0
  6840  00AE32                     _RADIO_RxDone:
  6841                           	opt callstack 19
  6842                           
  6843                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;;radio_driver_SX1276.c: 964: irqFlags =
      +                           RADIO_RegisterRead(0x12);
  6844                           
  6845                           ;incstack = 0
  6846  00AE32  0E12               	movlw	18
  6847  00AE34  EC71  F046         	call	_RADIO_RegisterRead
  6848  00AE38  0100               	movlb	0	; () banked
  6849  00AE3A  6FEA               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  6850                           
  6851                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  6852  00AE3C  0E70               	movlw	112
  6853  00AE3E  6E03               	movwf	RADIO_RegisterWrite@value,c
  6854  00AE40  0E12               	movlw	18
  6855  00AE42  ECF7  F045         	call	_RADIO_RegisterWrite
  6856                           
  6857                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  6858  00AE46  0100               	movlb	0	; () banked
  6859  00AE48  51EA               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  6860  00AE4A  0B50               	andlw	80
  6861  00AE4C  0A50               	xorlw	80
  6862  00AE4E  A4D8               	btfss	status,2,c
  6863  00AE50  0012               	return	
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;radio_driver_SX1276.c: 969: {;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguratio
      +                          n.watchdogTimerId);
  6867  00AE52  0101               	movlb	1	; () banked
  6868  00AE54  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
  6869  00AE56  EC46  F046         	call	_SwTimerStop
  6870                           
  6871                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  6872  00AE5A  0E1C               	movlw	28
  6873  00AE5C  EC71  F046         	call	_RADIO_RegisterRead
  6874  00AE60  0100               	movlb	0	; () banked
  6875  00AE62  6FEB               	movwf	RADIO_RxDone@i& (0+255),b
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  6879  00AE64  0101               	movlb	1	; () banked
  6880  00AE66  5134               	movf	(_RadioConfiguration+28)& (0+255),w,b
  6881  00AE68  B4D8               	btfsc	status,2,c
  6882  00AE6A  D004               	goto	u16790
  6883                           
  6884                           ; BSR set to: 1
  6885  00AE6C  0100               	movlb	0	; () banked
  6886  00AE6E  ABEA               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  6887                           
  6888                           ; BSR set to: 0
  6889  00AE70  ADEB               	btfss	RADIO_RxDone@i& (0+255),6,b
  6890  00AE72  D039               	goto	l14766
  6891  00AE74                     u16790:
  6892                           
  6893                           ;radio_driver_SX1276.c: 976: {;radio_driver_SX1276.c: 984: RadioConfiguration.dataBuffer
      +                          Len = RADIO_RegisterRead(0x13);
  6894  00AE74  0E13               	movlw	19
  6895  00AE76  EC71  F046         	call	_RADIO_RegisterRead
  6896  00AE7A  0101               	movlb	1	; () banked
  6897  00AE7C  6F3C               	movwf	(_RadioConfiguration+36)& (0+255),b
  6898                           
  6899                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  6900  00AE7E  0E00               	movlw	0
  6901  00AE80  6E03               	movwf	RADIO_RegisterWrite@value,c
  6902  00AE82  0E0D               	movlw	13
  6903  00AE84  ECF7  F045         	call	_RADIO_RegisterWrite
  6904                           
  6905                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  6906  00AE88  ECE2  F044         	call	_HALSPICSAssert	;wreg free
  6907                           
  6908                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  6909  00AE8C  0E00               	movlw	0
  6910  00AE8E  EC1B  F045         	call	_HALSPISend
  6911                           
  6912                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  6913  00AE92  0E00               	movlw	0
  6914  00AE94  0100               	movlb	0	; () banked
  6915  00AE96  6FEB               	movwf	RADIO_RxDone@i& (0+255),b
  6916  00AE98  D00F               	goto	l14756
  6917  00AE9A                     l14752:
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;radio_driver_SX1276.c: 990: {;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer
      +                          [i] = HALSPISend(0xFF);
  6921  00AE9A  51EB               	movf	RADIO_RxDone@i& (0+255),w,b
  6922  00AE9C  0101               	movlb	1	; () banked
  6923  00AE9E  253D               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  6924  00AEA0  6ED9               	movwf	fsr2l,c
  6925  00AEA2  0100               	movlb	0	; () banked
  6926  00AEA4  0E00               	movlw	0
  6927  00AEA6  0101               	movlb	1	; () banked
  6928  00AEA8  213E               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  6929  00AEAA  6EDA               	movwf	fsr2h,c
  6930  00AEAC  0EFF               	movlw	255
  6931  00AEAE  EC1B  F045         	call	_HALSPISend
  6932  00AEB2  6EDF               	movwf	indf2,c
  6933  00AEB4  0100               	movlb	0	; () banked
  6934  00AEB6  2BEB               	incf	RADIO_RxDone@i& (0+255),f,b
  6935  00AEB8                     l14756:
  6936                           
  6937                           ; BSR set to: 0
  6938  00AEB8  0101               	movlb	1	; () banked
  6939  00AEBA  513C               	movf	(_RadioConfiguration+36)& (0+255),w,b
  6940  00AEBC  0100               	movlb	0	; () banked
  6941  00AEBE  5DEB               	subwf	RADIO_RxDone@i& (0+255),w,b
  6942  00AEC0  A0D8               	btfss	status,0,c
  6943  00AEC2  D7EB               	goto	l14752
  6944                           
  6945                           ; BSR set to: 0
  6946                           ;radio_driver_SX1276.c: 992: };radio_driver_SX1276.c: 993: HALSPICSDeassert();
  6947  00AEC4  ECE4  F044         	call	_HALSPICSDeassert	;wreg free
  6948                           
  6949                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  6950  00AEC8  0101               	movlb	1	; () banked
  6951  00AECA  853B               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  6952                           
  6953                           ; BSR set to: 1
  6954                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  6955  00AECC  0E19               	movlw	25
  6956  00AECE  EC71  F046         	call	_RADIO_RegisterRead
  6957  00AED2  0101               	movlb	1	; () banked
  6958  00AED4  6F4A               	movwf	(_RadioConfiguration+50)& (0+255),b
  6959                           
  6960                           ; BSR set to: 1
  6961                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  6962  00AED6  0E04               	movlw	4
  6963  00AED8  6E01               	movwf	___abdiv@divisor,c
  6964  00AEDA  514A               	movf	(_RadioConfiguration+50)& (0+255),w,b
  6965  00AEDC  EC14  F04D         	call	___abdiv
  6966  00AEE0  0101               	movlb	1	; () banked
  6967  00AEE2  6F4A               	movwf	(_RadioConfiguration+50)& (0+255),b
  6968                           
  6969                           ;radio_driver_SX1276.c: 998: }
  6970  00AEE4  D002               	goto	l14768
  6971  00AEE6                     l14766:
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;radio_driver_SX1276.c: 999: else;radio_driver_SX1276.c: 1000: {;radio_driver_SX1276.c: 
      +                          1002: RadioConfiguration.flags |= (1 << (3));
  6975  00AEE6  0101               	movlb	1	; () banked
  6976  00AEE8  873B               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  6977  00AEEA                     l14768:
  6978                           
  6979                           ; BSR set to: 1
  6980                           ;radio_driver_SX1276.c: 1003: };radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
  6981  00AEEA  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  6982  00AEEE  0E00               	movlw	0
  6983  00AEF0  6E07               	movwf	RADIO_WriteMode@blocking,c
  6984  00AEF2  0E00               	movlw	0
  6985  00AEF4  EC6A  F058         	call	_RADIO_WriteMode
  6986                           
  6987                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  6988  00AEF8  0101               	movlb	1	; () banked
  6989  00AEFA  933B               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  6990                           
  6991                           ; BSR set to: 1
  6992                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  6993  00AEFC  C13D  F0E2         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  6994  00AF00  C13E  F0E3         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  6995  00AF04  C13C  F0E4         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  6996  00AF08  ECB5  F079         	call	_LORAWAN_RxDone	;wreg free
  6997  00AF0C  0012               	return		;funcret
  6998  00AF0E                     __end_of_RADIO_RxDone:
  6999                           	opt callstack 0
  7000                           
  7001 ;; *************** function ___abdiv *****************
  7002 ;; Defined at:
  7003 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\abdiv.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  dividend        1    wreg     char 
  7006 ;;  divisor         1    0[COMRAM] char 
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;  dividend        1    6[COMRAM] char 
  7009 ;;  quotient        1    5[COMRAM] char 
  7010 ;;  sign            1    4[COMRAM] unsigned char 
  7011 ;;  counter         1    3[COMRAM] unsigned char 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  1    wreg      char 
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7021 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;Total ram usage:        7 bytes
  7026 ;; Hardware stack levels used:    1
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		_RADIO_RxDone
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text50
  7035  009A28                     __ptext50:
  7036                           	opt callstack 0
  7037  009A28                     ___abdiv:
  7038                           	opt callstack 27
  7039                           
  7040                           ;incstack = 0
  7041                           ;___abdiv@dividend stored from wreg
  7042  009A28  6E07               	movwf	___abdiv@dividend,c
  7043  009A2A  0E00               	movlw	0
  7044  009A2C  6E05               	movwf	___abdiv@sign,c
  7045  009A2E  AE01               	btfss	___abdiv@divisor,7,c
  7046  009A30  D003               	goto	l11032
  7047  009A32  6C01               	negf	___abdiv@divisor,c
  7048  009A34  0E01               	movlw	1
  7049  009A36  6E05               	movwf	___abdiv@sign,c
  7050  009A38                     l11032:
  7051  009A38  AE07               	btfss	___abdiv@dividend,7,c
  7052  009A3A  D003               	goto	l11038
  7053  009A3C  6C07               	negf	___abdiv@dividend,c
  7054  009A3E  0E01               	movlw	1
  7055  009A40  1A05               	xorwf	___abdiv@sign,f,c
  7056  009A42                     l11038:
  7057  009A42  0E00               	movlw	0
  7058  009A44  6E06               	movwf	___abdiv@quotient,c
  7059  009A46  5001               	movf	___abdiv@divisor,w,c
  7060  009A48  B4D8               	btfsc	status,2,c
  7061  009A4A  D01A               	goto	l11060
  7062  009A4C  0E01               	movlw	1
  7063  009A4E  6E04               	movwf	___abdiv@counter,c
  7064  009A50  D003               	goto	l11048
  7065  009A52                     l11044:
  7066  009A52  90D8               	bcf	status,0,c
  7067  009A54  3601               	rlcf	___abdiv@divisor,f,c
  7068  009A56  2A04               	incf	___abdiv@counter,f,c
  7069  009A58                     l11048:
  7070  009A58  C001  F002         	movff	___abdiv@divisor,??___abdiv
  7071  009A5C  6A03               	clrf	(??___abdiv+1)& (0+255),c
  7072  009A5E  BE02               	btfsc	??___abdiv& (0+255),7,c
  7073  009A60  0603               	decf	(??___abdiv+1)& (0+255),f,c
  7074  009A62  AE02               	btfss	??___abdiv,7,c
  7075  009A64  D7F6               	goto	l11044
  7076  009A66                     u11360:
  7077  009A66  90D8               	bcf	status,0,c
  7078  009A68  3606               	rlcf	___abdiv@quotient,f,c
  7079  009A6A  5001               	movf	___abdiv@divisor,w,c
  7080  009A6C  5C07               	subwf	___abdiv@dividend,w,c
  7081  009A6E  A0D8               	btfss	status,0,c
  7082  009A70  D003               	goto	l11056
  7083  009A72  5001               	movf	___abdiv@divisor,w,c
  7084  009A74  5E07               	subwf	___abdiv@dividend,f,c
  7085  009A76  8006               	bsf	___abdiv@quotient,0,c
  7086  009A78                     l11056:
  7087  009A78  90D8               	bcf	status,0,c
  7088  009A7A  3201               	rrcf	___abdiv@divisor,f,c
  7089  009A7C  2E04               	decfsz	___abdiv@counter,f,c
  7090  009A7E  D7F3               	goto	u11360
  7091  009A80                     l11060:
  7092  009A80  5005               	movf	___abdiv@sign,w,c
  7093  009A82  A4D8               	btfss	status,2,c
  7094  009A84  6C06               	negf	___abdiv@quotient,c
  7095  009A86  5006               	movf	___abdiv@quotient,w,c
  7096  009A88  0012               	return		;funcret
  7097  009A8A                     __end_of___abdiv:
  7098                           	opt callstack 0
  7099                           
  7100 ;; *************** function _RADIO_FSKPayloadReady *****************
  7101 ;; Defined at:
  7102 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;		None
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  i               1  139[BANK0 ] unsigned char 
  7107 ;;  irqFlags        1  138[BANK0 ] unsigned char 
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  1    wreg      void 
  7110 ;; Registers used:
  7111 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;Total ram usage:        2 bytes
  7122 ;; Hardware stack levels used:    1
  7123 ;; Hardware stack levels required when called:    9
  7124 ;; This function calls:
  7125 ;;		_HALSPICSAssert
  7126 ;;		_HALSPICSDeassert
  7127 ;;		_HALSPISend
  7128 ;;		_LORAWAN_RxDone
  7129 ;;		_LORAWAN_RxTimeout
  7130 ;;		_RADIO_RegisterRead
  7131 ;;		_RADIO_WriteMode
  7132 ;;		_SwTimerStop
  7133 ;; This function is called by:
  7134 ;;		_RADIO_DIO0
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text51
  7139  00A81E                     __ptext51:
  7140                           	opt callstack 0
  7141  00A81E                     _RADIO_FSKPayloadReady:
  7142                           	opt callstack 19
  7143                           
  7144                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;;radio_driver_SX1276.c: 1013: uint8_t i;;
      +                          radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
  7145                           
  7146                           ;incstack = 0
  7147  00A81E  0E3F               	movlw	63
  7148  00A820  EC71  F046         	call	_RADIO_RegisterRead
  7149  00A824  0100               	movlb	0	; () banked
  7150  00A826  6FEA               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
  7154  00A828  A5EA               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
  7155  00A82A  0012               	return	
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;radio_driver_SX1276.c: 1017: {;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfigurat
      +                          ion.watchdogTimerId);
  7159  00A82C  0101               	movlb	1	; () banked
  7160  00A82E  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7161  00A830  EC46  F046         	call	_SwTimerStop
  7162                           
  7163                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
  7164  00A834  0101               	movlb	1	; () banked
  7165  00A836  5140               	movf	(_RadioConfiguration+40)& (0+255),w,b
  7166  00A838  EC46  F046         	call	_SwTimerStop
  7167                           
  7168                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
  7169  00A83C  ECE2  F044         	call	_HALSPICSAssert	;wreg free
  7170                           
  7171                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
  7172  00A840  0E00               	movlw	0
  7173  00A842  EC1B  F045         	call	_HALSPISend
  7174                           
  7175                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
  7176  00A846  0EFF               	movlw	255
  7177  00A848  EC1B  F045         	call	_HALSPISend
  7178  00A84C  0101               	movlb	1	; () banked
  7179  00A84E  6F3C               	movwf	(_RadioConfiguration+36)& (0+255),b
  7180                           
  7181                           ; BSR set to: 1
  7182                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  7183  00A850  0E00               	movlw	0
  7184  00A852  0100               	movlb	0	; () banked
  7185  00A854  6FEB               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
  7186  00A856  D00F               	goto	l14792
  7187  00A858                     l14788:
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;radio_driver_SX1276.c: 1029: {;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuff
      +                          er[i] = HALSPISend(0xFF);
  7191  00A858  51EB               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
  7192  00A85A  0101               	movlb	1	; () banked
  7193  00A85C  253D               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  7194  00A85E  6ED9               	movwf	fsr2l,c
  7195  00A860  0100               	movlb	0	; () banked
  7196  00A862  0E00               	movlw	0
  7197  00A864  0101               	movlb	1	; () banked
  7198  00A866  213E               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  7199  00A868  6EDA               	movwf	fsr2h,c
  7200  00A86A  0EFF               	movlw	255
  7201  00A86C  EC1B  F045         	call	_HALSPISend
  7202  00A870  6EDF               	movwf	indf2,c
  7203  00A872  0100               	movlb	0	; () banked
  7204  00A874  2BEB               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
  7205  00A876                     l14792:
  7206                           
  7207                           ; BSR set to: 0
  7208  00A876  0101               	movlb	1	; () banked
  7209  00A878  513C               	movf	(_RadioConfiguration+36)& (0+255),w,b
  7210  00A87A  0100               	movlb	0	; () banked
  7211  00A87C  5DEB               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
  7212  00A87E  A0D8               	btfss	status,0,c
  7213  00A880  D7EB               	goto	l14788
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;radio_driver_SX1276.c: 1031: };radio_driver_SX1276.c: 1032: HALSPICSDeassert();
  7217  00A882  ECE4  F044         	call	_HALSPICSDeassert	;wreg free
  7218                           
  7219                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7220  00A886  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7221  00A88A  0E00               	movlw	0
  7222  00A88C  6E07               	movwf	RADIO_WriteMode@blocking,c
  7223  00A88E  0E00               	movlw	0
  7224  00A890  EC6A  F058         	call	_RADIO_WriteMode
  7225                           
  7226                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
  7227  00A894  0101               	movlb	1	; () banked
  7228  00A896  933B               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7229                           
  7230                           ; BSR set to: 1
  7231                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
  7232  00A898  0E80               	movlw	128
  7233  00A89A  6F4A               	movwf	(_RadioConfiguration+50)& (0+255),b
  7234                           
  7235                           ; BSR set to: 1
  7236                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
  7237  00A89C  0534               	decf	(_RadioConfiguration+28)& (0+255),w,b
  7238  00A89E  A4D8               	btfss	status,2,c
  7239  00A8A0  D003               	goto	u16840
  7240                           
  7241                           ; BSR set to: 1
  7242                           ;radio_driver_SX1276.c: 1040: {;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags &
      +                           (1<<(1))))
  7243  00A8A2  0100               	movlb	0	; () banked
  7244  00A8A4  A3EA               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
  7245  00A8A6  D003               	goto	l14808
  7246  00A8A8                     u16840:
  7247                           
  7248                           ;radio_driver_SX1276.c: 1042: {;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |=
      +                           (1 << (2));
  7249  00A8A8  0101               	movlb	1	; () banked
  7250  00A8AA  853B               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  7251                           
  7252                           ;radio_driver_SX1276.c: 1044: }
  7253  00A8AC  D002               	goto	l14812
  7254  00A8AE                     l14808:
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;radio_driver_SX1276.c: 1045: else;radio_driver_SX1276.c: 1046: {;radio_driver_SX1276.c:
      +                           1047: RadioConfiguration.flags &= ~(1 << (2));
  7258  00A8AE  0101               	movlb	1	; () banked
  7259  00A8B0  953B               	bcf	(_RadioConfiguration+35)& (0+255),2,b
  7260  00A8B2                     l14812:
  7261                           
  7262                           ; BSR set to: 1
  7263                           ;radio_driver_SX1276.c: 1053: };radio_driver_SX1276.c: 1055: if ((RadioConfiguration.fla
      +                          gs & (1 << (2))) != 0)
  7264  00A8B2  A53B               	btfss	(_RadioConfiguration+35)& (0+255),2,b
  7265  00A8B4  D009               	goto	l14816
  7266                           
  7267                           ; BSR set to: 1
  7268                           ;radio_driver_SX1276.c: 1056: {;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfigu
      +                          ration.dataBuffer, RadioConfiguration.dataBufferLen);
  7269  00A8B6  C13D  F0E2         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  7270  00A8BA  C13E  F0E3         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  7271  00A8BE  C13C  F0E4         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  7272  00A8C2  ECB5  F079         	call	_LORAWAN_RxDone	;wreg free
  7273                           
  7274                           ;radio_driver_SX1276.c: 1058: }
  7275  00A8C6  0012               	return	
  7276  00A8C8                     l14816:
  7277                           
  7278                           ; BSR set to: 1
  7279                           ;radio_driver_SX1276.c: 1059: else;radio_driver_SX1276.c: 1060: {;radio_driver_SX1276.c:
      +                           1061: LORAWAN_RxTimeout();
  7280  00A8C8  EC5A  F06C         	call	_LORAWAN_RxTimeout	;wreg free
  7281  00A8CC  0012               	return		;funcret
  7282  00A8CE                     __end_of_RADIO_FSKPayloadReady:
  7283                           	opt callstack 0
  7284                           
  7285 ;; *************** function _LORAWAN_RxTimeout *****************
  7286 ;; Defined at:
  7287 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;		None
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  minim           4    0[BANK0 ] unsigned long 
  7292 ;;  i               1    4[BANK0 ] unsigned char 
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  1    wreg      void 
  7295 ;; Registers used:
  7296 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7305 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7306 ;;Total ram usage:        9 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:    8
  7309 ;; This function calls:
  7310 ;;		_LORAWAN_ReceiveWindow2Callback
  7311 ;;		_RADIO_Transmit
  7312 ;;		_ResetParametersForConfirmedTransmission
  7313 ;;		_ResetParametersForUnconfirmedTransmission
  7314 ;;		_RxData
  7315 ;;		_SelectChannelForTransmission
  7316 ;;		_SetJoinFailState
  7317 ;;		_SwTimerSetTimeout
  7318 ;;		_SwTimerStart
  7319 ;;		___lldiv
  7320 ;; This function is called by:
  7321 ;;		_RADIO_FSKPayloadReady
  7322 ;;		_RADIO_RxTimeout
  7323 ;;		_RADIO_RxFSKTimeout
  7324 ;;		_RADIO_WatchdogTimeout
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text52
  7329  00D8B4                     __ptext52:
  7330                           	opt callstack 0
  7331  00D8B4                     _LORAWAN_RxTimeout:
  7332                           	opt callstack 19
  7333                           
  7334                           ;lorawan_eu.c: 466: uint8_t i;;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
  7335                           
  7336                           ;incstack = 0
  7337  00D8B4  0100               	movlb	0	; () banked
  7338  00D8B6  6960               	setf	LORAWAN_RxTimeout@minim& (0+255),b
  7339  00D8B8  6961               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
  7340  00D8BA  6962               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
  7341  00D8BC  6963               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
  7342                           
  7343                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
  7344  00D8BE  0102               	movlb	2	; () banked
  7345  00D8C0  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7346  00D8C2  D151               	goto	l14590
  7347                           
  7348                           ; BSR set to: 2
  7349                           ;lorawan_eu.c: 470: {;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
  7350  00D8C4  5102               	movf	(_loRa+2)& (0+255),w,b
  7351  00D8C6  0B0F               	andlw	15
  7352  00D8C8  0A03               	xorlw	3
  7353  00D8CA  A4D8               	btfss	status,2,c
  7354  00D8CC  D010               	goto	l1062
  7355                           
  7356                           ; BSR set to: 2
  7357                           ;lorawan_eu.c: 473: {;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
  7358  00D8CE  5112               	movf	(_loRa+18)& (0+255),w,b
  7359  00D8D0  A4D8               	btfss	status,2,c
  7360  00D8D2  D005               	goto	l14524
  7361                           
  7362                           ; BSR set to: 2
  7363                           ;lorawan_eu.c: 475: {;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
  7364  00D8D4  5102               	movf	(_loRa+2)& (0+255),w,b
  7365  00D8D6  0BF0               	andlw	-16
  7366  00D8D8  0904               	iorlw	4
  7367  00D8DA  6F02               	movwf	(_loRa+2)& (0+255),b
  7368                           
  7369                           ;lorawan_eu.c: 477: }
  7370  00D8DC  0012               	return	
  7371  00D8DE                     l14524:
  7372                           
  7373                           ; BSR set to: 2
  7374                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
  7375  00D8DE  0E02               	movlw	2
  7376  00D8E0  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7377  00D8E2  A4D8               	btfss	status,2,c
  7378  00D8E4  0012               	return	
  7379                           
  7380                           ; BSR set to: 2
  7381                           ;lorawan_eu.c: 479: {;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
  7382  00D8E6  0E00               	movlw	0
  7383  00D8E8  ECE9  F055         	call	_LORAWAN_ReceiveWindow2Callback
  7384                           
  7385                           ;lorawan_eu.c: 481: };lorawan_eu.c: 482: }
  7386  00D8EC  0012               	return	
  7387  00D8EE                     l1062:
  7388                           
  7389                           ; BSR set to: 2
  7390                           ;lorawan_eu.c: 483: else;lorawan_eu.c: 484: {;lorawan_eu.c: 486: if (loRa.lorawanMacStat
      +                          us.joining == 1)
  7391  00D8EE  A500               	btfss	_loRa& (0+255),2,b
  7392  00D8F0  D003               	goto	l1067
  7393                           
  7394                           ; BSR set to: 2
  7395                           ;lorawan_eu.c: 487: {;lorawan_eu.c: 488: SetJoinFailState();
  7396  00D8F2  ECBC  F047         	call	_SetJoinFailState	;wreg free
  7397                           
  7398                           ;lorawan_eu.c: 489: }
  7399  00D8F6  0012               	return	
  7400  00D8F8                     l1067:
  7401                           
  7402                           ; BSR set to: 2
  7403                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
  7404  00D8F8  A902               	btfss	(_loRa+2)& (0+255),4,b
  7405  00D8FA  0012               	return	
  7406                           
  7407                           ; BSR set to: 2
  7408                           ;lorawan_eu.c: 492: {;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDo
      +                          wnlinkMessage == 1)
  7409  00D8FC  A100               	btfss	_loRa& (0+255),0,b
  7410  00D8FE  D053               	goto	l14546
  7411                           
  7412                           ; BSR set to: 2
  7413                           ;lorawan_eu.c: 494: {;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= l
      +                          oRa.maxRepetitionsConfirmedUplink)
  7414  00D900  51D9               	movf	(_loRa+217)& (0+255),w,b
  7415  00D902  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  7416  00D904  A0D8               	btfss	status,0,c
  7417  00D906  D035               	goto	l14540
  7418                           
  7419                           ; BSR set to: 2
  7420                           ;lorawan_eu.c: 496: {;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  7421  00D908  5102               	movf	(_loRa+2)& (0+255),w,b
  7422  00D90A  0BF0               	andlw	-16
  7423  00D90C  0906               	iorlw	6
  7424  00D90E  6F02               	movwf	(_loRa+2)& (0+255),b
  7425                           
  7426                           ; BSR set to: 2
  7427                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
  7428  00D910  51A0               	movf	(_loRa+160)& (0+255),w,b
  7429  00D912  6E5B               	movwf	??_LORAWAN_RxTimeout& (0+255),c
  7430  00D914  51A1               	movf	(_loRa+161)& (0+255),w,b
  7431  00D916  6E5C               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),c
  7432  00D918  6A5D               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),c
  7433  00D91A  6A5E               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),c
  7434  00D91C  0E0C               	movlw	12
  7435  00D91E                     u16295:
  7436  00D91E  90D8               	bcf	status,0,c
  7437  00D920  365B               	rlcf	??_LORAWAN_RxTimeout,f,c
  7438  00D922  365C               	rlcf	??_LORAWAN_RxTimeout+1,f,c
  7439  00D924  365D               	rlcf	??_LORAWAN_RxTimeout+2,f,c
  7440  00D926  365E               	rlcf	??_LORAWAN_RxTimeout+3,f,c
  7441  00D928  2EE8               	decfsz	wreg,f,c
  7442  00D92A  D7F9               	goto	u16295
  7443  00D92C  C05B  F001         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
  7444  00D930  C05C  F002         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
  7445  00D934  C05D  F003         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
  7446  00D938  C05E  F004         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
  7447  00D93C  0E7D               	movlw	125
  7448  00D93E  6E05               	movwf	___lldiv@divisor,c
  7449  00D940  0E00               	movlw	0
  7450  00D942  6E06               	movwf	___lldiv@divisor+1,c
  7451  00D944  0E00               	movlw	0
  7452  00D946  6E07               	movwf	___lldiv@divisor+2,c
  7453  00D948  0E00               	movlw	0
  7454  00D94A  6E08               	movwf	___lldiv@divisor+3,c
  7455  00D94C  ECFE  F050         	call	___lldiv	;wreg free
  7456  00D950  C001  F00E         	movff	?___lldiv,SwTimerSetTimeout@timeout
  7457  00D954  C002  F00F         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  7458  00D958  C003  F010         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  7459  00D95C  C004  F011         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  7460  00D960  0102               	movlb	2	; () banked
  7461  00D962  51E8               	movf	(_loRa+232)& (0+255),w,b
  7462  00D964  EC5C  F049         	call	_SwTimerSetTimeout
  7463                           
  7464                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
  7465  00D968  0102               	movlb	2	; () banked
  7466  00D96A  51E8               	movf	(_loRa+232)& (0+255),w,b
  7467  00D96C  ECC3  F051         	call	_SwTimerStart
  7468                           
  7469                           ;lorawan_eu.c: 500: }
  7470  00D970  0012               	return	
  7471  00D972                     l14540:
  7472                           
  7473                           ; BSR set to: 2
  7474                           ;lorawan_eu.c: 501: else;lorawan_eu.c: 502: {;lorawan_eu.c: 503: ResetParametersForConfi
      +                          rmedTransmission ();
  7475  00D972  EC49  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7476  00D976                     
  7477                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
  7478  00D976  0100               	movlb	0	; () banked
  7479  00D978  51F0               	movf	_rxPayload& (0+255),w,b
  7480  00D97A  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  7481  00D97C  B4D8               	btfsc	status,2,c
  7482  00D97E  0012               	return	
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;lorawan_eu.c: 505: {;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7486  00D980  0E00               	movlw	0
  7487  00D982  6E01               	movwf	RxData@pData,c
  7488  00D984  0E00               	movlw	0
  7489  00D986  6E02               	movwf	RxData@pData+1,c
  7490  00D988  0E00               	movlw	0
  7491  00D98A  6E03               	movwf	RxData@dataLength,c
  7492  00D98C  0E00               	movlw	0
  7493  00D98E  6E04               	movwf	RxData@status,c
  7494  00D990  D801               	call	u16318
  7495  00D992  0012               	return	
  7496  00D994                     u16318:
  7497  00D994  0005               	push	
  7498  00D996  6EFA               	movwf	pclath,c
  7499  00D998  51F0               	movf	_rxPayload& (0+255),w,b
  7500  00D99A  6EFD               	movwf	tosl,c
  7501  00D99C  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  7502  00D99E  6EFE               	movwf	tosh,c
  7503  00D9A0  6AFF               	clrf	tosu,c
  7504  00D9A2  50FA               	movf	pclath,w,c
  7505  00D9A4  0012               	return		;indir
  7506  00D9A6                     l14546:
  7507                           
  7508                           ; BSR set to: 2
  7509                           ;lorawan_eu.c: 511: else;lorawan_eu.c: 512: {;lorawan_eu.c: 513: if (loRa.counterRepetit
      +                          ionsUnconfirmedUplink <= loRa.maxRepetitionsUnconfirmedUplink)
  7510  00D9A6  51D8               	movf	(_loRa+216)& (0+255),w,b
  7511  00D9A8  5DD6               	subwf	(_loRa+214)& (0+255),w,b
  7512  00D9AA  A0D8               	btfss	status,0,c
  7513  00D9AC  D0C2               	goto	l14584
  7514                           
  7515                           ; BSR set to: 2
  7516                           ;lorawan_eu.c: 514: {;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  7517  00D9AE  5102               	movf	(_loRa+2)& (0+255),w,b
  7518  00D9B0  0BF0               	andlw	-16
  7519  00D9B2  0906               	iorlw	6
  7520  00D9B4  6F02               	movwf	(_loRa+2)& (0+255),b
  7521                           
  7522                           ; BSR set to: 2
  7523                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
  7524  00D9B6  0E01               	movlw	1
  7525  00D9B8  ECE4  F04C         	call	_SelectChannelForTransmission
  7526  00D9BC  0900               	iorlw	0
  7527  00D9BE  A4D8               	btfss	status,2,c
  7528  00D9C0  D016               	goto	l14564
  7529                           
  7530                           ;lorawan_eu.c: 517: {;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPa
      +                          cketLength) == OK)
  7531  00D9C2  0EB0               	movlw	low (_macBuffer+16)
  7532  00D9C4  6E4A               	movwf	RADIO_Transmit@buffer,c
  7533  00D9C6  0E04               	movlw	high (_macBuffer+16)
  7534  00D9C8  6E4B               	movwf	RADIO_Transmit@buffer+1,c
  7535  00D9CA  C2D4  F04C         	movff	_loRa+212,RADIO_Transmit@bufferLen
  7536  00D9CE  ECF7  F065         	call	_RADIO_Transmit	;wreg free
  7537  00D9D2  504A               	movf	?_RADIO_Transmit,w,c
  7538  00D9D4  104B               	iorwf	?_RADIO_Transmit+1,w,c
  7539  00D9D6  A4D8               	btfss	status,2,c
  7540  00D9D8  D007               	goto	l14558
  7541                           
  7542                           ;lorawan_eu.c: 520: {;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  7543  00D9DA  0102               	movlb	2	; () banked
  7544  00D9DC  2BD8               	incf	(_loRa+216)& (0+255),f,b
  7545                           
  7546                           ; BSR set to: 2
  7547                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  7548  00D9DE  5102               	movf	(_loRa+2)& (0+255),w,b
  7549  00D9E0  0BF0               	andlw	-16
  7550  00D9E2  0901               	iorlw	1
  7551  00D9E4  6F02               	movwf	(_loRa+2)& (0+255),b
  7552                           
  7553                           ;lorawan_eu.c: 523: }
  7554  00D9E6  0012               	return	
  7555  00D9E8                     l14558:
  7556                           
  7557                           ;lorawan_eu.c: 524: else;lorawan_eu.c: 526: {;lorawan_eu.c: 527: ResetParametersForUncon
      +                          firmedTransmission ();
  7558  00D9E8  EC91  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7559  00D9EC  D7C4               	goto	L30
  7560  00D9EE                     l14564:
  7561                           
  7562                           ;lorawan_eu.c: 534: else;lorawan_eu.c: 535: {;lorawan_eu.c: 537: for (i = 0; i <= loRa.m
      +                          axChannels; i ++)
  7563  00D9EE  0E00               	movlw	0
  7564  00D9F0  0100               	movlb	0	; () banked
  7565  00D9F2  6F64               	movwf	LORAWAN_RxTimeout@i& (0+255),b
  7566  00D9F4  D062               	goto	l14580
  7567  00D9F6                     l14566:
  7568                           
  7569                           ; BSR set to: 2
  7570                           ;lorawan_eu.c: 538: {;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].
      +                          channelTimer != 0) && (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Ch
      +                          annels[i].dataRange.min) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
  7571  00D9F6  0100               	movlb	0	; () banked
  7572  00D9F8  5164               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  7573  00D9FA  0D0E               	mullw	14
  7574  00D9FC  0E04               	movlw	low (_Channels+4)
  7575  00D9FE  24F3               	addwf	prodl,w,c
  7576  00DA00  6ED9               	movwf	fsr2l,c
  7577  00DA02  0E03               	movlw	high (_Channels+4)
  7578  00DA04  20F4               	addwfc	prodh,w,c
  7579  00DA06  6EDA               	movwf	fsr2h,c
  7580  00DA08  04DE               	decf	postinc2,w,c
  7581  00DA0A  A4D8               	btfss	status,2,c
  7582  00DA0C  D054               	goto	l14578
  7583                           
  7584                           ; BSR set to: 0
  7585  00DA0E  5164               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  7586  00DA10  0D0E               	mullw	14
  7587  00DA12  0E08               	movlw	low (_Channels+8)
  7588  00DA14  24F3               	addwf	prodl,w,c
  7589  00DA16  6ED9               	movwf	fsr2l,c
  7590  00DA18  0E03               	movlw	high (_Channels+8)
  7591  00DA1A  20F4               	addwfc	prodh,w,c
  7592  00DA1C  6EDA               	movwf	fsr2h,c
  7593  00DA1E  50DE               	movf	postinc2,w,c
  7594  00DA20  10DE               	iorwf	postinc2,w,c
  7595  00DA22  10DE               	iorwf	postinc2,w,c
  7596  00DA24  10DE               	iorwf	postinc2,w,c
  7597  00DA26  B4D8               	btfsc	status,2,c
  7598  00DA28  D046               	goto	l14578
  7599                           
  7600                           ; BSR set to: 0
  7601  00DA2A  5164               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  7602  00DA2C  0D0E               	mullw	14
  7603  00DA2E  0E08               	movlw	low (_Channels+8)
  7604  00DA30  24F3               	addwf	prodl,w,c
  7605  00DA32  6ED9               	movwf	fsr2l,c
  7606  00DA34  0E03               	movlw	high (_Channels+8)
  7607  00DA36  20F4               	addwfc	prodh,w,c
  7608  00DA38  6EDA               	movwf	fsr2h,c
  7609  00DA3A  50DE               	movf	postinc2,w,c
  7610  00DA3C  5D60               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
  7611  00DA3E  50DE               	movf	postinc2,w,c
  7612  00DA40  5961               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
  7613  00DA42  50DE               	movf	postinc2,w,c
  7614  00DA44  5962               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
  7615  00DA46  50DE               	movf	postinc2,w,c
  7616  00DA48  5963               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
  7617  00DA4A  A0D8               	btfss	status,0,c
  7618  00DA4C  D034               	goto	l14578
  7619                           
  7620                           ; BSR set to: 0
  7621  00DA4E  5164               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  7622  00DA50  0D0E               	mullw	14
  7623  00DA52  0E05               	movlw	low (_Channels+5)
  7624  00DA54  24F3               	addwf	prodl,w,c
  7625  00DA56  6ED9               	movwf	fsr2l,c
  7626  00DA58  0E03               	movlw	high (_Channels+5)
  7627  00DA5A  20F4               	addwfc	prodh,w,c
  7628  00DA5C  6EDA               	movwf	fsr2h,c
  7629  00DA5E  0103               	movlb	3	; () banked
  7630  00DA60  50DF               	movf	223,w,c
  7631  00DA62  0B0F               	andlw	15
  7632  00DA64  6E5B               	movwf	??_LORAWAN_RxTimeout& (0+255),c
  7633  00DA66  505B               	movf	??_LORAWAN_RxTimeout,w,c
  7634  00DA68  0102               	movlb	2	; () banked
  7635  00DA6A  5DDF               	subwf	(_loRa+223)& (0+255),w,b
  7636  00DA6C  A0D8               	btfss	status,0,c
  7637  00DA6E  D023               	goto	l14578
  7638                           
  7639                           ; BSR set to: 2
  7640  00DA70  0100               	movlb	0	; () banked
  7641  00DA72  5164               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  7642  00DA74  0D0E               	mullw	14
  7643  00DA76  0E05               	movlw	low (_Channels+5)
  7644  00DA78  24F3               	addwf	prodl,w,c
  7645  00DA7A  6ED9               	movwf	fsr2l,c
  7646  00DA7C  0E03               	movlw	high (_Channels+5)
  7647  00DA7E  20F4               	addwfc	prodh,w,c
  7648  00DA80  6EDA               	movwf	fsr2h,c
  7649  00DA82  0103               	movlb	3	; () banked
  7650  00DA84  38DF               	swapf	223,w,c
  7651  00DA86  0B0F               	andlw	15
  7652  00DA88  6E5B               	movwf	??_LORAWAN_RxTimeout& (0+255),c
  7653  00DA8A  0102               	movlb	2	; () banked
  7654  00DA8C  51DF               	movf	(_loRa+223)& (0+255),w,b
  7655  00DA8E  5C5B               	subwf	??_LORAWAN_RxTimeout,w,c
  7656  00DA90  A0D8               	btfss	status,0,c
  7657  00DA92  D011               	goto	l14578
  7658                           
  7659                           ; BSR set to: 2
  7660                           ;lorawan_eu.c: 540: {;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
  7661  00DA94  0100               	movlb	0	; () banked
  7662  00DA96  5164               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  7663  00DA98  0D0E               	mullw	14
  7664  00DA9A  0E08               	movlw	low (_Channels+8)
  7665  00DA9C  24F3               	addwf	prodl,w,c
  7666  00DA9E  6ED9               	movwf	fsr2l,c
  7667  00DAA0  0E03               	movlw	high (_Channels+8)
  7668  00DAA2  20F4               	addwfc	prodh,w,c
  7669  00DAA4  6EDA               	movwf	fsr2h,c
  7670  00DAA6  CFDE F060          	movff	postinc2,LORAWAN_RxTimeout@minim
  7671  00DAAA  CFDE F061          	movff	postinc2,LORAWAN_RxTimeout@minim+1
  7672  00DAAE  CFDE F062          	movff	postinc2,LORAWAN_RxTimeout@minim+2
  7673  00DAB2  CFDE F063          	movff	postinc2,LORAWAN_RxTimeout@minim+3
  7674  00DAB6                     l14578:
  7675  00DAB6  0100               	movlb	0	; () banked
  7676  00DAB8  2B64               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
  7677  00DABA                     l14580:
  7678                           
  7679                           ; BSR set to: 0
  7680  00DABA  5164               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
  7681  00DABC  0102               	movlb	2	; () banked
  7682  00DABE  5DED               	subwf	(_loRa+237)& (0+255),w,b
  7683  00DAC0  B0D8               	btfsc	status,0,c
  7684  00DAC2  D799               	goto	l14566
  7685                           
  7686                           ; BSR set to: 2
  7687                           ;lorawan_eu.c: 542: };lorawan_eu.c: 543: };lorawan_eu.c: 544: SwTimerSetTimeout (loRa.un
      +                          confirmedRetransmisionTimerId, ( (((uint32_t)(minim + 50)) << (12)) / 125UL ) );
  7688  00DAC4  C060  F05B         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
  7689  00DAC8  C061  F05C         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
  7690  00DACC  C062  F05D         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
  7691  00DAD0  C063  F05E         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
  7692  00DAD4  0E0C               	movlw	12
  7693  00DAD6                     u16425:
  7694  00DAD6  90D8               	bcf	status,0,c
  7695  00DAD8  365B               	rlcf	??_LORAWAN_RxTimeout,f,c
  7696  00DADA  365C               	rlcf	??_LORAWAN_RxTimeout+1,f,c
  7697  00DADC  365D               	rlcf	??_LORAWAN_RxTimeout+2,f,c
  7698  00DADE  365E               	rlcf	??_LORAWAN_RxTimeout+3,f,c
  7699  00DAE0  2EE8               	decfsz	wreg,f,c
  7700  00DAE2  D7F9               	goto	u16425
  7701  00DAE4  0E00               	movlw	0
  7702  00DAE6  245B               	addwf	??_LORAWAN_RxTimeout,w,c
  7703  00DAE8  6E01               	movwf	___lldiv@dividend,c
  7704  00DAEA  0E20               	movlw	32
  7705  00DAEC  205C               	addwfc	??_LORAWAN_RxTimeout+1,w,c
  7706  00DAEE  6E02               	movwf	___lldiv@dividend+1,c
  7707  00DAF0  0E03               	movlw	3
  7708  00DAF2  205D               	addwfc	??_LORAWAN_RxTimeout+2,w,c
  7709  00DAF4  6E03               	movwf	___lldiv@dividend+2,c
  7710  00DAF6  0E00               	movlw	0
  7711  00DAF8  205E               	addwfc	??_LORAWAN_RxTimeout+3,w,c
  7712  00DAFA  6E04               	movwf	___lldiv@dividend+3,c
  7713  00DAFC  0E7D               	movlw	125
  7714  00DAFE  6E05               	movwf	___lldiv@divisor,c
  7715  00DB00  0E00               	movlw	0
  7716  00DB02  6E06               	movwf	___lldiv@divisor+1,c
  7717  00DB04  0E00               	movlw	0
  7718  00DB06  6E07               	movwf	___lldiv@divisor+2,c
  7719  00DB08  0E00               	movlw	0
  7720  00DB0A  6E08               	movwf	___lldiv@divisor+3,c
  7721  00DB0C  ECFE  F050         	call	___lldiv	;wreg free
  7722  00DB10  C001  F00E         	movff	?___lldiv,SwTimerSetTimeout@timeout
  7723  00DB14  C002  F00F         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  7724  00DB18  C003  F010         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  7725  00DB1C  C004  F011         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  7726  00DB20  0102               	movlb	2	; () banked
  7727  00DB22  51EA               	movf	(_loRa+234)& (0+255),w,b
  7728  00DB24  EC5C  F049         	call	_SwTimerSetTimeout
  7729                           
  7730                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
  7731  00DB28  0102               	movlb	2	; () banked
  7732  00DB2A  51EA               	movf	(_loRa+234)& (0+255),w,b
  7733  00DB2C  ECC3  F051         	call	_SwTimerStart
  7734  00DB30  0012               	return	
  7735  00DB32                     l14584:
  7736                           
  7737                           ; BSR set to: 2
  7738                           ;lorawan_eu.c: 548: else;lorawan_eu.c: 549: {;lorawan_eu.c: 550: ResetParametersForUncon
      +                          firmedTransmission ();
  7739  00DB32  EC91  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7740                           
  7741                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
  7742  00DB36  0100               	movlb	0	; () banked
  7743  00DB38  51F0               	movf	_rxPayload& (0+255),w,b
  7744  00DB3A  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  7745  00DB3C  B4D8               	btfsc	status,2,c
  7746  00DB3E  0012               	return	
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;lorawan_eu.c: 552: {;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
  7750  00DB40  0E00               	movlw	0
  7751  00DB42  6E01               	movwf	RxData@pData,c
  7752  00DB44  0E00               	movlw	0
  7753  00DB46  6E02               	movwf	RxData@pData+1,c
  7754  00DB48  0E00               	movlw	0
  7755  00DB4A  6E03               	movwf	RxData@dataLength,c
  7756  00DB4C  0E01               	movlw	1
  7757  00DB4E  6E04               	movwf	RxData@status,c
  7758  00DB50  D801               	call	u16448
  7759  00DB52  0012               	return	
  7760  00DB54                     u16448:
  7761  00DB54  0005               	push	
  7762  00DB56  6EFA               	movwf	pclath,c
  7763  00DB58  51F0               	movf	_rxPayload& (0+255),w,b
  7764  00DB5A  6EFD               	movwf	tosl,c
  7765  00DB5C  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  7766  00DB5E  6EFE               	movwf	tosh,c
  7767  00DB60  6AFF               	clrf	tosu,c
  7768  00DB62  50FA               	movf	pclath,w,c
  7769  00DB64  0012               	return		;indir
  7770  00DB66                     l14590:
  7771                           
  7772                           ; BSR set to: 2
  7773                           ;lorawan_eu.c: 560: else;lorawan_eu.c: 561: {;lorawan_eu.c: 563: if (rxPayload.RxAppData
      +                           != (0))
  7774  00DB66  0100               	movlb	0	; () banked
  7775  00DB68  51F0               	movf	_rxPayload& (0+255),w,b
  7776  00DB6A  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  7777  00DB6C  B4D8               	btfsc	status,2,c
  7778  00DB6E  0012               	return	
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;lorawan_eu.c: 564: {;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
  7782  00DB70  0E00               	movlw	0
  7783  00DB72  6E01               	movwf	RxData@pData,c
  7784  00DB74  0E00               	movlw	0
  7785  00DB76  6E02               	movwf	RxData@pData+1,c
  7786  00DB78  0E00               	movlw	0
  7787  00DB7A  6E03               	movwf	RxData@dataLength,c
  7788  00DB7C  0E02               	movlw	2
  7789  00DB7E  6E04               	movwf	RxData@status,c
  7790  00DB80  D801               	call	u16468
  7791  00DB82  0012               	return	
  7792  00DB84                     u16468:
  7793  00DB84  0005               	push	
  7794  00DB86  6EFA               	movwf	pclath,c
  7795  00DB88  51F0               	movf	_rxPayload& (0+255),w,b
  7796  00DB8A  6EFD               	movwf	tosl,c
  7797  00DB8C  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  7798  00DB8E  6EFE               	movwf	tosh,c
  7799  00DB90  6AFF               	clrf	tosu,c
  7800  00DB92  50FA               	movf	pclath,w,c
  7801  00DB94  0012               	return		;indir
  7802  00DB96                     __end_of_LORAWAN_RxTimeout:
  7803                           	opt callstack 0
  7804                           
  7805 ;; *************** function _LORAWAN_RxDone *****************
  7806 ;; Defined at:
  7807 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  buffer          2  130[BANK0 ] PTR unsigned char 
  7810 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  7811 ;;  bufferLength    1  132[BANK0 ] unsigned char 
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;  hdr             2   18[BANK1 ] PTR struct .
  7814 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  7815 ;;  joinAccept      2   15[BANK1 ] PTR struct .
  7816 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  7817 ;;  computedMic     4   11[BANK1 ] unsigned long 
  7818 ;;  extractedMic    4    3[BANK1 ] unsigned long 
  7819 ;;  packet          2    9[BANK1 ] PTR unsigned char 
  7820 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
  7821 ;;  frmPayloadLe    1   17[BANK1 ] unsigned char 
  7822 ;;  temp            1    8[BANK1 ] unsigned char 
  7823 ;;  bufferIndex     1    7[BANK1 ] unsigned char 
  7824 ;;  mhdr            1    2[BANK1 ] struct .
  7825 ;;  channelIndex    1    1[BANK1 ] unsigned char 
  7826 ;;  fPort           1    0[BANK1 ] unsigned char 
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  1    wreg      enum E6293
  7829 ;; Registers used:
  7830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  7831 ;; Tracked objects:
  7832 ;;		On entry : 0/0
  7833 ;;		On exit  : 0/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7836 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7839 ;;      Totals:         0       8      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7840 ;;Total ram usage:       28 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; Hardware stack levels required when called:    8
  7843 ;; This function calls:
  7844 ;;		_AESCmac
  7845 ;;		_AESEncodeLoRa
  7846 ;;		_AssembleEncryptionBlock
  7847 ;;		_CheckFlags
  7848 ;;		_CheckMcastFlags
  7849 ;;		_ComputeMic
  7850 ;;		_ComputeSessionKeys
  7851 ;;		_EncryptFRMPayload
  7852 ;;		_ExtractMic
  7853 ;;		_LORAWAN_EnterContinuousReceive
  7854 ;;		_LORAWAN_Send
  7855 ;;		_MacExecuteCommands
  7856 ;;		_RADIO_GetStatus
  7857 ;;		_RADIO_ReleaseData
  7858 ;;		_RxData
  7859 ;;		_SearchAvailableChannel
  7860 ;;		_SetJoinFailState
  7861 ;;		_SetReceptionNotOkState
  7862 ;;		_StartReTxTimer
  7863 ;;		_SwTimerStop
  7864 ;;		_UpdateCfList
  7865 ;;		_UpdateDLSettings
  7866 ;;		_UpdateJoinSuccessState
  7867 ;;		_UpdateReceiveDelays
  7868 ;;		_UpdateRetransmissionAckTimeoutState
  7869 ;;		_memcpy
  7870 ;; This function is called by:
  7871 ;;		_RADIO_RxDone
  7872 ;;		_RADIO_FSKPayloadReady
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           	psect	text53
  7877  00F36A                     __ptext53:
  7878                           	opt callstack 0
  7879  00F36A                     _LORAWAN_RxDone:
  7880                           	opt callstack 19
  7881                           
  7882                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;;lorawan.c: 1124: Mhdr_t mhdr;;lora
      +                          wan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;;lorawan.c: 1126: uint8_t frmPaylo
      +                          adLength;;lorawan.c: 1127: uint8_t *packet;;lorawan.c: 1128: uint8_t temp;;lorawan.c: 11
      +                          30: RADIO_ReleaseData();
  7883                           
  7884                           ;incstack = 0
  7885  00F36A  ECEA  F044         	call	_RADIO_ReleaseData	;wreg free
  7886                           
  7887                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
  7888  00F36E  0102               	movlb	2	; () banked
  7889  00F370  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7890  00F372  EF02  F07F         	goto	l14506
  7891                           
  7892                           ; BSR set to: 2
  7893                           ;lorawan.c: 1133: {;lorawan.c: 1134: mhdr.value = buffer[0];
  7894  00F376  C0E2  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
  7895  00F37A  C0E3  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
  7896  00F37E  50DF               	movf	indf2,w,c
  7897  00F380  0101               	movlb	1	; () banked
  7898  00F382  6FB7               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
  7899                           
  7900                           ; BSR set to: 1
  7901                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
  7902  00F384  39B7               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
  7903  00F386  32E8               	rrcf	wreg,f,c
  7904  00F388  0B07               	andlw	7
  7905  00F38A  06E8               	decf	wreg,f,c
  7906  00F38C  A4D8               	btfss	status,2,c
  7907  00F38E  D0CC               	goto	l14166
  7908                           
  7909                           ; BSR set to: 1
  7910  00F390  0102               	movlb	2	; () banked
  7911  00F392  511D               	movf	(_loRa+29)& (0+255),w,b
  7912  00F394  A4D8               	btfss	status,2,c
  7913  00F396  D0C8               	goto	l14166
  7914                           
  7915                           ; BSR set to: 2
  7916                           ;lorawan.c: 1136: {;lorawan.c: 1137: temp = bufferLength - 1;
  7917  00F398  0100               	movlb	0	; () banked
  7918  00F39A  05E4               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  7919  00F39C  0101               	movlb	1	; () banked
  7920  00F39E  D01E               	goto	L6
  7921  00F3A0                     l14116:
  7922                           
  7923                           ; BSR set to: 1
  7924                           ;lorawan.c: 1139: {;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.a
      +                          ctivationParameters.applicationKey);
  7925  00F3A0  0100               	movlb	0	; () banked
  7926  00F3A2  51E4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  7927  00F3A4  25E2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
  7928  00F3A6  6FE5               	movwf	??_LORAWAN_RxDone& (0+255),b
  7929  00F3A8  0E00               	movlw	0
  7930  00F3AA  21E3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
  7931  00F3AC  6FE6               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
  7932  00F3AE  0101               	movlb	1	; () banked
  7933  00F3B0  51BD               	movf	LORAWAN_RxDone@temp& (0+255),w,b
  7934  00F3B2  0100               	movlb	0	; () banked
  7935  00F3B4  5DE5               	subwf	??_LORAWAN_RxDone& (0+255),w,b
  7936  00F3B6  6E1F               	movwf	AESEncodeLoRa@block,c
  7937  00F3B8  51E6               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
  7938  00F3BA  A0D8               	btfss	status,0,c
  7939  00F3BC  05E6               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
  7940  00F3BE  6E20               	movwf	AESEncodeLoRa@block+1,c
  7941  00F3C0  0E42               	movlw	low (_loRa+66)
  7942  00F3C2  6E21               	movwf	AESEncodeLoRa@key,c
  7943  00F3C4  0E02               	movlw	high (_loRa+66)
  7944  00F3C6  6E22               	movwf	AESEncodeLoRa@key+1,c
  7945  00F3C8  EC5B  F048         	call	_AESEncodeLoRa	;wreg free
  7946                           
  7947                           ;lorawan.c: 1142: if (temp > 16)
  7948  00F3CC  0E10               	movlw	16
  7949  00F3CE  0101               	movlb	1	; () banked
  7950  00F3D0  65BD               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
  7951  00F3D2  D003               	goto	l14122
  7952                           
  7953                           ; BSR set to: 1
  7954                           ;lorawan.c: 1143: {;lorawan.c: 1144: temp -= 16;
  7955  00F3D4  0E10               	movlw	16
  7956  00F3D6  5FBD               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
  7957                           
  7958                           ;lorawan.c: 1145: }
  7959  00F3D8  D002               	goto	l1907
  7960  00F3DA                     l14122:
  7961                           
  7962                           ; BSR set to: 1
  7963                           ;lorawan.c: 1146: else;lorawan.c: 1147: {;lorawan.c: 1148: temp = 0;
  7964  00F3DA  0E00               	movlw	0
  7965  00F3DC                     L6:
  7966  00F3DC  6FBD               	movwf	LORAWAN_RxDone@temp& (0+255),b
  7967  00F3DE                     l1907:
  7968                           
  7969                           ; BSR set to: 1
  7970  00F3DE  51BD               	movf	LORAWAN_RxDone@temp& (0+255),w,b
  7971  00F3E0  A4D8               	btfss	status,2,c
  7972  00F3E2  D7DE               	goto	l14116
  7973                           
  7974                           ; BSR set to: 1
  7975                           ;lorawan.c: 1149: };lorawan.c: 1150: };lorawan.c: 1153: computedMic = ComputeMic (loRa.a
      +                          ctivationParameters.applicationKey, buffer, bufferLength - sizeof(extractedMic));
  7976  00F3E4  0E42               	movlw	low (_loRa+66)
  7977  00F3E6  6E5B               	movwf	ComputeMic@key,c
  7978  00F3E8  0E02               	movlw	high (_loRa+66)
  7979  00F3EA  6E5C               	movwf	ComputeMic@key+1,c
  7980  00F3EC  C0E2  F05D         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
  7981  00F3F0  C0E3  F05E         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
  7982  00F3F4  0100               	movlb	0	; () banked
  7983  00F3F6  51E4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  7984  00F3F8  0FFC               	addlw	252
  7985  00F3FA  6E5F               	movwf	ComputeMic@bufferLength,c
  7986  00F3FC  ECB4  F04C         	call	_ComputeMic	;wreg free
  7987  00F400  C05B  F1C0         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
  7988  00F404  C05C  F1C1         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
  7989  00F408  C05D  F1C2         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
  7990  00F40C  C05E  F1C3         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
  7991                           
  7992                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
  7993  00F410  C0E2  F00C         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
  7994  00F414  C0E3  F00D         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
  7995  00F418  C0E4  F00E         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
  7996  00F41C  EC92  F04A         	call	_ExtractMic	;wreg free
  7997  00F420  C00C  F1B8         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
  7998  00F424  C00D  F1B9         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
  7999  00F428  C00E  F1BA         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
  8000  00F42C  C00F  F1BB         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
  8001                           
  8002                           ;lorawan.c: 1155: if (extractedMic != computedMic)
  8003  00F430  0101               	movlb	1	; () banked
  8004  00F432  51C0               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
  8005  00F434  19B8               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
  8006  00F436  E10A               	bnz	u15550
  8007  00F438  51C1               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
  8008  00F43A  19B9               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
  8009  00F43C  E107               	bnz	u15550
  8010  00F43E  51C2               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
  8011  00F440  19BA               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
  8012  00F442  E104               	bnz	u15550
  8013  00F444  51C3               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
  8014  00F446  19BB               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
  8015  00F448  B4D8               	btfsc	status,2,c
  8016  00F44A  D011               	goto	l14140
  8017  00F44C                     u15550:
  8018                           
  8019                           ; BSR set to: 1
  8020                           ;lorawan.c: 1156: {;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa
      +                          .macStatus.macState == RX1_OPEN) && (loRa.rx2DelayExpired)))
  8021  00F44C  0102               	movlb	2	; () banked
  8022  00F44E  5102               	movf	(_loRa+2)& (0+255),w,b
  8023  00F450  0B0F               	andlw	15
  8024  00F452  0A05               	xorlw	5
  8025  00F454  B4D8               	btfsc	status,2,c
  8026  00F456  D008               	goto	u15580
  8027                           
  8028                           ; BSR set to: 2
  8029  00F458  5102               	movf	(_loRa+2)& (0+255),w,b
  8030  00F45A  0B0F               	andlw	15
  8031  00F45C  0A03               	xorlw	3
  8032  00F45E  A4D8               	btfss	status,2,c
  8033  00F460  0012               	return	
  8034                           
  8035                           ; BSR set to: 2
  8036  00F462  51F1               	movf	(_loRa+241)& (0+255),w,b
  8037  00F464  B4D8               	btfsc	status,2,c
  8038  00F466  0012               	return	
  8039  00F468                     u15580:
  8040                           
  8041                           ; BSR set to: 2
  8042                           ;lorawan.c: 1158: {;lorawan.c: 1159: SetJoinFailState();
  8043  00F468  ECBC  F047         	call	_SetJoinFailState	;wreg free
  8044                           
  8045                           ; BSR set to: 2
  8046                           ;lorawan.c: 1160: };lorawan.c: 1162: return INVALID_PARAMETER;;	Return value of _LORAWAN
      +                          _RxDone is never used
  8047  00F46C  0012               	return	
  8048  00F46E                     l14140:
  8049                           
  8050                           ; BSR set to: 1
  8051                           ;lorawan.c: 1163: };lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
  8052  00F46E  0102               	movlb	2	; () banked
  8053  00F470  5102               	movf	(_loRa+2)& (0+255),w,b
  8054  00F472  0B0F               	andlw	15
  8055  00F474  0A03               	xorlw	3
  8056  00F476  A4D8               	btfss	status,2,c
  8057  00F478  D003               	goto	l14144
  8058                           
  8059                           ; BSR set to: 2
  8060                           ;lorawan.c: 1167: {;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
  8061  00F47A  51E3               	movf	(_loRa+227)& (0+255),w,b
  8062  00F47C  EC46  F046         	call	_SwTimerStop
  8063  00F480                     l14144:
  8064                           
  8065                           ;lorawan.c: 1169: };lorawan.c: 1171: JoinAccept_t *joinAccept;;lorawan.c: 1172: joinAcce
      +                          pt = (JoinAccept_t*)buffer;
  8066  00F480  C0E2  F1C4         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
  8067  00F484  C0E3  F1C5         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
  8068                           
  8069                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
  8070  00F488  0101               	movlb	1	; () banked
  8071  00F48A  EE20 F007          	lfsr	2,7
  8072  00F48E  51C4               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
  8073  00F490  26D9               	addwf	fsr2l,f,c
  8074  00F492  51C5               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
  8075  00F494  22DA               	addwfc	fsr2h,f,c
  8076  00F496  CFDE F21E          	movff	postinc2,_loRa+30
  8077  00F49A  CFDE F21F          	movff	postinc2,_loRa+31
  8078  00F49E  CFDE F220          	movff	postinc2,_loRa+32
  8079  00F4A2  CFDE F221          	movff	postinc2,_loRa+33
  8080                           
  8081                           ; BSR set to: 1
  8082                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
  8083  00F4A6  EE20 F00C          	lfsr	2,12
  8084  00F4AA  51C4               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
  8085  00F4AC  26D9               	addwf	fsr2l,f,c
  8086  00F4AE  51C5               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
  8087  00F4B0  22DA               	addwfc	fsr2h,f,c
  8088  00F4B2  50DF               	movf	indf2,w,c
  8089  00F4B4  0B0F               	andlw	15
  8090  00F4B6  EC1F  F049         	call	_UpdateReceiveDelays
  8091                           
  8092                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
  8093  00F4BA  0101               	movlb	1	; () banked
  8094  00F4BC  EE20 F00B          	lfsr	2,11
  8095  00F4C0  51C4               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
  8096  00F4C2  26D9               	addwf	fsr2l,f,c
  8097  00F4C4  51C5               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
  8098  00F4C6  22DA               	addwfc	fsr2h,f,c
  8099  00F4C8  38DF               	swapf	223,w,c
  8100  00F4CA  0B07               	andlw	7
  8101  00F4CC  6E01               	movwf	UpdateDLSettings@dlRx1DrOffset,c
  8102  00F4CE  EE20 F00B          	lfsr	2,11
  8103  00F4D2  51C4               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
  8104  00F4D4  26D9               	addwf	fsr2l,f,c
  8105  00F4D6  51C5               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
  8106  00F4D8  22DA               	addwfc	fsr2h,f,c
  8107  00F4DA  50DF               	movf	223,w,c
  8108  00F4DC  0B0F               	andlw	15
  8109  00F4DE  ECDF  F045         	call	_UpdateDLSettings
  8110                           
  8111                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
  8112  00F4E2  C1C4  F03F         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
  8113  00F4E6  C1C5  F040         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
  8114  00F4EA  0100               	movlb	0	; () banked
  8115  00F4EC  51E4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  8116  00F4EE  ECF6  F067         	call	_UpdateCfList
  8117                           
  8118                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
  8119  00F4F2  C1C4  F033         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
  8120  00F4F6  C1C5  F034         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
  8121  00F4FA  EC7F  F050         	call	_ComputeSessionKeys	;wreg free
  8122                           
  8123                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
  8124  00F4FE  0E00               	movlw	0
  8125  00F500  EC51  F05A         	call	_UpdateJoinSuccessState
  8126                           
  8127                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
  8128  00F504  0E00               	movlw	0
  8129  00F506  0102               	movlb	2	; () banked
  8130  00F508  6F06               	movwf	(_loRa+6)& (0+255),b
  8131  00F50A  0E00               	movlw	0
  8132  00F50C  6F07               	movwf	(_loRa+7)& (0+255),b
  8133  00F50E  0E00               	movlw	0
  8134  00F510  6F08               	movwf	(_loRa+8)& (0+255),b
  8135  00F512  0E00               	movlw	0
  8136  00F514  6F09               	movwf	(_loRa+9)& (0+255),b
  8137                           
  8138                           ; BSR set to: 2
  8139                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
  8140  00F516  0E00               	movlw	0
  8141  00F518  6F0A               	movwf	(_loRa+10)& (0+255),b
  8142  00F51A  0E00               	movlw	0
  8143  00F51C  6F0B               	movwf	(_loRa+11)& (0+255),b
  8144  00F51E  0E00               	movlw	0
  8145  00F520  6F0C               	movwf	(_loRa+12)& (0+255),b
  8146  00F522  0E00               	movlw	0
  8147  00F524  6F0D               	movwf	(_loRa+13)& (0+255),b
  8148  00F526  0012               	return	
  8149  00F528                     l14166:
  8150                           
  8151                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
  8152  00F528  0101               	movlb	1	; () banked
  8153  00F52A  39B7               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
  8154  00F52C  32E8               	rrcf	wreg,f,c
  8155  00F52E  0B07               	andlw	7
  8156  00F530  0A03               	xorlw	3
  8157  00F532  B4D8               	btfsc	status,2,c
  8158  00F534  D007               	goto	u15610
  8159                           
  8160                           ; BSR set to: 1
  8161  00F536  39B7               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
  8162  00F538  32E8               	rrcf	wreg,f,c
  8163  00F53A  0B07               	andlw	7
  8164  00F53C  0A05               	xorlw	5
  8165  00F53E  A4D8               	btfss	status,2,c
  8166  00F540  EFFF  F07E         	goto	l14502
  8167  00F544                     u15610:
  8168                           
  8169                           ; BSR set to: 1
  8170                           ;lorawan.c: 1192: {;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
  8171  00F544  0E00               	movlw	0
  8172  00F546  0102               	movlb	2	; () banked
  8173  00F548  6FA7               	movwf	(_loRa+167)& (0+255),b
  8174                           
  8175                           ; BSR set to: 2
  8176                           ;lorawan.c: 1195: Hdr_t *hdr;;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
  8177  00F54A  C0E2  F1C7         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
  8178  00F54E  C0E3  F1C8         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
  8179                           
  8180                           ; BSR set to: 2
  8181                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
  8182  00F552  0E02               	movlw	2
  8183  00F554  1912               	xorwf	(_loRa+18)& (0+255),w,b
  8184  00F556  A4D8               	btfss	status,2,c
  8185  00F558  D1A1               	goto	l14292
  8186                           
  8187                           ; BSR set to: 2
  8188  00F55A  0101               	movlb	1	; () banked
  8189  00F55C  EE20 F001          	lfsr	2,1
  8190  00F560  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8191  00F562  26D9               	addwf	fsr2l,f,c
  8192  00F564  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8193  00F566  22DA               	addwfc	fsr2h,f,c
  8194  00F568  0102               	movlb	2	; () banked
  8195  00F56A  5162               	movf	(_loRa+98)& (0+255),w,b
  8196  00F56C  18DE               	xorwf	postinc2,w,c
  8197  00F56E  E109               	bnz	u15631
  8198  00F570  5163               	movf	(_loRa+99)& (0+255),w,b
  8199  00F572  18DE               	xorwf	postinc2,w,c
  8200  00F574  E106               	bnz	u15631
  8201  00F576  5164               	movf	(_loRa+100)& (0+255),w,b
  8202  00F578  18DE               	xorwf	postinc2,w,c
  8203  00F57A  E103               	bnz	u15631
  8204  00F57C  5165               	movf	(_loRa+101)& (0+255),w,b
  8205  00F57E  18DE               	xorwf	postinc2,w,c
  8206  00F580  A4D8               	btfss	status,2,c
  8207  00F582                     u15631:
  8208  00F582  D18C               	goto	l14292
  8209                           
  8210                           ; BSR set to: 2
  8211  00F584  A504               	btfss	(_loRa+4)& (0+255),2,b
  8212  00F586  D18A               	goto	l14292
  8213                           
  8214                           ; BSR set to: 2
  8215                           ;lorawan.c: 1200: {;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
  8216  00F588  C1C7  F001         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
  8217  00F58C  C1C8  F002         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
  8218  00F590  ECCB  F04F         	call	_CheckMcastFlags	;wreg free
  8219  00F594  0900               	iorlw	0
  8220  00F596  A4D8               	btfss	status,2,c
  8221  00F598  D008               	goto	l14188
  8222  00F59A                     u15650:
  8223  00F59A                     l14182:
  8224                           
  8225                           ;lorawan.c: 1203: {;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  8226  00F59A  0102               	movlb	2	; () banked
  8227  00F59C  5102               	movf	(_loRa+2)& (0+255),w,b
  8228  00F59E  0BF0               	andlw	-16
  8229  00F5A0  0909               	iorlw	9
  8230  00F5A2  6F02               	movwf	(_loRa+2)& (0+255),b
  8231                           
  8232                           ; BSR set to: 2
  8233                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
  8234  00F5A4  EC57  F04F         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  8235  00F5A8  0012               	return	
  8236  00F5AA                     l14188:
  8237                           
  8238                           ;lorawan.c: 1207: };lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, buff
      +                          erLength - sizeof (computedMic), 0x49, 1);
  8239  00F5AA  0101               	movlb	1	; () banked
  8240  00F5AC  EE20 F006          	lfsr	2,6
  8241  00F5B0  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8242  00F5B2  26D9               	addwf	fsr2l,f,c
  8243  00F5B4  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8244  00F5B6  22DA               	addwfc	fsr2h,f,c
  8245  00F5B8  CFDE F0E5          	movff	postinc2,??_LORAWAN_RxDone
  8246  00F5BC  CFDD F0E6          	movff	postdec2,??_LORAWAN_RxDone+1
  8247  00F5C0  C0E5  F00C         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
  8248  00F5C4  C0E6  F00D         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
  8249  00F5C8  6A0E               	clrf	AssembleEncryptionBlock@frameCounter+2,c
  8250  00F5CA  6A0F               	clrf	AssembleEncryptionBlock@frameCounter+3,c
  8251  00F5CC  0100               	movlb	0	; () banked
  8252  00F5CE  51E4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  8253  00F5D0  0FFC               	addlw	252
  8254  00F5D2  6E10               	movwf	AssembleEncryptionBlock@blockId,c
  8255  00F5D4  0E49               	movlw	73
  8256  00F5D6  6E11               	movwf	AssembleEncryptionBlock@firstByte,c
  8257  00F5D8  0E01               	movlw	1
  8258  00F5DA  6E12               	movwf	AssembleEncryptionBlock@multicastStatus,c
  8259  00F5DC  0E01               	movlw	1
  8260  00F5DE  EC85  F055         	call	_AssembleEncryptionBlock
  8261                           
  8262                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
  8263  00F5E2  0EAF               	movlw	low _radioBuffer
  8264  00F5E4  6E01               	movwf	memcpy@d1,c
  8265  00F5E6  0E05               	movlw	high _radioBuffer
  8266  00F5E8  6E02               	movwf	memcpy@d1+1,c
  8267  00F5EA  0E4E               	movlw	low _aesBuffer
  8268  00F5EC  6E03               	movwf	memcpy@s1,c
  8269  00F5EE  0E01               	movlw	high _aesBuffer
  8270  00F5F0  6E04               	movwf	memcpy@s1+1,c
  8271  00F5F2  0E00               	movlw	0
  8272  00F5F4  6E06               	movwf	memcpy@n+1,c
  8273  00F5F6  0E10               	movlw	16
  8274  00F5F8  6E05               	movwf	memcpy@n,c
  8275  00F5FA  EC56  F04C         	call	_memcpy	;wreg free
  8276                           
  8277                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
  8278  00F5FE  0EBF               	movlw	low (_radioBuffer+16)
  8279  00F600  6E01               	movwf	memcpy@d1,c
  8280  00F602  0E05               	movlw	high (_radioBuffer+16)
  8281  00F604  6E02               	movwf	memcpy@d1+1,c
  8282  00F606  C0E2  F003         	movff	LORAWAN_RxDone@buffer,memcpy@s1
  8283  00F60A  C0E3  F004         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
  8284  00F60E  0EFC               	movlw	252
  8285  00F610  0100               	movlb	0	; () banked
  8286  00F612  25E4               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  8287  00F614  6E05               	movwf	memcpy@n,c
  8288  00F616  6A06               	clrf	memcpy@n+1,c
  8289  00F618  0EFF               	movlw	255
  8290  00F61A  2206               	addwfc	memcpy@n+1,f,c
  8291  00F61C  EC56  F04C         	call	_memcpy	;wreg free
  8292                           
  8293                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
  8294  00F620  0E66               	movlw	low (_loRa+102)
  8295  00F622  0100               	movlb	0	; () banked
  8296  00F624  6F60               	movwf	AESCmac@key& (0+255),b
  8297  00F626  0E02               	movlw	high (_loRa+102)
  8298  00F628  6F61               	movwf	(AESCmac@key+1)& (0+255),b
  8299  00F62A  0E4E               	movlw	low _aesBuffer
  8300  00F62C  6F62               	movwf	AESCmac@output& (0+255),b
  8301  00F62E  0E01               	movlw	high _aesBuffer
  8302  00F630  6F63               	movwf	(AESCmac@output+1)& (0+255),b
  8303  00F632  0EAF               	movlw	low _radioBuffer
  8304  00F634  6F64               	movwf	AESCmac@input& (0+255),b
  8305  00F636  0E05               	movlw	high _radioBuffer
  8306  00F638  6F65               	movwf	(AESCmac@input+1)& (0+255),b
  8307  00F63A  51E4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  8308  00F63C  0F0C               	addlw	12
  8309  00F63E  6F66               	movwf	AESCmac@size& (0+255),b
  8310  00F640  ECCB  F06D         	call	_AESCmac	;wreg free
  8311                           
  8312                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
  8313  00F644  0EC0               	movlw	low LORAWAN_RxDone@computedMic
  8314  00F646  6E01               	movwf	memcpy@d1,c
  8315  00F648  0E01               	movlw	high LORAWAN_RxDone@computedMic
  8316  00F64A  6E02               	movwf	memcpy@d1+1,c
  8317  00F64C  0E4E               	movlw	low _aesBuffer
  8318  00F64E  6E03               	movwf	memcpy@s1,c
  8319  00F650  0E01               	movlw	high _aesBuffer
  8320  00F652  6E04               	movwf	memcpy@s1+1,c
  8321  00F654  0E00               	movlw	0
  8322  00F656  6E06               	movwf	memcpy@n+1,c
  8323  00F658  0E04               	movlw	4
  8324  00F65A  6E05               	movwf	memcpy@n,c
  8325  00F65C  EC56  F04C         	call	_memcpy	;wreg free
  8326                           
  8327                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
  8328  00F660  C0E2  F00C         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
  8329  00F664  C0E3  F00D         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
  8330  00F668  C0E4  F00E         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
  8331  00F66C  EC92  F04A         	call	_ExtractMic	;wreg free
  8332  00F670  C00C  F1B8         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
  8333  00F674  C00D  F1B9         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
  8334  00F678  C00E  F1BA         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
  8335  00F67C  C00F  F1BB         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
  8336                           
  8337                           ;lorawan.c: 1217: if (computedMic != extractedMic)
  8338  00F680  0101               	movlb	1	; () banked
  8339  00F682  51B8               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
  8340  00F684  19C0               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
  8341  00F686  E189               	bnz	l14182
  8342  00F688  51B9               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
  8343  00F68A  19C1               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
  8344  00F68C  E186               	bnz	l14182
  8345  00F68E  51BA               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
  8346  00F690  19C2               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
  8347  00F692  E183               	bnz	l14182
  8348  00F694  51BB               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
  8349  00F696  19C3               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
  8350  00F698  A4D8               	btfss	status,2,c
  8351  00F69A  D77F               	goto	u15650
  8352                           
  8353                           ; BSR set to: 1
  8354                           ;lorawan.c: 1222: };lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members
      +                          .valueLow)
  8355  00F69C  EE20 F006          	lfsr	2,6
  8356  00F6A0  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8357  00F6A2  26D9               	addwf	fsr2l,f,c
  8358  00F6A4  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8359  00F6A6  22DA               	addwfc	fsr2h,f,c
  8360  00F6A8  0102               	movlb	2	; () banked
  8361  00F6AA  510E               	movf	(_loRa+14)& (0+255),w,b
  8362  00F6AC  5CDE               	subwf	postinc2,w,c
  8363  00F6AE  510F               	movf	(_loRa+15)& (0+255),w,b
  8364  00F6B0  58DE               	subwfb	postinc2,w,c
  8365  00F6B2  A0D8               	btfss	status,0,c
  8366  00F6B4  D03A               	goto	l14222
  8367                           
  8368                           ; BSR set to: 2
  8369                           ;lorawan.c: 1225: {;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.member
      +                          s.valueLow) > loRa.protocolParameters.maxMultiFcntGap )
  8370  00F6B6  0101               	movlb	1	; () banked
  8371  00F6B8  EE20 F006          	lfsr	2,6
  8372  00F6BC  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8373  00F6BE  26D9               	addwf	fsr2l,f,c
  8374  00F6C0  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8375  00F6C2  22DA               	addwfc	fsr2h,f,c
  8376  00F6C4  CFDE F0E5          	movff	postinc2,??_LORAWAN_RxDone
  8377  00F6C8  CFDD F0E6          	movff	postdec2,??_LORAWAN_RxDone+1
  8378  00F6CC  0102               	movlb	2	; () banked
  8379  00F6CE  510E               	movf	(_loRa+14)& (0+255),w,b
  8380  00F6D0  0100               	movlb	0	; () banked
  8381  00F6D2  5FE5               	subwf	??_LORAWAN_RxDone& (0+255),f,b
  8382  00F6D4  0102               	movlb	2	; () banked
  8383  00F6D6  510F               	movf	(_loRa+15)& (0+255),w,b
  8384  00F6D8  0100               	movlb	0	; () banked
  8385  00F6DA  5BE6               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
  8386  00F6DC  51E5               	movf	??_LORAWAN_RxDone& (0+255),w,b
  8387  00F6DE  0102               	movlb	2	; () banked
  8388  00F6E0  5D9E               	subwf	(_loRa+158)& (0+255),w,b
  8389  00F6E2  0100               	movlb	0	; () banked
  8390  00F6E4  51E6               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
  8391  00F6E6  0102               	movlb	2	; () banked
  8392  00F6E8  599F               	subwfb	(_loRa+159)& (0+255),w,b
  8393  00F6EA  B0D8               	btfsc	status,0,c
  8394  00F6EC  D012               	goto	l14220
  8395                           
  8396                           ; BSR set to: 2
  8397                           ;lorawan.c: 1227: {;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
  8398  00F6EE  0100               	movlb	0	; () banked
  8399  00F6F0  51F0               	movf	_rxPayload& (0+255),w,b
  8400  00F6F2  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  8401  00F6F4  B4D8               	btfsc	status,2,c
  8402  00F6F6  D751               	goto	u15650
  8403  00F6F8                     u15690:
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;lorawan.c: 1229: {;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED
      +                          );
  8407  00F6F8  0E00               	movlw	0
  8408  00F6FA  6E01               	movwf	RxData@pData,c
  8409  00F6FC  0E00               	movlw	0
  8410  00F6FE  6E02               	movwf	RxData@pData+1,c
  8411  00F700  0E00               	movlw	0
  8412  00F702  6E03               	movwf	RxData@dataLength,c
  8413  00F704  0E05               	movlw	5
  8414  00F706  6E04               	movwf	RxData@status,c
  8415  00F708  D801               	call	u15708
  8416  00F70A  D747               	goto	u15650
  8417  00F70C                     u15708:
  8418  00F70C  0005               	push	
  8419  00F70E  6EFA               	movwf	pclath,c
  8420  00F710  D0BE               	goto	L9
  8421  00F712                     l14220:
  8422                           
  8423                           ; BSR set to: 2
  8424                           ;lorawan.c: 1237: else;lorawan.c: 1238: {;lorawan.c: 1239: loRa.fMcastCntDown.members.va
      +                          lueLow = hdr->members.fCnt;
  8425  00F712  0101               	movlb	1	; () banked
  8426  00F714  EE20 F006          	lfsr	2,6
  8427  00F718  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8428  00F71A  26D9               	addwf	fsr2l,f,c
  8429  00F71C  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8430  00F71E  22DA               	addwfc	fsr2h,f,c
  8431  00F720  CFDE F20E          	movff	postinc2,_loRa+14
  8432  00F724  CFDD F20F          	movff	postdec2,_loRa+15
  8433  00F728  D01E               	goto	l14240
  8434  00F72A                     l14222:
  8435                           
  8436                           ; BSR set to: 2
  8437                           ;lorawan.c: 1242: else;lorawan.c: 1243: {;lorawan.c: 1244: if ( (0 == hdr->members.fCnt)
      +                           && (0xFFFF == loRa.fMcastCntDown.members.valueLow) )
  8438  00F72A  0101               	movlb	1	; () banked
  8439  00F72C  EE20 F006          	lfsr	2,6
  8440  00F730  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8441  00F732  26D9               	addwf	fsr2l,f,c
  8442  00F734  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8443  00F736  22DA               	addwfc	fsr2h,f,c
  8444  00F738  50DE               	movf	postinc2,w,c
  8445  00F73A  10DE               	iorwf	postinc2,w,c
  8446  00F73C  A4D8               	btfss	status,2,c
  8447  00F73E  D00D               	goto	l14230
  8448                           
  8449                           ; BSR set to: 1
  8450  00F740  0102               	movlb	2	; () banked
  8451  00F742  290E               	incf	(_loRa+14)& (0+255),w,b
  8452  00F744  E10A               	bnz	l14230
  8453  00F746  290F               	incf	(_loRa+15)& (0+255),w,b
  8454  00F748  A4D8               	btfss	status,2,c
  8455  00F74A  D007               	goto	l14230
  8456                           
  8457                           ; BSR set to: 2
  8458                           ;lorawan.c: 1245: {;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
  8459  00F74C  0E00               	movlw	0
  8460  00F74E  6F0F               	movwf	(_loRa+15)& (0+255),b
  8461  00F750  0E00               	movlw	0
  8462  00F752  6F0E               	movwf	(_loRa+14)& (0+255),b
  8463                           
  8464                           ; BSR set to: 2
  8465                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
  8466  00F754  4B10               	infsnz	(_loRa+16)& (0+255),f,b
  8467  00F756  2B11               	incf	(_loRa+17)& (0+255),f,b
  8468                           
  8469                           ;lorawan.c: 1248: }
  8470  00F758  D006               	goto	l14240
  8471  00F75A                     l14230:
  8472                           
  8473                           ;lorawan.c: 1249: else;lorawan.c: 1250: {;lorawan.c: 1251: if (rxPayload.RxAppData != (0
      +                          ))
  8474  00F75A  0100               	movlb	0	; () banked
  8475  00F75C  51F0               	movf	_rxPayload& (0+255),w,b
  8476  00F75E  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  8477  00F760  A4D8               	btfss	status,2,c
  8478  00F762  D7CA               	goto	u15690
  8479  00F764  D71A               	goto	u15650
  8480  00F766                     l14240:
  8481                           
  8482                           ;lorawan.c: 1259: };lorawan.c: 1260: };lorawan.c: 1262: if (loRa.fMcastCntDown.value == 
      +                          (4294967295UL))
  8483  00F766  0102               	movlb	2	; () banked
  8484  00F768  290E               	incf	(_loRa+14)& (0+255),w,b
  8485  00F76A  E107               	bnz	l14252
  8486  00F76C  290F               	incf	(_loRa+15)& (0+255),w,b
  8487  00F76E  E105               	bnz	l14252
  8488  00F770  2910               	incf	(_loRa+16)& (0+255),w,b
  8489  00F772  E103               	bnz	l14252
  8490  00F774  2911               	incf	(_loRa+17)& (0+255),w,b
  8491  00F776  B4D8               	btfsc	status,2,c
  8492  00F778  D7F0               	goto	l14230
  8493  00F77A                     l14252:
  8494                           
  8495                           ; BSR set to: 2
  8496                           ;lorawan.c: 1272: };lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
  8497  00F77A  5102               	movf	(_loRa+2)& (0+255),w,b
  8498  00F77C  0B0F               	andlw	15
  8499  00F77E  0A08               	xorlw	8
  8500  00F780  A4D8               	btfss	status,2,c
  8501  00F782  D008               	goto	l14256
  8502                           
  8503                           ; BSR set to: 2
  8504                           ;lorawan.c: 1275: {;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
  8505  00F784  51E4               	movf	(_loRa+228)& (0+255),w,b
  8506  00F786  EC46  F046         	call	_SwTimerStop
  8507                           
  8508                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
  8509  00F78A  0102               	movlb	2	; () banked
  8510  00F78C  51E5               	movf	(_loRa+229)& (0+255),w,b
  8511  00F78E  EC46  F046         	call	_SwTimerStop
  8512                           
  8513                           ;lorawan.c: 1278: }
  8514  00F792  D008               	goto	l14260
  8515  00F794                     l14256:
  8516                           
  8517                           ; BSR set to: 2
  8518                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
  8519  00F794  5102               	movf	(_loRa+2)& (0+255),w,b
  8520  00F796  0B0F               	andlw	15
  8521  00F798  0A03               	xorlw	3
  8522  00F79A  A4D8               	btfss	status,2,c
  8523  00F79C  D003               	goto	l14260
  8524                           
  8525                           ; BSR set to: 2
  8526                           ;lorawan.c: 1280: {;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
  8527  00F79E  51E5               	movf	(_loRa+229)& (0+255),w,b
  8528  00F7A0  EC46  F046         	call	_SwTimerStop
  8529  00F7A4                     l14260:
  8530                           
  8531                           ;lorawan.c: 1282: };lorawan.c: 1284: buffer = buffer + 8;
  8532  00F7A4  0E08               	movlw	8
  8533  00F7A6  0100               	movlb	0	; () banked
  8534  00F7A8  25E2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
  8535  00F7AA  6FE2               	movwf	LORAWAN_RxDone@buffer& (0+255),b
  8536  00F7AC  0E00               	movlw	0
  8537  00F7AE  21E3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
  8538  00F7B0  6FE3               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
  8542  00F7B2  51E4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  8543  00F7B4  6FE5               	movwf	??_LORAWAN_RxDone& (0+255),b
  8544  00F7B6  6BE6               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
  8545  00F7B8  0101               	movlb	1	; () banked
  8546  00F7BA  EE20 F005          	lfsr	2,5
  8547  00F7BE  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8548  00F7C0  26D9               	addwf	fsr2l,f,c
  8549  00F7C2  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8550  00F7C4  22DA               	addwfc	fsr2h,f,c
  8551  00F7C6  50DF               	movf	223,w,c
  8552  00F7C8  0B0F               	andlw	15
  8553  00F7CA  0100               	movlb	0	; () banked
  8554  00F7CC  6FE7               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
  8555  00F7CE  6BE8               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
  8556  00F7D0  0E0C               	movlw	12
  8557  00F7D2  27E7               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
  8558  00F7D4  0E00               	movlw	0
  8559  00F7D6  23E8               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
  8560  00F7D8  51E5               	movf	??_LORAWAN_RxDone& (0+255),w,b
  8561  00F7DA  19E7               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
  8562  00F7DC  E104               	bnz	u15780
  8563  00F7DE  51E6               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
  8564  00F7E0  19E8               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
  8565  00F7E2  B4D8               	btfsc	status,2,c
  8566  00F7E4  D038               	goto	l14276
  8567  00F7E6                     u15780:
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;lorawan.c: 1287: {;lorawan.c: 1288: fPort = *(buffer++);
  8571  00F7E6  C0E2  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
  8572  00F7EA  C0E3  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
  8573  00F7EE  50DF               	movf	indf2,w,c
  8574  00F7F0  0101               	movlb	1	; () banked
  8575  00F7F2  6FB5               	movwf	LORAWAN_RxDone@fPort& (0+255),b
  8576                           
  8577                           ; BSR set to: 1
  8578  00F7F4  0100               	movlb	0	; () banked
  8579  00F7F6  4BE2               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
  8580  00F7F8  2BE3               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
  8584  00F7FA  51E4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  8585  00F7FC  0FF4               	addlw	244
  8586  00F7FE  0101               	movlb	1	; () banked
  8587  00F800  6FC6               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
  8588                           
  8589                           ; BSR set to: 1
  8590                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
  8591  00F802  0E19               	movlw	25
  8592  00F804  6FBC               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
  8593                           
  8594                           ; BSR set to: 1
  8595                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
  8596  00F806  C0E2  F033         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
  8597  00F80A  C0E3  F034         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
  8598  00F80E  05C6               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
  8599  00F810  6E35               	movwf	EncryptFRMPayload@bufferLength,c
  8600  00F812  0E01               	movlw	1
  8601  00F814  6E36               	movwf	EncryptFRMPayload@dir,c
  8602  00F816  C20E  F037         	movff	_loRa+14,EncryptFRMPayload@frameCounter
  8603  00F81A  C20F  F038         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
  8604  00F81E  C210  F039         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
  8605  00F822  C211  F03A         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
  8606  00F826  0E76               	movlw	low (_loRa+118)
  8607  00F828  6E3B               	movwf	EncryptFRMPayload@key,c
  8608  00F82A  0E02               	movlw	high (_loRa+118)
  8609  00F82C  6E3C               	movwf	EncryptFRMPayload@key+1,c
  8610  00F82E  C1BC  F03D         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
  8611  00F832  0EAF               	movlw	low _radioBuffer
  8612  00F834  6E3E               	movwf	EncryptFRMPayload@bufferToBeEncrypted,c
  8613  00F836  0E05               	movlw	high _radioBuffer
  8614  00F838  6E3F               	movwf	EncryptFRMPayload@bufferToBeEncrypted+1,c
  8615  00F83A  0E01               	movlw	1
  8616  00F83C  6E40               	movwf	EncryptFRMPayload@multicastStatus,c
  8617  00F83E  ECC0  F061         	call	_EncryptFRMPayload	;wreg free
  8618                           
  8619                           ;lorawan.c: 1294: packet = buffer - 1;
  8620  00F842  0EFF               	movlw	255
  8621  00F844  0100               	movlb	0	; () banked
  8622  00F846  25E2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
  8623  00F848  0101               	movlb	1	; () banked
  8624  00F84A  6FBE               	movwf	LORAWAN_RxDone@packet& (0+255),b
  8625  00F84C  0EFF               	movlw	255
  8626  00F84E  0100               	movlb	0	; () banked
  8627  00F850  21E3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
  8628  00F852  0101               	movlb	1	; () banked
  8629  00F854  D006               	goto	L7
  8630  00F856                     l14276:
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;lorawan.c: 1296: else;lorawan.c: 1297: {;lorawan.c: 1298: frmPayloadLength = 0;
  8634  00F856  0E00               	movlw	0
  8635  00F858  0101               	movlb	1	; () banked
  8636  00F85A  6FC6               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
  8637                           
  8638                           ; BSR set to: 1
  8639                           ;lorawan.c: 1299: packet = (0);
  8640  00F85C  0E00               	movlw	0
  8641  00F85E  6FBE               	movwf	LORAWAN_RxDone@packet& (0+255),b
  8642  00F860  0E00               	movlw	0
  8643  00F862                     L7:
  8644  00F862  6FBF               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
  8645                           
  8646                           ; BSR set to: 1
  8647                           ;lorawan.c: 1300: };lorawan.c: 1302: loRa.macStatus.rxDone = 1;
  8648  00F864  0102               	movlb	2	; () banked
  8649  00F866  8303               	bsf	(_loRa+3)& (0+255),1,b
  8650                           
  8651                           ; BSR set to: 2
  8652                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
  8653  00F868  0EF0               	movlw	-16
  8654  00F86A  1702               	andwf	(_loRa+2)& (0+255),f,b
  8655                           
  8656                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
  8657  00F86C  0100               	movlb	0	; () banked
  8658  00F86E  51F0               	movf	_rxPayload& (0+255),w,b
  8659  00F870  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  8660  00F872  B4D8               	btfsc	status,2,c
  8661  00F874  D692               	goto	u15650
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;lorawan.c: 1306: {;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_
      +                          OK);
  8665  00F876  C1BE  F001         	movff	LORAWAN_RxDone@packet,RxData@pData
  8666  00F87A  C1BF  F002         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
  8667  00F87E  C1C6  F003         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
  8668  00F882  0E01               	movlw	1
  8669  00F884  6E04               	movwf	RxData@status,c
  8670  00F886  D801               	call	u15808
  8671  00F888  D688               	goto	u15650
  8672  00F88A                     u15808:
  8673  00F88A  0005               	push	
  8674  00F88C  6EFA               	movwf	pclath,c
  8675  00F88E                     L9:
  8676  00F88E  51F0               	movf	_rxPayload& (0+255),w,b
  8677  00F890  6EFD               	movwf	tosl,c
  8678  00F892  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  8679  00F894  6EFE               	movwf	tosh,c
  8680  00F896  6AFF               	clrf	tosu,c
  8681  00F898  50FA               	movf	pclath,w,c
  8682  00F89A  0012               	return		;indir
  8683  00F89C                     l14292:
  8684                           
  8685                           ; BSR set to: 2
  8686                           ;lorawan.c: 1313: };lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationPa
      +                          rameters.deviceAddress.value)
  8687  00F89C  0101               	movlb	1	; () banked
  8688  00F89E  EE20 F001          	lfsr	2,1
  8689  00F8A2  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8690  00F8A4  26D9               	addwf	fsr2l,f,c
  8691  00F8A6  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8692  00F8A8  22DA               	addwfc	fsr2h,f,c
  8693  00F8AA  0102               	movlb	2	; () banked
  8694  00F8AC  511E               	movf	(_loRa+30)& (0+255),w,b
  8695  00F8AE  18DE               	xorwf	postinc2,w,c
  8696  00F8B0  E10A               	bnz	u15810
  8697  00F8B2  511F               	movf	(_loRa+31)& (0+255),w,b
  8698  00F8B4  18DE               	xorwf	postinc2,w,c
  8699  00F8B6  E107               	bnz	u15810
  8700  00F8B8  5120               	movf	(_loRa+32)& (0+255),w,b
  8701  00F8BA  18DE               	xorwf	postinc2,w,c
  8702  00F8BC  E104               	bnz	u15810
  8703  00F8BE  5121               	movf	(_loRa+33)& (0+255),w,b
  8704  00F8C0  18DE               	xorwf	postinc2,w,c
  8705  00F8C2  B4D8               	btfsc	status,2,c
  8706  00F8C4  D008               	goto	l14304
  8707  00F8C6                     u15810:
  8708                           
  8709                           ; BSR set to: 2
  8710                           ;lorawan.c: 1317: {;lorawan.c: 1318: SetReceptionNotOkState();
  8711  00F8C6  EC07  F050         	call	_SetReceptionNotOkState	;wreg free
  8712  00F8CA                     l14296:
  8713                           
  8714                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
  8715  00F8CA  0E02               	movlw	2
  8716  00F8CC  0102               	movlb	2	; () banked
  8717  00F8CE                     L10:
  8718  00F8CE  1912               	xorwf	(_loRa+18)& (0+255),w,b
  8719  00F8D0  A4D8               	btfss	status,2,c
  8720  00F8D2  0012               	return	
  8721  00F8D4  D662               	goto	u15650
  8722  00F8D6                     l14304:
  8723                           
  8724                           ; BSR set to: 2
  8725                           ;lorawan.c: 1325: };lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, buff
      +                          erLength - sizeof (computedMic), 0x49, 0);
  8726  00F8D6  0101               	movlb	1	; () banked
  8727  00F8D8  EE20 F006          	lfsr	2,6
  8728  00F8DC  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8729  00F8DE  26D9               	addwf	fsr2l,f,c
  8730  00F8E0  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8731  00F8E2  22DA               	addwfc	fsr2h,f,c
  8732  00F8E4  CFDE F0E5          	movff	postinc2,??_LORAWAN_RxDone
  8733  00F8E8  CFDD F0E6          	movff	postdec2,??_LORAWAN_RxDone+1
  8734  00F8EC  C0E5  F00C         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
  8735  00F8F0  C0E6  F00D         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
  8736  00F8F4  6A0E               	clrf	AssembleEncryptionBlock@frameCounter+2,c
  8737  00F8F6  6A0F               	clrf	AssembleEncryptionBlock@frameCounter+3,c
  8738  00F8F8  0100               	movlb	0	; () banked
  8739  00F8FA  51E4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  8740  00F8FC  0FFC               	addlw	252
  8741  00F8FE  6E10               	movwf	AssembleEncryptionBlock@blockId,c
  8742  00F900  0E49               	movlw	73
  8743  00F902  6E11               	movwf	AssembleEncryptionBlock@firstByte,c
  8744  00F904  0E00               	movlw	0
  8745  00F906  6E12               	movwf	AssembleEncryptionBlock@multicastStatus,c
  8746  00F908  0E01               	movlw	1
  8747  00F90A  EC85  F055         	call	_AssembleEncryptionBlock
  8748                           
  8749                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
  8750  00F90E  0EAF               	movlw	low _radioBuffer
  8751  00F910  6E01               	movwf	memcpy@d1,c
  8752  00F912  0E05               	movlw	high _radioBuffer
  8753  00F914  6E02               	movwf	memcpy@d1+1,c
  8754  00F916  0E4E               	movlw	low _aesBuffer
  8755  00F918  6E03               	movwf	memcpy@s1,c
  8756  00F91A  0E01               	movlw	high _aesBuffer
  8757  00F91C  6E04               	movwf	memcpy@s1+1,c
  8758  00F91E  0E00               	movlw	0
  8759  00F920  6E06               	movwf	memcpy@n+1,c
  8760  00F922  0E10               	movlw	16
  8761  00F924  6E05               	movwf	memcpy@n,c
  8762  00F926  EC56  F04C         	call	_memcpy	;wreg free
  8763                           
  8764                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
  8765  00F92A  0EBF               	movlw	low (_radioBuffer+16)
  8766  00F92C  6E01               	movwf	memcpy@d1,c
  8767  00F92E  0E05               	movlw	high (_radioBuffer+16)
  8768  00F930  6E02               	movwf	memcpy@d1+1,c
  8769  00F932  C0E2  F003         	movff	LORAWAN_RxDone@buffer,memcpy@s1
  8770  00F936  C0E3  F004         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
  8771  00F93A  0EFC               	movlw	252
  8772  00F93C  0100               	movlb	0	; () banked
  8773  00F93E  25E4               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  8774  00F940  6E05               	movwf	memcpy@n,c
  8775  00F942  6A06               	clrf	memcpy@n+1,c
  8776  00F944  0EFF               	movlw	255
  8777  00F946  2206               	addwfc	memcpy@n+1,f,c
  8778  00F948  EC56  F04C         	call	_memcpy	;wreg free
  8779                           
  8780                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
  8781  00F94C  0E22               	movlw	low (_loRa+34)
  8782  00F94E  0100               	movlb	0	; () banked
  8783  00F950  6F60               	movwf	AESCmac@key& (0+255),b
  8784  00F952  0E02               	movlw	high (_loRa+34)
  8785  00F954  6F61               	movwf	(AESCmac@key+1)& (0+255),b
  8786  00F956  0E4E               	movlw	low _aesBuffer
  8787  00F958  6F62               	movwf	AESCmac@output& (0+255),b
  8788  00F95A  0E01               	movlw	high _aesBuffer
  8789  00F95C  6F63               	movwf	(AESCmac@output+1)& (0+255),b
  8790  00F95E  0EAF               	movlw	low _radioBuffer
  8791  00F960  6F64               	movwf	AESCmac@input& (0+255),b
  8792  00F962  0E05               	movlw	high _radioBuffer
  8793  00F964  6F65               	movwf	(AESCmac@input+1)& (0+255),b
  8794  00F966  51E4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  8795  00F968  0F0C               	addlw	12
  8796  00F96A  6F66               	movwf	AESCmac@size& (0+255),b
  8797  00F96C  ECCB  F06D         	call	_AESCmac	;wreg free
  8798                           
  8799                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
  8800  00F970  0EC0               	movlw	low LORAWAN_RxDone@computedMic
  8801  00F972  6E01               	movwf	memcpy@d1,c
  8802  00F974  0E01               	movlw	high LORAWAN_RxDone@computedMic
  8803  00F976  6E02               	movwf	memcpy@d1+1,c
  8804  00F978  0E4E               	movlw	low _aesBuffer
  8805  00F97A  6E03               	movwf	memcpy@s1,c
  8806  00F97C  0E01               	movlw	high _aesBuffer
  8807  00F97E  6E04               	movwf	memcpy@s1+1,c
  8808  00F980  0E00               	movlw	0
  8809  00F982  6E06               	movwf	memcpy@n+1,c
  8810  00F984  0E04               	movlw	4
  8811  00F986  6E05               	movwf	memcpy@n,c
  8812  00F988  EC56  F04C         	call	_memcpy	;wreg free
  8813                           
  8814                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
  8815  00F98C  C0E2  F00C         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
  8816  00F990  C0E3  F00D         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
  8817  00F994  C0E4  F00E         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
  8818  00F998  EC92  F04A         	call	_ExtractMic	;wreg free
  8819  00F99C  C00C  F1B8         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
  8820  00F9A0  C00D  F1B9         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
  8821  00F9A4  C00E  F1BA         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
  8822  00F9A8  C00F  F1BB         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
  8823                           
  8824                           ;lorawan.c: 1336: if (computedMic != extractedMic)
  8825  00F9AC  0101               	movlb	1	; () banked
  8826  00F9AE  51B8               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
  8827  00F9B0  19C0               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
  8828  00F9B2  E10A               	bnz	u15830
  8829  00F9B4  51B9               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
  8830  00F9B6  19C1               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
  8831  00F9B8  E107               	bnz	u15830
  8832  00F9BA  51BA               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
  8833  00F9BC  19C2               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
  8834  00F9BE  E104               	bnz	u15830
  8835  00F9C0  51BB               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
  8836  00F9C2  19C3               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
  8837  00F9C4  B4D8               	btfsc	status,2,c
  8838  00F9C6  D003               	goto	l14324
  8839  00F9C8                     u15830:
  8840                           
  8841                           ; BSR set to: 1
  8842                           ;lorawan.c: 1337: {;lorawan.c: 1338: SetReceptionNotOkState();
  8843  00F9C8  EC07  F050         	call	_SetReceptionNotOkState	;wreg free
  8844  00F9CC  D77E               	goto	l14296
  8845  00F9CE                     l14324:
  8846                           
  8847                           ; BSR set to: 1
  8848                           ;lorawan.c: 1345: };lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valu
      +                          eLow)
  8849  00F9CE  EE20 F006          	lfsr	2,6
  8850  00F9D2  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8851  00F9D4  26D9               	addwf	fsr2l,f,c
  8852  00F9D6  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8853  00F9D8  22DA               	addwfc	fsr2h,f,c
  8854  00F9DA  0102               	movlb	2	; () banked
  8855  00F9DC  510A               	movf	(_loRa+10)& (0+255),w,b
  8856  00F9DE  5CDE               	subwf	postinc2,w,c
  8857  00F9E0  510B               	movf	(_loRa+11)& (0+255),w,b
  8858  00F9E2  58DE               	subwfb	postinc2,w,c
  8859  00F9E4  A0D8               	btfss	status,0,c
  8860  00F9E6  D049               	goto	l14354
  8861                           
  8862                           ; BSR set to: 2
  8863                           ;lorawan.c: 1349: {;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valu
      +                          eLow) > loRa.protocolParameters.maxFcntGap)
  8864  00F9E8  0101               	movlb	1	; () banked
  8865  00F9EA  EE20 F006          	lfsr	2,6
  8866  00F9EE  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8867  00F9F0  26D9               	addwf	fsr2l,f,c
  8868  00F9F2  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8869  00F9F4  22DA               	addwfc	fsr2h,f,c
  8870  00F9F6  CFDE F0E5          	movff	postinc2,??_LORAWAN_RxDone
  8871  00F9FA  CFDD F0E6          	movff	postdec2,??_LORAWAN_RxDone+1
  8872  00F9FE  0102               	movlb	2	; () banked
  8873  00FA00  510A               	movf	(_loRa+10)& (0+255),w,b
  8874  00FA02  0100               	movlb	0	; () banked
  8875  00FA04  5FE5               	subwf	??_LORAWAN_RxDone& (0+255),f,b
  8876  00FA06  0102               	movlb	2	; () banked
  8877  00FA08  510B               	movf	(_loRa+11)& (0+255),w,b
  8878  00FA0A  0100               	movlb	0	; () banked
  8879  00FA0C  5BE6               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
  8880  00FA0E  51E5               	movf	??_LORAWAN_RxDone& (0+255),w,b
  8881  00FA10  0102               	movlb	2	; () banked
  8882  00FA12  5D9C               	subwf	(_loRa+156)& (0+255),w,b
  8883  00FA14  0100               	movlb	0	; () banked
  8884  00FA16  51E6               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
  8885  00FA18  0102               	movlb	2	; () banked
  8886  00FA1A  599D               	subwfb	(_loRa+157)& (0+255),w,b
  8887  00FA1C  B0D8               	btfsc	status,0,c
  8888  00FA1E  D021               	goto	l14352
  8889                           
  8890                           ; BSR set to: 2
  8891                           ;lorawan.c: 1351: {;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
  8892  00FA20  9100               	bcf	_loRa& (0+255),0,b
  8893                           
  8894                           ; BSR set to: 2
  8895                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
  8896  00FA22  0EF0               	movlw	-16
  8897  00FA24  1702               	andwf	(_loRa+2)& (0+255),f,b
  8898                           
  8899                           ; BSR set to: 2
  8900                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
  8901  00FA26  0100               	movlb	0	; () banked
  8902  00FA28  51F0               	movf	_rxPayload& (0+255),w,b
  8903  00FA2A  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  8904  00FA2C  B4D8               	btfsc	status,2,c
  8905  00FA2E  D016               	goto	u15889
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;lorawan.c: 1355: {;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
  8909  00FA30  0102               	movlb	2	; () banked
  8910  00FA32  9B00               	bcf	_loRa& (0+255),5,b
  8911                           
  8912                           ; BSR set to: 2
  8913                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  8914  00FA34  0E00               	movlw	0
  8915  00FA36  6E01               	movwf	RxData@pData,c
  8916  00FA38  0E00               	movlw	0
  8917  00FA3A  6E02               	movwf	RxData@pData+1,c
  8918  00FA3C  0E00               	movlw	0
  8919  00FA3E  6E03               	movwf	RxData@dataLength,c
  8920  00FA40  0E00               	movlw	0
  8921  00FA42  6E04               	movwf	RxData@status,c
  8922  00FA44  D801               	call	u15888
  8923  00FA46  D00A               	goto	u15889
  8924  00FA48                     u15888:
  8925  00FA48  0005               	push	
  8926  00FA4A  6EFA               	movwf	pclath,c
  8927  00FA4C  0100               	movlb	0	; () banked
  8928  00FA4E  51F0               	movf	_rxPayload& (0+255),w,b
  8929  00FA50  6EFD               	movwf	tosl,c
  8930  00FA52  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  8931  00FA54  6EFE               	movwf	tosh,c
  8932  00FA56  6AFF               	clrf	tosu,c
  8933  00FA58  50FA               	movf	pclath,w,c
  8934  00FA5A  0012               	return		;indir
  8935  00FA5C                     u15889:
  8936                           
  8937                           ;lorawan.c: 1358: };lorawan.c: 1359: loRa.macStatus.rxDone = 0;
  8938  00FA5C  0102               	movlb	2	; () banked
  8939  00FA5E  9303               	bcf	(_loRa+3)& (0+255),1,b
  8940  00FA60  D039               	goto	u15930
  8941  00FA62                     l14352:
  8942                           
  8943                           ; BSR set to: 2
  8944                           ;lorawan.c: 1370: else;lorawan.c: 1371: {;lorawan.c: 1372: loRa.fCntDown.members.valueLo
      +                          w = hdr->members.fCnt;
  8945  00FA62  0101               	movlb	1	; () banked
  8946  00FA64  EE20 F006          	lfsr	2,6
  8947  00FA68  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8948  00FA6A  26D9               	addwf	fsr2l,f,c
  8949  00FA6C  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8950  00FA6E  22DA               	addwfc	fsr2h,f,c
  8951  00FA70  CFDE F20A          	movff	postinc2,_loRa+10
  8952  00FA74  CFDD F20B          	movff	postdec2,_loRa+11
  8953  00FA78  D023               	goto	l14372
  8954  00FA7A                     l14354:
  8955                           
  8956                           ; BSR set to: 2
  8957                           ;lorawan.c: 1375: else;lorawan.c: 1376: {;lorawan.c: 1377: if((hdr->members.fCnt == 0) &
      +                          & (loRa.fCntDown.members.valueLow == 0xFFFF))
  8958  00FA7A  0101               	movlb	1	; () banked
  8959  00FA7C  EE20 F006          	lfsr	2,6
  8960  00FA80  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8961  00FA82  26D9               	addwf	fsr2l,f,c
  8962  00FA84  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8963  00FA86  22DA               	addwfc	fsr2h,f,c
  8964  00FA88  50DE               	movf	postinc2,w,c
  8965  00FA8A  10DE               	iorwf	postinc2,w,c
  8966  00FA8C  A4D8               	btfss	status,2,c
  8967  00FA8E  D015               	goto	l14362
  8968                           
  8969                           ; BSR set to: 1
  8970  00FA90  0102               	movlb	2	; () banked
  8971  00FA92  290A               	incf	(_loRa+10)& (0+255),w,b
  8972  00FA94  E112               	bnz	l14362
  8973  00FA96  290B               	incf	(_loRa+11)& (0+255),w,b
  8974  00FA98  A4D8               	btfss	status,2,c
  8975  00FA9A  D00F               	goto	l14362
  8976                           
  8977                           ; BSR set to: 2
  8978                           ;lorawan.c: 1378: {;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
  8979  00FA9C  0101               	movlb	1	; () banked
  8980  00FA9E  EE20 F006          	lfsr	2,6
  8981  00FAA2  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  8982  00FAA4  26D9               	addwf	fsr2l,f,c
  8983  00FAA6  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  8984  00FAA8  22DA               	addwfc	fsr2h,f,c
  8985  00FAAA  CFDE F20A          	movff	postinc2,_loRa+10
  8986  00FAAE  CFDD F20B          	movff	postdec2,_loRa+11
  8987                           
  8988                           ; BSR set to: 1
  8989                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
  8990  00FAB2  0102               	movlb	2	; () banked
  8991  00FAB4  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
  8992  00FAB6  2B0D               	incf	(_loRa+13)& (0+255),f,b
  8993                           
  8994                           ;lorawan.c: 1382: }
  8995  00FAB8  D003               	goto	l14372
  8996  00FABA                     l14362:
  8997                           
  8998                           ;lorawan.c: 1383: else;lorawan.c: 1384: {;lorawan.c: 1385: SetReceptionNotOkState();
  8999  00FABA  EC07  F050         	call	_SetReceptionNotOkState	;wreg free
  9000  00FABE  D705               	goto	l14296
  9001  00FAC0                     l14372:
  9002                           
  9003                           ;lorawan.c: 1393: };lorawan.c: 1394: };lorawan.c: 1396: if (loRa.fCntDown.value == (4294
      +                          967295UL))
  9004  00FAC0  0102               	movlb	2	; () banked
  9005  00FAC2  290A               	incf	(_loRa+10)& (0+255),w,b
  9006  00FAC4  E10A               	bnz	l14384
  9007  00FAC6  290B               	incf	(_loRa+11)& (0+255),w,b
  9008  00FAC8  E108               	bnz	l14384
  9009  00FACA  290C               	incf	(_loRa+12)& (0+255),w,b
  9010  00FACC  E106               	bnz	l14384
  9011  00FACE  290D               	incf	(_loRa+13)& (0+255),w,b
  9012  00FAD0  A4D8               	btfss	status,2,c
  9013  00FAD2  D003               	goto	l14384
  9014  00FAD4                     u15930:
  9015                           
  9016                           ; BSR set to: 2
  9017                           ;lorawan.c: 1397: {;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
  9018  00FAD4  8304               	bsf	(_loRa+4)& (0+255),1,b
  9019                           
  9020                           ; BSR set to: 2
  9021                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
  9022  00FAD6  0E02               	movlw	2
  9023  00FAD8  D6FA               	goto	L10
  9024  00FADA                     l14384:
  9025                           
  9026                           ; BSR set to: 2
  9027                           ;lorawan.c: 1407: };lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
  9028  00FADA  5102               	movf	(_loRa+2)& (0+255),w,b
  9029  00FADC  0B0F               	andlw	15
  9030  00FADE  0A03               	xorlw	3
  9031  00FAE0  A4D8               	btfss	status,2,c
  9032  00FAE2  D003               	goto	l14388
  9033                           
  9034                           ; BSR set to: 2
  9035                           ;lorawan.c: 1411: {;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
  9036  00FAE4  51E5               	movf	(_loRa+229)& (0+255),w,b
  9037  00FAE6  EC46  F046         	call	_SwTimerStop
  9038  00FAEA                     l14388:
  9039                           
  9040                           ;lorawan.c: 1413: };lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
  9041  00FAEA  0E01               	movlw	1
  9042  00FAEC  0102               	movlb	2	; () banked
  9043  00FAEE  6FD8               	movwf	(_loRa+216)& (0+255),b
  9044                           
  9045                           ; BSR set to: 2
  9046                           ;lorawan.c: 1417: CheckFlags (hdr);
  9047  00FAF0  C1C7  F001         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
  9048  00FAF4  C1C8  F002         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
  9049  00FAF8  ECFF  F04B         	call	_CheckFlags	;wreg free
  9050                           
  9051                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
  9052  00FAFC  0101               	movlb	1	; () banked
  9053  00FAFE  EE20 F005          	lfsr	2,5
  9054  00FB02  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  9055  00FB04  26D9               	addwf	fsr2l,f,c
  9056  00FB06  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  9057  00FB08  22DA               	addwfc	fsr2h,f,c
  9058  00FB0A  50DF               	movf	223,w,c
  9059  00FB0C  0B0F               	andlw	15
  9060  00FB0E  0900               	iorlw	0
  9061  00FB10  B4D8               	btfsc	status,2,c
  9062  00FB12  D016               	goto	l14396
  9063                           
  9064                           ; BSR set to: 1
  9065                           ;lorawan.c: 1420: {;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommand
      +                          s, hdr->members.fCtrl.fOptsLen);
  9066  00FB14  0E08               	movlw	8
  9067  00FB16  25C7               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
  9068  00FB18  6E47               	movwf	MacExecuteCommands@buffer,c
  9069  00FB1A  0E00               	movlw	0
  9070  00FB1C  21C8               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  9071  00FB1E  6E48               	movwf	MacExecuteCommands@buffer+1,c
  9072  00FB20  EE20 F005          	lfsr	2,5
  9073  00FB24  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  9074  00FB26  26D9               	addwf	fsr2l,f,c
  9075  00FB28  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  9076  00FB2A  22DA               	addwfc	fsr2h,f,c
  9077  00FB2C  50DF               	movf	223,w,c
  9078  00FB2E  0B0F               	andlw	15
  9079  00FB30  6E49               	movwf	MacExecuteCommands@fOptsLen,c
  9080  00FB32  ECF5  F066         	call	_MacExecuteCommands	;wreg free
  9081  00FB36  C047  F0E2         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
  9082  00FB3A  C048  F0E3         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
  9083                           
  9084                           ;lorawan.c: 1422: }
  9085  00FB3E  D007               	goto	l14398
  9086  00FB40                     l14396:
  9087                           
  9088                           ; BSR set to: 1
  9089                           ;lorawan.c: 1423: else;lorawan.c: 1424: {;lorawan.c: 1425: buffer = buffer + 8;
  9090  00FB40  0E08               	movlw	8
  9091  00FB42  0100               	movlb	0	; () banked
  9092  00FB44  25E2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
  9093  00FB46  6FE2               	movwf	LORAWAN_RxDone@buffer& (0+255),b
  9094  00FB48  0E00               	movlw	0
  9095  00FB4A  21E3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
  9096  00FB4C  6FE3               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
  9097  00FB4E                     l14398:
  9098                           
  9099                           ;lorawan.c: 1426: };lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOp
      +                          tsLen + 8) != bufferLength)
  9100  00FB4E  0100               	movlb	0	; () banked
  9101  00FB50  51E4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9102  00FB52  6FE5               	movwf	??_LORAWAN_RxDone& (0+255),b
  9103  00FB54  6BE6               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
  9104  00FB56  0101               	movlb	1	; () banked
  9105  00FB58  EE20 F005          	lfsr	2,5
  9106  00FB5C  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  9107  00FB5E  26D9               	addwf	fsr2l,f,c
  9108  00FB60  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  9109  00FB62  22DA               	addwfc	fsr2h,f,c
  9110  00FB64  50DF               	movf	223,w,c
  9111  00FB66  0B0F               	andlw	15
  9112  00FB68  0100               	movlb	0	; () banked
  9113  00FB6A  6FE7               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
  9114  00FB6C  6BE8               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
  9115  00FB6E  0E0C               	movlw	12
  9116  00FB70  27E7               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
  9117  00FB72  0E00               	movlw	0
  9118  00FB74  23E8               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
  9119  00FB76  51E5               	movf	??_LORAWAN_RxDone& (0+255),w,b
  9120  00FB78  19E7               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
  9121  00FB7A  E104               	bnz	u15970
  9122  00FB7C  51E6               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
  9123  00FB7E  19E8               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
  9124  00FB80  B4D8               	btfsc	status,2,c
  9125  00FB82  D099               	goto	l14420
  9126  00FB84                     u15970:
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;lorawan.c: 1428: {;lorawan.c: 1429: fPort = *(buffer++);
  9130  00FB84  C0E2  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
  9131  00FB88  C0E3  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
  9132  00FB8C  50DF               	movf	indf2,w,c
  9133  00FB8E  0101               	movlb	1	; () banked
  9134  00FB90  6FB5               	movwf	LORAWAN_RxDone@fPort& (0+255),b
  9135                           
  9136                           ; BSR set to: 1
  9137  00FB92  0100               	movlb	0	; () banked
  9138  00FB94  4BE2               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
  9139  00FB96  2BE3               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
  9143  00FB98  0101               	movlb	1	; () banked
  9144  00FB9A  EE20 F005          	lfsr	2,5
  9145  00FB9E  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  9146  00FBA0  26D9               	addwf	fsr2l,f,c
  9147  00FBA2  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  9148  00FBA4  22DA               	addwfc	fsr2h,f,c
  9149  00FBA6  50DF               	movf	223,w,c
  9150  00FBA8  0B0F               	andlw	15
  9151  00FBAA  0100               	movlb	0	; () banked
  9152  00FBAC  6FE5               	movwf	??_LORAWAN_RxDone& (0+255),b
  9153  00FBAE  51E5               	movf	??_LORAWAN_RxDone& (0+255),w,b
  9154  00FBB0  5DE4               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9155  00FBB2  0FF4               	addlw	244
  9156  00FBB4  0101               	movlb	1	; () banked
  9157  00FBB6  6FC6               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
  9158                           
  9159                           ; BSR set to: 1
  9160                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
  9161  00FBB8  EE20 F005          	lfsr	2,5
  9162  00FBBC  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  9163  00FBBE  26D9               	addwf	fsr2l,f,c
  9164  00FBC0  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  9165  00FBC2  22DA               	addwfc	fsr2h,f,c
  9166  00FBC4  50DF               	movf	223,w,c
  9167  00FBC6  0B0F               	andlw	15
  9168  00FBC8  0F19               	addlw	25
  9169  00FBCA  6FBC               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
  9170                           
  9171                           ; BSR set to: 1
  9172                           ;lorawan.c: 1434: if (fPort != 0)
  9173  00FBCC  51B5               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
  9174  00FBCE  B4D8               	btfsc	status,2,c
  9175  00FBD0  D028               	goto	l14414
  9176                           
  9177                           ; BSR set to: 1
  9178                           ;lorawan.c: 1435: {;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1,
      +                           loRa.fCntDown.value, loRa.activationParameters.applicationSessionKey, bufferIndex, radi
      +                          oBuffer, 0);
  9179  00FBD2  C0E2  F033         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
  9180  00FBD6  C0E3  F034         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
  9181  00FBDA  05C6               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
  9182  00FBDC  6E35               	movwf	EncryptFRMPayload@bufferLength,c
  9183  00FBDE  0E01               	movlw	1
  9184  00FBE0  6E36               	movwf	EncryptFRMPayload@dir,c
  9185  00FBE2  C20A  F037         	movff	_loRa+10,EncryptFRMPayload@frameCounter
  9186  00FBE6  C20B  F038         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
  9187  00FBEA  C20C  F039         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
  9188  00FBEE  C20D  F03A         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
  9189  00FBF2  0E32               	movlw	low (_loRa+50)
  9190  00FBF4  6E3B               	movwf	EncryptFRMPayload@key,c
  9191  00FBF6  0E02               	movlw	high (_loRa+50)
  9192  00FBF8  6E3C               	movwf	EncryptFRMPayload@key+1,c
  9193  00FBFA  C1BC  F03D         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
  9194  00FBFE  0EAF               	movlw	low _radioBuffer
  9195  00FC00  6E3E               	movwf	EncryptFRMPayload@bufferToBeEncrypted,c
  9196  00FC02  0E05               	movlw	high _radioBuffer
  9197  00FC04  6E3F               	movwf	EncryptFRMPayload@bufferToBeEncrypted+1,c
  9198  00FC06  0E00               	movlw	0
  9199  00FC08  6E40               	movwf	EncryptFRMPayload@multicastStatus,c
  9200  00FC0A  ECC0  F061         	call	_EncryptFRMPayload	;wreg free
  9201                           
  9202                           ;lorawan.c: 1437: packet = buffer - 1;
  9203  00FC0E  0EFF               	movlw	255
  9204  00FC10  0100               	movlb	0	; () banked
  9205  00FC12  25E2               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
  9206  00FC14  0101               	movlb	1	; () banked
  9207  00FC16  6FBE               	movwf	LORAWAN_RxDone@packet& (0+255),b
  9208  00FC18  0EFF               	movlw	255
  9209  00FC1A  0100               	movlb	0	; () banked
  9210  00FC1C  21E3               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
  9211  00FC1E  0101               	movlb	1	; () banked
  9212  00FC20  D050               	goto	L8
  9213  00FC22                     l14414:
  9214                           
  9215                           ; BSR set to: 1
  9216                           ;lorawan.c: 1439: else;lorawan.c: 1440: {;lorawan.c: 1442: if(bufferLength > (13 + hdr->
      +                          members.fCtrl.fOptsLen))
  9217  00FC22  0100               	movlb	0	; () banked
  9218  00FC24  51E4               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
  9219  00FC26  6FE5               	movwf	??_LORAWAN_RxDone& (0+255),b
  9220  00FC28  6BE6               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
  9221  00FC2A  0101               	movlb	1	; () banked
  9222  00FC2C  EE20 F005          	lfsr	2,5
  9223  00FC30  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  9224  00FC32  26D9               	addwf	fsr2l,f,c
  9225  00FC34  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  9226  00FC36  22DA               	addwfc	fsr2h,f,c
  9227  00FC38  50DF               	movf	223,w,c
  9228  00FC3A  0B0F               	andlw	15
  9229  00FC3C  0100               	movlb	0	; () banked
  9230  00FC3E  6FE7               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
  9231  00FC40  6BE8               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
  9232  00FC42  0E0D               	movlw	13
  9233  00FC44  27E7               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
  9234  00FC46  0E00               	movlw	0
  9235  00FC48  23E8               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
  9236  00FC4A  51E5               	movf	??_LORAWAN_RxDone& (0+255),w,b
  9237  00FC4C  5DE7               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
  9238  00FC4E  51E8               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
  9239  00FC50  0A80               	xorlw	128
  9240  00FC52  6FE9               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
  9241  00FC54  51E6               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
  9242  00FC56  0A80               	xorlw	128
  9243  00FC58  59E9               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
  9244  00FC5A  B0D8               	btfsc	status,0,c
  9245  00FC5C  D02C               	goto	l14420
  9246                           
  9247                           ; BSR set to: 0
  9248                           ;lorawan.c: 1443: {;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1,
      +                           loRa.fCntDown.value, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuf
      +                          fer, 0);
  9249  00FC5E  C0E2  F033         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
  9250  00FC62  C0E3  F034         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
  9251  00FC66  0101               	movlb	1	; () banked
  9252  00FC68  05C6               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
  9253  00FC6A  6E35               	movwf	EncryptFRMPayload@bufferLength,c
  9254  00FC6C  0E01               	movlw	1
  9255  00FC6E  6E36               	movwf	EncryptFRMPayload@dir,c
  9256  00FC70  C20A  F037         	movff	_loRa+10,EncryptFRMPayload@frameCounter
  9257  00FC74  C20B  F038         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
  9258  00FC78  C20C  F039         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
  9259  00FC7C  C20D  F03A         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
  9260  00FC80  0E22               	movlw	low (_loRa+34)
  9261  00FC82  6E3B               	movwf	EncryptFRMPayload@key,c
  9262  00FC84  0E02               	movlw	high (_loRa+34)
  9263  00FC86  6E3C               	movwf	EncryptFRMPayload@key+1,c
  9264  00FC88  C1BC  F03D         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
  9265  00FC8C  0EAF               	movlw	low _radioBuffer
  9266  00FC8E  6E3E               	movwf	EncryptFRMPayload@bufferToBeEncrypted,c
  9267  00FC90  0E05               	movlw	high _radioBuffer
  9268  00FC92  6E3F               	movwf	EncryptFRMPayload@bufferToBeEncrypted+1,c
  9269  00FC94  0E00               	movlw	0
  9270  00FC96  6E40               	movwf	EncryptFRMPayload@multicastStatus,c
  9271  00FC98  ECC0  F061         	call	_EncryptFRMPayload	;wreg free
  9272                           
  9273                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
  9274  00FC9C  C0E2  F047         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
  9275  00FCA0  C0E3  F048         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
  9276  00FCA4  0101               	movlb	1	; () banked
  9277  00FCA6  05C6               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
  9278  00FCA8  6E49               	movwf	MacExecuteCommands@fOptsLen,c
  9279  00FCAA  ECF5  F066         	call	_MacExecuteCommands	;wreg free
  9280  00FCAE  C047  F0E2         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
  9281  00FCB2  C048  F0E3         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
  9282  00FCB6                     l14420:
  9283                           
  9284                           ;lorawan.c: 1447: };lorawan.c: 1449: frmPayloadLength = 0;
  9285  00FCB6  0E00               	movlw	0
  9286  00FCB8  0101               	movlb	1	; () banked
  9287  00FCBA  6FC6               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
  9288                           
  9289                           ; BSR set to: 1
  9290                           ;lorawan.c: 1450: packet = (0);
  9291  00FCBC  0E00               	movlw	0
  9292  00FCBE  6FBE               	movwf	LORAWAN_RxDone@packet& (0+255),b
  9293  00FCC0  0E00               	movlw	0
  9294  00FCC2                     L8:
  9295  00FCC2  6FBF               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
  9296                           
  9297                           ; BSR set to: 1
  9298                           ;lorawan.c: 1457: };lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
  9299  00FCC4  0E01               	movlw	1
  9300  00FCC6  0102               	movlb	2	; () banked
  9301  00FCC8  6FD8               	movwf	(_loRa+216)& (0+255),b
  9302                           
  9303                           ; BSR set to: 2
  9304                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
  9305  00FCCA  0E00               	movlw	0
  9306  00FCCC  6FD1               	movwf	(_loRa+209)& (0+255),b
  9307  00FCCE  0E00               	movlw	0
  9308  00FCD0  6FD0               	movwf	(_loRa+208)& (0+255),b
  9309                           
  9310                           ; BSR set to: 2
  9311                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
  9312  00FCD2  0E00               	movlw	0
  9313  00FCD4  6FEE               	movwf	(_loRa+238)& (0+255),b
  9314                           
  9315                           ; BSR set to: 2
  9316                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
  9317  00FCD6  9900               	bcf	_loRa& (0+255),4,b
  9318                           
  9319                           ; BSR set to: 2
  9320                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
  9321  00FCD8  8303               	bsf	(_loRa+3)& (0+255),1,b
  9322                           
  9323                           ; BSR set to: 2
  9324                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
  9325  00FCDA  A100               	btfss	_loRa& (0+255),0,b
  9326  00FCDC  D052               	goto	l14472
  9327                           
  9328                           ; BSR set to: 2
  9329                           ;lorawan.c: 1468: {;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
  9330  00FCDE  0101               	movlb	1	; () banked
  9331  00FCE0  EE20 F005          	lfsr	2,5
  9332  00FCE4  51C7               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
  9333  00FCE6  26D9               	addwf	fsr2l,f,c
  9334  00FCE8  51C8               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
  9335  00FCEA  22DA               	addwfc	fsr2h,f,c
  9336  00FCEC  AADF               	btfss	indf2,5,c
  9337  00FCEE  D046               	goto	l14470
  9338                           
  9339                           ; BSR set to: 1
  9340                           ;lorawan.c: 1470: {;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
  9341  00FCF0  0102               	movlb	2	; () banked
  9342  00FCF2  9100               	bcf	_loRa& (0+255),0,b
  9343                           
  9344                           ; BSR set to: 2
  9345                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
  9346  00FCF4  0EF0               	movlw	-16
  9347  00FCF6  1702               	andwf	(_loRa+2)& (0+255),f,b
  9348                           
  9349                           ; BSR set to: 2
  9350                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
  9351  00FCF8  0100               	movlb	0	; () banked
  9352  00FCFA  51F0               	movf	_rxPayload& (0+255),w,b
  9353  00FCFC  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  9354  00FCFE  B4D8               	btfsc	status,2,c
  9355  00FD00  D016               	goto	u16039
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;lorawan.c: 1474: {;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
  9359  00FD02  0102               	movlb	2	; () banked
  9360  00FD04  9B00               	bcf	_loRa& (0+255),5,b
  9361                           
  9362                           ; BSR set to: 2
  9363                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
  9364  00FD06  C1BE  F001         	movff	LORAWAN_RxDone@packet,RxData@pData
  9365  00FD0A  C1BF  F002         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
  9366  00FD0E  C1C6  F003         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
  9367  00FD12  0E01               	movlw	1
  9368  00FD14  6E04               	movwf	RxData@status,c
  9369  00FD16  D801               	call	u16038
  9370  00FD18  D00A               	goto	u16039
  9371  00FD1A                     u16038:
  9372  00FD1A  0005               	push	
  9373  00FD1C  6EFA               	movwf	pclath,c
  9374  00FD1E  0100               	movlb	0	; () banked
  9375  00FD20  51F0               	movf	_rxPayload& (0+255),w,b
  9376  00FD22  6EFD               	movwf	tosl,c
  9377  00FD24  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  9378  00FD26  6EFE               	movwf	tosh,c
  9379  00FD28  6AFF               	clrf	tosu,c
  9380  00FD2A  50FA               	movf	pclath,w,c
  9381  00FD2C  0012               	return		;indir
  9382  00FD2E                     u16039:
  9383                           
  9384                           ;lorawan.c: 1477: };lorawan.c: 1478: loRa.macStatus.rxDone = 0;
  9385  00FD2E  0102               	movlb	2	; () banked
  9386  00FD30  9303               	bcf	(_loRa+3)& (0+255),1,b
  9387                           
  9388                           ; BSR set to: 2
  9389                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
  9390  00FD32  BB02               	btfsc	(_loRa+2)& (0+255),5,b
  9391                           
  9392                           ; BSR set to: 2
  9393  00FD34  BB00               	btfsc	_loRa& (0+255),5,b
  9394  00FD36  D5C9               	goto	l14296
  9395                           
  9396                           ; BSR set to: 2
  9397  00FD38  B300               	btfsc	_loRa& (0+255),1,b
  9398  00FD3A  D002               	goto	u16070
  9399                           
  9400                           ; BSR set to: 2
  9401  00FD3C  A700               	btfss	_loRa& (0+255),3,b
  9402  00FD3E  D5C5               	goto	l14296
  9403  00FD40                     u16070:
  9404                           
  9405                           ; BSR set to: 2
  9406                           ;lorawan.c: 1480: {;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &c
      +                          hannelIndex) == OK)
  9407  00FD40  0E01               	movlw	1
  9408  00FD42  6E48               	movwf	SearchAvailableChannel@transmissionType,c
  9409  00FD44  0EB6               	movlw	low LORAWAN_RxDone@channelIndex
  9410  00FD46  6E49               	movwf	SearchAvailableChannel@channelIndex,c
  9411  00FD48  0E01               	movlw	high LORAWAN_RxDone@channelIndex
  9412  00FD4A  6E4A               	movwf	SearchAvailableChannel@channelIndex+1,c
  9413  00FD4C  51ED               	movf	(_loRa+237)& (0+255),w,b
  9414  00FD4E  ECE0  F058         	call	_SearchAvailableChannel
  9415  00FD52  0900               	iorlw	0
  9416  00FD54  A4D8               	btfss	status,2,c
  9417  00FD56  D00F               	goto	l14468
  9418                           
  9419                           ;lorawan.c: 1482: {;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
  9420  00FD58  0E00               	movlw	0
  9421  00FD5A  0100               	movlb	0	; () banked
  9422  00FD5C  6FDB               	movwf	LORAWAN_Send@port& (0+255),b
  9423  00FD5E  0E00               	movlw	0
  9424  00FD60  6FDC               	movwf	LORAWAN_Send@buffer& (0+255),b
  9425  00FD62  0E00               	movlw	0
  9426  00FD64  6FDD               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  9427  00FD66  0E00               	movlw	0
  9428  00FD68  6FDE               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  9429  00FD6A  0E00               	movlw	0
  9430  00FD6C  ECB2  F056         	call	_LORAWAN_Send
  9431  00FD70                     l14466:
  9432                           
  9433                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
  9434  00FD70  0102               	movlb	2	; () banked
  9435  00FD72  9700               	bcf	_loRa& (0+255),3,b
  9436                           
  9437                           ;lorawan.c: 1485: }
  9438  00FD74  D5AA               	goto	l14296
  9439  00FD76                     l14468:
  9440                           
  9441                           ;lorawan.c: 1486: else;lorawan.c: 1487: {;lorawan.c: 1489: StartReTxTimer();
  9442  00FD76  EC7A  F05E         	call	_StartReTxTimer	;wreg free
  9443  00FD7A  D5A7               	goto	l14296
  9444  00FD7C                     l14470:
  9445                           
  9446                           ; BSR set to: 1
  9447                           ;lorawan.c: 1494: else;lorawan.c: 1495: {;lorawan.c: 1496: UpdateRetransmissionAckTimeou
      +                          tState ();
  9448  00FD7C  EC76  F04E         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  9449  00FD80  D5A4               	goto	l14296
  9450  00FD82                     l14472:
  9451                           
  9452                           ; BSR set to: 2
  9453                           ;lorawan.c: 1499: else;lorawan.c: 1500: {;lorawan.c: 1501: loRa.macStatus.macState = IDL
      +                          E;
  9454  00FD82  0EF0               	movlw	-16
  9455  00FD84  1702               	andwf	(_loRa+2)& (0+255),f,b
  9456                           
  9457                           ; BSR set to: 2
  9458                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
  9459  00FD86  0100               	movlb	0	; () banked
  9460  00FD88  51F0               	movf	_rxPayload& (0+255),w,b
  9461  00FD8A  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  9462  00FD8C  B4D8               	btfsc	status,2,c
  9463  00FD8E  D016               	goto	u16109
  9464                           
  9465                           ; BSR set to: 0
  9466                           ;lorawan.c: 1504: {;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
  9467  00FD90  0102               	movlb	2	; () banked
  9468  00FD92  9B00               	bcf	_loRa& (0+255),5,b
  9469                           
  9470                           ; BSR set to: 2
  9471                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
  9472  00FD94  C1BE  F001         	movff	LORAWAN_RxDone@packet,RxData@pData
  9473  00FD98  C1BF  F002         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
  9474  00FD9C  C1C6  F003         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
  9475  00FDA0  0E01               	movlw	1
  9476  00FDA2  6E04               	movwf	RxData@status,c
  9477  00FDA4  D801               	call	u16108
  9478  00FDA6  D00A               	goto	u16109
  9479  00FDA8                     u16108:
  9480  00FDA8  0005               	push	
  9481  00FDAA  6EFA               	movwf	pclath,c
  9482  00FDAC  0100               	movlb	0	; () banked
  9483  00FDAE  51F0               	movf	_rxPayload& (0+255),w,b
  9484  00FDB0  6EFD               	movwf	tosl,c
  9485  00FDB2  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  9486  00FDB4  6EFE               	movwf	tosh,c
  9487  00FDB6  6AFF               	clrf	tosu,c
  9488  00FDB8  50FA               	movf	pclath,w,c
  9489  00FDBA  0012               	return		;indir
  9490  00FDBC                     u16109:
  9491                           
  9492                           ;lorawan.c: 1507: };lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.
      +                          lorawanMacStatus.synchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUp
      +                          linkMessage == 1) || (loRa.lorawanMacStatus.fPending == 1) ) )
  9493  00FDBC  0102               	movlb	2	; () banked
  9494  00FDBE  BB02               	btfsc	(_loRa+2)& (0+255),5,b
  9495                           
  9496                           ; BSR set to: 2
  9497  00FDC0  BB00               	btfsc	_loRa& (0+255),5,b
  9498  00FDC2  D583               	goto	l14296
  9499                           
  9500                           ; BSR set to: 2
  9501  00FDC4  B300               	btfsc	_loRa& (0+255),1,b
  9502  00FDC6  D002               	goto	u16140
  9503                           
  9504                           ; BSR set to: 2
  9505  00FDC8  A700               	btfss	_loRa& (0+255),3,b
  9506  00FDCA  D57F               	goto	l14296
  9507  00FDCC                     u16140:
  9508                           
  9509                           ; BSR set to: 2
  9510                           ;lorawan.c: 1510: {;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &c
      +                          hannelIndex) == OK)
  9511  00FDCC  0E01               	movlw	1
  9512  00FDCE  6E48               	movwf	SearchAvailableChannel@transmissionType,c
  9513  00FDD0  0EB6               	movlw	low LORAWAN_RxDone@channelIndex
  9514  00FDD2  6E49               	movwf	SearchAvailableChannel@channelIndex,c
  9515  00FDD4  0E01               	movlw	high LORAWAN_RxDone@channelIndex
  9516  00FDD6  6E4A               	movwf	SearchAvailableChannel@channelIndex+1,c
  9517  00FDD8  51ED               	movf	(_loRa+237)& (0+255),w,b
  9518  00FDDA  ECE0  F058         	call	_SearchAvailableChannel
  9519  00FDDE  0900               	iorlw	0
  9520  00FDE0  A4D8               	btfss	status,2,c
  9521  00FDE2  D7C9               	goto	l14468
  9522                           
  9523                           ;lorawan.c: 1512: {;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
  9524  00FDE4  0E00               	movlw	0
  9525  00FDE6  0100               	movlb	0	; () banked
  9526  00FDE8  6FDB               	movwf	LORAWAN_Send@port& (0+255),b
  9527  00FDEA  0E00               	movlw	0
  9528  00FDEC  6FDC               	movwf	LORAWAN_Send@buffer& (0+255),b
  9529  00FDEE  0E00               	movlw	0
  9530  00FDF0  6FDD               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  9531  00FDF2  0E00               	movlw	0
  9532  00FDF4  6FDE               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  9533  00FDF6  0E00               	movlw	0
  9534  00FDF8  ECB2  F056         	call	_LORAWAN_Send
  9535  00FDFC  D7B9               	goto	l14466
  9536  00FDFE                     l14502:
  9537                           
  9538                           ; BSR set to: 1
  9539                           ;lorawan.c: 1530: else;lorawan.c: 1531: {;lorawan.c: 1533: SetReceptionNotOkState ();
  9540  00FDFE  EC07  F050         	call	_SetReceptionNotOkState	;wreg free
  9541  00FE02  0012               	return	
  9542  00FE04                     l14506:
  9543                           
  9544                           ; BSR set to: 2
  9545                           ;lorawan.c: 1537: else;lorawan.c: 1538: {;lorawan.c: 1540: if ( rxPayload.RxAppData != (
      +                          0) )
  9546  00FE04  0100               	movlb	0	; () banked
  9547  00FE06  51F0               	movf	_rxPayload& (0+255),w,b
  9548  00FE08  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
  9549  00FE0A  B4D8               	btfsc	status,2,c
  9550  00FE0C  0012               	return	
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;lorawan.c: 1541: {;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
  9554  00FE0E  ECED  F044         	call	_RADIO_GetStatus	;wreg free
  9555  00FE12  0100               	movlb	0	; () banked
  9556  00FE14  6FE5               	movwf	??_LORAWAN_RxDone& (0+255),b
  9557  00FE16  B7E5               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
  9558  00FE18  D013               	goto	l14512
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;lorawan.c: 1543: {;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK)
      +                          ;
  9562  00FE1A  C0E2  F001         	movff	LORAWAN_RxDone@buffer,RxData@pData
  9563  00FE1E  C0E3  F002         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
  9564  00FE22  C0E4  F003         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
  9565  00FE26  0E03               	movlw	3
  9566  00FE28  6E04               	movwf	RxData@status,c
  9567  00FE2A  D801               	call	u16198
  9568  00FE2C  0012               	return	
  9569  00FE2E                     u16198:
  9570  00FE2E  0005               	push	
  9571  00FE30  6EFA               	movwf	pclath,c
  9572  00FE32  51F0               	movf	_rxPayload& (0+255),w,b
  9573  00FE34  6EFD               	movwf	tosl,c
  9574  00FE36  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  9575  00FE38  6EFE               	movwf	tosh,c
  9576  00FE3A  6AFF               	clrf	tosu,c
  9577  00FE3C  50FA               	movf	pclath,w,c
  9578  00FE3E  0012               	return		;indir
  9579  00FE40                     l14512:
  9580                           
  9581                           ; BSR set to: 0
  9582                           ;lorawan.c: 1546: else;lorawan.c: 1547: {;lorawan.c: 1548: rxPayload.RxAppData(buffer, b
      +                          ufferLength, RADIO_NOT_OK);
  9583  00FE40  C0E2  F001         	movff	LORAWAN_RxDone@buffer,RxData@pData
  9584  00FE44  C0E3  F002         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
  9585  00FE48  C0E4  F003         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
  9586  00FE4C  0E02               	movlw	2
  9587  00FE4E  6E04               	movwf	RxData@status,c
  9588  00FE50  D801               	call	u16208
  9589  00FE52  0012               	return	
  9590  00FE54                     u16208:
  9591  00FE54  0005               	push	
  9592  00FE56  6EFA               	movwf	pclath,c
  9593  00FE58  51F0               	movf	_rxPayload& (0+255),w,b
  9594  00FE5A  6EFD               	movwf	tosl,c
  9595  00FE5C  51F1               	movf	(_rxPayload+1)& (0+255),w,b
  9596  00FE5E  6EFE               	movwf	tosh,c
  9597  00FE60  6AFF               	clrf	tosu,c
  9598  00FE62  50FA               	movf	pclath,w,c
  9599  00FE64  0012               	return		;indir
  9600  00FE66                     __end_of_LORAWAN_RxDone:
  9601                           	opt callstack 0
  9602                           
  9603 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
  9604 ;; Defined at:
  9605 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;		None
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;		None
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  1    wreg      void 
  9612 ;; Registers used:
  9613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9623 ;;Total ram usage:        4 bytes
  9624 ;; Hardware stack levels used:    1
  9625 ;; Hardware stack levels required when called:    4
  9626 ;; This function calls:
  9627 ;;		_SwTimerSetTimeout
  9628 ;;		_SwTimerStart
  9629 ;;		___lldiv
  9630 ;; This function is called by:
  9631 ;;		_AckRetransmissionCallback
  9632 ;;		_LORAWAN_RxDone
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635                           
  9636                           	psect	text54
  9637  009CEC                     __ptext54:
  9638                           	opt callstack 0
  9639  009CEC                     _UpdateRetransmissionAckTimeoutState:
  9640                           	opt callstack 23
  9641                           
  9642                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
  9643                           
  9644                           ;incstack = 0
  9645  009CEC  0102               	movlb	2	; () banked
  9646  009CEE  5102               	movf	(_loRa+2)& (0+255),w,b
  9647  009CF0  0BF0               	andlw	-16
  9648  009CF2  0906               	iorlw	6
  9649  009CF4  6F02               	movwf	(_loRa+2)& (0+255),b
  9650                           
  9651                           ; BSR set to: 2
  9652                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
  9653  009CF6  51A0               	movf	(_loRa+160)& (0+255),w,b
  9654  009CF8  6E33               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),c
  9655  009CFA  51A1               	movf	(_loRa+161)& (0+255),w,b
  9656  009CFC  6E34               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),c
  9657  009CFE  6A35               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),c
  9658  009D00  6A36               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),c
  9659  009D02  0E0C               	movlw	12
  9660  009D04                     u15325:
  9661  009D04  90D8               	bcf	status,0,c
  9662  009D06  3633               	rlcf	??_UpdateRetransmissionAckTimeoutState,f,c
  9663  009D08  3634               	rlcf	??_UpdateRetransmissionAckTimeoutState+1,f,c
  9664  009D0A  3635               	rlcf	??_UpdateRetransmissionAckTimeoutState+2,f,c
  9665  009D0C  3636               	rlcf	??_UpdateRetransmissionAckTimeoutState+3,f,c
  9666  009D0E  2EE8               	decfsz	wreg,f,c
  9667  009D10  D7F9               	goto	u15325
  9668  009D12  C033  F001         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
  9669  009D16  C034  F002         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
  9670  009D1A  C035  F003         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
  9671  009D1E  C036  F004         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
  9672  009D22  0E7D               	movlw	125
  9673  009D24  6E05               	movwf	___lldiv@divisor,c
  9674  009D26  0E00               	movlw	0
  9675  009D28  6E06               	movwf	___lldiv@divisor+1,c
  9676  009D2A  0E00               	movlw	0
  9677  009D2C  6E07               	movwf	___lldiv@divisor+2,c
  9678  009D2E  0E00               	movlw	0
  9679  009D30  6E08               	movwf	___lldiv@divisor+3,c
  9680  009D32  ECFE  F050         	call	___lldiv	;wreg free
  9681  009D36  C001  F00E         	movff	?___lldiv,SwTimerSetTimeout@timeout
  9682  009D3A  C002  F00F         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
  9683  009D3E  C003  F010         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
  9684  009D42  C004  F011         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
  9685  009D46  0102               	movlb	2	; () banked
  9686  009D48  51E8               	movf	(_loRa+232)& (0+255),w,b
  9687  009D4A  EC5C  F049         	call	_SwTimerSetTimeout
  9688                           
  9689                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
  9690  009D4E  0102               	movlb	2	; () banked
  9691  009D50  51E8               	movf	(_loRa+232)& (0+255),w,b
  9692  009D52  ECC3  F051         	call	_SwTimerStart
  9693  009D56  0012               	return		;funcret
  9694  009D58                     __end_of_UpdateRetransmissionAckTimeoutState:
  9695                           	opt callstack 0
  9696                           
  9697 ;; *************** function _UpdateDLSettings *****************
  9698 ;; Defined at:
  9699 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  dlRx2Dr         1    wreg     unsigned char 
  9702 ;;  dlRx1DrOffse    1    0[COMRAM] unsigned char 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  dlRx2Dr         1    1[COMRAM] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9714 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9718 ;;Total ram usage:        2 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; This function calls:
  9721 ;;		Nothing
  9722 ;; This function is called by:
  9723 ;;		_LORAWAN_RxDone
  9724 ;; This function uses a non-reentrant model
  9725 ;;
  9726                           
  9727                           	psect	text55
  9728  008BBE                     __ptext55:
  9729                           	opt callstack 0
  9730  008BBE                     _UpdateDLSettings:
  9731                           	opt callstack 26
  9732                           
  9733                           ;incstack = 0
  9734                           ;UpdateDLSettings@dlRx2Dr stored from wreg
  9735  008BBE  6E02               	movwf	UpdateDLSettings@dlRx2Dr,c
  9736                           
  9737                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
  9738  008BC0  0E08               	movlw	8
  9739  008BC2  6002               	cpfslt	UpdateDLSettings@dlRx2Dr,c
  9740  008BC4  D002               	goto	l10150
  9741                           
  9742                           ;lorawan_eu.c: 891: {;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2D
      +                          r;
  9743  008BC6  C002  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
  9744  008BCA                     l10150:
  9745                           
  9746                           ;lorawan_eu.c: 893: };lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
  9747  008BCA  0E06               	movlw	6
  9748  008BCC  6001               	cpfslt	UpdateDLSettings@dlRx1DrOffset,c
  9749  008BCE  0012               	return	
  9750                           
  9751                           ;lorawan_eu.c: 896: {;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
  9752  008BD0  C001  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
  9753  008BD4  0012               	return		;funcret
  9754  008BD6                     __end_of_UpdateDLSettings:
  9755                           	opt callstack 0
  9756                           
  9757 ;; *************** function _UpdateCfList *****************
  9758 ;; Defined at:
  9759 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  bufferLength    1    wreg     unsigned char 
  9762 ;;  joinAccept      2   62[COMRAM] PTR struct .
  9763 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;  bufferLength    1   68[COMRAM] unsigned char 
  9766 ;;  frequency       4   69[COMRAM] unsigned long 
  9767 ;;  i               1   74[COMRAM] unsigned char 
  9768 ;;  channelIndex    1   73[COMRAM] unsigned char 
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1    wreg      void 
  9771 ;; Registers used:
  9772 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;Total ram usage:       13 bytes
  9783 ;; Hardware stack levels used:    1
  9784 ;; Hardware stack levels required when called:    2
  9785 ;; This function calls:
  9786 ;;		_LORAWAN_SetChannelIdStatus
  9787 ;;		_ValidateFrequency
  9788 ;;		___lmul
  9789 ;;		_memcpy
  9790 ;; This function is called by:
  9791 ;;		_LORAWAN_RxDone
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           	psect	text56
  9796  00CFEC                     __ptext56:
  9797                           	opt callstack 0
  9798  00CFEC                     _UpdateCfList:
  9799                           	opt callstack 24
  9800                           
  9801                           ;incstack = 0
  9802                           ;UpdateCfList@bufferLength stored from wreg
  9803  00CFEC  6E45               	movwf	UpdateCfList@bufferLength,c
  9804                           
  9805                           ;lorawan_eu.c: 826: uint8_t i;;lorawan_eu.c: 827: uint32_t frequency;;lorawan_eu.c: 828:
      +                           uint8_t channelIndex;;lorawan_eu.c: 830: if (bufferLength == 33)
  9806  00CFEE  0E21               	movlw	33
  9807  00CFF0  1845               	xorwf	UpdateCfList@bufferLength,w,c
  9808  00CFF2  A4D8               	btfss	status,2,c
  9809  00CFF4  0012               	return	
  9810                           
  9811                           ;lorawan_eu.c: 831: {;lorawan_eu.c: 833: channelIndex = 3;
  9812  00CFF6  0E03               	movlw	3
  9813  00CFF8  6E4A               	movwf	UpdateCfList@channelIndex,c
  9814                           
  9815                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
  9816  00CFFA  0E00               	movlw	0
  9817  00CFFC  6E4B               	movwf	UpdateCfList@i,c
  9818  00CFFE                     l13872:
  9819                           
  9820                           ;lorawan_eu.c: 836: {;lorawan_eu.c: 837: frequency = 0;
  9821  00CFFE  0E00               	movlw	0
  9822  00D000  6E46               	movwf	UpdateCfList@frequency,c
  9823  00D002  0E00               	movlw	0
  9824  00D004  6E47               	movwf	UpdateCfList@frequency+1,c
  9825  00D006  0E00               	movlw	0
  9826  00D008  6E48               	movwf	UpdateCfList@frequency+2,c
  9827  00D00A  0E00               	movlw	0
  9828  00D00C  6E49               	movwf	UpdateCfList@frequency+3,c
  9829                           
  9830                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
  9831  00D00E  0E46               	movlw	low UpdateCfList@frequency
  9832  00D010  6E01               	movwf	memcpy@d1,c
  9833  00D012  0E00               	movlw	high UpdateCfList@frequency
  9834  00D014  6E02               	movwf	memcpy@d1+1,c
  9835  00D016  504B               	movf	UpdateCfList@i,w,c
  9836  00D018  0D03               	mullw	3
  9837  00D01A  C03F  F041         	movff	UpdateCfList@joinAccept,??_UpdateCfList
  9838  00D01E  C040  F042         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
  9839  00D022  50F3               	movf	prodl,w,c
  9840  00D024  2641               	addwf	??_UpdateCfList,f,c
  9841  00D026  50F4               	movf	prodh,w,c
  9842  00D028  2242               	addwfc	??_UpdateCfList+1,f,c
  9843  00D02A  0E0D               	movlw	13
  9844  00D02C  2441               	addwf	??_UpdateCfList,w,c
  9845  00D02E  6E03               	movwf	memcpy@s1,c
  9846  00D030  0E00               	movlw	0
  9847  00D032  2042               	addwfc	??_UpdateCfList+1,w,c
  9848  00D034  6E04               	movwf	memcpy@s1+1,c
  9849  00D036  0E00               	movlw	0
  9850  00D038  6E06               	movwf	memcpy@n+1,c
  9851  00D03A  0E03               	movlw	3
  9852  00D03C  6E05               	movwf	memcpy@n,c
  9853  00D03E  EC56  F04C         	call	_memcpy	;wreg free
  9854                           
  9855                           ;lorawan_eu.c: 839: frequency *= 100;
  9856  00D042  C046  F033         	movff	UpdateCfList@frequency,___lmul@multiplier
  9857  00D046  C047  F034         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
  9858  00D04A  C048  F035         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
  9859  00D04E  C049  F036         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
  9860  00D052  0E64               	movlw	100
  9861  00D054  6E37               	movwf	___lmul@multiplicand,c
  9862  00D056  0E00               	movlw	0
  9863  00D058  6E38               	movwf	___lmul@multiplicand+1,c
  9864  00D05A  0E00               	movlw	0
  9865  00D05C  6E39               	movwf	___lmul@multiplicand+2,c
  9866  00D05E  0E00               	movlw	0
  9867  00D060  6E3A               	movwf	___lmul@multiplicand+3,c
  9868  00D062  ECD4  F04B         	call	___lmul	;wreg free
  9869  00D066  C033  F046         	movff	?___lmul,UpdateCfList@frequency
  9870  00D06A  C034  F047         	movff	?___lmul+1,UpdateCfList@frequency+1
  9871  00D06E  C035  F048         	movff	?___lmul+2,UpdateCfList@frequency+2
  9872  00D072  C036  F049         	movff	?___lmul+3,UpdateCfList@frequency+3
  9873                           
  9874                           ;lorawan_eu.c: 840: if (frequency != 0)
  9875  00D076  5046               	movf	UpdateCfList@frequency,w,c
  9876  00D078  1047               	iorwf	UpdateCfList@frequency+1,w,c
  9877  00D07A  1048               	iorwf	UpdateCfList@frequency+2,w,c
  9878  00D07C  1049               	iorwf	UpdateCfList@frequency+3,w,c
  9879  00D07E  B4D8               	btfsc	status,2,c
  9880  00D080  D0A9               	goto	l13888
  9881                           
  9882                           ;lorawan_eu.c: 841: {;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
  9883  00D082  C046  F001         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
  9884  00D086  C047  F002         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
  9885  00D08A  C048  F003         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
  9886  00D08E  C049  F004         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
  9887  00D092  ECDC  F04D         	call	_ValidateFrequency	;wreg free
  9888  00D096  0900               	iorlw	0
  9889  00D098  A4D8               	btfss	status,2,c
  9890  00D09A  D0A2               	goto	l13890
  9891                           
  9892                           ;lorawan_eu.c: 843: {;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
  9893  00D09C  504A               	movf	UpdateCfList@channelIndex,w,c
  9894  00D09E  0D0E               	mullw	14
  9895  00D0A0  CFF3 F041          	movff	prodl,??_UpdateCfList
  9896  00D0A4  CFF4 F042          	movff	prodh,??_UpdateCfList+1
  9897  00D0A8  504B               	movf	UpdateCfList@i,w,c
  9898  00D0AA  0D0E               	mullw	14
  9899  00D0AC  0E00               	movlw	low _Channels
  9900  00D0AE  6E43               	movwf	(??_UpdateCfList+2)& (0+255),c
  9901  00D0B0  0E03               	movlw	high _Channels
  9902  00D0B2  6E44               	movwf	(??_UpdateCfList+3)& (0+255),c
  9903  00D0B4  50F3               	movf	prodl,w,c
  9904  00D0B6  2643               	addwf	??_UpdateCfList+2,f,c
  9905  00D0B8  50F4               	movf	prodh,w,c
  9906  00D0BA  2244               	addwfc	??_UpdateCfList+3,f,c
  9907  00D0BC  5041               	movf	??_UpdateCfList,w,c
  9908  00D0BE  2443               	addwf	??_UpdateCfList+2,w,c
  9909  00D0C0  6ED9               	movwf	fsr2l,c
  9910  00D0C2  5042               	movf	??_UpdateCfList+1,w,c
  9911  00D0C4  2044               	addwfc	??_UpdateCfList+3,w,c
  9912  00D0C6  6EDA               	movwf	fsr2h,c
  9913  00D0C8  C046  FFDE         	movff	UpdateCfList@frequency,postinc2
  9914  00D0CC  C047  FFDE         	movff	UpdateCfList@frequency+1,postinc2
  9915  00D0D0  C048  FFDE         	movff	UpdateCfList@frequency+2,postinc2
  9916  00D0D4  C049  FFDE         	movff	UpdateCfList@frequency+3,postinc2
  9917                           
  9918                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
  9919  00D0D8  504A               	movf	UpdateCfList@channelIndex,w,c
  9920  00D0DA  0D0E               	mullw	14
  9921  00D0DC  CFF3 F041          	movff	prodl,??_UpdateCfList
  9922  00D0E0  CFF4 F042          	movff	prodh,??_UpdateCfList+1
  9923  00D0E4  504B               	movf	UpdateCfList@i,w,c
  9924  00D0E6  0D0E               	mullw	14
  9925  00D0E8  0E00               	movlw	low _Channels
  9926  00D0EA  6E43               	movwf	(??_UpdateCfList+2)& (0+255),c
  9927  00D0EC  0E03               	movlw	high _Channels
  9928  00D0EE  6E44               	movwf	(??_UpdateCfList+3)& (0+255),c
  9929  00D0F0  0E05               	movlw	5
  9930  00D0F2  2643               	addwf	??_UpdateCfList+2,f,c
  9931  00D0F4  0E00               	movlw	0
  9932  00D0F6  2244               	addwfc	??_UpdateCfList+3,f,c
  9933  00D0F8  50F3               	movf	prodl,w,c
  9934  00D0FA  2643               	addwf	??_UpdateCfList+2,f,c
  9935  00D0FC  50F4               	movf	prodh,w,c
  9936  00D0FE  2244               	addwfc	??_UpdateCfList+3,f,c
  9937  00D100  5041               	movf	??_UpdateCfList,w,c
  9938  00D102  2443               	addwf	??_UpdateCfList+2,w,c
  9939  00D104  6ED9               	movwf	fsr2l,c
  9940  00D106  5042               	movf	??_UpdateCfList+1,w,c
  9941  00D108  2044               	addwfc	??_UpdateCfList+3,w,c
  9942  00D10A  6EDA               	movwf	fsr2h,c
  9943  00D10C  0103               	movlb	3	; () banked
  9944  00D10E  50DF               	movf	223,w,c
  9945  00D110  0B0F               	andlw	-241
  9946  00D112  0950               	iorlw	80
  9947  00D114  6EDF               	movwf	223,c
  9948                           
  9949                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
  9950  00D116  504A               	movf	UpdateCfList@channelIndex,w,c
  9951  00D118  0D0E               	mullw	14
  9952  00D11A  CFF3 F041          	movff	prodl,??_UpdateCfList
  9953  00D11E  CFF4 F042          	movff	prodh,??_UpdateCfList+1
  9954  00D122  504B               	movf	UpdateCfList@i,w,c
  9955  00D124  0D0E               	mullw	14
  9956  00D126  0E00               	movlw	low _Channels
  9957  00D128  6E43               	movwf	(??_UpdateCfList+2)& (0+255),c
  9958  00D12A  0E03               	movlw	high _Channels
  9959  00D12C  6E44               	movwf	(??_UpdateCfList+3)& (0+255),c
  9960  00D12E  0E05               	movlw	5
  9961  00D130  2643               	addwf	??_UpdateCfList+2,f,c
  9962  00D132  0E00               	movlw	0
  9963  00D134  2244               	addwfc	??_UpdateCfList+3,f,c
  9964  00D136  50F3               	movf	prodl,w,c
  9965  00D138  2643               	addwf	??_UpdateCfList+2,f,c
  9966  00D13A  50F4               	movf	prodh,w,c
  9967  00D13C  2244               	addwfc	??_UpdateCfList+3,f,c
  9968  00D13E  5041               	movf	??_UpdateCfList,w,c
  9969  00D140  2443               	addwf	??_UpdateCfList+2,w,c
  9970  00D142  6ED9               	movwf	fsr2l,c
  9971  00D144  5042               	movf	??_UpdateCfList+1,w,c
  9972  00D146  2044               	addwfc	??_UpdateCfList+3,w,c
  9973  00D148  6EDA               	movwf	fsr2h,c
  9974  00D14A  0EF0               	movlw	-16
  9975  00D14C  16DF               	andwf	223,f,c
  9976                           
  9977                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
  9978  00D14E  504A               	movf	UpdateCfList@channelIndex,w,c
  9979  00D150  0D0E               	mullw	14
  9980  00D152  CFF3 F041          	movff	prodl,??_UpdateCfList
  9981  00D156  CFF4 F042          	movff	prodh,??_UpdateCfList+1
  9982  00D15A  504B               	movf	UpdateCfList@i,w,c
  9983  00D15C  0D0E               	mullw	14
  9984  00D15E  0E00               	movlw	low _Channels
  9985  00D160  6E43               	movwf	(??_UpdateCfList+2)& (0+255),c
  9986  00D162  0E03               	movlw	high _Channels
  9987  00D164  6E44               	movwf	(??_UpdateCfList+3)& (0+255),c
  9988  00D166  0E06               	movlw	6
  9989  00D168  2643               	addwf	??_UpdateCfList+2,f,c
  9990  00D16A  0E00               	movlw	0
  9991  00D16C  2244               	addwfc	??_UpdateCfList+3,f,c
  9992  00D16E  50F3               	movf	prodl,w,c
  9993  00D170  2643               	addwf	??_UpdateCfList+2,f,c
  9994  00D172  50F4               	movf	prodh,w,c
  9995  00D174  2244               	addwfc	??_UpdateCfList+3,f,c
  9996  00D176  5041               	movf	??_UpdateCfList,w,c
  9997  00D178  2443               	addwf	??_UpdateCfList+2,w,c
  9998  00D17A  6ED9               	movwf	fsr2l,c
  9999  00D17C  5042               	movf	??_UpdateCfList+1,w,c
 10000  00D17E  2044               	addwfc	??_UpdateCfList+3,w,c
 10001  00D180  6EDA               	movwf	fsr2h,c
 10002  00D182  0EE7               	movlw	231
 10003  00D184  6EDE               	movwf	postinc2,c
 10004  00D186  0E03               	movlw	3
 10005  00D188  6EDD               	movwf	postdec2,c
 10006                           
 10007                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 10008  00D18A  504A               	movf	UpdateCfList@channelIndex,w,c
 10009  00D18C  0D0E               	mullw	14
 10010  00D18E  CFF3 F041          	movff	prodl,??_UpdateCfList
 10011  00D192  CFF4 F042          	movff	prodh,??_UpdateCfList+1
 10012  00D196  504B               	movf	UpdateCfList@i,w,c
 10013  00D198  0D0E               	mullw	14
 10014  00D19A  0E00               	movlw	low _Channels
 10015  00D19C  6E43               	movwf	(??_UpdateCfList+2)& (0+255),c
 10016  00D19E  0E03               	movlw	high _Channels
 10017  00D1A0  6E44               	movwf	(??_UpdateCfList+3)& (0+255),c
 10018  00D1A2  0E0D               	movlw	13
 10019  00D1A4  2643               	addwf	??_UpdateCfList+2,f,c
 10020  00D1A6  0E00               	movlw	0
 10021  00D1A8  2244               	addwfc	??_UpdateCfList+3,f,c
 10022  00D1AA  50F3               	movf	prodl,w,c
 10023  00D1AC  2643               	addwf	??_UpdateCfList+2,f,c
 10024  00D1AE  50F4               	movf	prodh,w,c
 10025  00D1B0  2244               	addwfc	??_UpdateCfList+3,f,c
 10026  00D1B2  5041               	movf	??_UpdateCfList,w,c
 10027  00D1B4  2443               	addwf	??_UpdateCfList+2,w,c
 10028  00D1B6  6ED9               	movwf	fsr2l,c
 10029  00D1B8  5042               	movf	??_UpdateCfList+1,w,c
 10030  00D1BA  2044               	addwfc	??_UpdateCfList+3,w,c
 10031  00D1BC  6EDA               	movwf	fsr2h,c
 10032  00D1BE  0EFF               	movlw	255
 10033  00D1C0  6EDF               	movwf	indf2,c
 10034                           
 10035                           ; BSR set to: 3
 10036                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 10037  00D1C2  0E01               	movlw	1
 10038  00D1C4  6E05               	movwf	LORAWAN_SetChannelIdStatus@statusNew,c
 10039  00D1C6  504B               	movf	UpdateCfList@i,w,c
 10040  00D1C8  244A               	addwf	UpdateCfList@channelIndex,w,c
 10041  00D1CA  EC8F  F048         	call	_LORAWAN_SetChannelIdStatus
 10042                           
 10043                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 10044  00D1CE  0102               	movlb	2	; () banked
 10045  00D1D0  8703               	bsf	(_loRa+3)& (0+255),3,b
 10046  00D1D2  D006               	goto	l13890
 10047  00D1D4                     l13888:
 10048                           
 10049                           ;lorawan_eu.c: 853: else;lorawan_eu.c: 854: {;lorawan_eu.c: 855: LORAWAN_SetChannelIdSta
      +                          tus(i+channelIndex, 0);
 10050  00D1D4  0E00               	movlw	0
 10051  00D1D6  6E05               	movwf	LORAWAN_SetChannelIdStatus@statusNew,c
 10052  00D1D8  504B               	movf	UpdateCfList@i,w,c
 10053  00D1DA  244A               	addwf	UpdateCfList@channelIndex,w,c
 10054  00D1DC  EC8F  F048         	call	_LORAWAN_SetChannelIdStatus
 10055  00D1E0                     l13890:
 10056  00D1E0  2A4B               	incf	UpdateCfList@i,f,c
 10057  00D1E2  0E04               	movlw	4
 10058  00D1E4  644B               	cpfsgt	UpdateCfList@i,c
 10059  00D1E6  D70B               	goto	l13872
 10060                           
 10061                           ;lorawan_eu.c: 856: };lorawan_eu.c: 857: };lorawan_eu.c: 859: loRa.macStatus.channelsMod
      +                          ified = 1;
 10062  00D1E8  0102               	movlb	2	; () banked
 10063  00D1EA  8703               	bsf	(_loRa+3)& (0+255),3,b
 10064  00D1EC  0012               	return		;funcret
 10065  00D1EE                     __end_of_UpdateCfList:
 10066                           	opt callstack 0
 10067                           
 10068 ;; *************** function _StartReTxTimer *****************
 10069 ;; Defined at:
 10070 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 10071 ;; Parameters:    Size  Location     Type
 10072 ;;		None
 10073 ;; Auto vars:     Size  Location     Type
 10074 ;;  minim           4   54[COMRAM] unsigned long 
 10075 ;;  i               1   58[COMRAM] unsigned char 
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10086 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10088 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10089 ;;Total ram usage:        9 bytes
 10090 ;; Hardware stack levels used:    1
 10091 ;; Hardware stack levels required when called:    4
 10092 ;; This function calls:
 10093 ;;		_SwTimerSetTimeout
 10094 ;;		_SwTimerStart
 10095 ;;		___lldiv
 10096 ;; This function is called by:
 10097 ;;		_LORAWAN_RxDone
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text57
 10102  00BCF4                     __ptext57:
 10103                           	opt callstack 0
 10104  00BCF4                     _StartReTxTimer:
 10105                           	opt callstack 22
 10106                           
 10107                           ;lorawan_eu.c: 904: uint8_t i;;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 10108                           
 10109                           ;incstack = 0
 10110  00BCF4  6837               	setf	StartReTxTimer@minim,c
 10111  00BCF6  6838               	setf	StartReTxTimer@minim+1,c
 10112  00BCF8  6839               	setf	StartReTxTimer@minim+2,c
 10113  00BCFA  683A               	setf	StartReTxTimer@minim+3,c
 10114                           
 10115                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 10116  00BCFC  0E00               	movlw	0
 10117  00BCFE  6E3B               	movwf	StartReTxTimer@i,c
 10118  00BD00  D05E               	goto	l13912
 10119  00BD02                     l13898:
 10120                           
 10121                           ; BSR set to: 2
 10122                           ;lorawan_eu.c: 908: {;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].
      +                          channelTimer != 0) && (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Ch
      +                          annels[i].dataRange.min) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10123  00BD02  503B               	movf	StartReTxTimer@i,w,c
 10124  00BD04  0D0E               	mullw	14
 10125  00BD06  0E04               	movlw	low (_Channels+4)
 10126  00BD08  24F3               	addwf	prodl,w,c
 10127  00BD0A  6ED9               	movwf	fsr2l,c
 10128  00BD0C  0E03               	movlw	high (_Channels+4)
 10129  00BD0E  20F4               	addwfc	prodh,w,c
 10130  00BD10  6EDA               	movwf	fsr2h,c
 10131  00BD12  04DE               	decf	postinc2,w,c
 10132  00BD14  A4D8               	btfss	status,2,c
 10133  00BD16  D052               	goto	l13910
 10134                           
 10135                           ; BSR set to: 2
 10136  00BD18  503B               	movf	StartReTxTimer@i,w,c
 10137  00BD1A  0D0E               	mullw	14
 10138  00BD1C  0E08               	movlw	low (_Channels+8)
 10139  00BD1E  24F3               	addwf	prodl,w,c
 10140  00BD20  6ED9               	movwf	fsr2l,c
 10141  00BD22  0E03               	movlw	high (_Channels+8)
 10142  00BD24  20F4               	addwfc	prodh,w,c
 10143  00BD26  6EDA               	movwf	fsr2h,c
 10144  00BD28  50DE               	movf	postinc2,w,c
 10145  00BD2A  10DE               	iorwf	postinc2,w,c
 10146  00BD2C  10DE               	iorwf	postinc2,w,c
 10147  00BD2E  10DE               	iorwf	postinc2,w,c
 10148  00BD30  B4D8               	btfsc	status,2,c
 10149  00BD32  D044               	goto	l13910
 10150                           
 10151                           ; BSR set to: 2
 10152  00BD34  503B               	movf	StartReTxTimer@i,w,c
 10153  00BD36  0D0E               	mullw	14
 10154  00BD38  0E08               	movlw	low (_Channels+8)
 10155  00BD3A  24F3               	addwf	prodl,w,c
 10156  00BD3C  6ED9               	movwf	fsr2l,c
 10157  00BD3E  0E03               	movlw	high (_Channels+8)
 10158  00BD40  20F4               	addwfc	prodh,w,c
 10159  00BD42  6EDA               	movwf	fsr2h,c
 10160  00BD44  50DE               	movf	postinc2,w,c
 10161  00BD46  5C37               	subwf	StartReTxTimer@minim,w,c
 10162  00BD48  50DE               	movf	postinc2,w,c
 10163  00BD4A  5838               	subwfb	StartReTxTimer@minim+1,w,c
 10164  00BD4C  50DE               	movf	postinc2,w,c
 10165  00BD4E  5839               	subwfb	StartReTxTimer@minim+2,w,c
 10166  00BD50  50DE               	movf	postinc2,w,c
 10167  00BD52  583A               	subwfb	StartReTxTimer@minim+3,w,c
 10168  00BD54  A0D8               	btfss	status,0,c
 10169  00BD56  D032               	goto	l13910
 10170                           
 10171                           ; BSR set to: 2
 10172  00BD58  503B               	movf	StartReTxTimer@i,w,c
 10173  00BD5A  0D0E               	mullw	14
 10174  00BD5C  0E05               	movlw	low (_Channels+5)
 10175  00BD5E  24F3               	addwf	prodl,w,c
 10176  00BD60  6ED9               	movwf	fsr2l,c
 10177  00BD62  0E03               	movlw	high (_Channels+5)
 10178  00BD64  20F4               	addwfc	prodh,w,c
 10179  00BD66  6EDA               	movwf	fsr2h,c
 10180  00BD68  0103               	movlb	3	; () banked
 10181  00BD6A  50DF               	movf	223,w,c
 10182  00BD6C  0B0F               	andlw	15
 10183  00BD6E  6E33               	movwf	??_StartReTxTimer& (0+255),c
 10184  00BD70  5033               	movf	??_StartReTxTimer,w,c
 10185  00BD72  0102               	movlb	2	; () banked
 10186  00BD74  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10187  00BD76  A0D8               	btfss	status,0,c
 10188  00BD78  D021               	goto	l13910
 10189                           
 10190                           ; BSR set to: 2
 10191  00BD7A  503B               	movf	StartReTxTimer@i,w,c
 10192  00BD7C  0D0E               	mullw	14
 10193  00BD7E  0E05               	movlw	low (_Channels+5)
 10194  00BD80  24F3               	addwf	prodl,w,c
 10195  00BD82  6ED9               	movwf	fsr2l,c
 10196  00BD84  0E03               	movlw	high (_Channels+5)
 10197  00BD86  20F4               	addwfc	prodh,w,c
 10198  00BD88  6EDA               	movwf	fsr2h,c
 10199  00BD8A  0103               	movlb	3	; () banked
 10200  00BD8C  38DF               	swapf	223,w,c
 10201  00BD8E  0B0F               	andlw	15
 10202  00BD90  6E33               	movwf	??_StartReTxTimer& (0+255),c
 10203  00BD92  0102               	movlb	2	; () banked
 10204  00BD94  51DF               	movf	(_loRa+223)& (0+255),w,b
 10205  00BD96  5C33               	subwf	??_StartReTxTimer,w,c
 10206  00BD98  A0D8               	btfss	status,0,c
 10207  00BD9A  D010               	goto	l13910
 10208                           
 10209                           ; BSR set to: 2
 10210                           ;lorawan_eu.c: 910: {;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 10211  00BD9C  503B               	movf	StartReTxTimer@i,w,c
 10212  00BD9E  0D0E               	mullw	14
 10213  00BDA0  0E08               	movlw	low (_Channels+8)
 10214  00BDA2  24F3               	addwf	prodl,w,c
 10215  00BDA4  6ED9               	movwf	fsr2l,c
 10216  00BDA6  0E03               	movlw	high (_Channels+8)
 10217  00BDA8  20F4               	addwfc	prodh,w,c
 10218  00BDAA  6EDA               	movwf	fsr2h,c
 10219  00BDAC  CFDE F037          	movff	postinc2,StartReTxTimer@minim
 10220  00BDB0  CFDE F038          	movff	postinc2,StartReTxTimer@minim+1
 10221  00BDB4  CFDE F039          	movff	postinc2,StartReTxTimer@minim+2
 10222  00BDB8  CFDE F03A          	movff	postinc2,StartReTxTimer@minim+3
 10223  00BDBC                     l13910:
 10224                           
 10225                           ; BSR set to: 2
 10226  00BDBC  2A3B               	incf	StartReTxTimer@i,f,c
 10227  00BDBE                     l13912:
 10228  00BDBE  503B               	movf	StartReTxTimer@i,w,c
 10229  00BDC0  0102               	movlb	2	; () banked
 10230  00BDC2  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10231  00BDC4  B0D8               	btfsc	status,0,c
 10232  00BDC6  D79D               	goto	l13898
 10233                           
 10234                           ; BSR set to: 2
 10235                           ;lorawan_eu.c: 912: };lorawan_eu.c: 913: };lorawan_eu.c: 914: loRa.macStatus.macState = 
      +                          RETRANSMISSION_DELAY;
 10236  00BDC8  5102               	movf	(_loRa+2)& (0+255),w,b
 10237  00BDCA  0BF0               	andlw	-16
 10238  00BDCC  0906               	iorlw	6
 10239  00BDCE  6F02               	movwf	(_loRa+2)& (0+255),b
 10240                           
 10241                           ; BSR set to: 2
 10242                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 10243  00BDD0  C037  F033         	movff	StartReTxTimer@minim,??_StartReTxTimer
 10244  00BDD4  C038  F034         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 10245  00BDD8  C039  F035         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 10246  00BDDC  C03A  F036         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 10247  00BDE0  0E0C               	movlw	12
 10248  00BDE2                     u15185:
 10249  00BDE2  90D8               	bcf	status,0,c
 10250  00BDE4  3633               	rlcf	??_StartReTxTimer,f,c
 10251  00BDE6  3634               	rlcf	??_StartReTxTimer+1,f,c
 10252  00BDE8  3635               	rlcf	??_StartReTxTimer+2,f,c
 10253  00BDEA  3636               	rlcf	??_StartReTxTimer+3,f,c
 10254  00BDEC  2EE8               	decfsz	wreg,f,c
 10255  00BDEE  D7F9               	goto	u15185
 10256  00BDF0  C033  F001         	movff	??_StartReTxTimer,___lldiv@dividend
 10257  00BDF4  C034  F002         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 10258  00BDF8  C035  F003         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 10259  00BDFC  C036  F004         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 10260  00BE00  0E7D               	movlw	125
 10261  00BE02  6E05               	movwf	___lldiv@divisor,c
 10262  00BE04  0E00               	movlw	0
 10263  00BE06  6E06               	movwf	___lldiv@divisor+1,c
 10264  00BE08  0E00               	movlw	0
 10265  00BE0A  6E07               	movwf	___lldiv@divisor+2,c
 10266  00BE0C  0E00               	movlw	0
 10267  00BE0E  6E08               	movwf	___lldiv@divisor+3,c
 10268  00BE10  ECFE  F050         	call	___lldiv	;wreg free
 10269  00BE14  C001  F00E         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10270  00BE18  C002  F00F         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10271  00BE1C  C003  F010         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10272  00BE20  C004  F011         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10273  00BE24  0102               	movlb	2	; () banked
 10274  00BE26  51E6               	movf	(_loRa+230)& (0+255),w,b
 10275  00BE28  EC5C  F049         	call	_SwTimerSetTimeout
 10276                           
 10277                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 10278  00BE2C  0102               	movlb	2	; () banked
 10279  00BE2E  51E6               	movf	(_loRa+230)& (0+255),w,b
 10280  00BE30  ECC3  F051         	call	_SwTimerStart
 10281  00BE34  0012               	return		;funcret
 10282  00BE36                     __end_of_StartReTxTimer:
 10283                           	opt callstack 0
 10284                           
 10285 ;; *************** function _SetReceptionNotOkState *****************
 10286 ;; Defined at:
 10287 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;		None
 10290 ;; Auto vars:     Size  Location     Type
 10291 ;;		None
 10292 ;; Return value:  Size  Location     Type
 10293 ;;                  1    wreg      void 
 10294 ;; Registers used:
 10295 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10296 ;; Tracked objects:
 10297 ;;		On entry : 0/0
 10298 ;;		On exit  : 0/0
 10299 ;;		Unchanged: 0/0
 10300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10305 ;;Total ram usage:        0 bytes
 10306 ;; Hardware stack levels used:    1
 10307 ;; Hardware stack levels required when called:    7
 10308 ;; This function calls:
 10309 ;;		_LORAWAN_EnterContinuousReceive
 10310 ;;		_RxData
 10311 ;; This function is called by:
 10312 ;;		_LORAWAN_RxDone
 10313 ;; This function uses a non-reentrant model
 10314 ;;
 10315                           
 10316                           	psect	text58
 10317  00A00E                     __ptext58:
 10318                           	opt callstack 0
 10319  00A00E                     _SetReceptionNotOkState:
 10320                           	opt callstack 19
 10321                           
 10322                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 10323                           
 10324                           ;incstack = 0
 10325  00A00E  0102               	movlb	2	; () banked
 10326  00A010  5102               	movf	(_loRa+2)& (0+255),w,b
 10327  00A012  0B0F               	andlw	15
 10328  00A014  0A05               	xorlw	5
 10329  00A016  B4D8               	btfsc	status,2,c
 10330  00A018  D008               	goto	u15410
 10331                           
 10332                           ; BSR set to: 2
 10333  00A01A  5102               	movf	(_loRa+2)& (0+255),w,b
 10334  00A01C  0B0F               	andlw	15
 10335  00A01E  0A03               	xorlw	3
 10336  00A020  A4D8               	btfss	status,2,c
 10337  00A022  D026               	goto	l14040
 10338                           
 10339                           ; BSR set to: 2
 10340  00A024  51F1               	movf	(_loRa+241)& (0+255),w,b
 10341  00A026  B4D8               	btfsc	status,2,c
 10342  00A028  D023               	goto	l14040
 10343  00A02A                     u15410:
 10344                           
 10345                           ; BSR set to: 2
 10346                           ;lorawan.c: 2000: {;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
 10347  00A02A  9100               	bcf	_loRa& (0+255),0,b
 10348                           
 10349                           ; BSR set to: 2
 10350                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 10351  00A02C  0EF0               	movlw	-16
 10352  00A02E  1702               	andwf	(_loRa+2)& (0+255),f,b
 10353                           
 10354                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 10355  00A030  5112               	movf	(_loRa+18)& (0+255),w,b
 10356  00A032  A4D8               	btfss	status,2,c
 10357  00A034  D01B               	goto	u15449
 10358                           
 10359                           ; BSR set to: 2
 10360  00A036  0100               	movlb	0	; () banked
 10361  00A038  51F0               	movf	_rxPayload& (0+255),w,b
 10362  00A03A  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
 10363  00A03C  B4D8               	btfsc	status,2,c
 10364  00A03E  D016               	goto	u15449
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;lorawan.c: 2005: {;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 10368  00A040  0102               	movlb	2	; () banked
 10369  00A042  9B00               	bcf	_loRa& (0+255),5,b
 10370                           
 10371                           ; BSR set to: 2
 10372                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10373  00A044  0E00               	movlw	0
 10374  00A046  6E01               	movwf	RxData@pData,c
 10375  00A048  0E00               	movlw	0
 10376  00A04A  6E02               	movwf	RxData@pData+1,c
 10377  00A04C  0E00               	movlw	0
 10378  00A04E  6E03               	movwf	RxData@dataLength,c
 10379  00A050  0E00               	movlw	0
 10380  00A052  6E04               	movwf	RxData@status,c
 10381  00A054  D801               	call	u15448
 10382  00A056  D00A               	goto	u15449
 10383  00A058                     u15448:
 10384  00A058  0005               	push	
 10385  00A05A  6EFA               	movwf	pclath,c
 10386  00A05C  0100               	movlb	0	; () banked
 10387  00A05E  51F0               	movf	_rxPayload& (0+255),w,b
 10388  00A060  6EFD               	movwf	tosl,c
 10389  00A062  51F1               	movf	(_rxPayload+1)& (0+255),w,b
 10390  00A064  6EFE               	movwf	tosh,c
 10391  00A066  6AFF               	clrf	tosu,c
 10392  00A068  50FA               	movf	pclath,w,c
 10393  00A06A  0012               	return		;indir
 10394  00A06C                     u15449:
 10395                           
 10396                           ;lorawan.c: 2008: };lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 10397  00A06C  0102               	movlb	2	; () banked
 10398  00A06E  9303               	bcf	(_loRa+3)& (0+255),1,b
 10399  00A070                     l14040:
 10400                           
 10401                           ; BSR set to: 2
 10402                           ;lorawan.c: 2010: };lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 10403  00A070  0E02               	movlw	2
 10404  00A072  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10405  00A074  A4D8               	btfss	status,2,c
 10406  00A076  0012               	return	
 10407                           
 10408                           ; BSR set to: 2
 10409                           ;lorawan.c: 2013: {;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 10410  00A078  5102               	movf	(_loRa+2)& (0+255),w,b
 10411  00A07A  0BF0               	andlw	-16
 10412  00A07C  0909               	iorlw	9
 10413  00A07E  6F02               	movwf	(_loRa+2)& (0+255),b
 10414                           
 10415                           ; BSR set to: 2
 10416                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 10417  00A080  EC57  F04F         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 10418  00A084  0012               	return		;funcret
 10419  00A086                     __end_of_SetReceptionNotOkState:
 10420                           	opt callstack 0
 10421                           
 10422 ;; *************** function _SetJoinFailState *****************
 10423 ;; Defined at:
 10424 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;		None
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      void 
 10431 ;; Registers used:
 10432 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;Total ram usage:        0 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:    1
 10445 ;; This function calls:
 10446 ;;		_RxJoinResponse
 10447 ;; This function is called by:
 10448 ;;		_LORAWAN_RxTimeout
 10449 ;;		_LORAWAN_RxDone
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text59
 10454  008F78                     __ptext59:
 10455                           	opt callstack 0
 10456  008F78                     _SetJoinFailState:
 10457                           	opt callstack 25
 10458                           
 10459                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 10460                           
 10461                           ;incstack = 0
 10462  008F78  0102               	movlb	2	; () banked
 10463  008F7A  9902               	bcf	(_loRa+2)& (0+255),4,b
 10464                           
 10465                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 10466  008F7C  9500               	bcf	_loRa& (0+255),2,b
 10467                           
 10468                           ; BSR set to: 2
 10469                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 10470  008F7E  0EF0               	movlw	-16
 10471  008F80  1702               	andwf	(_loRa+2)& (0+255),f,b
 10472                           
 10473                           ; BSR set to: 2
 10474                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 10475  008F82  0100               	movlb	0	; () banked
 10476  008F84  51F2               	movf	(_rxPayload+2)& (0+255),w,b
 10477  008F86  11F3               	iorwf	(_rxPayload+3)& (0+255),w,b
 10478  008F88  B4D8               	btfsc	status,2,c
 10479  008F8A  0012               	return	
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;lorawan.c: 1110: {;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 10483  008F8C  D801               	call	u15078
 10484  008F8E  0012               	return	
 10485  008F90                     u15078:
 10486  008F90  0005               	push	
 10487  008F92  6EFA               	movwf	pclath,c
 10488  008F94  51F2               	movf	(_rxPayload+2)& (0+255),w,b
 10489  008F96  6EFD               	movwf	tosl,c
 10490  008F98  51F3               	movf	(_rxPayload+3)& (0+255),w,b
 10491  008F9A  6EFE               	movwf	tosh,c
 10492  008F9C  6AFF               	clrf	tosu,c
 10493  008F9E  50FA               	movf	pclath,w,c
 10494  008FA0  0E00               	movlw	0
 10495  008FA2  0012               	return		;indir
 10496  008FA4                     __end_of_SetJoinFailState:
 10497                           	opt callstack 0
 10498                           
 10499 ;; *************** function _RxJoinResponse *****************
 10500 ;; Defined at:
 10501 ;;		line 17 in file "main.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;  status          1    wreg     unsigned char 
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;  status          1    0[COMRAM] unsigned char 
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  1    wreg      void 
 10508 ;; Registers used:
 10509 ;;		wreg
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10519 ;;Total ram usage:        0 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; This function calls:
 10522 ;;		Nothing
 10523 ;; This function is called by:
 10524 ;;		_main
 10525 ;;		_SetJoinFailState
 10526 ;;		_UpdateJoinSuccessState
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           	psect	text60
 10531  0089B6                     __ptext60:
 10532                           	opt callstack 0
 10533  0089B6                     _RxJoinResponse:
 10534                           	opt callstack 27
 10535                           
 10536                           ;incstack = 0
 10537  0089B6  0012               	return		;funcret
 10538  0089B8                     __end_of_RxJoinResponse:
 10539                           	opt callstack 0
 10540                           
 10541 ;; *************** function _MacExecuteCommands *****************
 10542 ;; Defined at:
 10543 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;  buffer          2   70[COMRAM] PTR unsigned char 
 10546 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10547 ;;  fOptsLen        1   72[COMRAM] unsigned char 
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;  ptr             2   76[COMRAM] PTR unsigned char 
 10550 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10551 ;;  done            1   75[COMRAM] unsigned char 
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  2   70[COMRAM] PTR unsigned char 
 10554 ;; Registers used:
 10555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10561 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10562 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10564 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10565 ;;Total ram usage:        8 bytes
 10566 ;; Hardware stack levels used:    1
 10567 ;; Hardware stack levels required when called:    4
 10568 ;; This function calls:
 10569 ;;		_ExecuteDevStatus
 10570 ;;		_ExecuteDutyCycle
 10571 ;;		_ExecuteLinkAdr
 10572 ;;		_ExecuteLinkCheck
 10573 ;;		_ExecuteNewChannel
 10574 ;;		_ExecuteRxParamSetupReq
 10575 ;;		_ExecuteRxTimingSetup
 10576 ;; This function is called by:
 10577 ;;		_LORAWAN_RxDone
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text61
 10582  00CDEA                     __ptext61:
 10583                           	opt callstack 0
 10584  00CDEA                     _MacExecuteCommands:
 10585                           	opt callstack 22
 10586                           
 10587                           ;lorawan.c: 1577: bool done = 0;
 10588                           
 10589                           ;incstack = 0
 10590  00CDEA  0E00               	movlw	0
 10591  00CDEC  6E4C               	movwf	MacExecuteCommands@done,c
 10592                           
 10593                           ;lorawan.c: 1578: uint8_t *ptr;;lorawan.c: 1579: ptr = buffer;
 10594  00CDEE  C047  F04D         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 10595  00CDF2  C048  F04E         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 10596                           
 10597                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 10598  00CDF6  D0E6               	goto	l14086
 10599  00CDF8                     l14050:
 10600                           
 10601                           ;lorawan.c: 1581: {;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAc
      +                          k = 0;
 10602  00CDF8  0102               	movlb	2	; () banked
 10603  00CDFA  51A7               	movf	(_loRa+167)& (0+255),w,b
 10604  00CDFC  0D02               	mullw	2
 10605  00CDFE  0EA9               	movlw	low (_loRa+169)
 10606  00CE00  24F3               	addwf	prodl,w,c
 10607  00CE02  6ED9               	movwf	fsr2l,c
 10608  00CE04  0E02               	movlw	high (_loRa+169)
 10609  00CE06  20F4               	addwfc	prodh,w,c
 10610  00CE08  6EDA               	movwf	fsr2h,c
 10611  00CE0A  90DF               	bcf	indf2,0,c
 10612                           
 10613                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 10614  00CE0C  51A7               	movf	(_loRa+167)& (0+255),w,b
 10615  00CE0E  0D02               	mullw	2
 10616  00CE10  0EA9               	movlw	low (_loRa+169)
 10617  00CE12  24F3               	addwf	prodl,w,c
 10618  00CE14  6ED9               	movwf	fsr2l,c
 10619  00CE16  0E02               	movlw	high (_loRa+169)
 10620  00CE18  20F4               	addwfc	prodh,w,c
 10621  00CE1A  6EDA               	movwf	fsr2h,c
 10622  00CE1C  92DF               	bcf	indf2,1,c
 10623                           
 10624                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 10625  00CE1E  51A7               	movf	(_loRa+167)& (0+255),w,b
 10626  00CE20  0D02               	mullw	2
 10627  00CE22  0EA9               	movlw	low (_loRa+169)
 10628  00CE24  24F3               	addwf	prodl,w,c
 10629  00CE26  6ED9               	movwf	fsr2l,c
 10630  00CE28  0E02               	movlw	high (_loRa+169)
 10631  00CE2A  20F4               	addwfc	prodh,w,c
 10632  00CE2C  6EDA               	movwf	fsr2h,c
 10633  00CE2E  94DF               	bcf	indf2,2,c
 10634                           
 10635                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 10636  00CE30  51A7               	movf	(_loRa+167)& (0+255),w,b
 10637  00CE32  0D02               	mullw	2
 10638  00CE34  0EA9               	movlw	low (_loRa+169)
 10639  00CE36  24F3               	addwf	prodl,w,c
 10640  00CE38  6ED9               	movwf	fsr2l,c
 10641  00CE3A  0E02               	movlw	high (_loRa+169)
 10642  00CE3C  20F4               	addwfc	prodh,w,c
 10643  00CE3E  6EDA               	movwf	fsr2h,c
 10644  00CE40  96DF               	bcf	indf2,3,c
 10645                           
 10646                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 10647  00CE42  51A7               	movf	(_loRa+167)& (0+255),w,b
 10648  00CE44  0D02               	mullw	2
 10649  00CE46  0EA9               	movlw	low (_loRa+169)
 10650  00CE48  24F3               	addwf	prodl,w,c
 10651  00CE4A  6ED9               	movwf	fsr2l,c
 10652  00CE4C  0E02               	movlw	high (_loRa+169)
 10653  00CE4E  20F4               	addwfc	prodh,w,c
 10654  00CE50  6EDA               	movwf	fsr2h,c
 10655  00CE52  98DF               	bcf	indf2,4,c
 10656                           
 10657                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 10658  00CE54  51A7               	movf	(_loRa+167)& (0+255),w,b
 10659  00CE56  0D02               	mullw	2
 10660  00CE58  0EA9               	movlw	low (_loRa+169)
 10661  00CE5A  24F3               	addwf	prodl,w,c
 10662  00CE5C  6ED9               	movwf	fsr2l,c
 10663  00CE5E  0E02               	movlw	high (_loRa+169)
 10664  00CE60  20F4               	addwfc	prodh,w,c
 10665  00CE62  6EDA               	movwf	fsr2h,c
 10666  00CE64  9ADF               	bcf	indf2,5,c
 10667                           
 10668                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 10669  00CE66  51A7               	movf	(_loRa+167)& (0+255),w,b
 10670  00CE68  0D02               	mullw	2
 10671  00CE6A  0EA9               	movlw	low (_loRa+169)
 10672  00CE6C  24F3               	addwf	prodl,w,c
 10673  00CE6E  6ED9               	movwf	fsr2l,c
 10674  00CE70  0E02               	movlw	high (_loRa+169)
 10675  00CE72  20F4               	addwfc	prodh,w,c
 10676  00CE74  6EDA               	movwf	fsr2h,c
 10677  00CE76  9CDF               	bcf	indf2,6,c
 10678                           
 10679                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 10680  00CE78  51A7               	movf	(_loRa+167)& (0+255),w,b
 10681  00CE7A  0D02               	mullw	2
 10682  00CE7C  0EA9               	movlw	low (_loRa+169)
 10683  00CE7E  24F3               	addwf	prodl,w,c
 10684  00CE80  6ED9               	movwf	fsr2l,c
 10685  00CE82  0E02               	movlw	high (_loRa+169)
 10686  00CE84  20F4               	addwfc	prodh,w,c
 10687  00CE86  6EDA               	movwf	fsr2h,c
 10688  00CE88  9EDF               	bcf	indf2,7,c
 10689                           
 10690                           ; BSR set to: 2
 10691                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 10692  00CE8A  C04D  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 10693  00CE8E  C04E  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 10694  00CE92  51A7               	movf	(_loRa+167)& (0+255),w,b
 10695  00CE94  0D02               	mullw	2
 10696  00CE96  0EA8               	movlw	low (_loRa+168)
 10697  00CE98  24F3               	addwf	prodl,w,c
 10698  00CE9A  6EE1               	movwf	fsr1l,c
 10699  00CE9C  0E02               	movlw	high (_loRa+168)
 10700  00CE9E  20F4               	addwfc	prodh,w,c
 10701  00CEA0  6EE2               	movwf	fsr1h,c
 10702  00CEA2  CFDF FFE7          	movff	indf2,indf1
 10703                           
 10704                           ;lorawan.c: 1595: switch (*ptr ++)
 10705  00CEA6  D061               	goto	l14078
 10706  00CEA8                     l14054:
 10707                           
 10708                           ; BSR set to: 2
 10709                           ;lorawan.c: 1598: {;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 10710  00CEA8  C04D  F001         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 10711  00CEAC  C04E  F002         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 10712  00CEB0  ECA6  F047         	call	_ExecuteLinkCheck
 10713  00CEB4  C001  F04D         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 10714  00CEB8  C002  F04E         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 10715  00CEBC                     l14056:
 10716                           
 10717                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 10718  00CEBC  0102               	movlb	2	; () banked
 10719  00CEBE  51A7               	movf	(_loRa+167)& (0+255),w,b
 10720  00CEC0  0D02               	mullw	2
 10721  00CEC2  0EA8               	movlw	low (_loRa+168)
 10722  00CEC4  24F3               	addwf	prodl,w,c
 10723  00CEC6  6ED9               	movwf	fsr2l,c
 10724  00CEC8  0E02               	movlw	high (_loRa+168)
 10725  00CECA  20F4               	addwfc	prodh,w,c
 10726  00CECC  6EDA               	movwf	fsr2h,c
 10727  00CECE  0EFF               	movlw	255
 10728  00CED0  6EDF               	movwf	indf2,c
 10729                           
 10730                           ;lorawan.c: 1602: } break;
 10731  00CED2  D068               	goto	l14080
 10732  00CED4                     l14058:
 10733                           
 10734                           ; BSR set to: 2
 10735                           ;lorawan.c: 1605: {;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 10736  00CED4  C04D  F010         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 10737  00CED8  C04E  F011         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 10738  00CEDC  EC50  F063         	call	_ExecuteLinkAdr	;wreg free
 10739  00CEE0  C010  F04D         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 10740  00CEE4  C011  F04E         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 10741                           
 10742                           ;lorawan.c: 1607: } break;
 10743  00CEE8  D05D               	goto	l14080
 10744  00CEEA                     l14060:
 10745                           
 10746                           ; BSR set to: 2
 10747                           ;lorawan.c: 1610: {;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 10748  00CEEA  C04D  F001         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 10749  00CEEE  C04E  F002         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 10750  00CEF2  EC08  F04B         	call	_ExecuteDutyCycle	;wreg free
 10751  00CEF6  C001  F04D         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 10752  00CEFA  C002  F04E         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 10753                           
 10754                           ;lorawan.c: 1612: } break;
 10755  00CEFE  D052               	goto	l14080
 10756  00CF00                     l14062:
 10757                           
 10758                           ; BSR set to: 2
 10759                           ;lorawan.c: 1615: {;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 10760  00CF00  C04D  F03F         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 10761  00CF04  C04E  F040         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 10762  00CF08  ECC0  F05F         	call	_ExecuteRxParamSetupReq	;wreg free
 10763  00CF0C  C03F  F04D         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 10764  00CF10  C040  F04E         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 10765                           
 10766                           ;lorawan.c: 1617: } break;
 10767  00CF14  D047               	goto	l14080
 10768  00CF16                     l14064:
 10769                           
 10770                           ; BSR set to: 2
 10771                           ;lorawan.c: 1620: {;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 10772  00CF16  C04D  F001         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 10773  00CF1A  C04E  F002         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 10774  00CF1E  EC25  F045         	call	_ExecuteDevStatus	;wreg free
 10775  00CF22  C001  F04D         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 10776  00CF26  C002  F04E         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 10777                           
 10778                           ;lorawan.c: 1622: } break;
 10779  00CF2A  D03C               	goto	l14080
 10780  00CF2C                     l14066:
 10781                           
 10782                           ; BSR set to: 2
 10783                           ;lorawan.c: 1625: {;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 10784  00CF2C  C04D  F03F         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 10785  00CF30  C04E  F040         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 10786  00CF34  EC0D  F065         	call	_ExecuteNewChannel	;wreg free
 10787  00CF38  C03F  F04D         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 10788  00CF3C  C040  F04E         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 10789                           
 10790                           ;lorawan.c: 1628: } break;
 10791  00CF40  D031               	goto	l14080
 10792  00CF42                     l14068:
 10793                           
 10794                           ; BSR set to: 2
 10795                           ;lorawan.c: 1631: {;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 10796  00CF42  C04D  F008         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 10797  00CF46  C04E  F009         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 10798  00CF4A  EC28  F047         	call	_ExecuteRxTimingSetup	;wreg free
 10799  00CF4E  C008  F04D         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 10800  00CF52  C009  F04E         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 10801                           
 10802                           ;lorawan.c: 1633: } break;
 10803  00CF56  D026               	goto	l14080
 10804  00CF58                     l14070:
 10805                           
 10806                           ; BSR set to: 2
 10807                           ;lorawan.c: 1636: {;lorawan.c: 1637: done = 1;
 10808  00CF58  0E01               	movlw	1
 10809  00CF5A  6E4C               	movwf	MacExecuteCommands@done,c
 10810                           
 10811                           ; BSR set to: 2
 10812                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 10813  00CF5C  5049               	movf	MacExecuteCommands@fOptsLen,w,c
 10814  00CF5E  2447               	addwf	MacExecuteCommands@buffer,w,c
 10815  00CF60  6E4D               	movwf	MacExecuteCommands@ptr,c
 10816  00CF62  0E00               	movlw	0
 10817  00CF64  2048               	addwfc	MacExecuteCommands@buffer+1,w,c
 10818  00CF66  6E4E               	movwf	MacExecuteCommands@ptr+1,c
 10819  00CF68  D7A9               	goto	l14056
 10820  00CF6A                     l14078:
 10821                           
 10822                           ; BSR set to: 2
 10823  00CF6A  C04D  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 10824  00CF6E  C04E  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 10825  00CF72  4A4D               	infsnz	MacExecuteCommands@ptr,f,c
 10826  00CF74  2A4E               	incf	MacExecuteCommands@ptr+1,f,c
 10827  00CF76  50DF               	movf	indf2,w,c
 10828                           
 10829                           ; Switch size 1, requested type "simple"
 10830                           ; Number of cases is 7, Range of values is 2 to 8
 10831                           ; switch strategies available:
 10832                           ; Name         Instructions Cycles
 10833                           ; simple_byte           22    12 (average)
 10834                           ;	Chosen strategy is simple_byte
 10835  00CF78  0A02               	xorlw	2	; case 2
 10836  00CF7A  B4D8               	btfsc	status,2,c
 10837  00CF7C  D795               	goto	l14054
 10838  00CF7E  0A01               	xorlw	1	; case 3
 10839  00CF80  B4D8               	btfsc	status,2,c
 10840  00CF82  D7A8               	goto	l14058
 10841  00CF84  0A07               	xorlw	7	; case 4
 10842  00CF86  B4D8               	btfsc	status,2,c
 10843  00CF88  D7B0               	goto	l14060
 10844  00CF8A  0A01               	xorlw	1	; case 5
 10845  00CF8C  B4D8               	btfsc	status,2,c
 10846  00CF8E  D7B8               	goto	l14062
 10847  00CF90  0A03               	xorlw	3	; case 6
 10848  00CF92  B4D8               	btfsc	status,2,c
 10849  00CF94  D7C0               	goto	l14064
 10850  00CF96  0A01               	xorlw	1	; case 7
 10851  00CF98  B4D8               	btfsc	status,2,c
 10852  00CF9A  D7C8               	goto	l14066
 10853  00CF9C  0A0F               	xorlw	15	; case 8
 10854  00CF9E  B4D8               	btfsc	status,2,c
 10855  00CFA0  D7D0               	goto	l14068
 10856  00CFA2  D7DA               	goto	l14070
 10857  00CFA4                     l14080:
 10858                           
 10859                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&;lora
      +                          wan.c: 1644: (loRa.crtMacCmdIndex < 16))
 10860  00CFA4  0102               	movlb	2	; () banked
 10861  00CFA6  51A7               	movf	(_loRa+167)& (0+255),w,b
 10862  00CFA8  0D02               	mullw	2
 10863  00CFAA  0EA8               	movlw	low (_loRa+168)
 10864  00CFAC  24F3               	addwf	prodl,w,c
 10865  00CFAE  6ED9               	movwf	fsr2l,c
 10866  00CFB0  0E02               	movlw	high (_loRa+168)
 10867  00CFB2  20F4               	addwfc	prodh,w,c
 10868  00CFB4  6EDA               	movwf	fsr2h,c
 10869  00CFB6  28DE               	incf	postinc2,w,c
 10870  00CFB8  B4D8               	btfsc	status,2,c
 10871  00CFBA  D004               	goto	l14086
 10872                           
 10873                           ; BSR set to: 2
 10874  00CFBC  0E10               	movlw	16
 10875  00CFBE  61A7               	cpfslt	(_loRa+167)& (0+255),b
 10876  00CFC0  D001               	goto	l14086
 10877                           
 10878                           ; BSR set to: 2
 10879                           ;lorawan.c: 1645: {;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 10880  00CFC2  2BA7               	incf	(_loRa+167)& (0+255),f,b
 10881  00CFC4                     l14086:
 10882  00CFC4  5049               	movf	MacExecuteCommands@fOptsLen,w,c
 10883  00CFC6  2447               	addwf	MacExecuteCommands@buffer,w,c
 10884  00CFC8  6E4A               	movwf	??_MacExecuteCommands& (0+255),c
 10885  00CFCA  0E00               	movlw	0
 10886  00CFCC  2048               	addwfc	MacExecuteCommands@buffer+1,w,c
 10887  00CFCE  6E4B               	movwf	(??_MacExecuteCommands+1)& (0+255),c
 10888  00CFD0  504A               	movf	??_MacExecuteCommands,w,c
 10889  00CFD2  5C4D               	subwf	MacExecuteCommands@ptr,w,c
 10890  00CFD4  504B               	movf	??_MacExecuteCommands+1,w,c
 10891  00CFD6  584E               	subwfb	MacExecuteCommands@ptr+1,w,c
 10892  00CFD8  B0D8               	btfsc	status,0,c
 10893  00CFDA  D003               	goto	u15490
 10894  00CFDC  504C               	movf	MacExecuteCommands@done,w,c
 10895  00CFDE  B4D8               	btfsc	status,2,c
 10896  00CFE0  D70B               	goto	l14050
 10897  00CFE2                     u15490:
 10898                           
 10899                           ;lorawan.c: 1647: };lorawan.c: 1648: };lorawan.c: 1649: return ptr;
 10900  00CFE2  C04D  F047         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 10901  00CFE6  C04E  F048         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 10902  00CFEA  0012               	return		;funcret
 10903  00CFEC                     __end_of_MacExecuteCommands:
 10904                           	opt callstack 0
 10905                           
 10906 ;; *************** function _ExecuteRxTimingSetup *****************
 10907 ;; Defined at:
 10908 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;  ptr             2    7[COMRAM] PTR unsigned char 
 10911 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;  delay           1    9[COMRAM] unsigned char 
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  2    7[COMRAM] PTR unsigned char 
 10916 ;; Registers used:
 10917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10926 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10927 ;;Total ram usage:        3 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    2
 10930 ;; This function calls:
 10931 ;;		_UpdateReceiveDelays
 10932 ;; This function is called by:
 10933 ;;		_MacExecuteCommands
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text62
 10938  008E50                     __ptext62:
 10939                           	opt callstack 0
 10940  008E50                     _ExecuteRxTimingSetup:
 10941                           	opt callstack 23
 10942                           
 10943                           ;lorawan.c: 1661: uint8_t delay;;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 10944                           
 10945                           ;incstack = 0
 10946  008E50  C008  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 10947  008E54  C009  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 10948  008E58  50DF               	movf	indf2,w,c
 10949  008E5A  0B0F               	andlw	15
 10950  008E5C  6E0A               	movwf	ExecuteRxTimingSetup@delay,c
 10951                           
 10952                           ;lorawan.c: 1664: ptr++;
 10953  008E5E  4A08               	infsnz	ExecuteRxTimingSetup@ptr,f,c
 10954  008E60  2A09               	incf	ExecuteRxTimingSetup@ptr+1,f,c
 10955                           
 10956                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 10957  008E62  500A               	movf	ExecuteRxTimingSetup@delay,w,c
 10958  008E64  EC1F  F049         	call	_UpdateReceiveDelays
 10959                           
 10960                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 10961  008E68  0102               	movlb	2	; () banked
 10962  008E6A  8104               	bsf	(_loRa+4)& (0+255),0,b
 10963                           
 10964                           ; BSR set to: 2
 10965                           ;lorawan.c: 1669: return ptr;
 10966  008E6C  C008  F008         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 10967  008E70  C009  F009         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 10968                           
 10969                           ; BSR set to: 2
 10970  008E74  0012               	return		;funcret
 10971  008E76                     __end_of_ExecuteRxTimingSetup:
 10972                           	opt callstack 0
 10973                           
 10974 ;; *************** function _UpdateReceiveDelays *****************
 10975 ;; Defined at:
 10976 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;  delay           1    wreg     unsigned char 
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;  delay           1    6[COMRAM] unsigned char 
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  1    wreg      void 
 10983 ;; Registers used:
 10984 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/0
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10994 ;;Total ram usage:        1 bytes
 10995 ;; Hardware stack levels used:    1
 10996 ;; Hardware stack levels required when called:    1
 10997 ;; This function calls:
 10998 ;;		___wmul
 10999 ;; This function is called by:
 11000 ;;		_LORAWAN_RxDone
 11001 ;;		_ExecuteRxTimingSetup
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           
 11005                           	psect	text63
 11006  00923E                     __ptext63:
 11007                           	opt callstack 0
 11008  00923E                     _UpdateReceiveDelays:
 11009                           	opt callstack 25
 11010                           
 11011                           ; BSR set to: 2
 11012                           ;incstack = 0
 11013                           ;UpdateReceiveDelays@delay stored from wreg
 11014  00923E  6E07               	movwf	UpdateReceiveDelays@delay,c
 11015                           
 11016                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 11017  009240  C007  F001         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 11018  009244  6A02               	clrf	___wmul@multiplier+1,c
 11019  009246  0E03               	movlw	3
 11020  009248  6E04               	movwf	___wmul@multiplicand+1,c
 11021  00924A  0EE8               	movlw	232
 11022  00924C  6E03               	movwf	___wmul@multiplicand,c
 11023  00924E  EC15  F047         	call	___wmul	;wreg free
 11024  009252  C001  F294         	movff	?___wmul,_loRa+148
 11025  009256  C002  F295         	movff	?___wmul+1,_loRa+149
 11026                           
 11027                           ;lorawan.c: 2029: if (delay == 0)
 11028  00925A  5007               	movf	UpdateReceiveDelays@delay,w,c
 11029  00925C  A4D8               	btfss	status,2,c
 11030  00925E  D005               	goto	l9418
 11031                           
 11032                           ;lorawan.c: 2030: {;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 11033  009260  0E03               	movlw	3
 11034  009262  0102               	movlb	2	; () banked
 11035  009264  6F95               	movwf	(_loRa+149)& (0+255),b
 11036  009266  0EE8               	movlw	232
 11037  009268  6F94               	movwf	(_loRa+148)& (0+255),b
 11038  00926A                     l9418:
 11039                           
 11040                           ;lorawan.c: 2032: };lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protoc
      +                          olParameters.receiveDelay1 + 1000;
 11041  00926A  0EE8               	movlw	232
 11042  00926C  0102               	movlb	2	; () banked
 11043  00926E  2594               	addwf	(_loRa+148)& (0+255),w,b
 11044  009270  6F96               	movwf	(_loRa+150)& (0+255),b
 11045  009272  0E03               	movlw	3
 11046  009274  2195               	addwfc	(_loRa+149)& (0+255),w,b
 11047  009276  6F97               	movwf	(_loRa+151)& (0+255),b
 11048                           
 11049                           ; BSR set to: 2
 11050  009278  0012               	return		;funcret
 11051  00927A                     __end_of_UpdateReceiveDelays:
 11052                           	opt callstack 0
 11053                           
 11054 ;; *************** function ___wmul *****************
 11055 ;; Defined at:
 11056 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;  multiplier      2    0[COMRAM] unsigned int 
 11059 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;  product         2    4[COMRAM] unsigned int 
 11062 ;; Return value:  Size  Location     Type
 11063 ;;                  2    0[COMRAM] unsigned int 
 11064 ;; Registers used:
 11065 ;;		wreg, status,2, status,0, prodl, prodh
 11066 ;; Tracked objects:
 11067 ;;		On entry : 0/0
 11068 ;;		On exit  : 0/0
 11069 ;;		Unchanged: 0/0
 11070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11074 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11075 ;;Total ram usage:        6 bytes
 11076 ;; Hardware stack levels used:    1
 11077 ;; This function calls:
 11078 ;;		Nothing
 11079 ;; This function is called by:
 11080 ;;		_UpdateReceiveDelays
 11081 ;; This function uses a non-reentrant model
 11082 ;;
 11083                           
 11084                           	psect	text64
 11085  008E2A                     __ptext64:
 11086                           	opt callstack 0
 11087  008E2A                     ___wmul:
 11088                           	opt callstack 25
 11089                           
 11090                           ; BSR set to: 2
 11091                           ;incstack = 0
 11092  008E2A  5001               	movf	___wmul@multiplier,w,c
 11093  008E2C  0203               	mulwf	___wmul@multiplicand,c
 11094  008E2E  CFF3 F005          	movff	prodl,___wmul@product
 11095  008E32  CFF4 F006          	movff	prodh,___wmul@product+1
 11096  008E36  5001               	movf	___wmul@multiplier,w,c
 11097  008E38  0204               	mulwf	___wmul@multiplicand+1,c
 11098  008E3A  50F3               	movf	prodl,w,c
 11099  008E3C  2606               	addwf	___wmul@product+1,f,c
 11100  008E3E  5002               	movf	___wmul@multiplier+1,w,c
 11101  008E40  0203               	mulwf	___wmul@multiplicand,c
 11102  008E42  50F3               	movf	prodl,w,c
 11103  008E44  2606               	addwf	___wmul@product+1,f,c
 11104  008E46  C005  F001         	movff	___wmul@product,?___wmul
 11105  008E4A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11106  008E4E  0012               	return		;funcret
 11107  008E50                     __end_of___wmul:
 11108                           	opt callstack 0
 11109                           
 11110 ;; *************** function _ExecuteRxParamSetupReq *****************
 11111 ;; Defined at:
 11112 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;  ptr             2   62[COMRAM] PTR unsigned char 
 11115 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;  frequency       4   64[COMRAM] unsigned long 
 11118 ;;  dlSettings      1   68[COMRAM] struct .
 11119 ;; Return value:  Size  Location     Type
 11120 ;;                  2   62[COMRAM] PTR unsigned char 
 11121 ;; Registers used:
 11122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11123 ;; Tracked objects:
 11124 ;;		On entry : 0/0
 11125 ;;		On exit  : 0/0
 11126 ;;		Unchanged: 0/0
 11127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11129 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11131 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11132 ;;Total ram usage:        7 bytes
 11133 ;; Hardware stack levels used:    1
 11134 ;; Hardware stack levels required when called:    1
 11135 ;; This function calls:
 11136 ;;		_UpdateReceiveWindow2Parameters
 11137 ;;		_ValidateDataRate
 11138 ;;		_ValidateFrequency
 11139 ;;		_ValidateRxOffset
 11140 ;;		___lmul
 11141 ;; This function is called by:
 11142 ;;		_MacExecuteCommands
 11143 ;; This function uses a non-reentrant model
 11144 ;;
 11145                           
 11146                           	psect	text65
 11147  00BF80                     __ptext65:
 11148                           	opt callstack 0
 11149  00BF80                     _ExecuteRxParamSetupReq:
 11150                           	opt callstack 24
 11151                           
 11152                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 11153                           
 11154                           ;incstack = 0
 11155  00BF80  C03F  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 11156  00BF84  C040  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 11157  00BF88  50DF               	movf	indf2,w,c
 11158  00BF8A  6E45               	movwf	ExecuteRxParamSetupReq@dlSettings,c
 11159  00BF8C  4A3F               	infsnz	ExecuteRxParamSetupReq@ptr,f,c
 11160  00BF8E  2A40               	incf	ExecuteRxParamSetupReq@ptr+1,f,c
 11161                           
 11162                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 11163  00BF90  C03F  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 11164  00BF94  C040  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 11165  00BF98  0EFF               	movlw	255
 11166  00BF9A  14DE               	andwf	postinc2,w,c
 11167  00BF9C  6E41               	movwf	ExecuteRxParamSetupReq@frequency,c
 11168  00BF9E  0EFF               	movlw	255
 11169  00BFA0  14DE               	andwf	postinc2,w,c
 11170  00BFA2  6E42               	movwf	ExecuteRxParamSetupReq@frequency+1,c
 11171  00BFA4  0EFF               	movlw	255
 11172  00BFA6  14DE               	andwf	postinc2,w,c
 11173  00BFA8  6E43               	movwf	ExecuteRxParamSetupReq@frequency+2,c
 11174  00BFAA  0E00               	movlw	0
 11175  00BFAC  14DE               	andwf	postinc2,w,c
 11176  00BFAE  6E44               	movwf	ExecuteRxParamSetupReq@frequency+3,c
 11177                           
 11178                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 11179  00BFB0  C041  F033         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 11180  00BFB4  C042  F034         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 11181  00BFB8  C043  F035         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 11182  00BFBC  C044  F036         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 11183  00BFC0  0E64               	movlw	100
 11184  00BFC2  6E37               	movwf	___lmul@multiplicand,c
 11185  00BFC4  0E00               	movlw	0
 11186  00BFC6  6E38               	movwf	___lmul@multiplicand+1,c
 11187  00BFC8  0E00               	movlw	0
 11188  00BFCA  6E39               	movwf	___lmul@multiplicand+2,c
 11189  00BFCC  0E00               	movlw	0
 11190  00BFCE  6E3A               	movwf	___lmul@multiplicand+3,c
 11191  00BFD0  ECD4  F04B         	call	___lmul	;wreg free
 11192  00BFD4  C033  F041         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 11193  00BFD8  C034  F042         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 11194  00BFDC  C035  F043         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 11195  00BFE0  C036  F044         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 11196                           
 11197                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 11198  00BFE4  0E03               	movlw	3
 11199  00BFE6  243F               	addwf	ExecuteRxParamSetupReq@ptr,w,c
 11200  00BFE8  6E3F               	movwf	ExecuteRxParamSetupReq@ptr,c
 11201  00BFEA  0E00               	movlw	0
 11202  00BFEC  2040               	addwfc	ExecuteRxParamSetupReq@ptr+1,w,c
 11203  00BFEE  6E40               	movwf	ExecuteRxParamSetupReq@ptr+1,c
 11204                           
 11205                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 11206  00BFF0  C041  F001         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 11207  00BFF4  C042  F002         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 11208  00BFF8  C043  F003         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 11209  00BFFC  C044  F004         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 11210  00C000  ECDC  F04D         	call	_ValidateFrequency	;wreg free
 11211  00C004  0900               	iorlw	0
 11212  00C006  A4D8               	btfss	status,2,c
 11213  00C008  D00A               	goto	l13658
 11214                           
 11215                           ;lorawan_eu.c: 754: {;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAc
      +                          k = 1;
 11216  00C00A  0102               	movlb	2	; () banked
 11217  00C00C  51A7               	movf	(_loRa+167)& (0+255),w,b
 11218  00C00E  0D02               	mullw	2
 11219  00C010  0EA9               	movlw	low (_loRa+169)
 11220  00C012  24F3               	addwf	prodl,w,c
 11221  00C014  6ED9               	movwf	fsr2l,c
 11222  00C016  0E02               	movlw	high (_loRa+169)
 11223  00C018  20F4               	addwfc	prodh,w,c
 11224  00C01A  6EDA               	movwf	fsr2h,c
 11225  00C01C  86DF               	bsf	indf2,3,c
 11226  00C01E                     l13658:
 11227                           
 11228                           ;lorawan_eu.c: 756: };lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRa
      +                          te) == OK)
 11229  00C01E  5045               	movf	ExecuteRxParamSetupReq@dlSettings,w,c
 11230  00C020  0B0F               	andlw	15
 11231  00C022  ECB5  F045         	call	_ValidateDataRate
 11232  00C026  0900               	iorlw	0
 11233  00C028  A4D8               	btfss	status,2,c
 11234  00C02A  D00A               	goto	l13662
 11235                           
 11236                           ;lorawan_eu.c: 759: {;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateR
      +                          eceiveWindowAck = 1;
 11237  00C02C  0102               	movlb	2	; () banked
 11238  00C02E  51A7               	movf	(_loRa+167)& (0+255),w,b
 11239  00C030  0D02               	mullw	2
 11240  00C032  0EA9               	movlw	low (_loRa+169)
 11241  00C034  24F3               	addwf	prodl,w,c
 11242  00C036  6ED9               	movwf	fsr2l,c
 11243  00C038  0E02               	movlw	high (_loRa+169)
 11244  00C03A  20F4               	addwfc	prodh,w,c
 11245  00C03C  6EDA               	movwf	fsr2h,c
 11246  00C03E  88DF               	bsf	indf2,4,c
 11247  00C040                     l13662:
 11248                           
 11249                           ;lorawan_eu.c: 761: };lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffs
      +                          et) == OK)
 11250  00C040  3845               	swapf	ExecuteRxParamSetupReq@dlSettings,w,c
 11251  00C042  0B07               	andlw	7
 11252  00C044  ECBF  F045         	call	_ValidateRxOffset
 11253  00C048  0900               	iorlw	0
 11254  00C04A  A4D8               	btfss	status,2,c
 11255  00C04C  D00A               	goto	l1140
 11256                           
 11257                           ;lorawan_eu.c: 764: {;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffe
      +                          stAck = 1;
 11258  00C04E  0102               	movlb	2	; () banked
 11259  00C050  51A7               	movf	(_loRa+167)& (0+255),w,b
 11260  00C052  0D02               	mullw	2
 11261  00C054  0EA9               	movlw	low (_loRa+169)
 11262  00C056  24F3               	addwf	prodl,w,c
 11263  00C058  6ED9               	movwf	fsr2l,c
 11264  00C05A  0E02               	movlw	high (_loRa+169)
 11265  00C05C  20F4               	addwfc	prodh,w,c
 11266  00C05E  6EDA               	movwf	fsr2h,c
 11267  00C060  8ADF               	bsf	indf2,5,c
 11268  00C062                     l1140:
 11269                           
 11270                           ;lorawan_eu.c: 766: };lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dat
      +                          aRateReceiveWindowAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) &
      +                          & (loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck == 1))
 11271  00C062  0102               	movlb	2	; () banked
 11272  00C064  51A7               	movf	(_loRa+167)& (0+255),w,b
 11273  00C066  0D02               	mullw	2
 11274  00C068  0EA9               	movlw	low (_loRa+169)
 11275  00C06A  24F3               	addwf	prodl,w,c
 11276  00C06C  6ED9               	movwf	fsr2l,c
 11277  00C06E  0E02               	movlw	high (_loRa+169)
 11278  00C070  20F4               	addwfc	prodh,w,c
 11279  00C072  6EDA               	movwf	fsr2h,c
 11280  00C074  A8DF               	btfss	indf2,4,c
 11281  00C076  D026               	goto	l13676
 11282                           
 11283                           ; BSR set to: 2
 11284  00C078  51A7               	movf	(_loRa+167)& (0+255),w,b
 11285  00C07A  0D02               	mullw	2
 11286  00C07C  0EA9               	movlw	low (_loRa+169)
 11287  00C07E  24F3               	addwf	prodl,w,c
 11288  00C080  6ED9               	movwf	fsr2l,c
 11289  00C082  0E02               	movlw	high (_loRa+169)
 11290  00C084  20F4               	addwfc	prodh,w,c
 11291  00C086  6EDA               	movwf	fsr2h,c
 11292  00C088  A6DF               	btfss	indf2,3,c
 11293  00C08A  D01C               	goto	l13676
 11294                           
 11295                           ; BSR set to: 2
 11296  00C08C  51A7               	movf	(_loRa+167)& (0+255),w,b
 11297  00C08E  0D02               	mullw	2
 11298  00C090  0EA9               	movlw	low (_loRa+169)
 11299  00C092  24F3               	addwf	prodl,w,c
 11300  00C094  6ED9               	movwf	fsr2l,c
 11301  00C096  0E02               	movlw	high (_loRa+169)
 11302  00C098  20F4               	addwfc	prodh,w,c
 11303  00C09A  6EDA               	movwf	fsr2h,c
 11304  00C09C  AADF               	btfss	indf2,5,c
 11305  00C09E  D012               	goto	l13676
 11306                           
 11307                           ; BSR set to: 2
 11308                           ;lorawan_eu.c: 769: {;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 11309  00C0A0  3845               	swapf	ExecuteRxParamSetupReq@dlSettings,w,c
 11310  00C0A2  0B07               	andlw	7
 11311  00C0A4  6FEF               	movwf	(_loRa+239)& (0+255),b
 11312                           
 11313                           ; BSR set to: 2
 11314                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 11315  00C0A6  C041  F001         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 11316  00C0AA  C042  F002         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 11317  00C0AE  C043  F003         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 11318  00C0B2  C044  F004         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 11319  00C0B6  5045               	movf	ExecuteRxParamSetupReq@dlSettings,w,c
 11320  00C0B8  0B0F               	andlw	15
 11321  00C0BA  6E05               	movwf	UpdateReceiveWindow2Parameters@dataRate,c
 11322  00C0BC  ECD4  F045         	call	_UpdateReceiveWindow2Parameters	;wreg free
 11323                           
 11324                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 11325  00C0C0  0102               	movlb	2	; () banked
 11326  00C0C2  8F03               	bsf	(_loRa+3)& (0+255),7,b
 11327  00C0C4                     l13676:
 11328                           
 11329                           ; BSR set to: 2
 11330                           ;lorawan_eu.c: 773: };lorawan_eu.c: 775: return ptr;
 11331  00C0C4  C03F  F03F         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 11332  00C0C8  C040  F040         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 11333                           
 11334                           ; BSR set to: 2
 11335  00C0CC  0012               	return		;funcret
 11336  00C0CE                     __end_of_ExecuteRxParamSetupReq:
 11337                           	opt callstack 0
 11338                           
 11339 ;; *************** function _ValidateRxOffset *****************
 11340 ;; Defined at:
 11341 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;  rxOffset        1    wreg     unsigned char 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;  rxOffset        1    0[COMRAM] unsigned char 
 11346 ;;  result          1    1[COMRAM] enum E6118
 11347 ;; Return value:  Size  Location     Type
 11348 ;;                  1    wreg      enum E6118
 11349 ;; Registers used:
 11350 ;;		wreg, status,2, status,0
 11351 ;; Tracked objects:
 11352 ;;		On entry : 0/0
 11353 ;;		On exit  : 0/0
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11360 ;;Total ram usage:        2 bytes
 11361 ;; Hardware stack levels used:    1
 11362 ;; This function calls:
 11363 ;;		Nothing
 11364 ;; This function is called by:
 11365 ;;		_ExecuteRxParamSetupReq
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text66
 11370  008B7E                     __ptext66:
 11371                           	opt callstack 0
 11372  008B7E                     _ValidateRxOffset:
 11373                           	opt callstack 24
 11374                           
 11375                           ; BSR set to: 2
 11376                           ;incstack = 0
 11377                           ;ValidateRxOffset@rxOffset stored from wreg
 11378  008B7E  6E01               	movwf	ValidateRxOffset@rxOffset,c
 11379                           
 11380                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 11381  008B80  0E00               	movlw	0
 11382  008B82  6E02               	movwf	ValidateRxOffset@result,c
 11383                           
 11384                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 11385  008B84  0E05               	movlw	5
 11386  008B86  6401               	cpfsgt	ValidateRxOffset@rxOffset,c
 11387  008B88  D002               	goto	l1236
 11388                           
 11389                           ;lorawan_eu.c: 1081: {;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 11390  008B8A  0E03               	movlw	3
 11391  008B8C  6E02               	movwf	ValidateRxOffset@result,c
 11392  008B8E                     l1236:
 11393                           
 11394                           ;lorawan_eu.c: 1083: };lorawan_eu.c: 1085: return result;
 11395  008B8E  5002               	movf	ValidateRxOffset@result,w,c
 11396  008B90  0012               	return		;funcret
 11397  008B92                     __end_of_ValidateRxOffset:
 11398                           	opt callstack 0
 11399                           
 11400 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 11401 ;; Defined at:
 11402 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 11403 ;; Parameters:    Size  Location     Type
 11404 ;;  frequency       4    0[COMRAM] unsigned long 
 11405 ;;  dataRate        1    4[COMRAM] unsigned char 
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;		None
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  1    wreg      void 
 11410 ;; Registers used:
 11411 ;;		None
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11417 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11420 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11421 ;;Total ram usage:        5 bytes
 11422 ;; Hardware stack levels used:    1
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_ExecuteRxParamSetupReq
 11427 ;;		_LORAWAN_SetReceiveWindow2Parameters
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           
 11431                           	psect	text67
 11432  008BA8                     __ptext67:
 11433                           	opt callstack 0
 11434  008BA8                     _UpdateReceiveWindow2Parameters:
 11435                           	opt callstack 24
 11436                           
 11437                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 11438                           
 11439                           ;incstack = 0
 11440  008BA8  C005  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 11441                           
 11442                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 11443  008BAC  C001  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 11444  008BB0  C002  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 11445  008BB4  C003  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 11446  008BB8  C004  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 11447  008BBC  0012               	return		;funcret
 11448  008BBE                     __end_of_UpdateReceiveWindow2Parameters:
 11449                           	opt callstack 0
 11450                           
 11451 ;; *************** function _ExecuteNewChannel *****************
 11452 ;; Defined at:
 11453 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;  ptr             2   62[COMRAM] PTR unsigned char 
 11456 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;  frequency       4   65[COMRAM] unsigned long 
 11459 ;;  channelIndex    1   69[COMRAM] unsigned char 
 11460 ;;  drRange         1   64[COMRAM] struct .
 11461 ;; Return value:  Size  Location     Type
 11462 ;;                  2   62[COMRAM] PTR unsigned char 
 11463 ;; Registers used:
 11464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11465 ;; Tracked objects:
 11466 ;;		On entry : 0/0
 11467 ;;		On exit  : 0/0
 11468 ;;		Unchanged: 0/0
 11469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11471 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11474 ;;Total ram usage:        8 bytes
 11475 ;; Hardware stack levels used:    1
 11476 ;; Hardware stack levels required when called:    2
 11477 ;; This function calls:
 11478 ;;		_LORAWAN_SetChannelIdStatus
 11479 ;;		_UpdateChannelIdStatus
 11480 ;;		_UpdateDataRange
 11481 ;;		_UpdateDutyCycle
 11482 ;;		_UpdateFrequency
 11483 ;;		_ValidateChannelId
 11484 ;;		_ValidateDataRange
 11485 ;;		_ValidateFrequency
 11486 ;;		___lmul
 11487 ;; This function is called by:
 11488 ;;		_MacExecuteCommands
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           
 11492                           	psect	text68
 11493  00CA1A                     __ptext68:
 11494                           	opt callstack 0
 11495  00CA1A                     _ExecuteNewChannel:
 11496                           	opt callstack 23
 11497                           
 11498                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 11499                           
 11500                           ;incstack = 0
 11501  00CA1A  C03F  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 11502  00CA1E  C040  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 11503  00CA22  50DF               	movf	indf2,w,c
 11504  00CA24  6E46               	movwf	ExecuteNewChannel@channelIndex,c
 11505  00CA26  4A3F               	infsnz	ExecuteNewChannel@ptr,f,c
 11506  00CA28  2A40               	incf	ExecuteNewChannel@ptr+1,f,c
 11507                           
 11508                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 11509  00CA2A  C03F  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 11510  00CA2E  C040  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 11511  00CA32  0EFF               	movlw	255
 11512  00CA34  14DE               	andwf	postinc2,w,c
 11513  00CA36  6E42               	movwf	ExecuteNewChannel@frequency,c
 11514  00CA38  0EFF               	movlw	255
 11515  00CA3A  14DE               	andwf	postinc2,w,c
 11516  00CA3C  6E43               	movwf	ExecuteNewChannel@frequency+1,c
 11517  00CA3E  0EFF               	movlw	255
 11518  00CA40  14DE               	andwf	postinc2,w,c
 11519  00CA42  6E44               	movwf	ExecuteNewChannel@frequency+2,c
 11520  00CA44  0E00               	movlw	0
 11521  00CA46  14DE               	andwf	postinc2,w,c
 11522  00CA48  6E45               	movwf	ExecuteNewChannel@frequency+3,c
 11523                           
 11524                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 11525  00CA4A  C042  F033         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 11526  00CA4E  C043  F034         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 11527  00CA52  C044  F035         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 11528  00CA56  C045  F036         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 11529  00CA5A  0E64               	movlw	100
 11530  00CA5C  6E37               	movwf	___lmul@multiplicand,c
 11531  00CA5E  0E00               	movlw	0
 11532  00CA60  6E38               	movwf	___lmul@multiplicand+1,c
 11533  00CA62  0E00               	movlw	0
 11534  00CA64  6E39               	movwf	___lmul@multiplicand+2,c
 11535  00CA66  0E00               	movlw	0
 11536  00CA68  6E3A               	movwf	___lmul@multiplicand+3,c
 11537  00CA6A  ECD4  F04B         	call	___lmul	;wreg free
 11538  00CA6E  C033  F042         	movff	?___lmul,ExecuteNewChannel@frequency
 11539  00CA72  C034  F043         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 11540  00CA76  C035  F044         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 11541  00CA7A  C036  F045         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 11542                           
 11543                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 11544  00CA7E  0E03               	movlw	3
 11545  00CA80  243F               	addwf	ExecuteNewChannel@ptr,w,c
 11546  00CA82  6E3F               	movwf	ExecuteNewChannel@ptr,c
 11547  00CA84  0E00               	movlw	0
 11548  00CA86  2040               	addwfc	ExecuteNewChannel@ptr+1,w,c
 11549  00CA88  6E40               	movwf	ExecuteNewChannel@ptr+1,c
 11550                           
 11551                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 11552  00CA8A  C03F  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 11553  00CA8E  C040  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 11554  00CA92  50DF               	movf	indf2,w,c
 11555  00CA94  6E41               	movwf	ExecuteNewChannel@drRange,c
 11556  00CA96  4A3F               	infsnz	ExecuteNewChannel@ptr,f,c
 11557  00CA98  2A40               	incf	ExecuteNewChannel@ptr+1,f,c
 11558                           
 11559                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 11560  00CA9A  0E00               	movlw	0
 11561  00CA9C  6E01               	movwf	ValidateChannelId@allowedForDefaultChannels,c
 11562  00CA9E  5046               	movf	ExecuteNewChannel@channelIndex,w,c
 11563  00CAA0  ECAD  F046         	call	_ValidateChannelId
 11564  00CAA4  0900               	iorlw	0
 11565  00CAA6  A4D8               	btfss	status,2,c
 11566  00CAA8  D02D               	goto	l1123
 11567                           
 11568                           ;lorawan_eu.c: 692: {;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (
      +                          frequency == 0) )
 11569  00CAAA  C042  F001         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 11570  00CAAE  C043  F002         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 11571  00CAB2  C044  F003         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 11572  00CAB6  C045  F004         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 11573  00CABA  ECDC  F04D         	call	_ValidateFrequency	;wreg free
 11574  00CABE  0900               	iorlw	0
 11575  00CAC0  B4D8               	btfsc	status,2,c
 11576  00CAC2  D006               	goto	u14720
 11577  00CAC4  5042               	movf	ExecuteNewChannel@frequency,w,c
 11578  00CAC6  1043               	iorwf	ExecuteNewChannel@frequency+1,w,c
 11579  00CAC8  1044               	iorwf	ExecuteNewChannel@frequency+2,w,c
 11580  00CACA  1045               	iorwf	ExecuteNewChannel@frequency+3,w,c
 11581  00CACC  A4D8               	btfss	status,2,c
 11582  00CACE  D00A               	goto	l13616
 11583  00CAD0                     u14720:
 11584                           
 11585                           ;lorawan_eu.c: 694: {;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFr
      +                          equencyAck = 1;
 11586  00CAD0  0102               	movlb	2	; () banked
 11587  00CAD2  51A7               	movf	(_loRa+167)& (0+255),w,b
 11588  00CAD4  0D02               	mullw	2
 11589  00CAD6  0EA9               	movlw	low (_loRa+169)
 11590  00CAD8  24F3               	addwf	prodl,w,c
 11591  00CADA  6ED9               	movwf	fsr2l,c
 11592  00CADC  0E02               	movlw	high (_loRa+169)
 11593  00CADE  20F4               	addwfc	prodh,w,c
 11594  00CAE0  6EDA               	movwf	fsr2h,c
 11595  00CAE2  8EDF               	bsf	indf2,7,c
 11596  00CAE4                     l13616:
 11597                           
 11598                           ;lorawan_eu.c: 696: };lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 11599  00CAE4  5041               	movf	ExecuteNewChannel@drRange,w,c
 11600  00CAE6  EC01  F049         	call	_ValidateDataRange
 11601  00CAEA  0900               	iorlw	0
 11602  00CAEC  A4D8               	btfss	status,2,c
 11603  00CAEE  D00A               	goto	l1123
 11604                           
 11605                           ;lorawan_eu.c: 699: {;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateR
      +                          angeAck = 1;
 11606  00CAF0  0102               	movlb	2	; () banked
 11607  00CAF2  51A7               	movf	(_loRa+167)& (0+255),w,b
 11608  00CAF4  0D02               	mullw	2
 11609  00CAF6  0EA9               	movlw	low (_loRa+169)
 11610  00CAF8  24F3               	addwf	prodl,w,c
 11611  00CAFA  6ED9               	movwf	fsr2l,c
 11612  00CAFC  0E02               	movlw	high (_loRa+169)
 11613  00CAFE  20F4               	addwfc	prodh,w,c
 11614  00CB00  6EDA               	movwf	fsr2h,c
 11615  00CB02  8CDF               	bsf	indf2,6,c
 11616  00CB04                     l1123:
 11617                           
 11618                           ;lorawan_eu.c: 701: };lorawan_eu.c: 702: };lorawan_eu.c: 704: if ( (loRa.macCommands[loR
      +                          a.crtMacCmdIndex].channelFrequencyAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].da
      +                          taRateRangeAck == 1) )
 11619  00CB04  0102               	movlb	2	; () banked
 11620  00CB06  51A7               	movf	(_loRa+167)& (0+255),w,b
 11621  00CB08  0D02               	mullw	2
 11622  00CB0A  0EA9               	movlw	low (_loRa+169)
 11623  00CB0C  24F3               	addwf	prodl,w,c
 11624  00CB0E  6ED9               	movwf	fsr2l,c
 11625  00CB10  0E02               	movlw	high (_loRa+169)
 11626  00CB12  20F4               	addwfc	prodh,w,c
 11627  00CB14  6EDA               	movwf	fsr2h,c
 11628  00CB16  AEDF               	btfss	indf2,7,c
 11629  00CB18  D065               	goto	l13638
 11630                           
 11631                           ; BSR set to: 2
 11632  00CB1A  51A7               	movf	(_loRa+167)& (0+255),w,b
 11633  00CB1C  0D02               	mullw	2
 11634  00CB1E  0EA9               	movlw	low (_loRa+169)
 11635  00CB20  24F3               	addwf	prodl,w,c
 11636  00CB22  6ED9               	movwf	fsr2l,c
 11637  00CB24  0E02               	movlw	high (_loRa+169)
 11638  00CB26  20F4               	addwfc	prodh,w,c
 11639  00CB28  6EDA               	movwf	fsr2h,c
 11640  00CB2A  ACDF               	btfss	indf2,6,c
 11641  00CB2C  D05B               	goto	l13638
 11642                           
 11643                           ; BSR set to: 2
 11644                           ;lorawan_eu.c: 705: {;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 11645  00CB2E  0E10               	movlw	16
 11646  00CB30  61DA               	cpfslt	(_loRa+218)& (0+255),b
 11647  00CB32  D029               	goto	l13630
 11648                           
 11649                           ; BSR set to: 2
 11650                           ;lorawan_eu.c: 707: {;lorawan_eu.c: 708: if (frequency != 0)
 11651  00CB34  5042               	movf	ExecuteNewChannel@frequency,w,c
 11652  00CB36  1043               	iorwf	ExecuteNewChannel@frequency+1,w,c
 11653  00CB38  1044               	iorwf	ExecuteNewChannel@frequency+2,w,c
 11654  00CB3A  1045               	iorwf	ExecuteNewChannel@frequency+3,w,c
 11655  00CB3C  B4D8               	btfsc	status,2,c
 11656  00CB3E  D01D               	goto	l13628
 11657                           
 11658                           ; BSR set to: 2
 11659                           ;lorawan_eu.c: 709: {;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 11660  00CB40  C042  F001         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 11661  00CB44  C043  F002         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 11662  00CB48  C044  F003         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 11663  00CB4C  C045  F004         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 11664  00CB50  5046               	movf	ExecuteNewChannel@channelIndex,w,c
 11665  00CB52  ECAB  F048         	call	_UpdateFrequency
 11666                           
 11667                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 11668  00CB56  C041  F001         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 11669  00CB5A  5046               	movf	ExecuteNewChannel@channelIndex,w,c
 11670  00CB5C  ECCD  F05A         	call	_UpdateDataRange
 11671                           
 11672                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 11673  00CB60  0E01               	movlw	1
 11674  00CB62  6E02               	movwf	UpdateDutyCycle@dutyCycleNew+1,c
 11675  00CB64  0E2E               	movlw	46
 11676  00CB66  6E01               	movwf	UpdateDutyCycle@dutyCycleNew,c
 11677  00CB68  5046               	movf	ExecuteNewChannel@channelIndex,w,c
 11678  00CB6A  EC43  F048         	call	_UpdateDutyCycle
 11679                           
 11680                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 11681  00CB6E  0E01               	movlw	1
 11682  00CB70  6E01               	movwf	UpdateChannelIdStatus@statusNew,c
 11683  00CB72  5046               	movf	ExecuteNewChannel@channelIndex,w,c
 11684  00CB74  ECCC  F05B         	call	_UpdateChannelIdStatus
 11685                           
 11686                           ;lorawan_eu.c: 714: }
 11687  00CB78  D033               	goto	l13636
 11688  00CB7A                     l13628:
 11689                           
 11690                           ; BSR set to: 2
 11691                           ;lorawan_eu.c: 715: else;lorawan_eu.c: 716: {;lorawan_eu.c: 717: LORAWAN_SetChannelIdSta
      +                          tus (channelIndex, 0);
 11692  00CB7A  0E00               	movlw	0
 11693  00CB7C  6E05               	movwf	LORAWAN_SetChannelIdStatus@statusNew,c
 11694  00CB7E  5046               	movf	ExecuteNewChannel@channelIndex,w,c
 11695  00CB80  EC8F  F048         	call	_LORAWAN_SetChannelIdStatus
 11696  00CB84  D02D               	goto	l13636
 11697  00CB86                     l13630:
 11698                           
 11699                           ; BSR set to: 2
 11700                           ;lorawan_eu.c: 720: else;lorawan_eu.c: 721: {;lorawan_eu.c: 722: if (frequency != 0)
 11701  00CB86  5042               	movf	ExecuteNewChannel@frequency,w,c
 11702  00CB88  1043               	iorwf	ExecuteNewChannel@frequency+1,w,c
 11703  00CB8A  1044               	iorwf	ExecuteNewChannel@frequency+2,w,c
 11704  00CB8C  1045               	iorwf	ExecuteNewChannel@frequency+3,w,c
 11705  00CB8E  B4D8               	btfsc	status,2,c
 11706  00CB90  D021               	goto	l13634
 11707                           
 11708                           ; BSR set to: 2
 11709                           ;lorawan_eu.c: 723: {;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 11710  00CB92  C042  F001         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 11711  00CB96  C043  F002         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 11712  00CB9A  C044  F003         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 11713  00CB9E  C045  F004         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 11714  00CBA2  5046               	movf	ExecuteNewChannel@channelIndex,w,c
 11715  00CBA4  0F10               	addlw	16
 11716  00CBA6  ECAB  F048         	call	_UpdateFrequency
 11717                           
 11718                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 11719  00CBAA  C041  F001         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 11720  00CBAE  5046               	movf	ExecuteNewChannel@channelIndex,w,c
 11721  00CBB0  0F10               	addlw	16
 11722  00CBB2  ECCD  F05A         	call	_UpdateDataRange
 11723                           
 11724                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 11725  00CBB6  0E01               	movlw	1
 11726  00CBB8  6E02               	movwf	UpdateDutyCycle@dutyCycleNew+1,c
 11727  00CBBA  0E2E               	movlw	46
 11728  00CBBC  6E01               	movwf	UpdateDutyCycle@dutyCycleNew,c
 11729  00CBBE  5046               	movf	ExecuteNewChannel@channelIndex,w,c
 11730  00CBC0  0F10               	addlw	16
 11731  00CBC2  EC43  F048         	call	_UpdateDutyCycle
 11732                           
 11733                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 11734  00CBC6  0E01               	movlw	1
 11735  00CBC8  6E01               	movwf	UpdateChannelIdStatus@statusNew,c
 11736  00CBCA  5046               	movf	ExecuteNewChannel@channelIndex,w,c
 11737  00CBCC  0F10               	addlw	16
 11738  00CBCE  ECCC  F05B         	call	_UpdateChannelIdStatus
 11739                           
 11740                           ;lorawan_eu.c: 728: }
 11741  00CBD2  D006               	goto	l13636
 11742  00CBD4                     l13634:
 11743                           
 11744                           ; BSR set to: 2
 11745                           ;lorawan_eu.c: 729: else;lorawan_eu.c: 730: {;lorawan_eu.c: 731: LORAWAN_SetChannelIdSta
      +                          tus (channelIndex + 16, 0);
 11746  00CBD4  0E00               	movlw	0
 11747  00CBD6  6E05               	movwf	LORAWAN_SetChannelIdStatus@statusNew,c
 11748  00CBD8  5046               	movf	ExecuteNewChannel@channelIndex,w,c
 11749  00CBDA  0F10               	addlw	16
 11750  00CBDC  EC8F  F048         	call	_LORAWAN_SetChannelIdStatus
 11751  00CBE0                     l13636:
 11752                           
 11753                           ;lorawan_eu.c: 732: };lorawan_eu.c: 733: };lorawan_eu.c: 735: loRa.macStatus.channelsMod
      +                          ified = 1;
 11754  00CBE0  0102               	movlb	2	; () banked
 11755  00CBE2  8703               	bsf	(_loRa+3)& (0+255),3,b
 11756  00CBE4                     l13638:
 11757                           
 11758                           ; BSR set to: 2
 11759                           ;lorawan_eu.c: 736: };lorawan_eu.c: 737: return ptr;
 11760  00CBE4  C03F  F03F         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 11761  00CBE8  C040  F040         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 11762                           
 11763                           ; BSR set to: 2
 11764  00CBEC  0012               	return		;funcret
 11765  00CBEE                     __end_of_ExecuteNewChannel:
 11766                           	opt callstack 0
 11767                           
 11768 ;; *************** function _ValidateFrequency *****************
 11769 ;; Defined at:
 11770 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  frequencyNew    4    0[COMRAM] unsigned long 
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;  result          1    4[COMRAM] enum E6118
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  1    wreg      enum E6118
 11777 ;; Registers used:
 11778 ;;		wreg, status,2, status,0
 11779 ;; Tracked objects:
 11780 ;;		On entry : 0/0
 11781 ;;		On exit  : 0/0
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11787 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11788 ;;Total ram usage:        5 bytes
 11789 ;; Hardware stack levels used:    1
 11790 ;; This function calls:
 11791 ;;		Nothing
 11792 ;; This function is called by:
 11793 ;;		_ExecuteNewChannel
 11794 ;;		_ExecuteRxParamSetupReq
 11795 ;;		_UpdateCfList
 11796 ;;		_LORAWAN_SetReceiveWindow2Parameters
 11797 ;;		_LORAWAN_SetFrequency
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801                           	psect	text69
 11802  009BB8                     __ptext69:
 11803                           	opt callstack 0
 11804  009BB8                     _ValidateFrequency:
 11805                           	opt callstack 25
 11806                           
 11807                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 11808                           
 11809                           ; BSR set to: 2
 11810                           ;incstack = 0
 11811  009BB8  0E00               	movlw	0
 11812  009BBA  6E05               	movwf	ValidateFrequency@result,c
 11813                           
 11814                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 11815  009BBC  0102               	movlb	2	; () banked
 11816  009BBE  51A4               	movf	(_loRa+164)& (0+255),w,b
 11817  009BC0  A4D8               	btfss	status,2,c
 11818  009BC2  D017               	goto	l9162
 11819                           
 11820                           ; BSR set to: 2
 11821                           ;lorawan_eu.c: 1093: {;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequency
      +                          New < 863000000) )
 11822  009BC4  0E81               	movlw	129
 11823  009BC6  5C01               	subwf	ValidateFrequency@frequencyNew,w,c
 11824  009BC8  0E25               	movlw	37
 11825  009BCA  5802               	subwfb	ValidateFrequency@frequencyNew+1,w,c
 11826  009BCC  0EDB               	movlw	219
 11827  009BCE  5803               	subwfb	ValidateFrequency@frequencyNew+2,w,c
 11828  009BD0  0E33               	movlw	51
 11829  009BD2  5804               	subwfb	ValidateFrequency@frequencyNew+3,w,c
 11830  009BD4  B0D8               	btfsc	status,0,c
 11831  009BD6  D00A               	goto	u8160
 11832                           
 11833                           ; BSR set to: 2
 11834  009BD8  0EC0               	movlw	192
 11835  009BDA  5C01               	subwf	ValidateFrequency@frequencyNew,w,c
 11836  009BDC  0E55               	movlw	85
 11837  009BDE  5802               	subwfb	ValidateFrequency@frequencyNew+1,w,c
 11838  009BE0  0E70               	movlw	112
 11839  009BE2  5803               	subwfb	ValidateFrequency@frequencyNew+2,w,c
 11840  009BE4  0E33               	movlw	51
 11841  009BE6  5804               	subwfb	ValidateFrequency@frequencyNew+3,w,c
 11842  009BE8  B0D8               	btfsc	status,0,c
 11843  009BEA  D017               	goto	l1244
 11844  009BEC                     u8160:
 11845                           
 11846                           ; BSR set to: 2
 11847                           ;lorawan_eu.c: 1095: {;lorawan_eu.c: 1096: result = INVALID_PARAMETER ;
 11848  009BEC  0E03               	movlw	3
 11849  009BEE  6E05               	movwf	ValidateFrequency@result,c
 11850  009BF0  D014               	goto	l1244
 11851  009BF2                     l9162:
 11852                           
 11853                           ; BSR set to: 2
 11854                           ;lorawan_eu.c: 1099: else;lorawan_eu.c: 1100: {;lorawan_eu.c: 1101: if ( (frequencyNew >
      +                           434790000) || (frequencyNew < 433050000) )
 11855  009BF2  0E71               	movlw	113
 11856  009BF4  5C01               	subwf	ValidateFrequency@frequencyNew,w,c
 11857  009BF6  0E5E               	movlw	94
 11858  009BF8  5802               	subwfb	ValidateFrequency@frequencyNew+1,w,c
 11859  009BFA  0EEA               	movlw	234
 11860  009BFC  5803               	subwfb	ValidateFrequency@frequencyNew+2,w,c
 11861  009BFE  0E19               	movlw	25
 11862  009C00  5804               	subwfb	ValidateFrequency@frequencyNew+3,w,c
 11863  009C02  B0D8               	btfsc	status,0,c
 11864  009C04  D7F3               	goto	u8160
 11865                           
 11866                           ; BSR set to: 2
 11867  009C06  0E90               	movlw	144
 11868  009C08  5C01               	subwf	ValidateFrequency@frequencyNew,w,c
 11869  009C0A  0ED1               	movlw	209
 11870  009C0C  5802               	subwfb	ValidateFrequency@frequencyNew+1,w,c
 11871  009C0E  0ECF               	movlw	207
 11872  009C10  5803               	subwfb	ValidateFrequency@frequencyNew+2,w,c
 11873  009C12  0E19               	movlw	25
 11874  009C14  5804               	subwfb	ValidateFrequency@frequencyNew+3,w,c
 11875  009C16  A0D8               	btfss	status,0,c
 11876  009C18  D7E9               	goto	u8160
 11877  009C1A                     l1244:
 11878                           
 11879                           ; BSR set to: 2
 11880                           ;lorawan_eu.c: 1104: };lorawan_eu.c: 1105: };lorawan_eu.c: 1107: return result;
 11881  009C1A  5005               	movf	ValidateFrequency@result,w,c
 11882                           
 11883                           ; BSR set to: 2
 11884  009C1C  0012               	return		;funcret
 11885  009C1E                     __end_of_ValidateFrequency:
 11886                           	opt callstack 0
 11887                           
 11888 ;; *************** function _ValidateDataRange *****************
 11889 ;; Defined at:
 11890 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11891 ;; Parameters:    Size  Location     Type
 11892 ;;  dataRangeNew    1    wreg     unsigned char 
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  dataRangeNew    1    3[COMRAM] unsigned char 
 11895 ;;  dataRateMin     1    5[COMRAM] unsigned char 
 11896 ;;  dataRateMax     1    4[COMRAM] unsigned char 
 11897 ;;  result          1    2[COMRAM] enum E6118
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  1    wreg      enum E6118
 11900 ;; Registers used:
 11901 ;;		wreg, status,2, status,0, cstack
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11908 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11910 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11911 ;;Total ram usage:        4 bytes
 11912 ;; Hardware stack levels used:    1
 11913 ;; Hardware stack levels required when called:    1
 11914 ;; This function calls:
 11915 ;;		_ValidateDataRate
 11916 ;; This function is called by:
 11917 ;;		_ExecuteNewChannel
 11918 ;;		_LORAWAN_SetDataRange
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922                           	psect	text70
 11923  009202                     __ptext70:
 11924                           	opt callstack 0
 11925  009202                     _ValidateDataRange:
 11926                           	opt callstack 23
 11927                           
 11928                           ; BSR set to: 2
 11929                           ;incstack = 0
 11930                           ;ValidateDataRange@dataRangeNew stored from wreg
 11931  009202  6E04               	movwf	ValidateDataRange@dataRangeNew,c
 11932                           
 11933                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 11934  009204  0E00               	movlw	0
 11935  009206  6E03               	movwf	ValidateDataRange@result,c
 11936                           
 11937                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;;lorawan_eu.c: 1115: dataRateMin =
      +                           dataRangeNew & 0x0F;
 11938  009208  5004               	movf	ValidateDataRange@dataRangeNew,w,c
 11939  00920A  0B0F               	andlw	15
 11940  00920C  6E06               	movwf	ValidateDataRange@dataRateMin,c
 11941                           
 11942                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 11943  00920E  3804               	swapf	ValidateDataRange@dataRangeNew,w,c
 11944  009210  0B0F               	andlw	15
 11945  009212  0B0F               	andlw	15
 11946  009214  6E05               	movwf	ValidateDataRange@dataRateMax,c
 11947                           
 11948                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 11949  009216  5005               	movf	ValidateDataRange@dataRateMax,w,c
 11950  009218  ECB5  F045         	call	_ValidateDataRate
 11951  00921C  0900               	iorlw	0
 11952  00921E  A4D8               	btfss	status,2,c
 11953  009220  D00A               	goto	u8210
 11954  009222  5006               	movf	ValidateDataRange@dataRateMin,w,c
 11955  009224  ECB5  F045         	call	_ValidateDataRate
 11956  009228  0900               	iorlw	0
 11957  00922A  A4D8               	btfss	status,2,c
 11958  00922C  D004               	goto	u8210
 11959  00922E  5006               	movf	ValidateDataRange@dataRateMin,w,c
 11960  009230  5C05               	subwf	ValidateDataRange@dataRateMax,w,c
 11961  009232  B0D8               	btfsc	status,0,c
 11962  009234  D002               	goto	l1251
 11963  009236                     u8210:
 11964                           
 11965                           ;lorawan_eu.c: 1119: {;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 11966  009236  0E03               	movlw	3
 11967  009238  6E03               	movwf	ValidateDataRange@result,c
 11968  00923A                     l1251:
 11969                           
 11970                           ;lorawan_eu.c: 1121: };lorawan_eu.c: 1122: return result;
 11971  00923A  5003               	movf	ValidateDataRange@result,w,c
 11972  00923C  0012               	return		;funcret
 11973  00923E                     __end_of_ValidateDataRange:
 11974                           	opt callstack 0
 11975                           
 11976 ;; *************** function _UpdateFrequency *****************
 11977 ;; Defined at:
 11978 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;  channelId       1    wreg     unsigned char 
 11981 ;;  frequencyNew    4    0[COMRAM] unsigned long 
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;  channelId       1    4[COMRAM] unsigned char 
 11984 ;; Return value:  Size  Location     Type
 11985 ;;                  1    wreg      void 
 11986 ;; Registers used:
 11987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11988 ;; Tracked objects:
 11989 ;;		On entry : 0/0
 11990 ;;		On exit  : 0/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11996 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11997 ;;Total ram usage:        5 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; This function calls:
 12000 ;;		Nothing
 12001 ;; This function is called by:
 12002 ;;		_ExecuteNewChannel
 12003 ;;		_LORAWAN_SetFrequency
 12004 ;; This function uses a non-reentrant model
 12005 ;;
 12006                           
 12007                           	psect	text71
 12008  009156                     __ptext71:
 12009                           	opt callstack 0
 12010  009156                     _UpdateFrequency:
 12011                           	opt callstack 24
 12012                           
 12013                           ;incstack = 0
 12014                           ;UpdateFrequency@channelId stored from wreg
 12015  009156  6E05               	movwf	UpdateFrequency@channelId,c
 12016                           
 12017                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 12018  009158  5005               	movf	UpdateFrequency@channelId,w,c
 12019  00915A  0D0E               	mullw	14
 12020  00915C  0E00               	movlw	low _Channels
 12021  00915E  24F3               	addwf	prodl,w,c
 12022  009160  6ED9               	movwf	fsr2l,c
 12023  009162  0E03               	movlw	high _Channels
 12024  009164  20F4               	addwfc	prodh,w,c
 12025  009166  6EDA               	movwf	fsr2h,c
 12026  009168  C001  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 12027  00916C  C002  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 12028  009170  C003  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 12029  009174  C004  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 12030                           
 12031                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 12032  009178  5005               	movf	UpdateFrequency@channelId,w,c
 12033  00917A  0D0E               	mullw	14
 12034  00917C  0E0D               	movlw	low (_Channels+13)
 12035  00917E  24F3               	addwf	prodl,w,c
 12036  009180  6ED9               	movwf	fsr2l,c
 12037  009182  0E03               	movlw	high (_Channels+13)
 12038  009184  20F4               	addwfc	prodh,w,c
 12039  009186  6EDA               	movwf	fsr2h,c
 12040  009188  0E00               	movlw	0
 12041  00918A  80DB               	bsf	plusw2,0,c
 12042  00918C  0012               	return		;funcret
 12043  00918E                     __end_of_UpdateFrequency:
 12044                           	opt callstack 0
 12045                           
 12046 ;; *************** function _UpdateDutyCycle *****************
 12047 ;; Defined at:
 12048 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12049 ;; Parameters:    Size  Location     Type
 12050 ;;  channelId       1    wreg     unsigned char 
 12051 ;;  dutyCycleNew    2    0[COMRAM] unsigned int 
 12052 ;; Auto vars:     Size  Location     Type
 12053 ;;  channelId       1    2[COMRAM] unsigned char 
 12054 ;; Return value:  Size  Location     Type
 12055 ;;                  1    wreg      void 
 12056 ;; Registers used:
 12057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12058 ;; Tracked objects:
 12059 ;;		On entry : 0/0
 12060 ;;		On exit  : 0/0
 12061 ;;		Unchanged: 0/0
 12062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12066 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12067 ;;Total ram usage:        3 bytes
 12068 ;; Hardware stack levels used:    1
 12069 ;; This function calls:
 12070 ;;		Nothing
 12071 ;; This function is called by:
 12072 ;;		_ExecuteNewChannel
 12073 ;;		_LORAWAN_SetDutyCycle
 12074 ;; This function uses a non-reentrant model
 12075 ;;
 12076                           
 12077                           	psect	text72
 12078  009086                     __ptext72:
 12079                           	opt callstack 0
 12080  009086                     _UpdateDutyCycle:
 12081                           	opt callstack 24
 12082                           
 12083                           ;incstack = 0
 12084                           ;UpdateDutyCycle@channelId stored from wreg
 12085  009086  6E03               	movwf	UpdateDutyCycle@channelId,c
 12086                           
 12087                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 12088  009088  5003               	movf	UpdateDutyCycle@channelId,w,c
 12089  00908A  0D0E               	mullw	14
 12090  00908C  0E06               	movlw	low (_Channels+6)
 12091  00908E  24F3               	addwf	prodl,w,c
 12092  009090  6ED9               	movwf	fsr2l,c
 12093  009092  0E03               	movlw	high (_Channels+6)
 12094  009094  20F4               	addwfc	prodh,w,c
 12095  009096  6EDA               	movwf	fsr2h,c
 12096  009098  C001  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 12097  00909C  C002  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 12098                           
 12099                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 12100  0090A0  5003               	movf	UpdateDutyCycle@channelId,w,c
 12101  0090A2  0D0E               	mullw	14
 12102  0090A4  0E0D               	movlw	low (_Channels+13)
 12103  0090A6  24F3               	addwf	prodl,w,c
 12104  0090A8  6ED9               	movwf	fsr2l,c
 12105  0090AA  0E03               	movlw	high (_Channels+13)
 12106  0090AC  20F4               	addwfc	prodh,w,c
 12107  0090AE  6EDA               	movwf	fsr2h,c
 12108  0090B0  0E00               	movlw	0
 12109  0090B2  84DB               	bsf	plusw2,2,c
 12110  0090B4  0012               	return		;funcret
 12111  0090B6                     __end_of_UpdateDutyCycle:
 12112                           	opt callstack 0
 12113                           
 12114 ;; *************** function _UpdateDataRange *****************
 12115 ;; Defined at:
 12116 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12117 ;; Parameters:    Size  Location     Type
 12118 ;;  channelId       1    wreg     unsigned char 
 12119 ;;  dataRangeNew    1    0[COMRAM] unsigned char 
 12120 ;; Auto vars:     Size  Location     Type
 12121 ;;  channelId       1    2[COMRAM] unsigned char 
 12122 ;;  i               1    3[COMRAM] unsigned char 
 12123 ;; Return value:  Size  Location     Type
 12124 ;;                  1    wreg      void 
 12125 ;; Registers used:
 12126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12127 ;; Tracked objects:
 12128 ;;		On entry : 0/0
 12129 ;;		On exit  : 0/0
 12130 ;;		Unchanged: 0/0
 12131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12132 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12135 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12136 ;;Total ram usage:        4 bytes
 12137 ;; Hardware stack levels used:    1
 12138 ;; This function calls:
 12139 ;;		Nothing
 12140 ;; This function is called by:
 12141 ;;		_ExecuteNewChannel
 12142 ;;		_LORAWAN_SetDataRange
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           	psect	text73
 12147  00B59A                     __ptext73:
 12148                           	opt callstack 0
 12149  00B59A                     _UpdateDataRange:
 12150                           	opt callstack 24
 12151                           
 12152                           ;incstack = 0
 12153                           ;UpdateDataRange@channelId stored from wreg
 12154  00B59A  6E03               	movwf	UpdateDataRange@channelId,c
 12155                           
 12156                           ;lorawan_eu.c: 1011: uint8_t i;;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 12157  00B59C  0E07               	movlw	7
 12158  00B59E  0102               	movlb	2	; () banked
 12159  00B5A0  6FEB               	movwf	(_loRa+235)& (0+255),b
 12160                           
 12161                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 12162  00B5A2  0E00               	movlw	0
 12163  00B5A4  6FEC               	movwf	(_loRa+236)& (0+255),b
 12164                           
 12165                           ; BSR set to: 2
 12166                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 12167  00B5A6  5003               	movf	UpdateDataRange@channelId,w,c
 12168  00B5A8  0D0E               	mullw	14
 12169  00B5AA  0E05               	movlw	low (_Channels+5)
 12170  00B5AC  24F3               	addwf	prodl,w,c
 12171  00B5AE  6ED9               	movwf	fsr2l,c
 12172  00B5B0  0E03               	movlw	high (_Channels+5)
 12173  00B5B2  20F4               	addwfc	prodh,w,c
 12174  00B5B4  6EDA               	movwf	fsr2h,c
 12175  00B5B6  C001  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 12176                           
 12177                           ; BSR set to: 2
 12178                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 12179  00B5BA  5003               	movf	UpdateDataRange@channelId,w,c
 12180  00B5BC  0D0E               	mullw	14
 12181  00B5BE  0E0D               	movlw	low (_Channels+13)
 12182  00B5C0  24F3               	addwf	prodl,w,c
 12183  00B5C2  6ED9               	movwf	fsr2l,c
 12184  00B5C4  0E03               	movlw	high (_Channels+13)
 12185  00B5C6  20F4               	addwfc	prodh,w,c
 12186  00B5C8  6EDA               	movwf	fsr2h,c
 12187  00B5CA  0E00               	movlw	0
 12188  00B5CC  82DB               	bsf	plusw2,1,c
 12189                           
 12190                           ; BSR set to: 2
 12191                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 12192  00B5CE  0E00               	movlw	0
 12193  00B5D0  6E04               	movwf	UpdateDataRange@i,c
 12194  00B5D2  D050               	goto	l9208
 12195  00B5D4                     l9196:
 12196                           
 12197                           ; BSR set to: 2
 12198                           ;lorawan_eu.c: 1020: {;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDat
      +                          aRate) && (Channels[i].status == 1) )
 12199  00B5D4  5004               	movf	UpdateDataRange@i,w,c
 12200  00B5D6  0D0E               	mullw	14
 12201  00B5D8  0E05               	movlw	low (_Channels+5)
 12202  00B5DA  24F3               	addwf	prodl,w,c
 12203  00B5DC  6ED9               	movwf	fsr2l,c
 12204  00B5DE  0E03               	movlw	high (_Channels+5)
 12205  00B5E0  20F4               	addwfc	prodh,w,c
 12206  00B5E2  6EDA               	movwf	fsr2h,c
 12207  00B5E4  0103               	movlb	3	; () banked
 12208  00B5E6  50DF               	movf	223,w,c
 12209  00B5E8  0B0F               	andlw	15
 12210  00B5EA  6E02               	movwf	??_UpdateDataRange& (0+255),c
 12211  00B5EC  0102               	movlb	2	; () banked
 12212  00B5EE  51EB               	movf	(_loRa+235)& (0+255),w,b
 12213  00B5F0  5C02               	subwf	??_UpdateDataRange,w,c
 12214  00B5F2  B0D8               	btfsc	status,0,c
 12215  00B5F4  D018               	goto	l1217
 12216                           
 12217                           ; BSR set to: 2
 12218  00B5F6  5004               	movf	UpdateDataRange@i,w,c
 12219  00B5F8  0D0E               	mullw	14
 12220  00B5FA  0E04               	movlw	low (_Channels+4)
 12221  00B5FC  24F3               	addwf	prodl,w,c
 12222  00B5FE  6ED9               	movwf	fsr2l,c
 12223  00B600  0E03               	movlw	high (_Channels+4)
 12224  00B602  20F4               	addwfc	prodh,w,c
 12225  00B604  6EDA               	movwf	fsr2h,c
 12226  00B606  04DE               	decf	postinc2,w,c
 12227  00B608  A4D8               	btfss	status,2,c
 12228  00B60A  D00D               	goto	l1217
 12229                           
 12230                           ; BSR set to: 2
 12231                           ;lorawan_eu.c: 1022: {;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 12232  00B60C  5004               	movf	UpdateDataRange@i,w,c
 12233  00B60E  0D0E               	mullw	14
 12234  00B610  0E05               	movlw	low (_Channels+5)
 12235  00B612  24F3               	addwf	prodl,w,c
 12236  00B614  6ED9               	movwf	fsr2l,c
 12237  00B616  0E03               	movlw	high (_Channels+5)
 12238  00B618  20F4               	addwfc	prodh,w,c
 12239  00B61A  6EDA               	movwf	fsr2h,c
 12240  00B61C  0103               	movlb	3	; () banked
 12241  00B61E  50DF               	movf	223,w,c
 12242  00B620  0B0F               	andlw	15
 12243  00B622  0102               	movlb	2	; () banked
 12244  00B624  6FEB               	movwf	(_loRa+235)& (0+255),b
 12245  00B626                     l1217:
 12246                           
 12247                           ; BSR set to: 2
 12248                           ;lorawan_eu.c: 1024: };lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDat
      +                          aRate) && (Channels[i].status == 1) )
 12249  00B626  5004               	movf	UpdateDataRange@i,w,c
 12250  00B628  0D0E               	mullw	14
 12251  00B62A  0E05               	movlw	low (_Channels+5)
 12252  00B62C  24F3               	addwf	prodl,w,c
 12253  00B62E  6ED9               	movwf	fsr2l,c
 12254  00B630  0E03               	movlw	high (_Channels+5)
 12255  00B632  20F4               	addwfc	prodh,w,c
 12256  00B634  6EDA               	movwf	fsr2h,c
 12257  00B636  0103               	movlb	3	; () banked
 12258  00B638  38DF               	swapf	223,w,c
 12259  00B63A  0B0F               	andlw	15
 12260  00B63C  0102               	movlb	2	; () banked
 12261  00B63E  61EC               	cpfslt	(_loRa+236)& (0+255),b
 12262  00B640  D018               	goto	l9206
 12263                           
 12264                           ; BSR set to: 2
 12265  00B642  5004               	movf	UpdateDataRange@i,w,c
 12266  00B644  0D0E               	mullw	14
 12267  00B646  0E04               	movlw	low (_Channels+4)
 12268  00B648  24F3               	addwf	prodl,w,c
 12269  00B64A  6ED9               	movwf	fsr2l,c
 12270  00B64C  0E03               	movlw	high (_Channels+4)
 12271  00B64E  20F4               	addwfc	prodh,w,c
 12272  00B650  6EDA               	movwf	fsr2h,c
 12273  00B652  04DE               	decf	postinc2,w,c
 12274  00B654  A4D8               	btfss	status,2,c
 12275  00B656  D00D               	goto	l9206
 12276                           
 12277                           ; BSR set to: 2
 12278                           ;lorawan_eu.c: 1026: {;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 12279  00B658  5004               	movf	UpdateDataRange@i,w,c
 12280  00B65A  0D0E               	mullw	14
 12281  00B65C  0E05               	movlw	low (_Channels+5)
 12282  00B65E  24F3               	addwf	prodl,w,c
 12283  00B660  6ED9               	movwf	fsr2l,c
 12284  00B662  0E03               	movlw	high (_Channels+5)
 12285  00B664  20F4               	addwfc	prodh,w,c
 12286  00B666  6EDA               	movwf	fsr2h,c
 12287  00B668  0103               	movlb	3	; () banked
 12288  00B66A  38DF               	swapf	223,w,c
 12289  00B66C  0B0F               	andlw	15
 12290  00B66E  0102               	movlb	2	; () banked
 12291  00B670  6FEC               	movwf	(_loRa+236)& (0+255),b
 12292  00B672                     l9206:
 12293                           
 12294                           ; BSR set to: 2
 12295  00B672  2A04               	incf	UpdateDataRange@i,f,c
 12296  00B674                     l9208:
 12297                           
 12298                           ; BSR set to: 2
 12299  00B674  51ED               	movf	(_loRa+237)& (0+255),w,b
 12300  00B676  5C04               	subwf	UpdateDataRange@i,w,c
 12301  00B678  A0D8               	btfss	status,0,c
 12302  00B67A  D7AC               	goto	l9196
 12303                           
 12304                           ; BSR set to: 2
 12305                           ;lorawan_eu.c: 1028: };lorawan_eu.c: 1029: };lorawan_eu.c: 1031: if (loRa.currentDataRat
      +                          e > loRa.maxDataRate)
 12306  00B67C  51DF               	movf	(_loRa+223)& (0+255),w,b
 12307  00B67E  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 12308  00B680  A0D8               	btfss	status,0,c
 12309                           
 12310                           ; BSR set to: 2
 12311                           ;lorawan_eu.c: 1032: {;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 12312  00B682  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 12313                           
 12314                           ; BSR set to: 2
 12315                           ;lorawan_eu.c: 1034: };lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 12316  00B686  51EB               	movf	(_loRa+235)& (0+255),w,b
 12317  00B688  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 12318  00B68A  B0D8               	btfsc	status,0,c
 12319  00B68C  0012               	return	
 12320                           
 12321                           ; BSR set to: 2
 12322                           ;lorawan_eu.c: 1037: {;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 12323  00B68E  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 12324                           
 12325                           ; BSR set to: 2
 12326  00B692  0012               	return		;funcret
 12327  00B694                     __end_of_UpdateDataRange:
 12328                           	opt callstack 0
 12329                           
 12330 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 12331 ;; Defined at:
 12332 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12333 ;; Parameters:    Size  Location     Type
 12334 ;;  channelId       1    wreg     unsigned char 
 12335 ;;  statusNew       1    4[COMRAM] unsigned char 
 12336 ;; Auto vars:     Size  Location     Type
 12337 ;;  channelId       1    6[COMRAM] unsigned char 
 12338 ;;  result          1    0        enum E6118
 12339 ;; Return value:  Size  Location     Type
 12340 ;;                  1    wreg      enum E6118
 12341 ;; Registers used:
 12342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12343 ;; Tracked objects:
 12344 ;;		On entry : 0/0
 12345 ;;		On exit  : 0/0
 12346 ;;		Unchanged: 0/0
 12347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12348 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12351 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12352 ;;Total ram usage:        3 bytes
 12353 ;; Hardware stack levels used:    1
 12354 ;; Hardware stack levels required when called:    1
 12355 ;; This function calls:
 12356 ;;		_UpdateChannelIdStatus
 12357 ;;		_ValidateChannelId
 12358 ;; This function is called by:
 12359 ;;		_ExecuteNewChannel
 12360 ;;		_UpdateCfList
 12361 ;; This function uses a non-reentrant model
 12362 ;;
 12363                           
 12364                           	psect	text74
 12365  00911E                     __ptext74:
 12366                           	opt callstack 0
 12367  00911E                     _LORAWAN_SetChannelIdStatus:
 12368                           	opt callstack 24
 12369                           
 12370                           ; BSR set to: 2
 12371                           ;incstack = 0
 12372                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 12373  00911E  6E07               	movwf	LORAWAN_SetChannelIdStatus@channelId,c
 12374                           
 12375                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 12376  009120  0E01               	movlw	1
 12377  009122  6E01               	movwf	ValidateChannelId@allowedForDefaultChannels,c
 12378  009124  5007               	movf	LORAWAN_SetChannelIdStatus@channelId,w,c
 12379  009126  ECAD  F046         	call	_ValidateChannelId
 12380  00912A  0900               	iorlw	0
 12381  00912C  A4D8               	btfss	status,2,c
 12382  00912E  0012               	return	
 12383                           
 12384                           ;lorawan_eu.c: 292: else;lorawan_eu.c: 293: {;lorawan_eu.c: 294: if ( (Channels[channelI
      +                          d].parametersDefined & (0X01 | 0X02 | 0x04) ) == (0X01 | 0X02 | 0x04) )
 12385                           
 12386                           ;lorawan_eu.c: 290: }
 12387  009130  5007               	movf	LORAWAN_SetChannelIdStatus@channelId,w,c
 12388  009132  0D0E               	mullw	14
 12389  009134  0E0D               	movlw	low (_Channels+13)
 12390  009136  24F3               	addwf	prodl,w,c
 12391  009138  6ED9               	movwf	fsr2l,c
 12392  00913A  0E03               	movlw	high (_Channels+13)
 12393  00913C  20F4               	addwfc	prodh,w,c
 12394  00913E  6EDA               	movwf	fsr2h,c
 12395  009140  50DF               	movf	indf2,w,c
 12396  009142  0B07               	andlw	7
 12397  009144  0A07               	xorlw	7
 12398  009146  A4D8               	btfss	status,2,c
 12399  009148  0012               	return	
 12400                           
 12401                           ;lorawan_eu.c: 295: {;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 12402  00914A  C005  F001         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 12403  00914E  5007               	movf	LORAWAN_SetChannelIdStatus@channelId,w,c
 12404  009150  ECCC  F05B         	call	_UpdateChannelIdStatus
 12405                           
 12406                           ;lorawan_eu.c: 297: }
 12407  009154  0012               	return		;funcret
 12408  009156                     __end_of_LORAWAN_SetChannelIdStatus:
 12409                           	opt callstack 0
 12410                           
 12411 ;; *************** function _ValidateChannelId *****************
 12412 ;; Defined at:
 12413 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;  channelId       1    wreg     unsigned char 
 12416 ;;  allowedForDe    1    0[COMRAM] unsigned char 
 12417 ;; Auto vars:     Size  Location     Type
 12418 ;;  channelId       1    2[COMRAM] unsigned char 
 12419 ;;  result          1    1[COMRAM] enum E6118
 12420 ;; Return value:  Size  Location     Type
 12421 ;;                  1    wreg      enum E6118
 12422 ;; Registers used:
 12423 ;;		wreg, status,2, status,0
 12424 ;; Tracked objects:
 12425 ;;		On entry : 0/0
 12426 ;;		On exit  : 0/0
 12427 ;;		Unchanged: 0/0
 12428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12429 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12432 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12433 ;;Total ram usage:        3 bytes
 12434 ;; Hardware stack levels used:    1
 12435 ;; This function calls:
 12436 ;;		Nothing
 12437 ;; This function is called by:
 12438 ;;		_LORAWAN_SetChannelIdStatus
 12439 ;;		_ExecuteNewChannel
 12440 ;;		_LORAWAN_SetDataRange
 12441 ;;		_LORAWAN_GetDataRange
 12442 ;;		_LORAWAN_GetChannelIdStatus
 12443 ;;		_LORAWAN_SetFrequency
 12444 ;;		_LORAWAN_SetDutyCycle
 12445 ;;		_LORAWAN_GetDutyCycle
 12446 ;; This function uses a non-reentrant model
 12447 ;;
 12448                           
 12449                           	psect	text75
 12450  008D5A                     __ptext75:
 12451                           	opt callstack 0
 12452  008D5A                     _ValidateChannelId:
 12453                           	opt callstack 24
 12454                           
 12455                           ;incstack = 0
 12456                           ;ValidateChannelId@channelId stored from wreg
 12457  008D5A  6E03               	movwf	ValidateChannelId@channelId,c
 12458                           
 12459                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 12460  008D5C  0E00               	movlw	0
 12461  008D5E  6E02               	movwf	ValidateChannelId@result,c
 12462                           
 12463                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 12464  008D60  0E10               	movlw	16
 12465  008D62  6003               	cpfslt	ValidateChannelId@channelId,c
 12466  008D64  D006               	goto	u7750
 12467  008D66  5001               	movf	ValidateChannelId@allowedForDefaultChannels,w,c
 12468  008D68  A4D8               	btfss	status,2,c
 12469  008D6A  D005               	goto	l1257
 12470  008D6C  0E03               	movlw	3
 12471  008D6E  6003               	cpfslt	ValidateChannelId@channelId,c
 12472  008D70  D002               	goto	l1257
 12473  008D72                     u7750:
 12474                           
 12475                           ;lorawan_eu.c: 1130: {;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 12476  008D72  0E03               	movlw	3
 12477  008D74  6E02               	movwf	ValidateChannelId@result,c
 12478  008D76                     l1257:
 12479                           
 12480                           ;lorawan_eu.c: 1132: };lorawan_eu.c: 1134: return result;
 12481  008D76  5002               	movf	ValidateChannelId@result,w,c
 12482  008D78  0012               	return		;funcret
 12483  008D7A                     __end_of_ValidateChannelId:
 12484                           	opt callstack 0
 12485                           
 12486 ;; *************** function _ExecuteLinkCheck *****************
 12487 ;; Defined at:
 12488 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 12491 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12492 ;; Auto vars:     Size  Location     Type
 12493 ;;		None
 12494 ;; Return value:  Size  Location     Type
 12495 ;;                  2    0[COMRAM] PTR unsigned char 
 12496 ;; Registers used:
 12497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12498 ;; Tracked objects:
 12499 ;;		On entry : 0/0
 12500 ;;		On exit  : 0/0
 12501 ;;		Unchanged: 0/0
 12502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12507 ;;Total ram usage:        2 bytes
 12508 ;; Hardware stack levels used:    1
 12509 ;; This function calls:
 12510 ;;		Nothing
 12511 ;; This function is called by:
 12512 ;;		_MacExecuteCommands
 12513 ;; This function uses a non-reentrant model
 12514 ;;
 12515                           
 12516                           	psect	text76
 12517  008F4C                     __ptext76:
 12518                           	opt callstack 0
 12519  008F4C                     _ExecuteLinkCheck:
 12520                           	opt callstack 25
 12521                           
 12522                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 12523                           
 12524                           ;incstack = 0
 12525  008F4C  C001  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 12526  008F50  C002  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 12527  008F54  50DF               	movf	indf2,w,c
 12528  008F56  0102               	movlb	2	; () banked
 12529  008F58  6FDD               	movwf	(_loRa+221)& (0+255),b
 12530                           
 12531                           ; BSR set to: 2
 12532  008F5A  4A01               	infsnz	ExecuteLinkCheck@ptr,f,c
 12533  008F5C  2A02               	incf	ExecuteLinkCheck@ptr+1,f,c
 12534                           
 12535                           ; BSR set to: 2
 12536                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 12537  008F5E  C001  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 12538  008F62  C002  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 12539  008F66  50DF               	movf	indf2,w,c
 12540  008F68  6FDE               	movwf	(_loRa+222)& (0+255),b
 12541  008F6A  4A01               	infsnz	ExecuteLinkCheck@ptr,f,c
 12542  008F6C  2A02               	incf	ExecuteLinkCheck@ptr+1,f,c
 12543                           
 12544                           ; BSR set to: 2
 12545                           ;lorawan.c: 1656: return ptr;
 12546  008F6E  C001  F001         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 12547  008F72  C002  F002         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 12548                           
 12549                           ; BSR set to: 2
 12550  008F76  0012               	return		;funcret
 12551  008F78                     __end_of_ExecuteLinkCheck:
 12552                           	opt callstack 0
 12553                           
 12554 ;; *************** function _ExecuteLinkAdr *****************
 12555 ;; Defined at:
 12556 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12557 ;; Parameters:    Size  Location     Type
 12558 ;;  ptr             2   15[COMRAM] PTR unsigned char 
 12559 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12560 ;; Auto vars:     Size  Location     Type
 12561 ;;  redundancy      2   21[COMRAM] PTR struct .
 12562 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12563 ;;  channelMask     2   18[COMRAM] unsigned int 
 12564 ;;  dataRate        1   23[COMRAM] unsigned char 
 12565 ;;  txPower         1   20[COMRAM] unsigned char 
 12566 ;; Return value:  Size  Location     Type
 12567 ;;                  2   15[COMRAM] PTR unsigned char 
 12568 ;; Registers used:
 12569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12570 ;; Tracked objects:
 12571 ;;		On entry : 0/0
 12572 ;;		On exit  : 0/0
 12573 ;;		Unchanged: 0/0
 12574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12576 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12578 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12579 ;;Total ram usage:        9 bytes
 12580 ;; Hardware stack levels used:    1
 12581 ;; Hardware stack levels required when called:    3
 12582 ;; This function calls:
 12583 ;;		_EnableChannels
 12584 ;;		_UpdateCurrentDataRate
 12585 ;;		_UpdateTxPower
 12586 ;;		_ValidateChannelMask
 12587 ;;		_ValidateChannelMaskCntl
 12588 ;;		_ValidateDataRate
 12589 ;;		_ValidateTxPower
 12590 ;; This function is called by:
 12591 ;;		_MacExecuteCommands
 12592 ;; This function uses a non-reentrant model
 12593 ;;
 12594                           
 12595                           	psect	text77
 12596  00C6A0                     __ptext77:
 12597                           	opt callstack 0
 12598  00C6A0                     _ExecuteLinkAdr:
 12599                           	opt callstack 22
 12600                           
 12601                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;;lorawan_eu.c: 616: uint16_t channelMask;;
      +                          lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 12602                           
 12603                           ; BSR set to: 2
 12604                           ;incstack = 0
 12605  00C6A0  C010  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 12606  00C6A4  C011  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 12607  00C6A8  50DF               	movf	indf2,w,c
 12608  00C6AA  0B0F               	andlw	15
 12609  00C6AC  6E15               	movwf	ExecuteLinkAdr@txPower,c
 12610                           
 12611                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 12612  00C6AE  C010  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 12613  00C6B2  C011  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 12614  00C6B6  50DF               	movf	indf2,w,c
 12615  00C6B8  6E12               	movwf	??_ExecuteLinkAdr& (0+255),c
 12616  00C6BA  3812               	swapf	??_ExecuteLinkAdr,w,c
 12617  00C6BC  0B0F               	andlw	15
 12618  00C6BE  0B0F               	andlw	15
 12619  00C6C0  6E18               	movwf	ExecuteLinkAdr@dataRate,c
 12620                           
 12621                           ;lorawan_eu.c: 620: ptr++;
 12622  00C6C2  4A10               	infsnz	ExecuteLinkAdr@ptr,f,c
 12623  00C6C4  2A11               	incf	ExecuteLinkAdr@ptr+1,f,c
 12624                           
 12625                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 12626  00C6C6  C010  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 12627  00C6CA  C011  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 12628  00C6CE  CFDE F013          	movff	postinc2,ExecuteLinkAdr@channelMask
 12629  00C6D2  CFDD F014          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 12630                           
 12631                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 12632  00C6D6  0E02               	movlw	2
 12633  00C6D8  2410               	addwf	ExecuteLinkAdr@ptr,w,c
 12634  00C6DA  6E10               	movwf	ExecuteLinkAdr@ptr,c
 12635  00C6DC  0E00               	movlw	0
 12636  00C6DE  2011               	addwfc	ExecuteLinkAdr@ptr+1,w,c
 12637  00C6E0  6E11               	movwf	ExecuteLinkAdr@ptr+1,c
 12638                           
 12639                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;;lorawan_eu.c: 624: redundancy = (Redundanc
      +                          y_t*)(ptr++);
 12640  00C6E2  C010  F016         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 12641  00C6E6  C011  F017         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 12642  00C6EA  4A10               	infsnz	ExecuteLinkAdr@ptr,f,c
 12643  00C6EC  2A11               	incf	ExecuteLinkAdr@ptr+1,f,c
 12644                           
 12645                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 12646  00C6EE  0102               	movlb	2	; () banked
 12647  00C6F0  AD02               	btfss	(_loRa+2)& (0+255),6,b
 12648  00C6F2  D091               	goto	l9784
 12649                           
 12650                           ; BSR set to: 2
 12651                           ;lorawan_eu.c: 627: {;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMas
      +                          kCntl) == OK) && (ValidateChannelMask(channelMask) == OK) )
 12652  00C6F4  C016  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 12653  00C6F8  C017  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 12654  00C6FC  38DF               	swapf	indf2,w,c
 12655  00C6FE  0B07               	andlw	7
 12656  00C700  EC54  F046         	call	_ValidateChannelMaskCntl
 12657  00C704  0900               	iorlw	0
 12658  00C706  A4D8               	btfss	status,2,c
 12659  00C708  D013               	goto	l9752
 12660  00C70A  C013  F001         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 12661  00C70E  C014  F002         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 12662  00C712  EC23  F04A         	call	_ValidateChannelMask	;wreg free
 12663  00C716  0900               	iorlw	0
 12664  00C718  A4D8               	btfss	status,2,c
 12665  00C71A  D00A               	goto	l9752
 12666                           
 12667                           ;lorawan_eu.c: 629: {;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMa
      +                          skAck = 1;
 12668  00C71C  0102               	movlb	2	; () banked
 12669  00C71E  51A7               	movf	(_loRa+167)& (0+255),w,b
 12670  00C720  0D02               	mullw	2
 12671  00C722  0EA9               	movlw	low (_loRa+169)
 12672  00C724  24F3               	addwf	prodl,w,c
 12673  00C726  6ED9               	movwf	fsr2l,c
 12674  00C728  0E02               	movlw	high (_loRa+169)
 12675  00C72A  20F4               	addwfc	prodh,w,c
 12676  00C72C  6EDA               	movwf	fsr2h,c
 12677  00C72E  80DF               	bsf	indf2,0,c
 12678  00C730                     l9752:
 12679                           
 12680                           ;lorawan_eu.c: 631: };lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (da
      +                          taRate >= loRa.minDataRate) && (dataRate <= loRa.maxDataRate) )
 12681  00C730  5018               	movf	ExecuteLinkAdr@dataRate,w,c
 12682  00C732  ECB5  F045         	call	_ValidateDataRate
 12683  00C736  0900               	iorlw	0
 12684  00C738  A4D8               	btfss	status,2,c
 12685  00C73A  D012               	goto	l9760
 12686  00C73C  0102               	movlb	2	; () banked
 12687  00C73E  51EB               	movf	(_loRa+235)& (0+255),w,b
 12688  00C740  5C18               	subwf	ExecuteLinkAdr@dataRate,w,c
 12689  00C742  A0D8               	btfss	status,0,c
 12690  00C744  D00D               	goto	l9760
 12691                           
 12692                           ; BSR set to: 2
 12693  00C746  5018               	movf	ExecuteLinkAdr@dataRate,w,c
 12694  00C748  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 12695  00C74A  A0D8               	btfss	status,0,c
 12696  00C74C  D009               	goto	l9760
 12697                           
 12698                           ; BSR set to: 2
 12699                           ;lorawan_eu.c: 634: {;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateA
      +                          ck = 1;
 12700  00C74E  51A7               	movf	(_loRa+167)& (0+255),w,b
 12701  00C750  0D02               	mullw	2
 12702  00C752  0EA9               	movlw	low (_loRa+169)
 12703  00C754  24F3               	addwf	prodl,w,c
 12704  00C756  6ED9               	movwf	fsr2l,c
 12705  00C758  0E02               	movlw	high (_loRa+169)
 12706  00C75A  20F4               	addwfc	prodh,w,c
 12707  00C75C  6EDA               	movwf	fsr2h,c
 12708  00C75E  82DF               	bsf	indf2,1,c
 12709  00C760                     l9760:
 12710                           
 12711                           ;lorawan_eu.c: 636: };lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 12712  00C760  5015               	movf	ExecuteLinkAdr@txPower,w,c
 12713  00C762  ECCE  F046         	call	_ValidateTxPower
 12714  00C766  0900               	iorlw	0
 12715  00C768  A4D8               	btfss	status,2,c
 12716  00C76A  D00A               	goto	l1112
 12717                           
 12718                           ;lorawan_eu.c: 639: {;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck 
      +                          = 1;
 12719  00C76C  0102               	movlb	2	; () banked
 12720  00C76E  51A7               	movf	(_loRa+167)& (0+255),w,b
 12721  00C770  0D02               	mullw	2
 12722  00C772  0EA9               	movlw	low (_loRa+169)
 12723  00C774  24F3               	addwf	prodl,w,c
 12724  00C776  6ED9               	movwf	fsr2l,c
 12725  00C778  0E02               	movlw	high (_loRa+169)
 12726  00C77A  20F4               	addwfc	prodh,w,c
 12727  00C77C  6EDA               	movwf	fsr2h,c
 12728  00C77E  84DF               	bsf	indf2,2,c
 12729  00C780                     l1112:
 12730                           
 12731                           ;lorawan_eu.c: 641: };lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].pow
      +                          erAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macComm
      +                          ands[loRa.crtMacCmdIndex].channelMaskAck == 1) )
 12732  00C780  0102               	movlb	2	; () banked
 12733  00C782  51A7               	movf	(_loRa+167)& (0+255),w,b
 12734  00C784  0D02               	mullw	2
 12735  00C786  0EA9               	movlw	low (_loRa+169)
 12736  00C788  24F3               	addwf	prodl,w,c
 12737  00C78A  6ED9               	movwf	fsr2l,c
 12738  00C78C  0E02               	movlw	high (_loRa+169)
 12739  00C78E  20F4               	addwfc	prodh,w,c
 12740  00C790  6EDA               	movwf	fsr2h,c
 12741  00C792  A4DF               	btfss	indf2,2,c
 12742  00C794  D05B               	goto	l9786
 12743                           
 12744                           ; BSR set to: 2
 12745  00C796  51A7               	movf	(_loRa+167)& (0+255),w,b
 12746  00C798  0D02               	mullw	2
 12747  00C79A  0EA9               	movlw	low (_loRa+169)
 12748  00C79C  24F3               	addwf	prodl,w,c
 12749  00C79E  6ED9               	movwf	fsr2l,c
 12750  00C7A0  0E02               	movlw	high (_loRa+169)
 12751  00C7A2  20F4               	addwfc	prodh,w,c
 12752  00C7A4  6EDA               	movwf	fsr2h,c
 12753  00C7A6  A2DF               	btfss	indf2,1,c
 12754  00C7A8  D051               	goto	l9786
 12755                           
 12756                           ; BSR set to: 2
 12757  00C7AA  51A7               	movf	(_loRa+167)& (0+255),w,b
 12758  00C7AC  0D02               	mullw	2
 12759  00C7AE  0EA9               	movlw	low (_loRa+169)
 12760  00C7B0  24F3               	addwf	prodl,w,c
 12761  00C7B2  6ED9               	movwf	fsr2l,c
 12762  00C7B4  0E02               	movlw	high (_loRa+169)
 12763  00C7B6  20F4               	addwfc	prodh,w,c
 12764  00C7B8  6EDA               	movwf	fsr2h,c
 12765  00C7BA  A0DF               	btfss	indf2,0,c
 12766  00C7BC  D047               	goto	l9786
 12767                           
 12768                           ; BSR set to: 2
 12769                           ;lorawan_eu.c: 644: {;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMask
      +                          Cntl);
 12770  00C7BE  C013  F00D         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 12771  00C7C2  C014  F00E         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 12772  00C7C6  C016  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 12773  00C7CA  C017  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 12774  00C7CE  38DF               	swapf	indf2,w,c
 12775  00C7D0  0B07               	andlw	7
 12776  00C7D2  6E0F               	movwf	EnableChannels@channelMaskCntl,c
 12777  00C7D4  EC04  F046         	call	_EnableChannels	;wreg free
 12778                           
 12779                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 12780  00C7D8  5015               	movf	ExecuteLinkAdr@txPower,w,c
 12781  00C7DA  EC13  F045         	call	_UpdateTxPower
 12782                           
 12783                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 12784  00C7DE  0102               	movlb	2	; () banked
 12785  00C7E0  8903               	bsf	(_loRa+3)& (0+255),4,b
 12786                           
 12787                           ; BSR set to: 2
 12788                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 12789  00C7E2  5018               	movf	ExecuteLinkAdr@dataRate,w,c
 12790  00C7E4  EC0F  F045         	call	_UpdateCurrentDataRate
 12791                           
 12792                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 12793  00C7E8  C016  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 12794  00C7EC  C017  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 12795  00C7F0  50DF               	movf	indf2,w,c
 12796  00C7F2  0B0F               	andlw	15
 12797  00C7F4  0900               	iorlw	0
 12798  00C7F6  A4D8               	btfss	status,2,c
 12799  00C7F8  D002               	goto	l9780
 12800                           
 12801                           ;lorawan_eu.c: 652: {;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 12802  00C7FA  0E00               	movlw	0
 12803  00C7FC  D008               	goto	L11
 12804  00C7FE                     l9780:
 12805                           
 12806                           ;lorawan_eu.c: 655: else;lorawan_eu.c: 656: {;lorawan_eu.c: 657: loRa.maxRepetitionsUnco
      +                          nfirmedUplink = redundancy->nbRep - 1;
 12807  00C7FE  C016  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 12808  00C802  C017  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 12809  00C806  50DF               	movf	indf2,w,c
 12810  00C808  0B0F               	andlw	15
 12811  00C80A  6E12               	movwf	??_ExecuteLinkAdr& (0+255),c
 12812  00C80C  0412               	decf	??_ExecuteLinkAdr,w,c
 12813  00C80E                     L11:
 12814  00C80E  0102               	movlb	2	; () banked
 12815  00C810  6FD6               	movwf	(_loRa+214)& (0+255),b
 12816                           
 12817                           ; BSR set to: 2
 12818                           ;lorawan_eu.c: 658: };lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 12819  00C812  8B03               	bsf	(_loRa+3)& (0+255),5,b
 12820  00C814  D01B               	goto	l9786
 12821  00C816                     l9784:
 12822                           
 12823                           ; BSR set to: 2
 12824                           ;lorawan_eu.c: 662: else;lorawan_eu.c: 663: {;lorawan_eu.c: 664: loRa.macCommands[loRa.c
      +                          rtMacCmdIndex].channelMaskAck = 0;
 12825  00C816  51A7               	movf	(_loRa+167)& (0+255),w,b
 12826  00C818  0D02               	mullw	2
 12827  00C81A  0EA9               	movlw	low (_loRa+169)
 12828  00C81C  24F3               	addwf	prodl,w,c
 12829  00C81E  6ED9               	movwf	fsr2l,c
 12830  00C820  0E02               	movlw	high (_loRa+169)
 12831  00C822  20F4               	addwfc	prodh,w,c
 12832  00C824  6EDA               	movwf	fsr2h,c
 12833  00C826  90DF               	bcf	indf2,0,c
 12834                           
 12835                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 12836  00C828  51A7               	movf	(_loRa+167)& (0+255),w,b
 12837  00C82A  0D02               	mullw	2
 12838  00C82C  0EA9               	movlw	low (_loRa+169)
 12839  00C82E  24F3               	addwf	prodl,w,c
 12840  00C830  6ED9               	movwf	fsr2l,c
 12841  00C832  0E02               	movlw	high (_loRa+169)
 12842  00C834  20F4               	addwfc	prodh,w,c
 12843  00C836  6EDA               	movwf	fsr2h,c
 12844  00C838  92DF               	bcf	indf2,1,c
 12845                           
 12846                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 12847  00C83A  51A7               	movf	(_loRa+167)& (0+255),w,b
 12848  00C83C  0D02               	mullw	2
 12849  00C83E  0EA9               	movlw	low (_loRa+169)
 12850  00C840  24F3               	addwf	prodl,w,c
 12851  00C842  6ED9               	movwf	fsr2l,c
 12852  00C844  0E02               	movlw	high (_loRa+169)
 12853  00C846  20F4               	addwfc	prodh,w,c
 12854  00C848  6EDA               	movwf	fsr2h,c
 12855  00C84A  94DF               	bcf	indf2,2,c
 12856  00C84C                     l9786:
 12857                           
 12858                           ; BSR set to: 2
 12859                           ;lorawan_eu.c: 667: };lorawan_eu.c: 669: return ptr;
 12860  00C84C  C010  F010         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 12861  00C850  C011  F011         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 12862                           
 12863                           ; BSR set to: 2
 12864  00C854  0012               	return		;funcret
 12865  00C856                     __end_of_ExecuteLinkAdr:
 12866                           	opt callstack 0
 12867                           
 12868 ;; *************** function _ValidateTxPower *****************
 12869 ;; Defined at:
 12870 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12871 ;; Parameters:    Size  Location     Type
 12872 ;;  txPowerNew      1    wreg     unsigned char 
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;  txPowerNew      1    1[COMRAM] unsigned char 
 12875 ;;  result          1    0[COMRAM] enum E6118
 12876 ;; Return value:  Size  Location     Type
 12877 ;;                  1    wreg      enum E6118
 12878 ;; Registers used:
 12879 ;;		wreg, status,2, status,0
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12886 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12888 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12889 ;;Total ram usage:        2 bytes
 12890 ;; Hardware stack levels used:    1
 12891 ;; This function calls:
 12892 ;;		Nothing
 12893 ;; This function is called by:
 12894 ;;		_ExecuteLinkAdr
 12895 ;;		_LORAWAN_SetTxPower
 12896 ;; This function uses a non-reentrant model
 12897 ;;
 12898                           
 12899                           	psect	text78
 12900  008D9C                     __ptext78:
 12901                           	opt callstack 0
 12902  008D9C                     _ValidateTxPower:
 12903                           	opt callstack 24
 12904                           
 12905                           ; BSR set to: 2
 12906                           ;incstack = 0
 12907                           ;ValidateTxPower@txPowerNew stored from wreg
 12908  008D9C  6E02               	movwf	ValidateTxPower@txPowerNew,c
 12909                           
 12910                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 12911  008D9E  0E00               	movlw	0
 12912  008DA0  6E01               	movwf	ValidateTxPower@result,c
 12913                           
 12914                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 12915  008DA2  0102               	movlb	2	; () banked
 12916  008DA4  51A4               	movf	(_loRa+164)& (0+255),w,b
 12917  008DA6  A4D8               	btfss	status,2,c
 12918  008DA8  D003               	goto	u8320
 12919                           
 12920                           ; BSR set to: 2
 12921  008DAA  5002               	movf	ValidateTxPower@txPowerNew,w,c
 12922  008DAC  B4D8               	btfsc	status,2,c
 12923  008DAE  D003               	goto	u8330
 12924  008DB0                     u8320:
 12925                           
 12926                           ; BSR set to: 2
 12927  008DB0  0E05               	movlw	5
 12928  008DB2  6402               	cpfsgt	ValidateTxPower@txPowerNew,c
 12929  008DB4  D002               	goto	l1096
 12930  008DB6                     u8330:
 12931                           
 12932                           ; BSR set to: 2
 12933                           ;lorawan_eu.c: 587: {;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 12934  008DB6  0E03               	movlw	3
 12935  008DB8  6E01               	movwf	ValidateTxPower@result,c
 12936  008DBA                     l1096:
 12937                           
 12938                           ; BSR set to: 2
 12939                           ;lorawan_eu.c: 589: };lorawan_eu.c: 591: return result;
 12940  008DBA  5001               	movf	ValidateTxPower@result,w,c
 12941                           
 12942                           ; BSR set to: 2
 12943  008DBC  0012               	return		;funcret
 12944  008DBE                     __end_of_ValidateTxPower:
 12945                           	opt callstack 0
 12946                           
 12947 ;; *************** function _ValidateDataRate *****************
 12948 ;; Defined at:
 12949 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12950 ;; Parameters:    Size  Location     Type
 12951 ;;  dataRate        1    wreg     unsigned char 
 12952 ;; Auto vars:     Size  Location     Type
 12953 ;;  dataRate        1    0[COMRAM] unsigned char 
 12954 ;;  result          1    1[COMRAM] enum E6118
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  1    wreg      enum E6118
 12957 ;; Registers used:
 12958 ;;		wreg, status,2, status,0
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12968 ;;Total ram usage:        2 bytes
 12969 ;; Hardware stack levels used:    1
 12970 ;; This function calls:
 12971 ;;		Nothing
 12972 ;; This function is called by:
 12973 ;;		_ExecuteLinkAdr
 12974 ;;		_ExecuteRxParamSetupReq
 12975 ;;		_ValidateDataRange
 12976 ;;		_LORAWAN_SetReceiveWindow2Parameters
 12977 ;;		_LORAWAN_SetCurrentDataRate
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981                           	psect	text79
 12982  008B6A                     __ptext79:
 12983                           	opt callstack 0
 12984  008B6A                     _ValidateDataRate:
 12985                           	opt callstack 24
 12986                           
 12987                           ; BSR set to: 2
 12988                           ;incstack = 0
 12989                           ;ValidateDataRate@dataRate stored from wreg
 12990  008B6A  6E01               	movwf	ValidateDataRate@dataRate,c
 12991                           
 12992                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 12993  008B6C  0E00               	movlw	0
 12994  008B6E  6E02               	movwf	ValidateDataRate@result,c
 12995                           
 12996                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 12997  008B70  0E07               	movlw	7
 12998  008B72  6401               	cpfsgt	ValidateDataRate@dataRate,c
 12999  008B74  D002               	goto	l1092
 13000                           
 13001                           ;lorawan_eu.c: 575: {;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 13002  008B76  0E03               	movlw	3
 13003  008B78  6E02               	movwf	ValidateDataRate@result,c
 13004  008B7A                     l1092:
 13005                           
 13006                           ;lorawan_eu.c: 577: };lorawan_eu.c: 579: return result;
 13007  008B7A  5002               	movf	ValidateDataRate@result,w,c
 13008  008B7C  0012               	return		;funcret
 13009  008B7E                     __end_of_ValidateDataRate:
 13010                           	opt callstack 0
 13011                           
 13012 ;; *************** function _ValidateChannelMaskCntl *****************
 13013 ;; Defined at:
 13014 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13015 ;; Parameters:    Size  Location     Type
 13016 ;;  channelMaskC    1    wreg     unsigned char 
 13017 ;; Auto vars:     Size  Location     Type
 13018 ;;  channelMaskC    1    1[COMRAM] unsigned char 
 13019 ;;  result          1    0[COMRAM] enum E6118
 13020 ;; Return value:  Size  Location     Type
 13021 ;;                  1    wreg      enum E6118
 13022 ;; Registers used:
 13023 ;;		wreg, status,2, status,0
 13024 ;; Tracked objects:
 13025 ;;		On entry : 0/0
 13026 ;;		On exit  : 0/0
 13027 ;;		Unchanged: 0/0
 13028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13032 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13033 ;;Total ram usage:        2 bytes
 13034 ;; Hardware stack levels used:    1
 13035 ;; This function calls:
 13036 ;;		Nothing
 13037 ;; This function is called by:
 13038 ;;		_ExecuteLinkAdr
 13039 ;; This function uses a non-reentrant model
 13040 ;;
 13041                           
 13042                           	psect	text80
 13043  008CA8                     __ptext80:
 13044                           	opt callstack 0
 13045  008CA8                     _ValidateChannelMaskCntl:
 13046                           	opt callstack 24
 13047                           
 13048                           ;incstack = 0
 13049                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 13050  008CA8  6E02               	movwf	ValidateChannelMaskCntl@channelMaskCntl,c
 13051                           
 13052                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 13053  008CAA  0E00               	movlw	0
 13054  008CAC  6E01               	movwf	ValidateChannelMaskCntl@result,c
 13055                           
 13056                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 13057  008CAE  5002               	movf	ValidateChannelMaskCntl@channelMaskCntl,w,c
 13058  008CB0  B4D8               	btfsc	status,2,c
 13059  008CB2  D006               	goto	l1263
 13060  008CB4  0E06               	movlw	6
 13061  008CB6  1802               	xorwf	ValidateChannelMaskCntl@channelMaskCntl,w,c
 13062  008CB8  B4D8               	btfsc	status,2,c
 13063  008CBA  D002               	goto	l1263
 13064                           
 13065                           ;lorawan_eu.c: 1142: {;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 13066  008CBC  0E03               	movlw	3
 13067  008CBE  6E01               	movwf	ValidateChannelMaskCntl@result,c
 13068  008CC0                     l1263:
 13069                           
 13070                           ;lorawan_eu.c: 1144: };lorawan_eu.c: 1146: return result;
 13071  008CC0  5001               	movf	ValidateChannelMaskCntl@result,w,c
 13072  008CC2  0012               	return		;funcret
 13073  008CC4                     __end_of_ValidateChannelMaskCntl:
 13074                           	opt callstack 0
 13075                           
 13076 ;; *************** function _ValidateChannelMask *****************
 13077 ;; Defined at:
 13078 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13079 ;; Parameters:    Size  Location     Type
 13080 ;;  channelMask     2    0[COMRAM] unsigned int 
 13081 ;; Auto vars:     Size  Location     Type
 13082 ;;  i               1    4[COMRAM] unsigned char 
 13083 ;; Return value:  Size  Location     Type
 13084 ;;                  1    wreg      enum E6118
 13085 ;; Registers used:
 13086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13087 ;; Tracked objects:
 13088 ;;		On entry : 0/0
 13089 ;;		On exit  : 0/0
 13090 ;;		Unchanged: 0/0
 13091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13094 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13095 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13096 ;;Total ram usage:        5 bytes
 13097 ;; Hardware stack levels used:    1
 13098 ;; This function calls:
 13099 ;;		Nothing
 13100 ;; This function is called by:
 13101 ;;		_ExecuteLinkAdr
 13102 ;; This function uses a non-reentrant model
 13103 ;;
 13104                           
 13105                           	psect	text81
 13106  009446                     __ptext81:
 13107                           	opt callstack 0
 13108  009446                     _ValidateChannelMask:
 13109                           	opt callstack 24
 13110                           
 13111                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 13112                           
 13113                           ;incstack = 0
 13114  009446  5001               	movf	ValidateChannelMask@channelMask,w,c
 13115  009448  1002               	iorwf	ValidateChannelMask@channelMask+1,w,c
 13116  00944A  B4D8               	btfsc	status,2,c
 13117  00944C  D011               	goto	u8380
 13118                           
 13119                           ;lorawan_eu.c: 1171: {;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 13120  00944E  0E00               	movlw	0
 13121  009450  6E05               	movwf	ValidateChannelMask@i,c
 13122  009452                     l1277:
 13123                           
 13124                           ;lorawan_eu.c: 1173: {;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0
      +                          ))) && ( (Channels[i].parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04)
      +                           ) )
 13125  009452  A001               	btfss	ValidateChannelMask@channelMask,0,c
 13126  009454  D00F               	goto	l9282
 13127  009456  5005               	movf	ValidateChannelMask@i,w,c
 13128  009458  0D0E               	mullw	14
 13129  00945A  0E0D               	movlw	low (_Channels+13)
 13130  00945C  24F3               	addwf	prodl,w,c
 13131  00945E  6ED9               	movwf	fsr2l,c
 13132  009460  0E03               	movlw	high (_Channels+13)
 13133  009462  20F4               	addwfc	prodh,w,c
 13134  009464  6EDA               	movwf	fsr2h,c
 13135  009466  50DF               	movf	indf2,w,c
 13136  009468  0B07               	andlw	7
 13137  00946A  0A07               	xorlw	7
 13138  00946C  B4D8               	btfsc	status,2,c
 13139  00946E  D002               	goto	l9282
 13140  009470                     u8380:
 13141                           
 13142                           ;lorawan_eu.c: 1175: {;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 13143  009470  0E03               	movlw	3
 13144  009472  0012               	return	
 13145  009474                     l9282:
 13146                           
 13147                           ;lorawan_eu.c: 1178: else;lorawan_eu.c: 1179: {;lorawan_eu.c: 1180: channelMask = channe
      +                          lMask >> (1);
 13148  009474  90D8               	bcf	status,0,c
 13149  009476  3002               	rrcf	ValidateChannelMask@channelMask+1,w,c
 13150  009478  6E03               	movwf	??_ValidateChannelMask& (0+255),c
 13151  00947A  3001               	rrcf	ValidateChannelMask@channelMask,w,c
 13152  00947C  6E01               	movwf	ValidateChannelMask@channelMask,c
 13153  00947E  C003  F002         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 13154  009482  2A05               	incf	ValidateChannelMask@i,f,c
 13155  009484  0E0F               	movlw	15
 13156  009486  6405               	cpfsgt	ValidateChannelMask@i,c
 13157  009488  D7E4               	goto	l1277
 13158                           
 13159                           ;lorawan_eu.c: 1181: };lorawan_eu.c: 1182: };lorawan_eu.c: 1184: return OK;
 13160  00948A  0E00               	movlw	0
 13161  00948C  0012               	return		;funcret
 13162  00948E                     __end_of_ValidateChannelMask:
 13163                           	opt callstack 0
 13164                           
 13165 ;; *************** function _UpdateTxPower *****************
 13166 ;; Defined at:
 13167 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13168 ;; Parameters:    Size  Location     Type
 13169 ;;  txPowerNew      1    wreg     unsigned char 
 13170 ;; Auto vars:     Size  Location     Type
 13171 ;;  txPowerNew      1    0[COMRAM] unsigned char 
 13172 ;; Return value:  Size  Location     Type
 13173 ;;                  1    wreg      void 
 13174 ;; Registers used:
 13175 ;;		wreg
 13176 ;; Tracked objects:
 13177 ;;		On entry : 0/0
 13178 ;;		On exit  : 0/0
 13179 ;;		Unchanged: 0/0
 13180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13184 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13185 ;;Total ram usage:        1 bytes
 13186 ;; Hardware stack levels used:    1
 13187 ;; This function calls:
 13188 ;;		Nothing
 13189 ;; This function is called by:
 13190 ;;		_ExecuteLinkAdr
 13191 ;;		_LORAWAN_SetTxPower
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195                           	psect	text82
 13196  008A26                     __ptext82:
 13197                           	opt callstack 0
 13198  008A26                     _UpdateTxPower:
 13199                           	opt callstack 24
 13200                           
 13201                           ;incstack = 0
 13202                           ;UpdateTxPower@txPowerNew stored from wreg
 13203  008A26  6E01               	movwf	UpdateTxPower@txPowerNew,c
 13204                           
 13205                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 13206  008A28  C001  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 13207  008A2C  0012               	return		;funcret
 13208  008A2E                     __end_of_UpdateTxPower:
 13209                           	opt callstack 0
 13210                           
 13211 ;; *************** function _UpdateCurrentDataRate *****************
 13212 ;; Defined at:
 13213 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13214 ;; Parameters:    Size  Location     Type
 13215 ;;  valueNew        1    wreg     unsigned char 
 13216 ;; Auto vars:     Size  Location     Type
 13217 ;;  valueNew        1    0[COMRAM] unsigned char 
 13218 ;; Return value:  Size  Location     Type
 13219 ;;                  1    wreg      void 
 13220 ;; Registers used:
 13221 ;;		wreg
 13222 ;; Tracked objects:
 13223 ;;		On entry : 0/0
 13224 ;;		On exit  : 0/0
 13225 ;;		Unchanged: 0/0
 13226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13230 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13231 ;;Total ram usage:        1 bytes
 13232 ;; Hardware stack levels used:    1
 13233 ;; This function calls:
 13234 ;;		Nothing
 13235 ;; This function is called by:
 13236 ;;		_ExecuteLinkAdr
 13237 ;;		_LORAWAN_SetCurrentDataRate
 13238 ;; This function uses a non-reentrant model
 13239 ;;
 13240                           
 13241                           	psect	text83
 13242  008A1E                     __ptext83:
 13243                           	opt callstack 0
 13244  008A1E                     _UpdateCurrentDataRate:
 13245                           	opt callstack 24
 13246                           
 13247                           ;incstack = 0
 13248                           ;UpdateCurrentDataRate@valueNew stored from wreg
 13249  008A1E  6E01               	movwf	UpdateCurrentDataRate@valueNew,c
 13250                           
 13251                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 13252  008A20  C001  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 13253  008A24  0012               	return		;funcret
 13254  008A26                     __end_of_UpdateCurrentDataRate:
 13255                           	opt callstack 0
 13256                           
 13257 ;; *************** function _EnableChannels *****************
 13258 ;; Defined at:
 13259 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13260 ;; Parameters:    Size  Location     Type
 13261 ;;  channelMask     2   12[COMRAM] unsigned int 
 13262 ;;  channelMaskC    1   14[COMRAM] unsigned char 
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;		None
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  1    wreg      void 
 13267 ;; Registers used:
 13268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/0
 13271 ;;		On exit  : 0/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13274 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13277 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13278 ;;Total ram usage:        3 bytes
 13279 ;; Hardware stack levels used:    1
 13280 ;; Hardware stack levels required when called:    2
 13281 ;; This function calls:
 13282 ;;		_EnableChannels1
 13283 ;; This function is called by:
 13284 ;;		_ExecuteLinkAdr
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288                           	psect	text84
 13289  008C08                     __ptext84:
 13290                           	opt callstack 0
 13291  008C08                     _EnableChannels:
 13292                           	opt callstack 22
 13293                           
 13294                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 13295                           
 13296                           ;incstack = 0
 13297  008C08  C00D  F005         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 13298  008C0C  C00E  F006         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 13299  008C10  C00F  F007         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 13300  008C14  0E00               	movlw	0
 13301  008C16  6E08               	movwf	EnableChannels1@channelIndexMin,c
 13302  008C18  0E10               	movlw	16
 13303  008C1A  6E09               	movwf	EnableChannels1@channelIndexMax,c
 13304  008C1C  EC77  F04D         	call	_EnableChannels1	;wreg free
 13305  008C20  0012               	return		;funcret
 13306  008C22                     __end_of_EnableChannels:
 13307                           	opt callstack 0
 13308                           
 13309 ;; *************** function _EnableChannels1 *****************
 13310 ;; Defined at:
 13311 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;  channelMask     2    4[COMRAM] unsigned int 
 13314 ;;  channelMaskC    1    6[COMRAM] unsigned char 
 13315 ;;  channelIndex    1    7[COMRAM] unsigned char 
 13316 ;;  channelIndex    1    8[COMRAM] unsigned char 
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;  i               1   11[COMRAM] unsigned char 
 13319 ;; Return value:  Size  Location     Type
 13320 ;;                  1    wreg      void 
 13321 ;; Registers used:
 13322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/0
 13325 ;;		On exit  : 0/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13328 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13330 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13331 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13332 ;;Total ram usage:        8 bytes
 13333 ;; Hardware stack levels used:    1
 13334 ;; Hardware stack levels required when called:    1
 13335 ;; This function calls:
 13336 ;;		_UpdateChannelIdStatus
 13337 ;; This function is called by:
 13338 ;;		_EnableChannels
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           	psect	text85
 13343  009AEE                     __ptext85:
 13344                           	opt callstack 0
 13345  009AEE                     _EnableChannels1:
 13346                           	opt callstack 22
 13347                           
 13348                           ;lorawan_eu.c: 1195: uint8_t i;;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 13349                           
 13350                           ;incstack = 0
 13351  009AEE  0E06               	movlw	6
 13352  009AF0  1807               	xorwf	EnableChannels1@channelMaskCntl,w,c
 13353  009AF2  A4D8               	btfss	status,2,c
 13354  009AF4  D00E               	goto	l8890
 13355                           
 13356                           ;lorawan_eu.c: 1198: {;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMa
      +                          x; i++ )
 13357  009AF6  C008  F00C         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 13358  009AFA  D006               	goto	l8888
 13359  009AFC                     l8884:
 13360                           
 13361                           ;lorawan_eu.c: 1200: {;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 13362  009AFC  0E01               	movlw	1
 13363  009AFE  6E01               	movwf	UpdateChannelIdStatus@statusNew,c
 13364  009B00  500C               	movf	EnableChannels1@i,w,c
 13365  009B02  ECCC  F05B         	call	_UpdateChannelIdStatus
 13366  009B06  2A0C               	incf	EnableChannels1@i,f,c
 13367  009B08                     l8888:
 13368  009B08  5009               	movf	EnableChannels1@channelIndexMax,w,c
 13369  009B0A  5C0C               	subwf	EnableChannels1@i,w,c
 13370  009B0C  B0D8               	btfsc	status,0,c
 13371  009B0E  0012               	return	
 13372  009B10  D7F5               	goto	l8884
 13373  009B12                     l8890:
 13374                           
 13375                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 13376  009B12  5007               	movf	EnableChannels1@channelMaskCntl,w,c
 13377  009B14  A4D8               	btfss	status,2,c
 13378  009B16  0012               	return	
 13379                           
 13380                           ;lorawan_eu.c: 1205: {;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMa
      +                          x; i++ )
 13381  009B18  C008  F00C         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 13382  009B1C  D015               	goto	l8902
 13383  009B1E                     l1292:
 13384                           
 13385                           ;lorawan_eu.c: 1207: {;lorawan_eu.c: 1208: if ((channelMask & (1 << (0))) == (1 << (0)))
 13386  009B1E  A005               	btfss	EnableChannels1@channelMask,0,c
 13387  009B20  D006               	goto	l8896
 13388                           
 13389                           ;lorawan_eu.c: 1209: {;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 13390  009B22  0E01               	movlw	1
 13391  009B24  6E01               	movwf	UpdateChannelIdStatus@statusNew,c
 13392  009B26  500C               	movf	EnableChannels1@i,w,c
 13393  009B28  ECCC  F05B         	call	_UpdateChannelIdStatus
 13394                           
 13395                           ;lorawan_eu.c: 1211: }
 13396  009B2C  D005               	goto	l8898
 13397  009B2E                     l8896:
 13398                           
 13399                           ;lorawan_eu.c: 1212: else;lorawan_eu.c: 1213: {;lorawan_eu.c: 1214: UpdateChannelIdStatu
      +                          s (i, 0);
 13400  009B2E  0E00               	movlw	0
 13401  009B30  6E01               	movwf	UpdateChannelIdStatus@statusNew,c
 13402  009B32  500C               	movf	EnableChannels1@i,w,c
 13403  009B34  ECCC  F05B         	call	_UpdateChannelIdStatus
 13404  009B38                     l8898:
 13405                           
 13406                           ;lorawan_eu.c: 1215: };lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 13407  009B38  90D8               	bcf	status,0,c
 13408  009B3A  3006               	rrcf	EnableChannels1@channelMask+1,w,c
 13409  009B3C  6E0A               	movwf	??_EnableChannels1& (0+255),c
 13410  009B3E  3005               	rrcf	EnableChannels1@channelMask,w,c
 13411  009B40  6E05               	movwf	EnableChannels1@channelMask,c
 13412  009B42  C00A  F006         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 13413  009B46  2A0C               	incf	EnableChannels1@i,f,c
 13414  009B48                     l8902:
 13415  009B48  5009               	movf	EnableChannels1@channelIndexMax,w,c
 13416  009B4A  5C0C               	subwf	EnableChannels1@i,w,c
 13417  009B4C  B0D8               	btfsc	status,0,c
 13418  009B4E  0012               	return	
 13419  009B50  D7E6               	goto	l1292
 13420  009B52                     __end_of_EnableChannels1:
 13421                           	opt callstack 0
 13422                           
 13423 ;; *************** function _UpdateChannelIdStatus *****************
 13424 ;; Defined at:
 13425 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13426 ;; Parameters:    Size  Location     Type
 13427 ;;  channelId       1    wreg     unsigned char 
 13428 ;;  statusNew       1    0[COMRAM] unsigned char 
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;  channelId       1    2[COMRAM] unsigned char 
 13431 ;;  i               1    3[COMRAM] unsigned char 
 13432 ;; Return value:  Size  Location     Type
 13433 ;;                  1    wreg      void 
 13434 ;; Registers used:
 13435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13436 ;; Tracked objects:
 13437 ;;		On entry : 0/0
 13438 ;;		On exit  : 0/0
 13439 ;;		Unchanged: 0/0
 13440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13444 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13445 ;;Total ram usage:        4 bytes
 13446 ;; Hardware stack levels used:    1
 13447 ;; This function calls:
 13448 ;;		Nothing
 13449 ;; This function is called by:
 13450 ;;		_LORAWAN_SetChannelIdStatus
 13451 ;;		_ExecuteNewChannel
 13452 ;;		_EnableChannels1
 13453 ;; This function uses a non-reentrant model
 13454 ;;
 13455                           
 13456                           	psect	text86
 13457  00B798                     __ptext86:
 13458                           	opt callstack 0
 13459  00B798                     _UpdateChannelIdStatus:
 13460                           	opt callstack 24
 13461                           
 13462                           ;incstack = 0
 13463                           ;UpdateChannelIdStatus@channelId stored from wreg
 13464  00B798  6E03               	movwf	UpdateChannelIdStatus@channelId,c
 13465                           
 13466                           ;lorawan_eu.c: 1044: uint8_t i;;lorawan_eu.c: 1046: Channels[channelId].status = statusN
      +                          ew;
 13467  00B79A  5003               	movf	UpdateChannelIdStatus@channelId,w,c
 13468  00B79C  0D0E               	mullw	14
 13469  00B79E  0E04               	movlw	low (_Channels+4)
 13470  00B7A0  24F3               	addwf	prodl,w,c
 13471  00B7A2  6ED9               	movwf	fsr2l,c
 13472  00B7A4  0E03               	movlw	high (_Channels+4)
 13473  00B7A6  20F4               	addwfc	prodh,w,c
 13474  00B7A8  6EDA               	movwf	fsr2h,c
 13475  00B7AA  C001  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 13476                           
 13477                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 13478  00B7AE  5003               	movf	UpdateChannelIdStatus@channelId,w,c
 13479  00B7B0  0D0E               	mullw	14
 13480  00B7B2  0E04               	movlw	low (_Channels+4)
 13481  00B7B4  24F3               	addwf	prodl,w,c
 13482  00B7B6  6ED9               	movwf	fsr2l,c
 13483  00B7B8  0E03               	movlw	high (_Channels+4)
 13484  00B7BA  20F4               	addwfc	prodh,w,c
 13485  00B7BC  6EDA               	movwf	fsr2h,c
 13486  00B7BE  50DF               	movf	indf2,w,c
 13487  00B7C0  A4D8               	btfss	status,2,c
 13488  00B7C2  D00C               	goto	l8558
 13489                           
 13490                           ;lorawan_eu.c: 1048: {;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 13491  00B7C4  5003               	movf	UpdateChannelIdStatus@channelId,w,c
 13492  00B7C6  0D0E               	mullw	14
 13493  00B7C8  0E08               	movlw	low (_Channels+8)
 13494  00B7CA  24F3               	addwf	prodl,w,c
 13495  00B7CC  6ED9               	movwf	fsr2l,c
 13496  00B7CE  0E03               	movlw	high (_Channels+8)
 13497  00B7D0  20F4               	addwfc	prodh,w,c
 13498  00B7D2  6EDA               	movwf	fsr2h,c
 13499  00B7D4  6ADE               	clrf	postinc2,c
 13500  00B7D6  6ADE               	clrf	postinc2,c
 13501  00B7D8  6ADE               	clrf	postinc2,c
 13502  00B7DA  6ADD               	clrf	postdec2,c
 13503  00B7DC                     l8558:
 13504                           
 13505                           ;lorawan_eu.c: 1051: };lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 13506  00B7DC  0E00               	movlw	0
 13507  00B7DE  6E04               	movwf	UpdateChannelIdStatus@i,c
 13508  00B7E0  D050               	goto	l8572
 13509  00B7E2                     l8560:
 13510                           
 13511                           ; BSR set to: 2
 13512                           ;lorawan_eu.c: 1054: {;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDat
      +                          aRate) && (Channels[i].status == 1) )
 13513  00B7E2  5004               	movf	UpdateChannelIdStatus@i,w,c
 13514  00B7E4  0D0E               	mullw	14
 13515  00B7E6  0E05               	movlw	low (_Channels+5)
 13516  00B7E8  24F3               	addwf	prodl,w,c
 13517  00B7EA  6ED9               	movwf	fsr2l,c
 13518  00B7EC  0E03               	movlw	high (_Channels+5)
 13519  00B7EE  20F4               	addwfc	prodh,w,c
 13520  00B7F0  6EDA               	movwf	fsr2h,c
 13521  00B7F2  0103               	movlb	3	; () banked
 13522  00B7F4  50DF               	movf	223,w,c
 13523  00B7F6  0B0F               	andlw	15
 13524  00B7F8  6E02               	movwf	??_UpdateChannelIdStatus& (0+255),c
 13525  00B7FA  0102               	movlb	2	; () banked
 13526  00B7FC  51EB               	movf	(_loRa+235)& (0+255),w,b
 13527  00B7FE  5C02               	subwf	??_UpdateChannelIdStatus,w,c
 13528  00B800  B0D8               	btfsc	status,0,c
 13529  00B802  D018               	goto	l1228
 13530                           
 13531                           ; BSR set to: 2
 13532  00B804  5004               	movf	UpdateChannelIdStatus@i,w,c
 13533  00B806  0D0E               	mullw	14
 13534  00B808  0E04               	movlw	low (_Channels+4)
 13535  00B80A  24F3               	addwf	prodl,w,c
 13536  00B80C  6ED9               	movwf	fsr2l,c
 13537  00B80E  0E03               	movlw	high (_Channels+4)
 13538  00B810  20F4               	addwfc	prodh,w,c
 13539  00B812  6EDA               	movwf	fsr2h,c
 13540  00B814  04DE               	decf	postinc2,w,c
 13541  00B816  A4D8               	btfss	status,2,c
 13542  00B818  D00D               	goto	l1228
 13543                           
 13544                           ; BSR set to: 2
 13545                           ;lorawan_eu.c: 1056: {;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 13546  00B81A  5004               	movf	UpdateChannelIdStatus@i,w,c
 13547  00B81C  0D0E               	mullw	14
 13548  00B81E  0E05               	movlw	low (_Channels+5)
 13549  00B820  24F3               	addwf	prodl,w,c
 13550  00B822  6ED9               	movwf	fsr2l,c
 13551  00B824  0E03               	movlw	high (_Channels+5)
 13552  00B826  20F4               	addwfc	prodh,w,c
 13553  00B828  6EDA               	movwf	fsr2h,c
 13554  00B82A  0103               	movlb	3	; () banked
 13555  00B82C  50DF               	movf	223,w,c
 13556  00B82E  0B0F               	andlw	15
 13557  00B830  0102               	movlb	2	; () banked
 13558  00B832  6FEB               	movwf	(_loRa+235)& (0+255),b
 13559  00B834                     l1228:
 13560                           
 13561                           ; BSR set to: 2
 13562                           ;lorawan_eu.c: 1058: };lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDat
      +                          aRate) && (Channels[i].status == 1) )
 13563  00B834  5004               	movf	UpdateChannelIdStatus@i,w,c
 13564  00B836  0D0E               	mullw	14
 13565  00B838  0E05               	movlw	low (_Channels+5)
 13566  00B83A  24F3               	addwf	prodl,w,c
 13567  00B83C  6ED9               	movwf	fsr2l,c
 13568  00B83E  0E03               	movlw	high (_Channels+5)
 13569  00B840  20F4               	addwfc	prodh,w,c
 13570  00B842  6EDA               	movwf	fsr2h,c
 13571  00B844  0103               	movlb	3	; () banked
 13572  00B846  38DF               	swapf	223,w,c
 13573  00B848  0B0F               	andlw	15
 13574  00B84A  0102               	movlb	2	; () banked
 13575  00B84C  61EC               	cpfslt	(_loRa+236)& (0+255),b
 13576  00B84E  D018               	goto	l8570
 13577                           
 13578                           ; BSR set to: 2
 13579  00B850  5004               	movf	UpdateChannelIdStatus@i,w,c
 13580  00B852  0D0E               	mullw	14
 13581  00B854  0E04               	movlw	low (_Channels+4)
 13582  00B856  24F3               	addwf	prodl,w,c
 13583  00B858  6ED9               	movwf	fsr2l,c
 13584  00B85A  0E03               	movlw	high (_Channels+4)
 13585  00B85C  20F4               	addwfc	prodh,w,c
 13586  00B85E  6EDA               	movwf	fsr2h,c
 13587  00B860  04DE               	decf	postinc2,w,c
 13588  00B862  A4D8               	btfss	status,2,c
 13589  00B864  D00D               	goto	l8570
 13590                           
 13591                           ; BSR set to: 2
 13592                           ;lorawan_eu.c: 1060: {;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 13593  00B866  5004               	movf	UpdateChannelIdStatus@i,w,c
 13594  00B868  0D0E               	mullw	14
 13595  00B86A  0E05               	movlw	low (_Channels+5)
 13596  00B86C  24F3               	addwf	prodl,w,c
 13597  00B86E  6ED9               	movwf	fsr2l,c
 13598  00B870  0E03               	movlw	high (_Channels+5)
 13599  00B872  20F4               	addwfc	prodh,w,c
 13600  00B874  6EDA               	movwf	fsr2h,c
 13601  00B876  0103               	movlb	3	; () banked
 13602  00B878  38DF               	swapf	223,w,c
 13603  00B87A  0B0F               	andlw	15
 13604  00B87C  0102               	movlb	2	; () banked
 13605  00B87E  6FEC               	movwf	(_loRa+236)& (0+255),b
 13606  00B880                     l8570:
 13607                           
 13608                           ; BSR set to: 2
 13609  00B880  2A04               	incf	UpdateChannelIdStatus@i,f,c
 13610  00B882                     l8572:
 13611  00B882  0102               	movlb	2	; () banked
 13612  00B884  51ED               	movf	(_loRa+237)& (0+255),w,b
 13613  00B886  5C04               	subwf	UpdateChannelIdStatus@i,w,c
 13614  00B888  A0D8               	btfss	status,0,c
 13615  00B88A  D7AB               	goto	l8560
 13616                           
 13617                           ; BSR set to: 2
 13618                           ;lorawan_eu.c: 1062: };lorawan_eu.c: 1063: };lorawan_eu.c: 1065: if (loRa.currentDataRat
      +                          e > loRa.maxDataRate)
 13619  00B88C  51DF               	movf	(_loRa+223)& (0+255),w,b
 13620  00B88E  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 13621  00B890  A0D8               	btfss	status,0,c
 13622                           
 13623                           ; BSR set to: 2
 13624                           ;lorawan_eu.c: 1066: {;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 13625  00B892  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 13626                           
 13627                           ; BSR set to: 2
 13628                           ;lorawan_eu.c: 1068: };lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 13629  00B896  51EB               	movf	(_loRa+235)& (0+255),w,b
 13630  00B898  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 13631  00B89A  B0D8               	btfsc	status,0,c
 13632  00B89C  0012               	return	
 13633                           
 13634                           ; BSR set to: 2
 13635                           ;lorawan_eu.c: 1071: {;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 13636  00B89E  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 13637                           
 13638                           ; BSR set to: 2
 13639  00B8A2  0012               	return		;funcret
 13640  00B8A4                     __end_of_UpdateChannelIdStatus:
 13641                           	opt callstack 0
 13642                           
 13643 ;; *************** function _ExecuteDutyCycle *****************
 13644 ;; Defined at:
 13645 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13646 ;; Parameters:    Size  Location     Type
 13647 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 13648 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13649 ;; Auto vars:     Size  Location     Type
 13650 ;;  maxDCycle       1    5[COMRAM] unsigned char 
 13651 ;; Return value:  Size  Location     Type
 13652 ;;                  2    0[COMRAM] PTR unsigned char 
 13653 ;; Registers used:
 13654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13655 ;; Tracked objects:
 13656 ;;		On entry : 0/0
 13657 ;;		On exit  : 0/0
 13658 ;;		Unchanged: 0/0
 13659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13661 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13662 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13663 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13664 ;;Total ram usage:        6 bytes
 13665 ;; Hardware stack levels used:    1
 13666 ;; This function calls:
 13667 ;;		Nothing
 13668 ;; This function is called by:
 13669 ;;		_MacExecuteCommands
 13670 ;; This function uses a non-reentrant model
 13671 ;;
 13672                           
 13673                           	psect	text87
 13674  009610                     __ptext87:
 13675                           	opt callstack 0
 13676  009610                     _ExecuteDutyCycle:
 13677                           	opt callstack 25
 13678                           
 13679                           ;lorawan_eu.c: 596: uint8_t maxDCycle;;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 13680                           
 13681                           ; BSR set to: 2
 13682                           ;incstack = 0
 13683  009610  C001  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 13684  009614  C002  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 13685  009618  50DF               	movf	indf2,w,c
 13686  00961A  6E06               	movwf	ExecuteDutyCycle@maxDCycle,c
 13687  00961C  4A01               	infsnz	ExecuteDutyCycle@ptr,f,c
 13688  00961E  2A02               	incf	ExecuteDutyCycle@ptr+1,f,c
 13689                           
 13690                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 13691  009620  0E0F               	movlw	15
 13692  009622  6006               	cpfslt	ExecuteDutyCycle@maxDCycle,c
 13693  009624  D013               	goto	l1104
 13694                           
 13695                           ;lorawan_eu.c: 600: {;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 13696  009626  C006  F003         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 13697  00962A  0E01               	movlw	1
 13698  00962C  6E04               	movwf	(??_ExecuteDutyCycle+1)& (0+255),c
 13699  00962E  0E00               	movlw	0
 13700  009630  6E05               	movwf	(??_ExecuteDutyCycle+2)& (0+255),c
 13701  009632  2A03               	incf	??_ExecuteDutyCycle,f,c
 13702  009634  D003               	goto	u9004
 13703  009636                     u9005:
 13704  009636  90D8               	bcf	status,0,c
 13705  009638  3604               	rlcf	??_ExecuteDutyCycle+1,f,c
 13706  00963A  3605               	rlcf	??_ExecuteDutyCycle+2,f,c
 13707  00963C                     u9004:
 13708  00963C  2E03               	decfsz	??_ExecuteDutyCycle,f,c
 13709  00963E  D7FB               	goto	u9005
 13710  009640  C004  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 13711  009644  C005  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 13712                           
 13713                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 13714  009648  0102               	movlb	2	; () banked
 13715  00964A  8D03               	bsf	(_loRa+3)& (0+255),6,b
 13716  00964C                     l1104:
 13717                           
 13718                           ;lorawan_eu.c: 603: };lorawan_eu.c: 605: if (maxDCycle == 255)
 13719  00964C  2806               	incf	ExecuteDutyCycle@maxDCycle,w,c
 13720  00964E  A4D8               	btfss	status,2,c
 13721  009650  D002               	goto	l9728
 13722                           
 13723                           ;lorawan_eu.c: 606: {;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 13724  009652  0102               	movlb	2	; () banked
 13725  009654  8F02               	bsf	(_loRa+2)& (0+255),7,b
 13726  009656                     l9728:
 13727                           
 13728                           ;lorawan_eu.c: 608: };lorawan_eu.c: 610: return ptr;
 13729  009656  C001  F001         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 13730  00965A  C002  F002         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 13731  00965E  0012               	return		;funcret
 13732  009660                     __end_of_ExecuteDutyCycle:
 13733                           	opt callstack 0
 13734                           
 13735 ;; *************** function _ExecuteDevStatus *****************
 13736 ;; Defined at:
 13737 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13738 ;; Parameters:    Size  Location     Type
 13739 ;;  ptr             2    0[COMRAM] PTR unsigned char 
 13740 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13741 ;; Auto vars:     Size  Location     Type
 13742 ;;		None
 13743 ;; Return value:  Size  Location     Type
 13744 ;;                  2    0[COMRAM] PTR unsigned char 
 13745 ;; Registers used:
 13746 ;;		wreg, status,2, status,0
 13747 ;; Tracked objects:
 13748 ;;		On entry : 0/0
 13749 ;;		On exit  : 0/0
 13750 ;;		Unchanged: 0/0
 13751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13756 ;;Total ram usage:        2 bytes
 13757 ;; Hardware stack levels used:    1
 13758 ;; This function calls:
 13759 ;;		Nothing
 13760 ;; This function is called by:
 13761 ;;		_MacExecuteCommands
 13762 ;; This function uses a non-reentrant model
 13763 ;;
 13764                           
 13765                           	psect	text88
 13766  008A4A                     __ptext88:
 13767                           	opt callstack 0
 13768  008A4A                     _ExecuteDevStatus:
 13769                           	opt callstack 25
 13770                           
 13771                           ;lorawan_eu.c: 674: return ptr;
 13772                           
 13773                           ;incstack = 0
 13774  008A4A  C001  F001         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 13775  008A4E  C002  F002         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 13776  008A52  0012               	return		;funcret
 13777  008A54                     __end_of_ExecuteDevStatus:
 13778                           	opt callstack 0
 13779                           
 13780 ;; *************** function _LORAWAN_Send *****************
 13781 ;; Defined at:
 13782 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13783 ;; Parameters:    Size  Location     Type
 13784 ;;  confirmed       1    wreg     enum E6086
 13785 ;;  port            1  123[BANK0 ] unsigned char 
 13786 ;;  buffer          2  124[BANK0 ] PTR void 
 13787 ;;		 -> NULL(0), 
 13788 ;;  bufferLength    1  126[BANK0 ] unsigned char 
 13789 ;; Auto vars:     Size  Location     Type
 13790 ;;  confirmed       1  129[BANK0 ] enum E6086
 13791 ;;  result          1  128[BANK0 ] enum E6059
 13792 ;; Return value:  Size  Location     Type
 13793 ;;                  1    wreg      enum E6059
 13794 ;; Registers used:
 13795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13796 ;; Tracked objects:
 13797 ;;		On entry : 0/0
 13798 ;;		On exit  : 0/0
 13799 ;;		Unchanged: 0/0
 13800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13801 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13803 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13804 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13805 ;;Total ram usage:        7 bytes
 13806 ;; Hardware stack levels used:    1
 13807 ;; Hardware stack levels required when called:    6
 13808 ;; This function calls:
 13809 ;;		_AssemblePacket
 13810 ;;		_LORAWAN_GetMaxPayloadSize
 13811 ;;		_RADIO_ReceiveStop
 13812 ;;		_RADIO_Transmit
 13813 ;;		_SelectChannelForTransmission
 13814 ;; This function is called by:
 13815 ;;		_AutomaticReplyCallback
 13816 ;;		_LORAWAN_RxDone
 13817 ;; This function uses a non-reentrant model
 13818 ;;
 13819                           
 13820                           	psect	text89
 13821  00AD64                     __ptext89:
 13822                           	opt callstack 0
 13823  00AD64                     _LORAWAN_Send:
 13824                           	opt callstack 21
 13825                           
 13826                           ;incstack = 0
 13827                           ;LORAWAN_Send@confirmed stored from wreg
 13828  00AD64  0100               	movlb	0	; () banked
 13829  00AD66  6FE1               	movwf	LORAWAN_Send@confirmed& (0+255),b
 13830                           
 13831                           ;lorawan.c: 187: LorawanError_t result;;lorawan.c: 189: if (loRa.macStatus.macPause == 1
      +                          )
 13832  00AD68  0102               	movlb	2	; () banked
 13833  00AD6A  B103               	btfsc	(_loRa+3)& (0+255),0,b
 13834  00AD6C  0012               	return	
 13835                           
 13836                           ; BSR set to: 2
 13837                           ;lorawan.c: 192: };lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 13838  00AD6E  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 13839  00AD70  0012               	return	
 13840                           
 13841                           ; BSR set to: 2
 13842                           ;lorawan.c: 197: };lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 13843  00AD72  A902               	btfss	(_loRa+2)& (0+255),4,b
 13844  00AD74  0012               	return	
 13845                           
 13846                           ; BSR set to: 2
 13847                           ;lorawan.c: 202: };lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 13848  00AD76  0100               	movlb	0	; () banked
 13849  00AD78  51DB               	movf	LORAWAN_Send@port& (0+255),w,b
 13850  00AD7A  A4D8               	btfss	status,2,c
 13851  00AD7C  D003               	goto	l13934
 13852                           
 13853                           ; BSR set to: 0
 13854  00AD7E  51DE               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 13855  00AD80  A4D8               	btfss	status,2,c
 13856  00AD82  0012               	return	
 13857  00AD84                     l13934:
 13858                           
 13859                           ; BSR set to: 0
 13860                           ;lorawan.c: 207: };lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 13861  00AD84  EC47  F04A         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 13862  00AD88  0100               	movlb	0	; () banked
 13863  00AD8A  6FDF               	movwf	??_LORAWAN_Send& (0+255),b
 13864  00AD8C  51DE               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 13865  00AD8E  5DDF               	subwf	??_LORAWAN_Send& (0+255),w,b
 13866  00AD90  A0D8               	btfss	status,0,c
 13867  00AD92  0012               	return	
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;lorawan.c: 213: };lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 13871  00AD94  0102               	movlb	2	; () banked
 13872  00AD96  2906               	incf	(_loRa+6)& (0+255),w,b
 13873  00AD98  E109               	bnz	l13942
 13874  00AD9A  2907               	incf	(_loRa+7)& (0+255),w,b
 13875  00AD9C  E107               	bnz	l13942
 13876  00AD9E  2908               	incf	(_loRa+8)& (0+255),w,b
 13877  00ADA0  E105               	bnz	l13942
 13878  00ADA2  2909               	incf	(_loRa+9)& (0+255),w,b
 13879  00ADA4  A4D8               	btfss	status,2,c
 13880  00ADA6  D002               	goto	l13942
 13881                           
 13882                           ; BSR set to: 2
 13883                           ;lorawan.c: 216: {;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 13884  00ADA8  8304               	bsf	(_loRa+4)& (0+255),1,b
 13885                           
 13886                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;;	Return value of _LORAWAN_Sen
      +                          d is never used
 13887  00ADAA  0012               	return	
 13888  00ADAC                     l13942:
 13889                           
 13890                           ; BSR set to: 2
 13891                           ;lorawan.c: 220: };lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == 
      +                          loRa.deviceClass))
 13892  00ADAC  5102               	movf	(_loRa+2)& (0+255),w,b
 13893  00ADAE  0B0F               	andlw	15
 13894  00ADB0  0900               	iorlw	0
 13895  00ADB2  B4D8               	btfsc	status,2,c
 13896  00ADB4  D003               	goto	l13948
 13897                           
 13898                           ; BSR set to: 2
 13899  00ADB6  5112               	movf	(_loRa+18)& (0+255),w,b
 13900  00ADB8  B4D8               	btfsc	status,2,c
 13901  00ADBA  0012               	return	
 13902  00ADBC                     l13948:
 13903                           
 13904                           ; BSR set to: 2
 13905                           ;lorawan.c: 225: };lorawan.c: 227: result = SelectChannelForTransmission (1);
 13906  00ADBC  0E01               	movlw	1
 13907  00ADBE  ECE4  F04C         	call	_SelectChannelForTransmission
 13908  00ADC2  0100               	movlb	0	; () banked
 13909  00ADC4  6FE0               	movwf	LORAWAN_Send@result& (0+255),b
 13910                           
 13911                           ; BSR set to: 0
 13912                           ;lorawan.c: 228: if (result != OK)
 13913  00ADC6  51E0               	movf	LORAWAN_Send@result& (0+255),w,b
 13914  00ADC8  A4D8               	btfss	status,2,c
 13915  00ADCA  0012               	return	
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;lorawan.c: 232: else;lorawan.c: 233: {;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 13919  00ADCC  0E02               	movlw	2
 13920  00ADCE  0102               	movlb	2	; () banked
 13921  00ADD0  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13922  00ADD2  B4D8               	btfsc	status,2,c
 13923                           
 13924                           ; BSR set to: 2
 13925                           ;lorawan.c: 235: {;lorawan.c: 236: RADIO_ReceiveStop();
 13926  00ADD4  EC80  F046         	call	_RADIO_ReceiveStop	;wreg free
 13927                           
 13928                           ;lorawan.c: 237: };lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength
      +                          );
 13929  00ADD8  C0DB  F05B         	movff	LORAWAN_Send@port,AssemblePacket@port
 13930  00ADDC  C0DC  F05C         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 13931  00ADE0  C0DD  F05D         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 13932  00ADE4  C0DE  F05E         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 13933  00ADE8  6A5F               	clrf	AssemblePacket@bufferLength+1,c
 13934  00ADEA  0100               	movlb	0	; () banked
 13935  00ADEC  51E1               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 13936  00ADEE  EC44  F072         	call	_AssemblePacket
 13937                           
 13938                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 13939  00ADF2  0EB0               	movlw	low (_macBuffer+16)
 13940  00ADF4  6E4A               	movwf	RADIO_Transmit@buffer,c
 13941  00ADF6  0E04               	movlw	high (_macBuffer+16)
 13942  00ADF8  6E4B               	movwf	RADIO_Transmit@buffer+1,c
 13943  00ADFA  C2D4  F04C         	movff	_loRa+212,RADIO_Transmit@bufferLen
 13944  00ADFE  ECF7  F065         	call	_RADIO_Transmit	;wreg free
 13945  00AE02  504A               	movf	?_RADIO_Transmit,w,c
 13946  00AE04  104B               	iorwf	?_RADIO_Transmit+1,w,c
 13947  00AE06  A4D8               	btfss	status,2,c
 13948  00AE08  0012               	return	
 13949                           
 13950                           ;lorawan.c: 242: {;lorawan.c: 243: loRa.fCntUp.value ++;
 13951  00AE0A  0E01               	movlw	1
 13952  00AE0C  0102               	movlb	2	; () banked
 13953  00AE0E  2706               	addwf	(_loRa+6)& (0+255),f,b
 13954  00AE10  0E00               	movlw	0
 13955  00AE12  2307               	addwfc	(_loRa+7)& (0+255),f,b
 13956  00AE14  2308               	addwfc	(_loRa+8)& (0+255),f,b
 13957  00AE16  2309               	addwfc	(_loRa+9)& (0+255),f,b
 13958                           
 13959                           ;lorawan.c: 245: if (CNF == confirmed)
 13960  00AE18  0100               	movlb	0	; () banked
 13961  00AE1A  05E1               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 13962  00AE1C  A4D8               	btfss	status,2,c
 13963  00AE1E  D002               	goto	l1534
 13964                           
 13965                           ; BSR set to: 0
 13966                           ;lorawan.c: 246: {;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMess
      +                          age = 1;
 13967  00AE20  0102               	movlb	2	; () banked
 13968  00AE22  8100               	bsf	_loRa& (0+255),0,b
 13969  00AE24                     l1534:
 13970                           
 13971                           ;lorawan.c: 248: };lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 13972  00AE24  0102               	movlb	2	; () banked
 13973  00AE26  8B00               	bsf	_loRa& (0+255),5,b
 13974                           
 13975                           ; BSR set to: 2
 13976                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 13977  00AE28  5102               	movf	(_loRa+2)& (0+255),w,b
 13978  00AE2A  0BF0               	andlw	-16
 13979  00AE2C  0901               	iorlw	1
 13980  00AE2E  6F02               	movwf	(_loRa+2)& (0+255),b
 13981                           
 13982                           ;lorawan.c: 251: }
 13983  00AE30  0012               	return		;funcret
 13984  00AE32                     __end_of_LORAWAN_Send:
 13985                           	opt callstack 0
 13986                           
 13987 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 13988 ;; Defined at:
 13989 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13990 ;; Parameters:    Size  Location     Type
 13991 ;;		None
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;  result          1   10[COMRAM] unsigned char 
 13994 ;;  macCommandsL    1    9[COMRAM] unsigned char 
 13995 ;; Return value:  Size  Location     Type
 13996 ;;                  1    wreg      unsigned char 
 13997 ;; Registers used:
 13998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13999 ;; Tracked objects:
 14000 ;;		On entry : 0/0
 14001 ;;		On exit  : 0/0
 14002 ;;		Unchanged: 0/0
 14003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14005 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14007 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14008 ;;Total ram usage:        3 bytes
 14009 ;; Hardware stack levels used:    1
 14010 ;; Hardware stack levels required when called:    1
 14011 ;; This function calls:
 14012 ;;		_CountfOptsLength
 14013 ;; This function is called by:
 14014 ;;		_LORAWAN_Send
 14015 ;;		_AckRetransmissionCallback
 14016 ;; This function uses a non-reentrant model
 14017 ;;
 14018                           
 14019                           	psect	text90
 14020  00948E                     __ptext90:
 14021                           	opt callstack 0
 14022  00948E                     _LORAWAN_GetMaxPayloadSize:
 14023                           	opt callstack 25
 14024                           
 14025                           ;lorawan.c: 1559: uint8_t macCommandsLength;;lorawan.c: 1561: macCommandsLength = Countf
      +                          OptsLength();
 14026                           
 14027                           ;incstack = 0
 14028  00948E  EC22  F055         	call	_CountfOptsLength	;wreg free
 14029  009492  6E0A               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength,c
 14030                           
 14031                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 14032  009494  0102               	movlb	2	; () banked
 14033  009496  51A7               	movf	(_loRa+167)& (0+255),w,b
 14034  009498  A4D8               	btfss	status,2,c
 14035  00949A  D00D               	goto	l9890
 14036                           
 14037                           ; BSR set to: 2
 14038                           ;lorawan.c: 1564: {;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 14039  00949C  0E77               	movlw	low _maxPayloadSize
 14040  00949E  25DF               	addwf	(_loRa+223)& (0+255),w,b
 14041  0094A0  6EF6               	movwf	tblptrl,c
 14042  0094A2  6AF7               	clrf	tblptrh,c
 14043  0094A4  0EFF               	movlw	high _maxPayloadSize
 14044  0094A6  22F7               	addwfc	tblptrh,f,c
 14045  0094A8                     	if	1	;There are 3 active tblptr bytes
 14046  0094A8  6AF8               	clrf	tblptru,c
 14047  0094AA  0E00               	movlw	low (__mediumconst shr (0+16))
 14048  0094AC  22F8               	addwfc	tblptru,f,c
 14049  0094AE                     	endif
 14050  0094AE  0008               	tblrd		*
 14051  0094B0  CFF5 F00B          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 14052                           
 14053                           ;lorawan.c: 1566: }
 14054  0094B4  D00F               	goto	l9892
 14055  0094B6                     l9890:
 14056                           
 14057                           ; BSR set to: 2
 14058                           ;lorawan.c: 1567: else;lorawan.c: 1568: {;lorawan.c: 1569: result = maxPayloadSize[loRa.
      +                          currentDataRate] - macCommandsLength ;
 14059  0094B6  0E77               	movlw	low _maxPayloadSize
 14060  0094B8  25DF               	addwf	(_loRa+223)& (0+255),w,b
 14061  0094BA  6EF6               	movwf	tblptrl,c
 14062  0094BC  6AF7               	clrf	tblptrh,c
 14063  0094BE  0EFF               	movlw	high _maxPayloadSize
 14064  0094C0  22F7               	addwfc	tblptrh,f,c
 14065  0094C2                     	if	1	;There are 3 active tblptr bytes
 14066  0094C2  6AF8               	clrf	tblptru,c
 14067  0094C4  0E00               	movlw	low (__mediumconst shr (0+16))
 14068  0094C6  22F8               	addwfc	tblptru,f,c
 14069  0094C8                     	endif
 14070  0094C8  0008               	tblrd		*
 14071  0094CA  CFF5 F009          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 14072  0094CE  500A               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength,w,c
 14073  0094D0  5C09               	subwf	??_LORAWAN_GetMaxPayloadSize,w,c
 14074  0094D2  6E0B               	movwf	LORAWAN_GetMaxPayloadSize@result,c
 14075  0094D4                     l9892:
 14076                           
 14077                           ; BSR set to: 2
 14078                           ;lorawan.c: 1570: };lorawan.c: 1572: return result;
 14079  0094D4  500B               	movf	LORAWAN_GetMaxPayloadSize@result,w,c
 14080                           
 14081                           ; BSR set to: 2
 14082  0094D6  0012               	return		;funcret
 14083  0094D8                     __end_of_LORAWAN_GetMaxPayloadSize:
 14084                           	opt callstack 0
 14085                           
 14086 ;; *************** function _AssemblePacket *****************
 14087 ;; Defined at:
 14088 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;  confirmed       1    wreg     unsigned char 
 14091 ;;  port            1   90[COMRAM] unsigned char 
 14092 ;;  buffer          2   91[COMRAM] PTR unsigned char 
 14093 ;;		 -> NULL(0), 
 14094 ;;  bufferLength    2   93[COMRAM] unsigned int 
 14095 ;; Auto vars:     Size  Location     Type
 14096 ;;  confirmed       1  118[BANK0 ] unsigned char 
 14097 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 14098 ;;  macCmdIdx       1  121[BANK0 ] unsigned char 
 14099 ;;  fCtrl           1  120[BANK0 ] struct .
 14100 ;;  mhdr            1  119[BANK0 ] struct .
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  1    wreg      void 
 14103 ;; Registers used:
 14104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14110 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14111 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14113 ;;      Totals:         5       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14114 ;;Total ram usage:       12 bytes
 14115 ;; Hardware stack levels used:    1
 14116 ;; Hardware stack levels required when called:    5
 14117 ;; This function calls:
 14118 ;;		_AESCmac
 14119 ;;		_AssembleEncryptionBlock
 14120 ;;		_CountfOptsLength
 14121 ;;		_EncryptFRMPayload
 14122 ;;		_FindSmallestDataRate
 14123 ;;		_IncludeMacCommandsResponse
 14124 ;;		_memcpy
 14125 ;;		_memset
 14126 ;; This function is called by:
 14127 ;;		_LORAWAN_Send
 14128 ;; This function uses a non-reentrant model
 14129 ;;
 14130                           
 14131                           	psect	text91
 14132  00E488                     __ptext91:
 14133                           	opt callstack 0
 14134  00E488                     _AssemblePacket:
 14135                           	opt callstack 21
 14136                           
 14137                           ; BSR set to: 2
 14138                           ;incstack = 0
 14139                           ;AssemblePacket@confirmed stored from wreg
 14140  00E488  0100               	movlb	0	; () banked
 14141  00E48A  6FD6               	movwf	AssemblePacket@confirmed& (0+255),b
 14142                           
 14143                           ;lorawan.c: 1674: Mhdr_t mhdr;;lorawan.c: 1675: uint8_t bufferIndex = 16;
 14144  00E48C  0E10               	movlw	16
 14145  00E48E  0100               	movlb	0	; () banked
 14146  00E490  6FDA               	movwf	AssemblePacket@bufferIndex& (0+255),b
 14147                           
 14148                           ;lorawan.c: 1676: FCtrl_t fCtrl;;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 14149  00E492  0E00               	movlw	0
 14150  00E494  6FD9               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 14151                           
 14152                           ; BSR set to: 0
 14153                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 14154  00E496  0ED7               	movlw	low AssemblePacket@mhdr
 14155  00E498  6E01               	movwf	memset@p1,c
 14156  00E49A  0E00               	movlw	high AssemblePacket@mhdr
 14157  00E49C  6E02               	movwf	memset@p1+1,c
 14158  00E49E  0E00               	movlw	0
 14159  00E4A0  6E04               	movwf	memset@c+1,c
 14160  00E4A2  0E00               	movlw	0
 14161  00E4A4  6E03               	movwf	memset@c,c
 14162  00E4A6  0E00               	movlw	0
 14163  00E4A8  6E06               	movwf	memset@n+1,c
 14164  00E4AA  0E01               	movlw	1
 14165  00E4AC  6E05               	movwf	memset@n,c
 14166  00E4AE  EC7A  F047         	call	_memset	;wreg free
 14167                           
 14168                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 14169  00E4B2  0EA0               	movlw	low _macBuffer
 14170  00E4B4  6E01               	movwf	memset@p1,c
 14171  00E4B6  0E04               	movlw	high _macBuffer
 14172  00E4B8  6E02               	movwf	memset@p1+1,c
 14173  00E4BA  0E00               	movlw	0
 14174  00E4BC  6E04               	movwf	memset@c+1,c
 14175  00E4BE  0E00               	movlw	0
 14176  00E4C0  6E03               	movwf	memset@c,c
 14177  00E4C2  0E01               	movlw	1
 14178  00E4C4  6E06               	movwf	memset@n+1,c
 14179  00E4C6  0E0F               	movlw	15
 14180  00E4C8  6E05               	movwf	memset@n,c
 14181  00E4CA  EC7A  F047         	call	_memset	;wreg free
 14182                           
 14183                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 14184  00E4CE  0E4E               	movlw	low _aesBuffer
 14185  00E4D0  6E01               	movwf	memset@p1,c
 14186  00E4D2  0E01               	movlw	high _aesBuffer
 14187  00E4D4  6E02               	movwf	memset@p1+1,c
 14188  00E4D6  0E00               	movlw	0
 14189  00E4D8  6E04               	movwf	memset@c+1,c
 14190  00E4DA  0E00               	movlw	0
 14191  00E4DC  6E03               	movwf	memset@c,c
 14192  00E4DE  0E00               	movlw	0
 14193  00E4E0  6E06               	movwf	memset@n+1,c
 14194  00E4E2  0E10               	movlw	16
 14195  00E4E4  6E05               	movwf	memset@n,c
 14196  00E4E6  EC7A  F047         	call	_memset	;wreg free
 14197                           
 14198                           ;lorawan.c: 1683: if (confirmed == 1)
 14199  00E4EA  0100               	movlb	0	; () banked
 14200  00E4EC  05D6               	decf	AssemblePacket@confirmed& (0+255),w,b
 14201  00E4EE  A4D8               	btfss	status,2,c
 14202  00E4F0  D007               	goto	l13694
 14203                           
 14204                           ; BSR set to: 0
 14205                           ;lorawan.c: 1684: {;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 14206  00E4F2  51D7               	movf	AssemblePacket@mhdr& (0+255),w,b
 14207  00E4F4  0B1F               	andlw	-225
 14208  00E4F6  0980               	iorlw	128
 14209  00E4F8  6FD7               	movwf	AssemblePacket@mhdr& (0+255),b
 14210                           
 14211                           ; BSR set to: 0
 14212                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 14213  00E4FA  0102               	movlb	2	; () banked
 14214  00E4FC  8100               	bsf	_loRa& (0+255),0,b
 14215                           
 14216                           ;lorawan.c: 1687: }
 14217  00E4FE  D004               	goto	l2019
 14218  00E500                     l13694:
 14219                           
 14220                           ; BSR set to: 0
 14221                           ;lorawan.c: 1688: else;lorawan.c: 1689: {;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_
      +                          DATA_UNCONFIRMED_UP;
 14222  00E500  51D7               	movf	AssemblePacket@mhdr& (0+255),w,b
 14223  00E502  0B1F               	andlw	-225
 14224  00E504  0940               	iorlw	64
 14225  00E506  6FD7               	movwf	AssemblePacket@mhdr& (0+255),b
 14226  00E508                     l2019:
 14227                           
 14228                           ;lorawan.c: 1691: };lorawan.c: 1692: mhdr.bits.major = 0;
 14229  00E508  0EFC               	movlw	-4
 14230  00E50A  0100               	movlb	0	; () banked
 14231  00E50C  17D7               	andwf	AssemblePacket@mhdr& (0+255),f,b
 14232                           
 14233                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 14234  00E50E  0EE3               	movlw	-29
 14235  00E510  17D7               	andwf	AssemblePacket@mhdr& (0+255),f,b
 14236                           
 14237                           ; BSR set to: 0
 14238                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 14239  00E512  0EA0               	movlw	low _macBuffer
 14240  00E514  25DA               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 14241  00E516  6ED9               	movwf	fsr2l,c
 14242  00E518  6ADA               	clrf	fsr2h,c
 14243  00E51A  0E04               	movlw	high _macBuffer
 14244  00E51C  22DA               	addwfc	fsr2h,f,c
 14245  00E51E  C0D7  FFDF         	movff	AssemblePacket@mhdr,indf2
 14246                           
 14247                           ; BSR set to: 0
 14248  00E522  2BDA               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 14249                           
 14250                           ; BSR set to: 0
 14251                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 14252  00E524  0EA0               	movlw	low _macBuffer
 14253  00E526  25DA               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 14254  00E528  6E01               	movwf	memcpy@d1,c
 14255  00E52A  6A02               	clrf	memcpy@d1+1,c
 14256  00E52C  0E04               	movlw	high _macBuffer
 14257  00E52E  2202               	addwfc	memcpy@d1+1,f,c
 14258  00E530  0E1E               	movlw	low (_loRa+30)
 14259  00E532  6E03               	movwf	memcpy@s1,c
 14260  00E534  0E02               	movlw	high (_loRa+30)
 14261  00E536  6E04               	movwf	memcpy@s1+1,c
 14262  00E538  0E00               	movlw	0
 14263  00E53A  6E06               	movwf	memcpy@n+1,c
 14264  00E53C  0E04               	movlw	4
 14265  00E53E  6E05               	movwf	memcpy@n,c
 14266  00E540  EC56  F04C         	call	_memcpy	;wreg free
 14267                           
 14268                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 14269  00E544  0100               	movlb	0	; () banked
 14270  00E546  51DA               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 14271  00E548  0F04               	addlw	4
 14272  00E54A  6FDA               	movwf	AssemblePacket@bufferIndex& (0+255),b
 14273                           
 14274                           ; BSR set to: 0
 14275                           ;lorawan.c: 1699: fCtrl.value = 0;
 14276  00E54C  0E00               	movlw	0
 14277  00E54E  6FD8               	movwf	AssemblePacket@fCtrl& (0+255),b
 14278                           
 14279                           ; BSR set to: 0
 14280                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 14281  00E550  0102               	movlb	2	; () banked
 14282  00E552  AD02               	btfss	(_loRa+2)& (0+255),6,b
 14283  00E554  D046               	goto	l2023
 14284                           
 14285                           ; BSR set to: 2
 14286                           ;lorawan.c: 1702: {;lorawan.c: 1703: fCtrl.adr = 1;
 14287  00E556  0100               	movlb	0	; () banked
 14288  00E558  8FD8               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 14289                           
 14290                           ; BSR set to: 0
 14291                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 14292  00E55A  0102               	movlb	2	; () banked
 14293  00E55C  51DF               	movf	(_loRa+223)& (0+255),w,b
 14294  00E55E  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 14295  00E560  B0D8               	btfsc	status,0,c
 14296  00E562  D03D               	goto	L13
 14297                           
 14298                           ; BSR set to: 2
 14299                           ;lorawan.c: 1705: {;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 14300  00E564  0100               	movlb	0	; () banked
 14301  00E566  8DD8               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 14302                           
 14303                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 14304  00E568  0102               	movlb	2	; () banked
 14305  00E56A  8900               	bsf	_loRa& (0+255),4,b
 14306                           
 14307                           ; BSR set to: 2
 14308                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 14309  00E56C  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 14310  00E56E  2BD1               	incf	(_loRa+209)& (0+255),f,b
 14311                           
 14312                           ; BSR set to: 2
 14313                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 14314  00E570  51A2               	movf	(_loRa+162)& (0+255),w,b
 14315  00E572  0100               	movlb	0	; () banked
 14316  00E574  6FD4               	movwf	??_AssemblePacket& (0+255),b
 14317  00E576  6BD5               	clrf	(??_AssemblePacket+1)& (0+255),b
 14318  00E578  0102               	movlb	2	; () banked
 14319  00E57A  51D0               	movf	(_loRa+208)& (0+255),w,b
 14320  00E57C  0100               	movlb	0	; () banked
 14321  00E57E  19D4               	xorwf	??_AssemblePacket& (0+255),w,b
 14322  00E580  E10B               	bnz	l13724
 14323  00E582  0102               	movlb	2	; () banked
 14324  00E584  51D1               	movf	(_loRa+209)& (0+255),w,b
 14325  00E586  0100               	movlb	0	; () banked
 14326  00E588  19D5               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 14327  00E58A  A4D8               	btfss	status,2,c
 14328  00E58C  D005               	goto	l13724
 14329                           
 14330                           ; BSR set to: 0
 14331                           ;lorawan.c: 1711: {;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 14332  00E58E  0E00               	movlw	0
 14333  00E590  0102               	movlb	2	; () banked
 14334  00E592  6FEE               	movwf	(_loRa+238)& (0+255),b
 14335  00E594                     l13720:
 14336                           
 14337                           ; BSR set to: 2
 14338                           ;lorawan.c: 1713: fCtrl.adrAckReq = 0;
 14339  00E594  0100               	movlb	0	; () banked
 14340  00E596  D022               	goto	l2024
 14341  00E598                     l13724:
 14342                           
 14343                           ; BSR set to: 0
 14344                           ;lorawan.c: 1716: else;lorawan.c: 1717: {;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.pro
      +                          tocolParameters.adrAckLimit)
 14345  00E598  0102               	movlb	2	; () banked
 14346  00E59A  51A2               	movf	(_loRa+162)& (0+255),w,b
 14347  00E59C  0100               	movlb	0	; () banked
 14348  00E59E  6FD4               	movwf	??_AssemblePacket& (0+255),b
 14349  00E5A0  6BD5               	clrf	(??_AssemblePacket+1)& (0+255),b
 14350  00E5A2  0102               	movlb	2	; () banked
 14351  00E5A4  51D0               	movf	(_loRa+208)& (0+255),w,b
 14352  00E5A6  0100               	movlb	0	; () banked
 14353  00E5A8  5DD4               	subwf	??_AssemblePacket& (0+255),w,b
 14354  00E5AA  0102               	movlb	2	; () banked
 14355  00E5AC  51D1               	movf	(_loRa+209)& (0+255),w,b
 14356  00E5AE  0100               	movlb	0	; () banked
 14357  00E5B0  59D5               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 14358  00E5B2  B0D8               	btfsc	status,0,c
 14359  00E5B4  D013               	goto	l2024
 14360                           
 14361                           ; BSR set to: 0
 14362                           ;lorawan.c: 1719: {;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 14363  00E5B6  0102               	movlb	2	; () banked
 14364  00E5B8  2BEE               	incf	(_loRa+238)& (0+255),f,b
 14365                           
 14366                           ; BSR set to: 2
 14367                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 14368  00E5BA  51EE               	movf	(_loRa+238)& (0+255),w,b
 14369  00E5BC  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 14370  00E5BE  B0D8               	btfsc	status,0,c
 14371  00E5C0  D010               	goto	l2023
 14372                           
 14373                           ; BSR set to: 2
 14374                           ;lorawan.c: 1725: {;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 14375  00E5C2  0E00               	movlw	0
 14376  00E5C4  6FEE               	movwf	(_loRa+238)& (0+255),b
 14377                           
 14378                           ; BSR set to: 2
 14379                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 14380  00E5C6  ECB8  F053         	call	_FindSmallestDataRate	;wreg free
 14381  00E5CA  0900               	iorlw	0
 14382  00E5CC  A4D8               	btfss	status,2,c
 14383  00E5CE  D009               	goto	l2023
 14384                           
 14385                           ;lorawan.c: 1729: {;lorawan.c: 1731: loRa.adrAckCnt = 0;
 14386  00E5D0  0E00               	movlw	0
 14387  00E5D2  0102               	movlb	2	; () banked
 14388  00E5D4  6FD1               	movwf	(_loRa+209)& (0+255),b
 14389  00E5D6  0E00               	movlw	0
 14390  00E5D8  6FD0               	movwf	(_loRa+208)& (0+255),b
 14391  00E5DA  D7DC               	goto	l13720
 14392  00E5DC                     l2024:
 14393                           
 14394                           ; BSR set to: 0
 14395                           ;lorawan.c: 1737: else;lorawan.c: 1738: {;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 14396  00E5DC  9DD8               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 14397  00E5DE                     L13:
 14398                           
 14399                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 14400  00E5DE  0102               	movlb	2	; () banked
 14401  00E5E0  9900               	bcf	_loRa& (0+255),4,b
 14402  00E5E2                     l2023:
 14403                           
 14404                           ;lorawan.c: 1747: };lorawan.c: 1748: };lorawan.c: 1750: if (loRa.lorawanMacStatus.ackReq
      +                          uiredFromNextUplinkMessage == 1)
 14405                           
 14406                           ;lorawan.c: 1741: };lorawan.c: 1742: };lorawan.c: 1743: }
 14407  00E5E2  0102               	movlb	2	; () banked
 14408  00E5E4  A300               	btfss	_loRa& (0+255),1,b
 14409  00E5E6  D004               	goto	l2029
 14410                           
 14411                           ; BSR set to: 2
 14412                           ;lorawan.c: 1751: {;lorawan.c: 1752: fCtrl.ack = 1;
 14413  00E5E8  0100               	movlb	0	; () banked
 14414  00E5EA  8BD8               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 14415                           
 14416                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 14417  00E5EC  0102               	movlb	2	; () banked
 14418  00E5EE  9300               	bcf	_loRa& (0+255),1,b
 14419  00E5F0                     l2029:
 14420                           
 14421                           ; BSR set to: 2
 14422                           ;lorawan.c: 1754: };lorawan.c: 1756: fCtrl.fPending = 0;
 14423  00E5F0  0100               	movlb	0	; () banked
 14424  00E5F2  99D8               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 14425                           
 14426                           ; BSR set to: 0
 14427                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 14428  00E5F4  0102               	movlb	2	; () banked
 14429  00E5F6  51A7               	movf	(_loRa+167)& (0+255),w,b
 14430  00E5F8  B4D8               	btfsc	status,2,c
 14431  00E5FA  D004               	goto	u14940
 14432                           
 14433                           ; BSR set to: 2
 14434  00E5FC  505E               	movf	AssemblePacket@bufferLength,w,c
 14435  00E5FE  105F               	iorwf	AssemblePacket@bufferLength+1,w,c
 14436  00E600  A4D8               	btfss	status,2,c
 14437  00E602  D004               	goto	l13748
 14438  00E604                     u14940:
 14439                           
 14440                           ; BSR set to: 2
 14441                           ;lorawan.c: 1759: {;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 14442  00E604  0EF0               	movlw	-16
 14443  00E606  0100               	movlb	0	; () banked
 14444  00E608  17D8               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 14445                           
 14446                           ;lorawan.c: 1761: }
 14447  00E60A  D009               	goto	l13750
 14448  00E60C                     l13748:
 14449                           
 14450                           ; BSR set to: 2
 14451                           ;lorawan.c: 1763: else;lorawan.c: 1764: {;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLe
      +                          ngth();
 14452  00E60C  EC22  F055         	call	_CountfOptsLength	;wreg free
 14453  00E610  0100               	movlb	0	; () banked
 14454  00E612  6FD4               	movwf	??_AssemblePacket& (0+255),b
 14455  00E614  51D8               	movf	AssemblePacket@fCtrl& (0+255),w,b
 14456  00E616  19D4               	xorwf	??_AssemblePacket& (0+255),w,b
 14457  00E618  0BF0               	andlw	-16
 14458  00E61A  19D4               	xorwf	??_AssemblePacket& (0+255),w,b
 14459  00E61C  6FD8               	movwf	AssemblePacket@fCtrl& (0+255),b
 14460  00E61E                     l13750:
 14461                           
 14462                           ; BSR set to: 0
 14463                           ;lorawan.c: 1766: };lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 14464  00E61E  0EA0               	movlw	low _macBuffer
 14465  00E620  25DA               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 14466  00E622  6ED9               	movwf	fsr2l,c
 14467  00E624  6ADA               	clrf	fsr2h,c
 14468  00E626  0E04               	movlw	high _macBuffer
 14469  00E628  22DA               	addwfc	fsr2h,f,c
 14470  00E62A  C0D8  FFDF         	movff	AssemblePacket@fCtrl,indf2
 14471                           
 14472                           ; BSR set to: 0
 14473  00E62E  2BDA               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 14474                           
 14475                           ; BSR set to: 0
 14476                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 14477  00E630  0EA0               	movlw	low _macBuffer
 14478  00E632  25DA               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 14479  00E634  6E01               	movwf	memcpy@d1,c
 14480  00E636  6A02               	clrf	memcpy@d1+1,c
 14481  00E638  0E04               	movlw	high _macBuffer
 14482  00E63A  2202               	addwfc	memcpy@d1+1,f,c
 14483  00E63C  0E06               	movlw	low (_loRa+6)
 14484  00E63E  6E03               	movwf	memcpy@s1,c
 14485  00E640  0E02               	movlw	high (_loRa+6)
 14486  00E642  6E04               	movwf	memcpy@s1+1,c
 14487  00E644  0E00               	movlw	0
 14488  00E646  6E06               	movwf	memcpy@n+1,c
 14489  00E648  0E02               	movlw	2
 14490  00E64A  6E05               	movwf	memcpy@n,c
 14491  00E64C  EC56  F04C         	call	_memcpy	;wreg free
 14492                           
 14493                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 14494  00E650  0100               	movlb	0	; () banked
 14495  00E652  51DA               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 14496  00E654  0F02               	addlw	2
 14497  00E656  6FDA               	movwf	AssemblePacket@bufferIndex& (0+255),b
 14498                           
 14499                           ; BSR set to: 0
 14500                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 14501  00E658  0102               	movlb	2	; () banked
 14502  00E65A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14503  00E65C  B4D8               	btfsc	status,2,c
 14504  00E65E  D010               	goto	l13764
 14505                           
 14506                           ; BSR set to: 2
 14507  00E660  505E               	movf	AssemblePacket@bufferLength,w,c
 14508  00E662  105F               	iorwf	AssemblePacket@bufferLength+1,w,c
 14509  00E664  B4D8               	btfsc	status,2,c
 14510  00E666  D00C               	goto	l13764
 14511                           
 14512                           ; BSR set to: 2
 14513                           ;lorawan.c: 1774: {;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex
      +                          , 1);
 14514  00E668  0EA0               	movlw	low _macBuffer
 14515  00E66A  6E01               	movwf	IncludeMacCommandsResponse@macBuffer,c
 14516  00E66C  0E04               	movlw	high _macBuffer
 14517  00E66E  6E02               	movwf	IncludeMacCommandsResponse@macBuffer+1,c
 14518  00E670  0EDA               	movlw	low AssemblePacket@bufferIndex
 14519  00E672  6E03               	movwf	IncludeMacCommandsResponse@pBufferIndex,c
 14520  00E674  0E00               	movlw	high AssemblePacket@bufferIndex
 14521  00E676  6E04               	movwf	IncludeMacCommandsResponse@pBufferIndex+1,c
 14522  00E678  0E01               	movlw	1
 14523  00E67A  6E05               	movwf	IncludeMacCommandsResponse@bIncludeInFopts,c
 14524  00E67C  EC46  F06F         	call	_IncludeMacCommandsResponse	;wreg free
 14525  00E680                     l13764:
 14526                           
 14527                           ;lorawan.c: 1776: };lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 14528  00E680  0EA0               	movlw	low _macBuffer
 14529  00E682  0100               	movlb	0	; () banked
 14530  00E684  25DA               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 14531  00E686  6ED9               	movwf	fsr2l,c
 14532  00E688  6ADA               	clrf	fsr2h,c
 14533  00E68A  0E04               	movlw	high _macBuffer
 14534  00E68C  22DA               	addwfc	fsr2h,f,c
 14535  00E68E  C05B  FFDF         	movff	AssemblePacket@port,indf2
 14536                           
 14537                           ; BSR set to: 0
 14538  00E692  2BDA               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 14539                           
 14540                           ; BSR set to: 0
 14541                           ;lorawan.c: 1780: if (bufferLength != 0)
 14542  00E694  505E               	movf	AssemblePacket@bufferLength,w,c
 14543  00E696  105F               	iorwf	AssemblePacket@bufferLength+1,w,c
 14544  00E698  B4D8               	btfsc	status,2,c
 14545  00E69A  D032               	goto	l13776
 14546                           
 14547                           ; BSR set to: 0
 14548                           ;lorawan.c: 1781: {;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLeng
      +                          th);
 14549  00E69C  0EA0               	movlw	low _macBuffer
 14550  00E69E  25DA               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 14551  00E6A0  6E01               	movwf	memcpy@d1,c
 14552  00E6A2  6A02               	clrf	memcpy@d1+1,c
 14553  00E6A4  0E04               	movlw	high _macBuffer
 14554  00E6A6  2202               	addwfc	memcpy@d1+1,f,c
 14555  00E6A8  C05C  F003         	movff	AssemblePacket@buffer,memcpy@s1
 14556  00E6AC  C05D  F004         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 14557  00E6B0  C05E  F005         	movff	AssemblePacket@bufferLength,memcpy@n
 14558  00E6B4  C05F  F006         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 14559  00E6B8  EC56  F04C         	call	_memcpy	;wreg free
 14560                           
 14561                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 14562  00E6BC  C05C  F033         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 14563  00E6C0  C05D  F034         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 14564  00E6C4  C05E  F035         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 14565  00E6C8  0E00               	movlw	0
 14566  00E6CA  6E36               	movwf	EncryptFRMPayload@dir,c
 14567  00E6CC  C206  F037         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 14568  00E6D0  C207  F038         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 14569  00E6D4  C208  F039         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 14570  00E6D8  C209  F03A         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 14571  00E6DC  0E32               	movlw	low (_loRa+50)
 14572  00E6DE  6E3B               	movwf	EncryptFRMPayload@key,c
 14573  00E6E0  0E02               	movlw	high (_loRa+50)
 14574  00E6E2  6E3C               	movwf	EncryptFRMPayload@key+1,c
 14575  00E6E4  C0DA  F03D         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 14576  00E6E8  0EA0               	movlw	low _macBuffer
 14577  00E6EA  6E3E               	movwf	EncryptFRMPayload@bufferToBeEncrypted,c
 14578  00E6EC  0E04               	movlw	high _macBuffer
 14579  00E6EE  6E3F               	movwf	EncryptFRMPayload@bufferToBeEncrypted+1,c
 14580  00E6F0  0E00               	movlw	0
 14581  00E6F2  6E40               	movwf	EncryptFRMPayload@multicastStatus,c
 14582  00E6F4  ECC0  F061         	call	_EncryptFRMPayload	;wreg free
 14583                           
 14584                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 14585  00E6F8  0100               	movlb	0	; () banked
 14586  00E6FA  51DA               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 14587  00E6FC  245E               	addwf	AssemblePacket@bufferLength,w,c
 14588  00E6FE  D031               	goto	L12
 14589  00E700                     l13776:
 14590                           
 14591                           ; BSR set to: 0
 14592                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 14593  00E700  0102               	movlb	2	; () banked
 14594  00E702  51A7               	movf	(_loRa+167)& (0+255),w,b
 14595  00E704  B4D8               	btfsc	status,2,c
 14596  00E706  D02E               	goto	l13784
 14597                           
 14598                           ; BSR set to: 2
 14599                           ;lorawan.c: 1787: {;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx
      +                          , 0 );
 14600  00E708  0EAF               	movlw	low _radioBuffer
 14601  00E70A  6E01               	movwf	IncludeMacCommandsResponse@macBuffer,c
 14602  00E70C  0E05               	movlw	high _radioBuffer
 14603  00E70E  6E02               	movwf	IncludeMacCommandsResponse@macBuffer+1,c
 14604  00E710  0ED9               	movlw	low AssemblePacket@macCmdIdx
 14605  00E712  6E03               	movwf	IncludeMacCommandsResponse@pBufferIndex,c
 14606  00E714  0E00               	movlw	high AssemblePacket@macCmdIdx
 14607  00E716  6E04               	movwf	IncludeMacCommandsResponse@pBufferIndex+1,c
 14608  00E718  0E00               	movlw	0
 14609  00E71A  6E05               	movwf	IncludeMacCommandsResponse@bIncludeInFopts,c
 14610  00E71C  EC46  F06F         	call	_IncludeMacCommandsResponse	;wreg free
 14611                           
 14612                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 14613  00E720  0EAF               	movlw	low _radioBuffer
 14614  00E722  6E33               	movwf	EncryptFRMPayload@buffer,c
 14615  00E724  0E05               	movlw	high _radioBuffer
 14616  00E726  6E34               	movwf	EncryptFRMPayload@buffer+1,c
 14617  00E728  C0D9  F035         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 14618  00E72C  0E00               	movlw	0
 14619  00E72E  6E36               	movwf	EncryptFRMPayload@dir,c
 14620  00E730  C206  F037         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 14621  00E734  C207  F038         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 14622  00E738  C208  F039         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 14623  00E73C  C209  F03A         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 14624  00E740  0E22               	movlw	low (_loRa+34)
 14625  00E742  6E3B               	movwf	EncryptFRMPayload@key,c
 14626  00E744  0E02               	movlw	high (_loRa+34)
 14627  00E746  6E3C               	movwf	EncryptFRMPayload@key+1,c
 14628  00E748  C0DA  F03D         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 14629  00E74C  0EA0               	movlw	low _macBuffer
 14630  00E74E  6E3E               	movwf	EncryptFRMPayload@bufferToBeEncrypted,c
 14631  00E750  0E04               	movlw	high _macBuffer
 14632  00E752  6E3F               	movwf	EncryptFRMPayload@bufferToBeEncrypted+1,c
 14633  00E754  0E00               	movlw	0
 14634  00E756  6E40               	movwf	EncryptFRMPayload@multicastStatus,c
 14635  00E758  ECC0  F061         	call	_EncryptFRMPayload	;wreg free
 14636                           
 14637                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 14638  00E75C  0100               	movlb	0	; () banked
 14639  00E75E  51DA               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 14640  00E760  25D9               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 14641  00E762                     L12:
 14642  00E762  6FDA               	movwf	AssemblePacket@bufferIndex& (0+255),b
 14643  00E764                     l13784:
 14644                           
 14645                           ;lorawan.c: 1793: };lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, buff
      +                          erIndex - 16, 0x49, 0);
 14646  00E764  C206  F00C         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 14647  00E768  C207  F00D         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 14648  00E76C  C208  F00E         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 14649  00E770  C209  F00F         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 14650  00E774  0100               	movlb	0	; () banked
 14651  00E776  51DA               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 14652  00E778  0FF0               	addlw	240
 14653  00E77A  6E10               	movwf	AssembleEncryptionBlock@blockId,c
 14654  00E77C  0E49               	movlw	73
 14655  00E77E  6E11               	movwf	AssembleEncryptionBlock@firstByte,c
 14656  00E780  0E00               	movlw	0
 14657  00E782  6E12               	movwf	AssembleEncryptionBlock@multicastStatus,c
 14658  00E784  0E00               	movlw	0
 14659  00E786  EC85  F055         	call	_AssembleEncryptionBlock
 14660                           
 14661                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 14662  00E78A  0EA0               	movlw	low _macBuffer
 14663  00E78C  6E01               	movwf	memcpy@d1,c
 14664  00E78E  0E04               	movlw	high _macBuffer
 14665  00E790  6E02               	movwf	memcpy@d1+1,c
 14666  00E792  0E4E               	movlw	low _aesBuffer
 14667  00E794  6E03               	movwf	memcpy@s1,c
 14668  00E796  0E01               	movlw	high _aesBuffer
 14669  00E798  6E04               	movwf	memcpy@s1+1,c
 14670  00E79A  0E00               	movlw	0
 14671  00E79C  6E06               	movwf	memcpy@n+1,c
 14672  00E79E  0E10               	movlw	16
 14673  00E7A0  6E05               	movwf	memcpy@n,c
 14674  00E7A2  EC56  F04C         	call	_memcpy	;wreg free
 14675                           
 14676                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 14677  00E7A6  0E22               	movlw	low (_loRa+34)
 14678  00E7A8  0100               	movlb	0	; () banked
 14679  00E7AA  6F60               	movwf	AESCmac@key& (0+255),b
 14680  00E7AC  0E02               	movlw	high (_loRa+34)
 14681  00E7AE  6F61               	movwf	(AESCmac@key+1)& (0+255),b
 14682  00E7B0  0E4E               	movlw	low _aesBuffer
 14683  00E7B2  6F62               	movwf	AESCmac@output& (0+255),b
 14684  00E7B4  0E01               	movlw	high _aesBuffer
 14685  00E7B6  6F63               	movwf	(AESCmac@output+1)& (0+255),b
 14686  00E7B8  0EA0               	movlw	low _macBuffer
 14687  00E7BA  6F64               	movwf	AESCmac@input& (0+255),b
 14688  00E7BC  0E04               	movlw	high _macBuffer
 14689  00E7BE  6F65               	movwf	(AESCmac@input+1)& (0+255),b
 14690  00E7C0  C0DA  F066         	movff	AssemblePacket@bufferIndex,AESCmac@size
 14691  00E7C4  ECCB  F06D         	call	_AESCmac	;wreg free
 14692                           
 14693                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 14694  00E7C8  0EA0               	movlw	low _macBuffer
 14695  00E7CA  0100               	movlb	0	; () banked
 14696  00E7CC  25DA               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 14697  00E7CE  6E01               	movwf	memcpy@d1,c
 14698  00E7D0  6A02               	clrf	memcpy@d1+1,c
 14699  00E7D2  0E04               	movlw	high _macBuffer
 14700  00E7D4  2202               	addwfc	memcpy@d1+1,f,c
 14701  00E7D6  0E4E               	movlw	low _aesBuffer
 14702  00E7D8  6E03               	movwf	memcpy@s1,c
 14703  00E7DA  0E01               	movlw	high _aesBuffer
 14704  00E7DC  6E04               	movwf	memcpy@s1+1,c
 14705  00E7DE  0E00               	movlw	0
 14706  00E7E0  6E06               	movwf	memcpy@n+1,c
 14707  00E7E2  0E04               	movlw	4
 14708  00E7E4  6E05               	movwf	memcpy@n,c
 14709  00E7E6  EC56  F04C         	call	_memcpy	;wreg free
 14710                           
 14711                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 14712  00E7EA  0100               	movlb	0	; () banked
 14713  00E7EC  51DA               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 14714  00E7EE  0F04               	addlw	4
 14715  00E7F0  6FDA               	movwf	AssemblePacket@bufferIndex& (0+255),b
 14716                           
 14717                           ; BSR set to: 0
 14718                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 14719  00E7F2  0EF0               	movlw	240
 14720  00E7F4  25DA               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 14721  00E7F6  0102               	movlb	2	; () banked
 14722  00E7F8  6FD4               	movwf	(_loRa+212)& (0+255),b
 14723  00E7FA  6BD5               	clrf	(_loRa+213)& (0+255),b
 14724  00E7FC  0EFF               	movlw	255
 14725  00E7FE  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 14726                           
 14727                           ; BSR set to: 2
 14728  00E800  0012               	return		;funcret
 14729  00E802                     __end_of_AssemblePacket:
 14730                           	opt callstack 0
 14731                           
 14732 ;; *************** function _IncludeMacCommandsResponse *****************
 14733 ;; Defined at:
 14734 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14735 ;; Parameters:    Size  Location     Type
 14736 ;;  macBuffer       2    0[COMRAM] PTR unsigned char 
 14737 ;;		 -> macBuffer(271), radioBuffer(271), 
 14738 ;;  pBufferIndex    2    2[COMRAM] PTR unsigned char 
 14739 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 14740 ;;  bIncludeInFo    1    4[COMRAM] unsigned char 
 14741 ;; Auto vars:     Size  Location     Type
 14742 ;;  bufferIndex     1   13[COMRAM] unsigned char 
 14743 ;;  i               1   12[COMRAM] unsigned char 
 14744 ;; Return value:  Size  Location     Type
 14745 ;;                  1    wreg      void 
 14746 ;; Registers used:
 14747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14748 ;; Tracked objects:
 14749 ;;		On entry : 0/0
 14750 ;;		On exit  : 0/0
 14751 ;;		Unchanged: 0/0
 14752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14753 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14755 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14756 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14757 ;;Total ram usage:       14 bytes
 14758 ;; Hardware stack levels used:    1
 14759 ;; Hardware stack levels required when called:    1
 14760 ;; This function calls:
 14761 ;;		_RADIO_GetPacketSnr
 14762 ;; This function is called by:
 14763 ;;		_AssemblePacket
 14764 ;; This function uses a non-reentrant model
 14765 ;;
 14766                           
 14767                           	psect	text92
 14768  00DE8C                     __ptext92:
 14769                           	opt callstack 0
 14770  00DE8C                     _IncludeMacCommandsResponse:
 14771                           	opt callstack 24
 14772                           
 14773                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 14774                           
 14775                           ; BSR set to: 2
 14776                           ;incstack = 0
 14777  00DE8C  C003  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 14778  00DE90  C004  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 14779  00DE94  50DF               	movf	indf2,w,c
 14780  00DE96  6E0E               	movwf	IncludeMacCommandsResponse@bufferIndex,c
 14781                           
 14782                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 14783  00DE98  0E00               	movlw	0
 14784  00DE9A  6E0D               	movwf	IncludeMacCommandsResponse@i,c
 14785  00DE9C  D169               	goto	l9584
 14786  00DE9E                     l9486:
 14787                           
 14788                           ; BSR set to: 2
 14789                           ;lorawan.c: 1851: {;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receiv
      +                          edCid != 0xFF))
 14790  00DE9E  5005               	movf	IncludeMacCommandsResponse@bIncludeInFopts,w,c
 14791  00DEA0  B4D8               	btfsc	status,2,c
 14792  00DEA2  D147               	goto	l9580
 14793                           
 14794                           ; BSR set to: 2
 14795  00DEA4  500D               	movf	IncludeMacCommandsResponse@i,w,c
 14796  00DEA6  0D02               	mullw	2
 14797  00DEA8  0EA8               	movlw	low (_loRa+168)
 14798  00DEAA  24F3               	addwf	prodl,w,c
 14799  00DEAC  6ED9               	movwf	fsr2l,c
 14800  00DEAE  0E02               	movlw	high (_loRa+168)
 14801  00DEB0  20F4               	addwfc	prodh,w,c
 14802  00DEB2  6EDA               	movwf	fsr2h,c
 14803  00DEB4  28DE               	incf	postinc2,w,c
 14804  00DEB6  B4D8               	btfsc	status,2,c
 14805  00DEB8  D13C               	goto	l9580
 14806                           
 14807                           ; BSR set to: 2
 14808                           ;lorawan.c: 1853: {;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdRep
      +                          lyLen[loRa.macCommands[i].receivedCid - 2]) > 0x0F)
 14809  00DEBA  0EFE               	movlw	254
 14810  00DEBC  6E06               	movwf	??_IncludeMacCommandsResponse& (0+255),c
 14811  00DEBE  0EFF               	movlw	255
 14812  00DEC0  6E07               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),c
 14813  00DEC2  500D               	movf	IncludeMacCommandsResponse@i,w,c
 14814  00DEC4  0D02               	mullw	2
 14815  00DEC6  0EA8               	movlw	low (_loRa+168)
 14816  00DEC8  24F3               	addwf	prodl,w,c
 14817  00DECA  6ED9               	movwf	fsr2l,c
 14818  00DECC  0E02               	movlw	high (_loRa+168)
 14819  00DECE  20F4               	addwfc	prodh,w,c
 14820  00DED0  6EDA               	movwf	fsr2h,c
 14821  00DED2  50DF               	movf	indf2,w,c
 14822  00DED4  6E08               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),c
 14823  00DED6  6A09               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),c
 14824  00DED8  5006               	movf	??_IncludeMacCommandsResponse,w,c
 14825  00DEDA  2608               	addwf	??_IncludeMacCommandsResponse+2,f,c
 14826  00DEDC  5007               	movf	??_IncludeMacCommandsResponse+1,w,c
 14827  00DEDE  2209               	addwfc	??_IncludeMacCommandsResponse+3,f,c
 14828  00DEE0  0E87               	movlw	low _macEndDevCmdReplyLen
 14829  00DEE2  2408               	addwf	??_IncludeMacCommandsResponse+2,w,c
 14830  00DEE4  6EF6               	movwf	tblptrl,c
 14831  00DEE6  0EFF               	movlw	high _macEndDevCmdReplyLen
 14832  00DEE8  2009               	addwfc	??_IncludeMacCommandsResponse+3,w,c
 14833  00DEEA  6EF7               	movwf	tblptrh,c
 14834  00DEEC                     	if	1	;There are 3 active tblptr bytes
 14835  00DEEC  6AF8               	clrf	tblptru,c
 14836  00DEEE  0E00               	movlw	low (__mediumconst shr (0+16))
 14837  00DEF0  22F8               	addwfc	tblptru,f,c
 14838  00DEF2                     	endif
 14839  00DEF2  0008               	tblrd		*
 14840  00DEF4  50F5               	movf	tablat,w,c
 14841  00DEF6  C00E  F00A         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 14842  00DEFA  6A0B               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),c
 14843  00DEFC  260A               	addwf	??_IncludeMacCommandsResponse+4,f,c
 14844  00DEFE  0E00               	movlw	0
 14845  00DF00  220B               	addwfc	??_IncludeMacCommandsResponse+5,f,c
 14846  00DF02  C003  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 14847  00DF06  C004  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 14848  00DF0A  50DF               	movf	indf2,w,c
 14849  00DF0C  6E0C               	movwf	(??_IncludeMacCommandsResponse+6)& (0+255),c
 14850  00DF0E  500C               	movf	??_IncludeMacCommandsResponse+6,w,c
 14851  00DF10  5E0A               	subwf	??_IncludeMacCommandsResponse+4,f,c
 14852  00DF12  0E00               	movlw	0
 14853  00DF14  5A0B               	subwfb	??_IncludeMacCommandsResponse+5,f,c
 14854  00DF16  BE0B               	btfsc	??_IncludeMacCommandsResponse+5,7,c
 14855  00DF18  D10C               	goto	l9580
 14856  00DF1A  500B               	movf	??_IncludeMacCommandsResponse+5,w,c
 14857  00DF1C  E105               	bnz	u8720
 14858  00DF1E  0E10               	movlw	16
 14859  00DF20  5C0A               	subwf	??_IncludeMacCommandsResponse+4,w,c
 14860  00DF22  B0D8               	btfsc	status,0,c
 14861  00DF24  D12A               	goto	u8830
 14862  00DF26  D105               	goto	l9580
 14863  00DF28                     u8720:
 14864  00DF28  D128               	goto	u8830
 14865  00DF2A                     l9494:
 14866                           
 14867                           ; BSR set to: 2
 14868                           ;lorawan.c: 1862: {;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 14869  00DF2A  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 14870  00DF2C  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 14871  00DF2E  6ED9               	movwf	fsr2l,c
 14872  00DF30  0E00               	movlw	0
 14873  00DF32  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 14874  00DF34  6EDA               	movwf	fsr2h,c
 14875  00DF36  0E03               	movlw	3
 14876  00DF38  6EDF               	movwf	indf2,c
 14877                           
 14878                           ; BSR set to: 2
 14879  00DF3A  2A0E               	incf	IncludeMacCommandsResponse@bufferIndex,f,c
 14880                           
 14881                           ; BSR set to: 2
 14882                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 14883  00DF3C  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 14884  00DF3E  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 14885  00DF40  6ED9               	movwf	fsr2l,c
 14886  00DF42  0E00               	movlw	0
 14887  00DF44  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 14888  00DF46  6EDA               	movwf	fsr2h,c
 14889  00DF48  0E00               	movlw	0
 14890  00DF4A  6EDF               	movwf	indf2,c
 14891                           
 14892                           ; BSR set to: 2
 14893                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 14894  00DF4C  500D               	movf	IncludeMacCommandsResponse@i,w,c
 14895  00DF4E  0D02               	mullw	2
 14896  00DF50  0EA9               	movlw	low (_loRa+169)
 14897  00DF52  24F3               	addwf	prodl,w,c
 14898  00DF54  6ED9               	movwf	fsr2l,c
 14899  00DF56  0E02               	movlw	high (_loRa+169)
 14900  00DF58  20F4               	addwfc	prodh,w,c
 14901  00DF5A  6EDA               	movwf	fsr2h,c
 14902  00DF5C  A0DF               	btfss	indf2,0,c
 14903  00DF5E  D008               	goto	l9504
 14904                           
 14905                           ; BSR set to: 2
 14906                           ;lorawan.c: 1866: {;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 14907  00DF60  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 14908  00DF62  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 14909  00DF64  6ED9               	movwf	fsr2l,c
 14910  00DF66  0E00               	movlw	0
 14911  00DF68  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 14912  00DF6A  6EDA               	movwf	fsr2h,c
 14913  00DF6C  0E00               	movlw	0
 14914  00DF6E  80DB               	bsf	plusw2,0,c
 14915  00DF70                     l9504:
 14916                           
 14917                           ; BSR set to: 2
 14918                           ;lorawan.c: 1868: };lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 14919  00DF70  500D               	movf	IncludeMacCommandsResponse@i,w,c
 14920  00DF72  0D02               	mullw	2
 14921  00DF74  0EA9               	movlw	low (_loRa+169)
 14922  00DF76  24F3               	addwf	prodl,w,c
 14923  00DF78  6ED9               	movwf	fsr2l,c
 14924  00DF7A  0E02               	movlw	high (_loRa+169)
 14925  00DF7C  20F4               	addwfc	prodh,w,c
 14926  00DF7E  6EDA               	movwf	fsr2h,c
 14927  00DF80  A2DF               	btfss	indf2,1,c
 14928  00DF82  D008               	goto	l9508
 14929                           
 14930                           ; BSR set to: 2
 14931                           ;lorawan.c: 1871: {;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 14932  00DF84  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 14933  00DF86  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 14934  00DF88  6ED9               	movwf	fsr2l,c
 14935  00DF8A  0E00               	movlw	0
 14936  00DF8C  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 14937  00DF8E  6EDA               	movwf	fsr2h,c
 14938  00DF90  0E00               	movlw	0
 14939  00DF92  82DB               	bsf	plusw2,1,c
 14940  00DF94                     l9508:
 14941                           
 14942                           ; BSR set to: 2
 14943                           ;lorawan.c: 1873: };lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 14944  00DF94  500D               	movf	IncludeMacCommandsResponse@i,w,c
 14945  00DF96  0D02               	mullw	2
 14946  00DF98  0EA9               	movlw	low (_loRa+169)
 14947  00DF9A  24F3               	addwf	prodl,w,c
 14948  00DF9C  6ED9               	movwf	fsr2l,c
 14949  00DF9E  0E02               	movlw	high (_loRa+169)
 14950  00DFA0  20F4               	addwfc	prodh,w,c
 14951  00DFA2  6EDA               	movwf	fsr2h,c
 14952  00DFA4  A4DF               	btfss	indf2,2,c
 14953  00DFA6  D008               	goto	l9512
 14954  00DFA8                     u8750:
 14955                           
 14956                           ; BSR set to: 2
 14957                           ;lorawan.c: 1876: {;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 14958  00DFA8  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 14959  00DFAA  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 14960  00DFAC  6ED9               	movwf	fsr2l,c
 14961  00DFAE  0E00               	movlw	0
 14962  00DFB0  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 14963  00DFB2  6EDA               	movwf	fsr2h,c
 14964  00DFB4  0E00               	movlw	0
 14965  00DFB6  84DB               	bsf	plusw2,2,c
 14966  00DFB8                     l9512:
 14967                           
 14968                           ;lorawan.c: 1878: };lorawan.c: 1879: bufferIndex ++;
 14969  00DFB8  2A0E               	incf	IncludeMacCommandsResponse@bufferIndex,f,c
 14970                           
 14971                           ;lorawan.c: 1880: };lorawan.c: 1881: break;
 14972  00DFBA  D0D9               	goto	l9582
 14973  00DFBC                     l9514:
 14974                           
 14975                           ; BSR set to: 2
 14976                           ;lorawan.c: 1884: {;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 14977  00DFBC  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 14978  00DFBE  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 14979  00DFC0  6ED9               	movwf	fsr2l,c
 14980  00DFC2  0E00               	movlw	0
 14981  00DFC4  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 14982  00DFC6  6EDA               	movwf	fsr2h,c
 14983  00DFC8  0E05               	movlw	5
 14984  00DFCA  6EDF               	movwf	indf2,c
 14985                           
 14986                           ; BSR set to: 2
 14987  00DFCC  2A0E               	incf	IncludeMacCommandsResponse@bufferIndex,f,c
 14988                           
 14989                           ; BSR set to: 2
 14990                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 14991  00DFCE  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 14992  00DFD0  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 14993  00DFD2  6ED9               	movwf	fsr2l,c
 14994  00DFD4  0E00               	movlw	0
 14995  00DFD6  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 14996  00DFD8  6EDA               	movwf	fsr2h,c
 14997  00DFDA  0E00               	movlw	0
 14998  00DFDC  6EDF               	movwf	indf2,c
 14999                           
 15000                           ; BSR set to: 2
 15001                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 15002  00DFDE  500D               	movf	IncludeMacCommandsResponse@i,w,c
 15003  00DFE0  0D02               	mullw	2
 15004  00DFE2  0EA9               	movlw	low (_loRa+169)
 15005  00DFE4  24F3               	addwf	prodl,w,c
 15006  00DFE6  6ED9               	movwf	fsr2l,c
 15007  00DFE8  0E02               	movlw	high (_loRa+169)
 15008  00DFEA  20F4               	addwfc	prodh,w,c
 15009  00DFEC  6EDA               	movwf	fsr2h,c
 15010  00DFEE  A6DF               	btfss	indf2,3,c
 15011  00DFF0  D008               	goto	l9524
 15012                           
 15013                           ; BSR set to: 2
 15014                           ;lorawan.c: 1888: {;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 15015  00DFF2  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 15016  00DFF4  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 15017  00DFF6  6ED9               	movwf	fsr2l,c
 15018  00DFF8  0E00               	movlw	0
 15019  00DFFA  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 15020  00DFFC  6EDA               	movwf	fsr2h,c
 15021  00DFFE  0E00               	movlw	0
 15022  00E000  80DB               	bsf	plusw2,0,c
 15023  00E002                     l9524:
 15024                           
 15025                           ; BSR set to: 2
 15026                           ;lorawan.c: 1890: };lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck ==
      +                           1)
 15027  00E002  500D               	movf	IncludeMacCommandsResponse@i,w,c
 15028  00E004  0D02               	mullw	2
 15029  00E006  0EA9               	movlw	low (_loRa+169)
 15030  00E008  24F3               	addwf	prodl,w,c
 15031  00E00A  6ED9               	movwf	fsr2l,c
 15032  00E00C  0E02               	movlw	high (_loRa+169)
 15033  00E00E  20F4               	addwfc	prodh,w,c
 15034  00E010  6EDA               	movwf	fsr2h,c
 15035  00E012  A8DF               	btfss	indf2,4,c
 15036  00E014  D008               	goto	l9528
 15037                           
 15038                           ; BSR set to: 2
 15039                           ;lorawan.c: 1893: {;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 15040  00E016  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 15041  00E018  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 15042  00E01A  6ED9               	movwf	fsr2l,c
 15043  00E01C  0E00               	movlw	0
 15044  00E01E  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 15045  00E020  6EDA               	movwf	fsr2h,c
 15046  00E022  0E00               	movlw	0
 15047  00E024  82DB               	bsf	plusw2,1,c
 15048  00E026                     l9528:
 15049                           
 15050                           ; BSR set to: 2
 15051                           ;lorawan.c: 1895: };lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 15052  00E026  500D               	movf	IncludeMacCommandsResponse@i,w,c
 15053  00E028  0D02               	mullw	2
 15054  00E02A  0EA9               	movlw	low (_loRa+169)
 15055  00E02C  24F3               	addwf	prodl,w,c
 15056  00E02E  6ED9               	movwf	fsr2l,c
 15057  00E030  0E02               	movlw	high (_loRa+169)
 15058  00E032  20F4               	addwfc	prodh,w,c
 15059  00E034  6EDA               	movwf	fsr2h,c
 15060  00E036  BADF               	btfsc	indf2,5,c
 15061  00E038  D7B7               	goto	u8750
 15062  00E03A  D7BE               	goto	l9512
 15063  00E03C                     l9534:
 15064                           
 15065                           ; BSR set to: 2
 15066                           ;lorawan.c: 1907: {;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 15067  00E03C  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 15068  00E03E  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 15069  00E040  6ED9               	movwf	fsr2l,c
 15070  00E042  0E00               	movlw	0
 15071  00E044  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 15072  00E046  6EDA               	movwf	fsr2h,c
 15073  00E048  0E06               	movlw	6
 15074  00E04A  6EDF               	movwf	indf2,c
 15075                           
 15076                           ; BSR set to: 2
 15077  00E04C  2A0E               	incf	IncludeMacCommandsResponse@bufferIndex,f,c
 15078                           
 15079                           ; BSR set to: 2
 15080                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 15081  00E04E  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 15082  00E050  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 15083  00E052  6ED9               	movwf	fsr2l,c
 15084  00E054  0E00               	movlw	0
 15085  00E056  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 15086  00E058  6EDA               	movwf	fsr2h,c
 15087  00E05A  C2E0  FFDF         	movff	_loRa+224,indf2
 15088  00E05E  2A0E               	incf	IncludeMacCommandsResponse@bufferIndex,f,c
 15089                           
 15090                           ; BSR set to: 2
 15091                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 15092  00E060  ECF0  F044         	call	_RADIO_GetPacketSnr	;wreg free
 15093  00E064  0A80               	xorlw	128
 15094  00E066  0FA0               	addlw	160
 15095  00E068  A0D8               	btfss	status,0,c
 15096  00E06A  D006               	goto	u8800
 15097  00E06C  ECF0  F044         	call	_RADIO_GetPacketSnr	;wreg free
 15098  00E070  0A80               	xorlw	128
 15099  00E072  0F60               	addlw	-160
 15100  00E074  A0D8               	btfss	status,0,c
 15101  00E076  D008               	goto	l9548
 15102  00E078                     u8800:
 15103                           
 15104                           ;lorawan.c: 1911: {;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 15105  00E078  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 15106  00E07A  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 15107  00E07C  6ED9               	movwf	fsr2l,c
 15108  00E07E  0E00               	movlw	0
 15109  00E080  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 15110  00E082  6EDA               	movwf	fsr2h,c
 15111  00E084  0E20               	movlw	32
 15112  00E086  D009               	goto	L14
 15113  00E088                     l9548:
 15114                           
 15115                           ;lorawan.c: 1914: else;lorawan.c: 1915: {;lorawan.c: 1916: macBuffer[bufferIndex++] = ((
      +                          uint8_t)RADIO_GetPacketSnr() & 0x3F);
 15116  00E088  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 15117  00E08A  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 15118  00E08C  6ED9               	movwf	fsr2l,c
 15119  00E08E  0E00               	movlw	0
 15120  00E090  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 15121  00E092  6EDA               	movwf	fsr2h,c
 15122  00E094  ECF0  F044         	call	_RADIO_GetPacketSnr	;wreg free
 15123  00E098  0B3F               	andlw	63
 15124  00E09A                     L14:
 15125  00E09A  6EDF               	movwf	indf2,c
 15126  00E09C  D78D               	goto	l9512
 15127  00E09E                     l9552:
 15128                           
 15129                           ; BSR set to: 2
 15130                           ;lorawan.c: 1922: {;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 15131  00E09E  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 15132  00E0A0  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 15133  00E0A2  6ED9               	movwf	fsr2l,c
 15134  00E0A4  0E00               	movlw	0
 15135  00E0A6  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 15136  00E0A8  6EDA               	movwf	fsr2h,c
 15137  00E0AA  0E07               	movlw	7
 15138  00E0AC  6EDF               	movwf	indf2,c
 15139                           
 15140                           ; BSR set to: 2
 15141  00E0AE  2A0E               	incf	IncludeMacCommandsResponse@bufferIndex,f,c
 15142                           
 15143                           ; BSR set to: 2
 15144                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 15145  00E0B0  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 15146  00E0B2  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 15147  00E0B4  6ED9               	movwf	fsr2l,c
 15148  00E0B6  0E00               	movlw	0
 15149  00E0B8  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 15150  00E0BA  6EDA               	movwf	fsr2h,c
 15151  00E0BC  0E00               	movlw	0
 15152  00E0BE  6EDF               	movwf	indf2,c
 15153                           
 15154                           ; BSR set to: 2
 15155                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 15156  00E0C0  500D               	movf	IncludeMacCommandsResponse@i,w,c
 15157  00E0C2  0D02               	mullw	2
 15158  00E0C4  0EA9               	movlw	low (_loRa+169)
 15159  00E0C6  24F3               	addwf	prodl,w,c
 15160  00E0C8  6ED9               	movwf	fsr2l,c
 15161  00E0CA  0E02               	movlw	high (_loRa+169)
 15162  00E0CC  20F4               	addwfc	prodh,w,c
 15163  00E0CE  6EDA               	movwf	fsr2h,c
 15164  00E0D0  AEDF               	btfss	indf2,7,c
 15165  00E0D2  D008               	goto	l9562
 15166                           
 15167                           ; BSR set to: 2
 15168                           ;lorawan.c: 1926: {;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 15169  00E0D4  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 15170  00E0D6  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 15171  00E0D8  6ED9               	movwf	fsr2l,c
 15172  00E0DA  0E00               	movlw	0
 15173  00E0DC  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 15174  00E0DE  6EDA               	movwf	fsr2h,c
 15175  00E0E0  0E00               	movlw	0
 15176  00E0E2  80DB               	bsf	plusw2,0,c
 15177  00E0E4                     l9562:
 15178                           
 15179                           ; BSR set to: 2
 15180                           ;lorawan.c: 1928: };lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 15181  00E0E4  500D               	movf	IncludeMacCommandsResponse@i,w,c
 15182  00E0E6  0D02               	mullw	2
 15183  00E0E8  0EA9               	movlw	low (_loRa+169)
 15184  00E0EA  24F3               	addwf	prodl,w,c
 15185  00E0EC  6ED9               	movwf	fsr2l,c
 15186  00E0EE  0E02               	movlw	high (_loRa+169)
 15187  00E0F0  20F4               	addwfc	prodh,w,c
 15188  00E0F2  6EDA               	movwf	fsr2h,c
 15189  00E0F4  ACDF               	btfss	indf2,6,c
 15190  00E0F6  D760               	goto	l9512
 15191                           
 15192                           ; BSR set to: 2
 15193                           ;lorawan.c: 1931: {;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 15194  00E0F8  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 15195  00E0FA  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 15196  00E0FC  6ED9               	movwf	fsr2l,c
 15197  00E0FE  0E00               	movlw	0
 15198  00E100  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 15199  00E102  6EDA               	movwf	fsr2h,c
 15200  00E104  0E00               	movlw	0
 15201  00E106  82DB               	bsf	plusw2,1,c
 15202  00E108  D757               	goto	l9512
 15203  00E10A                     l2071:
 15204                           
 15205                           ; BSR set to: 2
 15206                           ;lorawan.c: 1939: {;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 15207  00E10A  69DD               	setf	(_loRa+221)& (0+255),b
 15208                           
 15209                           ; BSR set to: 2
 15210                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 15211  00E10C  0E00               	movlw	0
 15212  00E10E  6FDE               	movwf	(_loRa+222)& (0+255),b
 15213  00E110                     l9570:
 15214                           
 15215                           ; BSR set to: 2
 15216                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 15217  00E110  500D               	movf	IncludeMacCommandsResponse@i,w,c
 15218  00E112  0D02               	mullw	2
 15219  00E114  0EA8               	movlw	low (_loRa+168)
 15220  00E116  24F3               	addwf	prodl,w,c
 15221  00E118  6ED9               	movwf	fsr2l,c
 15222  00E11A  0E02               	movlw	high (_loRa+168)
 15223  00E11C  20F4               	addwfc	prodh,w,c
 15224  00E11E  6EDA               	movwf	fsr2h,c
 15225  00E120  500E               	movf	IncludeMacCommandsResponse@bufferIndex,w,c
 15226  00E122  2401               	addwf	IncludeMacCommandsResponse@macBuffer,w,c
 15227  00E124  6EE1               	movwf	fsr1l,c
 15228  00E126  0E00               	movlw	0
 15229  00E128  2002               	addwfc	IncludeMacCommandsResponse@macBuffer+1,w,c
 15230  00E12A  6EE2               	movwf	fsr1h,c
 15231  00E12C  CFDF FFE7          	movff	indf2,indf1
 15232  00E130  D743               	goto	l9512
 15233  00E132                     l9580:
 15234                           
 15235                           ; BSR set to: 2
 15236  00E132  500D               	movf	IncludeMacCommandsResponse@i,w,c
 15237  00E134  0D02               	mullw	2
 15238  00E136  0EA8               	movlw	low (_loRa+168)
 15239  00E138  24F3               	addwf	prodl,w,c
 15240  00E13A  6ED9               	movwf	fsr2l,c
 15241  00E13C  0E02               	movlw	high (_loRa+168)
 15242  00E13E  20F4               	addwfc	prodh,w,c
 15243  00E140  6EDA               	movwf	fsr2h,c
 15244  00E142  50DF               	movf	indf2,w,c
 15245                           
 15246                           ; Switch size 1, requested type "simple"
 15247                           ; Number of cases is 7, Range of values is 2 to 8
 15248                           ; switch strategies available:
 15249                           ; Name         Instructions Cycles
 15250                           ; simple_byte           22    12 (average)
 15251                           ;	Chosen strategy is simple_byte
 15252  00E144  0A02               	xorlw	2	; case 2
 15253  00E146  B4D8               	btfsc	status,2,c
 15254  00E148  D7E0               	goto	l2071
 15255  00E14A  0A01               	xorlw	1	; case 3
 15256  00E14C  B4D8               	btfsc	status,2,c
 15257  00E14E  D6ED               	goto	l9494
 15258  00E150  0A07               	xorlw	7	; case 4
 15259  00E152  B4D8               	btfsc	status,2,c
 15260  00E154  D7DD               	goto	l9570
 15261  00E156  0A01               	xorlw	1	; case 5
 15262  00E158  B4D8               	btfsc	status,2,c
 15263  00E15A  D730               	goto	l9514
 15264  00E15C  0A03               	xorlw	3	; case 6
 15265  00E15E  B4D8               	btfsc	status,2,c
 15266  00E160  D76D               	goto	l9534
 15267  00E162  0A01               	xorlw	1	; case 7
 15268  00E164  B4D8               	btfsc	status,2,c
 15269  00E166  D79B               	goto	l9552
 15270  00E168  0A0F               	xorlw	15	; case 8
 15271  00E16A  B4D8               	btfsc	status,2,c
 15272  00E16C  D7D1               	goto	l9570
 15273  00E16E                     l9582:
 15274  00E16E  2A0D               	incf	IncludeMacCommandsResponse@i,f,c
 15275  00E170                     l9584:
 15276  00E170  0102               	movlb	2	; () banked
 15277  00E172  51A7               	movf	(_loRa+167)& (0+255),w,b
 15278  00E174  5C0D               	subwf	IncludeMacCommandsResponse@i,w,c
 15279  00E176  A0D8               	btfss	status,0,c
 15280  00E178  D692               	goto	l9486
 15281  00E17A                     u8830:
 15282                           
 15283                           ; BSR set to: 2
 15284                           ;lorawan.c: 1957: };lorawan.c: 1959: *pBufferIndex = bufferIndex;
 15285  00E17A  C003  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 15286  00E17E  C004  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 15287  00E182  C00E  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 15288                           
 15289                           ; BSR set to: 2
 15290  00E186  0012               	return		;funcret
 15291  00E188                     __end_of_IncludeMacCommandsResponse:
 15292                           	opt callstack 0
 15293                           
 15294 ;; *************** function _RADIO_GetPacketSnr *****************
 15295 ;; Defined at:
 15296 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 15297 ;; Parameters:    Size  Location     Type
 15298 ;;		None
 15299 ;; Auto vars:     Size  Location     Type
 15300 ;;		None
 15301 ;; Return value:  Size  Location     Type
 15302 ;;                  1    wreg      char 
 15303 ;; Registers used:
 15304 ;;		wreg, status,2
 15305 ;; Tracked objects:
 15306 ;;		On entry : 0/0
 15307 ;;		On exit  : 0/0
 15308 ;;		Unchanged: 0/0
 15309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15314 ;;Total ram usage:        0 bytes
 15315 ;; Hardware stack levels used:    1
 15316 ;; This function calls:
 15317 ;;		Nothing
 15318 ;; This function is called by:
 15319 ;;		_IncludeMacCommandsResponse
 15320 ;; This function uses a non-reentrant model
 15321 ;;
 15322                           
 15323                           	psect	text93
 15324  0089E0                     __ptext93:
 15325                           	opt callstack 0
 15326  0089E0                     _RADIO_GetPacketSnr:
 15327                           	opt callstack 24
 15328                           
 15329                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 15330                           
 15331                           ; BSR set to: 2
 15332                           ;incstack = 0
 15333  0089E0  0101               	movlb	1	; () banked
 15334  0089E2  514A               	movf	(_RadioConfiguration+50)& (0+255),w,b
 15335                           
 15336                           ; BSR set to: 1
 15337  0089E4  0012               	return		;funcret
 15338  0089E6                     __end_of_RADIO_GetPacketSnr:
 15339                           	opt callstack 0
 15340                           
 15341 ;; *************** function _FindSmallestDataRate *****************
 15342 ;; Defined at:
 15343 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15344 ;; Parameters:    Size  Location     Type
 15345 ;;		None
 15346 ;; Auto vars:     Size  Location     Type
 15347 ;;  dataRate        1    3[COMRAM] unsigned char 
 15348 ;;  i               1    2[COMRAM] unsigned char 
 15349 ;;  found           1    1[COMRAM] unsigned char 
 15350 ;; Return value:  Size  Location     Type
 15351 ;;                  1    wreg      unsigned char 
 15352 ;; Registers used:
 15353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15354 ;; Tracked objects:
 15355 ;;		On entry : 0/0
 15356 ;;		On exit  : 0/0
 15357 ;;		Unchanged: 0/0
 15358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15360 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15363 ;;Total ram usage:        4 bytes
 15364 ;; Hardware stack levels used:    1
 15365 ;; This function calls:
 15366 ;;		Nothing
 15367 ;; This function is called by:
 15368 ;;		_AckRetransmissionCallback
 15369 ;;		_AssemblePacket
 15370 ;; This function uses a non-reentrant model
 15371 ;;
 15372                           
 15373                           	psect	text94
 15374  00A770                     __ptext94:
 15375                           	opt callstack 0
 15376  00A770                     _FindSmallestDataRate:
 15377                           	opt callstack 25
 15378                           
 15379                           ;lorawan.c: 1966: bool found = 0;
 15380                           
 15381                           ; BSR set to: 1
 15382                           ;incstack = 0
 15383  00A770  0E00               	movlw	0
 15384  00A772  6E02               	movwf	FindSmallestDataRate@found,c
 15385                           
 15386                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 15387  00A774  0102               	movlb	2	; () banked
 15388  00A776  51DF               	movf	(_loRa+223)& (0+255),w,b
 15389  00A778  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 15390  00A77A  B0D8               	btfsc	status,0,c
 15391  00A77C  D04E               	goto	l9408
 15392                           
 15393                           ; BSR set to: 2
 15394                           ;lorawan.c: 1969: {;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 15395  00A77E  05DF               	decf	(_loRa+223)& (0+255),w,b
 15396  00A780  D03F               	goto	L15
 15397  00A782                     l9380:
 15398                           
 15399                           ; BSR set to: 2
 15400                           ;lorawan.c: 1973: {;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 15401  00A782  0E00               	movlw	0
 15402  00A784  6E03               	movwf	FindSmallestDataRate@i,c
 15403  00A786  D02E               	goto	l9392
 15404  00A788                     l9382:
 15405                           
 15406                           ; BSR set to: 2
 15407                           ;lorawan.c: 1975: {;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (da
      +                          taRate <= Channels[i].dataRange.max ) && ( Channels[i].status == 1 ) )
 15408  00A788  5003               	movf	FindSmallestDataRate@i,w,c
 15409  00A78A  0D0E               	mullw	14
 15410  00A78C  0E05               	movlw	low (_Channels+5)
 15411  00A78E  24F3               	addwf	prodl,w,c
 15412  00A790  6ED9               	movwf	fsr2l,c
 15413  00A792  0E03               	movlw	high (_Channels+5)
 15414  00A794  20F4               	addwfc	prodh,w,c
 15415  00A796  6EDA               	movwf	fsr2h,c
 15416  00A798  0103               	movlb	3	; () banked
 15417  00A79A  50DF               	movf	223,w,c
 15418  00A79C  0B0F               	andlw	15
 15419  00A79E  6E01               	movwf	??_FindSmallestDataRate& (0+255),c
 15420  00A7A0  5001               	movf	??_FindSmallestDataRate,w,c
 15421  00A7A2  5C04               	subwf	FindSmallestDataRate@dataRate,w,c
 15422  00A7A4  A0D8               	btfss	status,0,c
 15423  00A7A6  D01D               	goto	l9390
 15424                           
 15425                           ; BSR set to: 3
 15426  00A7A8  5003               	movf	FindSmallestDataRate@i,w,c
 15427  00A7AA  0D0E               	mullw	14
 15428  00A7AC  0E05               	movlw	low (_Channels+5)
 15429  00A7AE  24F3               	addwf	prodl,w,c
 15430  00A7B0  6ED9               	movwf	fsr2l,c
 15431  00A7B2  0E03               	movlw	high (_Channels+5)
 15432  00A7B4  20F4               	addwfc	prodh,w,c
 15433  00A7B6  6EDA               	movwf	fsr2h,c
 15434  00A7B8  38DF               	swapf	223,w,c
 15435  00A7BA  0B0F               	andlw	15
 15436  00A7BC  6E01               	movwf	??_FindSmallestDataRate& (0+255),c
 15437  00A7BE  5004               	movf	FindSmallestDataRate@dataRate,w,c
 15438  00A7C0  5C01               	subwf	??_FindSmallestDataRate,w,c
 15439  00A7C2  A0D8               	btfss	status,0,c
 15440  00A7C4  D00E               	goto	l9390
 15441                           
 15442                           ; BSR set to: 3
 15443  00A7C6  5003               	movf	FindSmallestDataRate@i,w,c
 15444  00A7C8  0D0E               	mullw	14
 15445  00A7CA  0E04               	movlw	low (_Channels+4)
 15446  00A7CC  24F3               	addwf	prodl,w,c
 15447  00A7CE  6ED9               	movwf	fsr2l,c
 15448  00A7D0  0E03               	movlw	high (_Channels+4)
 15449  00A7D2  20F4               	addwfc	prodh,w,c
 15450  00A7D4  6EDA               	movwf	fsr2h,c
 15451  00A7D6  04DE               	decf	postinc2,w,c
 15452  00A7D8  A4D8               	btfss	status,2,c
 15453  00A7DA  D003               	goto	l9390
 15454                           
 15455                           ; BSR set to: 3
 15456                           ;lorawan.c: 1977: {;lorawan.c: 1978: found = 1;
 15457  00A7DC  0E01               	movlw	1
 15458  00A7DE  6E02               	movwf	FindSmallestDataRate@found,c
 15459                           
 15460                           ;lorawan.c: 1979: break;
 15461  00A7E0  D006               	goto	u8560
 15462  00A7E2                     l9390:
 15463                           
 15464                           ; BSR set to: 3
 15465  00A7E2  2A03               	incf	FindSmallestDataRate@i,f,c
 15466  00A7E4                     l9392:
 15467  00A7E4  0102               	movlb	2	; () banked
 15468  00A7E6  51ED               	movf	(_loRa+237)& (0+255),w,b
 15469  00A7E8  5C03               	subwf	FindSmallestDataRate@i,w,c
 15470  00A7EA  A0D8               	btfss	status,0,c
 15471  00A7EC  D7CD               	goto	l9382
 15472  00A7EE                     u8560:
 15473                           
 15474                           ;lorawan.c: 1980: };lorawan.c: 1981: };lorawan.c: 1982: if ( (found == 0) && (dataRate >
      +                           loRa.minDataRate) )
 15475  00A7EE  5002               	movf	FindSmallestDataRate@found,w,c
 15476  00A7F0  A4D8               	btfss	status,2,c
 15477  00A7F2  D007               	goto	l9400
 15478  00A7F4  5004               	movf	FindSmallestDataRate@dataRate,w,c
 15479  00A7F6  0102               	movlb	2	; () banked
 15480  00A7F8  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 15481  00A7FA  B0D8               	btfsc	status,0,c
 15482  00A7FC  D002               	goto	l9400
 15483                           
 15484                           ; BSR set to: 2
 15485                           ;lorawan.c: 1983: {;lorawan.c: 1984: dataRate = dataRate - 1;
 15486  00A7FE  0404               	decf	FindSmallestDataRate@dataRate,w,c
 15487  00A800                     L15:
 15488  00A800  6E04               	movwf	FindSmallestDataRate@dataRate,c
 15489  00A802                     l9400:
 15490  00A802  5002               	movf	FindSmallestDataRate@found,w,c
 15491  00A804  A4D8               	btfss	status,2,c
 15492  00A806  D005               	goto	u8600
 15493  00A808  0102               	movlb	2	; () banked
 15494  00A80A  51EB               	movf	(_loRa+235)& (0+255),w,b
 15495  00A80C  5C04               	subwf	FindSmallestDataRate@dataRate,w,c
 15496  00A80E  B0D8               	btfsc	status,0,c
 15497  00A810  D7B8               	goto	l9380
 15498  00A812                     u8600:
 15499                           
 15500                           ;lorawan.c: 1985: };lorawan.c: 1986: };lorawan.c: 1988: if (found == 1)
 15501  00A812  0402               	decf	FindSmallestDataRate@found,w,c
 15502  00A814  B4D8               	btfsc	status,2,c
 15503                           
 15504                           ;lorawan.c: 1989: {;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 15505  00A816  C004  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 15506  00A81A                     l9408:
 15507                           
 15508                           ;lorawan.c: 1991: };lorawan.c: 1992: };lorawan.c: 1994: return found;
 15509  00A81A  5002               	movf	FindSmallestDataRate@found,w,c
 15510  00A81C  0012               	return		;funcret
 15511  00A81E                     __end_of_FindSmallestDataRate:
 15512                           	opt callstack 0
 15513                           
 15514 ;; *************** function _EncryptFRMPayload *****************
 15515 ;; Defined at:
 15516 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15517 ;; Parameters:    Size  Location     Type
 15518 ;;  buffer          2   50[COMRAM] PTR unsigned char 
 15519 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 15520 ;;  bufferLength    1   52[COMRAM] unsigned char 
 15521 ;;  dir             1   53[COMRAM] unsigned char 
 15522 ;;  frameCounter    4   54[COMRAM] unsigned long 
 15523 ;;  key             2   58[COMRAM] PTR unsigned char 
 15524 ;;		 -> loRa.activationParameters(105), loRa(245), 
 15525 ;;  macBufferInd    1   60[COMRAM] unsigned char 
 15526 ;;  bufferToBeEn    2   61[COMRAM] PTR unsigned char 
 15527 ;;		 -> macBuffer(271), radioBuffer(271), 
 15528 ;;  multicastSta    1   63[COMRAM] unsigned char 
 15529 ;; Auto vars:     Size  Location     Type
 15530 ;;  j               1   71[COMRAM] unsigned char 
 15531 ;;  i               1   70[COMRAM] unsigned char 
 15532 ;;  k               1   69[COMRAM] unsigned char 
 15533 ;; Return value:  Size  Location     Type
 15534 ;;                  1    wreg      void 
 15535 ;; Registers used:
 15536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15537 ;; Tracked objects:
 15538 ;;		On entry : 0/0
 15539 ;;		On exit  : 0/0
 15540 ;;		Unchanged: 0/0
 15541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15542 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15543 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15544 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15545 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15546 ;;Total ram usage:       22 bytes
 15547 ;; Hardware stack levels used:    1
 15548 ;; Hardware stack levels required when called:    3
 15549 ;; This function calls:
 15550 ;;		_AESEncodeLoRa
 15551 ;;		_AssembleEncryptionBlock
 15552 ;;		___awdiv
 15553 ;; This function is called by:
 15554 ;;		_LORAWAN_RxDone
 15555 ;;		_AssemblePacket
 15556 ;; This function uses a non-reentrant model
 15557 ;;
 15558                           
 15559                           	psect	text95
 15560  00C380                     __ptext95:
 15561                           	opt callstack 0
 15562  00C380                     _EncryptFRMPayload:
 15563                           	opt callstack 22
 15564                           
 15565                           ;incstack = 0
 15566  00C380  0E00               	movlw	0
 15567  00C382  6E47               	movwf	EncryptFRMPayload@i,c
 15568  00C384  0E00               	movlw	0
 15569  00C386  6E48               	movwf	EncryptFRMPayload@j,c
 15570                           
 15571                           ;lorawan.c: 2209: k = bufferLength / 16;
 15572  00C388  C035  F001         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 15573  00C38C  6A02               	clrf	___awdiv@dividend+1,c
 15574  00C38E  0E00               	movlw	0
 15575  00C390  6E04               	movwf	___awdiv@divisor+1,c
 15576  00C392  0E10               	movlw	16
 15577  00C394  6E03               	movwf	___awdiv@divisor,c
 15578  00C396  EC81  F051         	call	___awdiv	;wreg free
 15579  00C39A  5001               	movf	?___awdiv,w,c
 15580  00C39C  6E46               	movwf	EncryptFRMPayload@k,c
 15581                           
 15582                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 15583  00C39E  0E01               	movlw	1
 15584  00C3A0  6E47               	movwf	EncryptFRMPayload@i,c
 15585  00C3A2  D052               	goto	l13446
 15586  00C3A4                     l13426:
 15587                           
 15588                           ;lorawan.c: 2211: {;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01
      +                          , multicastStatus);
 15589  00C3A4  C037  F00C         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 15590  00C3A8  C038  F00D         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 15591  00C3AC  C039  F00E         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 15592  00C3B0  C03A  F00F         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 15593  00C3B4  C047  F010         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 15594  00C3B8  0E01               	movlw	1
 15595  00C3BA  6E11               	movwf	AssembleEncryptionBlock@firstByte,c
 15596  00C3BC  C040  F012         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 15597  00C3C0  5036               	movf	EncryptFRMPayload@dir,w,c
 15598  00C3C2  EC85  F055         	call	_AssembleEncryptionBlock
 15599                           
 15600                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 15601  00C3C6  0E4E               	movlw	low _aesBuffer
 15602  00C3C8  6E1F               	movwf	AESEncodeLoRa@block,c
 15603  00C3CA  0E01               	movlw	high _aesBuffer
 15604  00C3CC  6E20               	movwf	AESEncodeLoRa@block+1,c
 15605  00C3CE  C03B  F021         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 15606  00C3D2  C03C  F022         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 15607  00C3D6  EC5B  F048         	call	_AESEncodeLoRa	;wreg free
 15608                           
 15609                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 15610  00C3DA  0E00               	movlw	0
 15611  00C3DC  6E48               	movwf	EncryptFRMPayload@j,c
 15612  00C3DE                     l13436:
 15613                           
 15614                           ;lorawan.c: 2216: {;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j
      +                          ] ^ buffer[16*(i-1) + j];
 15615  00C3DE  503D               	movf	EncryptFRMPayload@macBufferIndex,w,c
 15616  00C3E0  243E               	addwf	EncryptFRMPayload@bufferToBeEncrypted,w,c
 15617  00C3E2  6ED9               	movwf	fsr2l,c
 15618  00C3E4  0E00               	movlw	0
 15619  00C3E6  203F               	addwfc	EncryptFRMPayload@bufferToBeEncrypted+1,w,c
 15620  00C3E8  6EDA               	movwf	fsr2h,c
 15621  00C3EA  5047               	movf	EncryptFRMPayload@i,w,c
 15622  00C3EC  6E41               	movwf	??_EncryptFRMPayload& (0+255),c
 15623  00C3EE  6A42               	clrf	(??_EncryptFRMPayload+1)& (0+255),c
 15624  00C3F0  3A41               	swapf	??_EncryptFRMPayload,f,c
 15625  00C3F2  3A42               	swapf	??_EncryptFRMPayload+1,f,c
 15626  00C3F4  0EF0               	movlw	240
 15627  00C3F6  1642               	andwf	??_EncryptFRMPayload+1,f,c
 15628  00C3F8  5041               	movf	??_EncryptFRMPayload,w,c
 15629  00C3FA  0B0F               	andlw	15
 15630  00C3FC  1242               	iorwf	??_EncryptFRMPayload+1,f,c
 15631  00C3FE  0EF0               	movlw	240
 15632  00C400  1641               	andwf	??_EncryptFRMPayload,f,c
 15633  00C402  C033  F043         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 15634  00C406  C034  F044         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 15635  00C40A  5041               	movf	??_EncryptFRMPayload,w,c
 15636  00C40C  2643               	addwf	??_EncryptFRMPayload+2,f,c
 15637  00C40E  5042               	movf	??_EncryptFRMPayload+1,w,c
 15638  00C410  2244               	addwfc	??_EncryptFRMPayload+3,f,c
 15639  00C412  5048               	movf	EncryptFRMPayload@j,w,c
 15640  00C414  2643               	addwf	??_EncryptFRMPayload+2,f,c
 15641  00C416  0E00               	movlw	0
 15642  00C418  2244               	addwfc	??_EncryptFRMPayload+3,f,c
 15643  00C41A  0EF0               	movlw	240
 15644  00C41C  2443               	addwf	??_EncryptFRMPayload+2,w,c
 15645  00C41E  6EE1               	movwf	fsr1l,c
 15646  00C420  0EFF               	movlw	255
 15647  00C422  2044               	addwfc	??_EncryptFRMPayload+3,w,c
 15648  00C424  6EE2               	movwf	fsr1h,c
 15649  00C426  50E7               	movf	indf1,w,c
 15650  00C428  6E45               	movwf	(??_EncryptFRMPayload+4)& (0+255),c
 15651  00C42A  0E4E               	movlw	low _aesBuffer
 15652  00C42C  2448               	addwf	EncryptFRMPayload@j,w,c
 15653  00C42E  6EE1               	movwf	fsr1l,c
 15654  00C430  6AE2               	clrf	fsr1h,c
 15655  00C432  0E01               	movlw	high _aesBuffer
 15656  00C434  22E2               	addwfc	fsr1h,f,c
 15657  00C436  50E7               	movf	indf1,w,c
 15658  00C438  1845               	xorwf	??_EncryptFRMPayload+4,w,c
 15659  00C43A  6EDF               	movwf	indf2,c
 15660  00C43C  2A3D               	incf	EncryptFRMPayload@macBufferIndex,f,c
 15661  00C43E  2A48               	incf	EncryptFRMPayload@j,f,c
 15662  00C440  0E0F               	movlw	15
 15663  00C442  6448               	cpfsgt	EncryptFRMPayload@j,c
 15664  00C444  D7CC               	goto	l13436
 15665  00C446  2A47               	incf	EncryptFRMPayload@i,f,c
 15666  00C448                     l13446:
 15667  00C448  5047               	movf	EncryptFRMPayload@i,w,c
 15668  00C44A  5C46               	subwf	EncryptFRMPayload@k,w,c
 15669  00C44C  B0D8               	btfsc	status,0,c
 15670  00C44E  D7AA               	goto	l13426
 15671                           
 15672                           ;lorawan.c: 2218: };lorawan.c: 2219: };lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 15673  00C450  C035  F041         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 15674  00C454  0E0F               	movlw	15
 15675  00C456  1641               	andwf	??_EncryptFRMPayload,f,c
 15676  00C458  B4D8               	btfsc	status,2,c
 15677  00C45A  0012               	return	
 15678                           
 15679                           ;lorawan.c: 2222: {;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01
      +                          , multicastStatus);
 15680  00C45C  C037  F00C         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 15681  00C460  C038  F00D         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 15682  00C464  C039  F00E         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 15683  00C468  C03A  F00F         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 15684  00C46C  C047  F010         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 15685  00C470  0E01               	movlw	1
 15686  00C472  6E11               	movwf	AssembleEncryptionBlock@firstByte,c
 15687  00C474  C040  F012         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 15688  00C478  5036               	movf	EncryptFRMPayload@dir,w,c
 15689  00C47A  EC85  F055         	call	_AssembleEncryptionBlock
 15690                           
 15691                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 15692  00C47E  0E4E               	movlw	low _aesBuffer
 15693  00C480  6E1F               	movwf	AESEncodeLoRa@block,c
 15694  00C482  0E01               	movlw	high _aesBuffer
 15695  00C484  6E20               	movwf	AESEncodeLoRa@block+1,c
 15696  00C486  C03B  F021         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 15697  00C48A  C03C  F022         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 15698  00C48E  EC5B  F048         	call	_AESEncodeLoRa	;wreg free
 15699                           
 15700                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 15701  00C492  0E00               	movlw	0
 15702  00C494  6E48               	movwf	EncryptFRMPayload@j,c
 15703  00C496  D023               	goto	l13462
 15704  00C498                     l13456:
 15705                           
 15706                           ;lorawan.c: 2227: {;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j
      +                          ] ^ buffer[(16*k) + j];
 15707  00C498  503D               	movf	EncryptFRMPayload@macBufferIndex,w,c
 15708  00C49A  243E               	addwf	EncryptFRMPayload@bufferToBeEncrypted,w,c
 15709  00C49C  6ED9               	movwf	fsr2l,c
 15710  00C49E  0E00               	movlw	0
 15711  00C4A0  203F               	addwfc	EncryptFRMPayload@bufferToBeEncrypted+1,w,c
 15712  00C4A2  6EDA               	movwf	fsr2h,c
 15713  00C4A4  5046               	movf	EncryptFRMPayload@k,w,c
 15714  00C4A6  0D10               	mullw	16
 15715  00C4A8  C033  F041         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 15716  00C4AC  C034  F042         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 15717  00C4B0  50F3               	movf	prodl,w,c
 15718  00C4B2  2641               	addwf	??_EncryptFRMPayload,f,c
 15719  00C4B4  50F4               	movf	prodh,w,c
 15720  00C4B6  2242               	addwfc	??_EncryptFRMPayload+1,f,c
 15721  00C4B8  5048               	movf	EncryptFRMPayload@j,w,c
 15722  00C4BA  2441               	addwf	??_EncryptFRMPayload,w,c
 15723  00C4BC  6EE1               	movwf	fsr1l,c
 15724  00C4BE  0E00               	movlw	0
 15725  00C4C0  2042               	addwfc	??_EncryptFRMPayload+1,w,c
 15726  00C4C2  6EE2               	movwf	fsr1h,c
 15727  00C4C4  50E7               	movf	indf1,w,c
 15728  00C4C6  6E43               	movwf	(??_EncryptFRMPayload+2)& (0+255),c
 15729  00C4C8  0E4E               	movlw	low _aesBuffer
 15730  00C4CA  2448               	addwf	EncryptFRMPayload@j,w,c
 15731  00C4CC  6EE1               	movwf	fsr1l,c
 15732  00C4CE  6AE2               	clrf	fsr1h,c
 15733  00C4D0  0E01               	movlw	high _aesBuffer
 15734  00C4D2  22E2               	addwfc	fsr1h,f,c
 15735  00C4D4  50E7               	movf	indf1,w,c
 15736  00C4D6  1843               	xorwf	??_EncryptFRMPayload+2,w,c
 15737  00C4D8  6EDF               	movwf	indf2,c
 15738  00C4DA  2A3D               	incf	EncryptFRMPayload@macBufferIndex,f,c
 15739  00C4DC  2A48               	incf	EncryptFRMPayload@j,f,c
 15740  00C4DE                     l13462:
 15741  00C4DE  C035  F041         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 15742  00C4E2  0E0F               	movlw	15
 15743  00C4E4  1641               	andwf	??_EncryptFRMPayload,f,c
 15744  00C4E6  5041               	movf	??_EncryptFRMPayload,w,c
 15745  00C4E8  5C48               	subwf	EncryptFRMPayload@j,w,c
 15746  00C4EA  B0D8               	btfsc	status,0,c
 15747  00C4EC  0012               	return	
 15748  00C4EE  D7D4               	goto	l13456
 15749  00C4F0                     __end_of_EncryptFRMPayload:
 15750                           	opt callstack 0
 15751                           
 15752 ;; *************** function ___awdiv *****************
 15753 ;; Defined at:
 15754 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 15755 ;; Parameters:    Size  Location     Type
 15756 ;;  dividend        2    0[COMRAM] int 
 15757 ;;  divisor         2    2[COMRAM] int 
 15758 ;; Auto vars:     Size  Location     Type
 15759 ;;  quotient        2    6[COMRAM] int 
 15760 ;;  sign            1    5[COMRAM] unsigned char 
 15761 ;;  counter         1    4[COMRAM] unsigned char 
 15762 ;; Return value:  Size  Location     Type
 15763 ;;                  2    0[COMRAM] int 
 15764 ;; Registers used:
 15765 ;;		wreg, status,2, status,0
 15766 ;; Tracked objects:
 15767 ;;		On entry : 0/0
 15768 ;;		On exit  : 0/0
 15769 ;;		Unchanged: 0/0
 15770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15771 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15772 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15774 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15775 ;;Total ram usage:        8 bytes
 15776 ;; Hardware stack levels used:    1
 15777 ;; This function calls:
 15778 ;;		Nothing
 15779 ;; This function is called by:
 15780 ;;		_EncryptFRMPayload
 15781 ;; This function uses a non-reentrant model
 15782 ;;
 15783                           
 15784                           	psect	text96
 15785  00A302                     __ptext96:
 15786                           	opt callstack 0
 15787  00A302                     ___awdiv:
 15788                           	opt callstack 24
 15789                           
 15790                           ;incstack = 0
 15791  00A302  0E00               	movlw	0
 15792  00A304  6E06               	movwf	___awdiv@sign,c
 15793  00A306  AE04               	btfss	___awdiv@divisor+1,7,c
 15794  00A308  D006               	goto	l8946
 15795  00A30A  6C03               	negf	___awdiv@divisor,c
 15796  00A30C  1E04               	comf	___awdiv@divisor+1,f,c
 15797  00A30E  B0D8               	btfsc	status,0,c
 15798  00A310  2A04               	incf	___awdiv@divisor+1,f,c
 15799  00A312  0E01               	movlw	1
 15800  00A314  6E06               	movwf	___awdiv@sign,c
 15801  00A316                     l8946:
 15802  00A316  AE02               	btfss	___awdiv@dividend+1,7,c
 15803  00A318  D006               	goto	l8952
 15804  00A31A  6C01               	negf	___awdiv@dividend,c
 15805  00A31C  1E02               	comf	___awdiv@dividend+1,f,c
 15806  00A31E  B0D8               	btfsc	status,0,c
 15807  00A320  2A02               	incf	___awdiv@dividend+1,f,c
 15808  00A322  0E01               	movlw	1
 15809  00A324  1A06               	xorwf	___awdiv@sign,f,c
 15810  00A326                     l8952:
 15811  00A326  0E00               	movlw	0
 15812  00A328  6E08               	movwf	___awdiv@quotient+1,c
 15813  00A32A  0E00               	movlw	0
 15814  00A32C  6E07               	movwf	___awdiv@quotient,c
 15815  00A32E  5003               	movf	___awdiv@divisor,w,c
 15816  00A330  1004               	iorwf	___awdiv@divisor+1,w,c
 15817  00A332  B4D8               	btfsc	status,2,c
 15818  00A334  D01C               	goto	l8974
 15819  00A336  0E01               	movlw	1
 15820  00A338  6E05               	movwf	___awdiv@counter,c
 15821  00A33A  D004               	goto	l8960
 15822  00A33C                     l8958:
 15823  00A33C  90D8               	bcf	status,0,c
 15824  00A33E  3603               	rlcf	___awdiv@divisor,f,c
 15825  00A340  3604               	rlcf	___awdiv@divisor+1,f,c
 15826  00A342  2A05               	incf	___awdiv@counter,f,c
 15827  00A344                     l8960:
 15828  00A344  AE04               	btfss	___awdiv@divisor+1,7,c
 15829  00A346  D7FA               	goto	l8958
 15830  00A348                     u7860:
 15831  00A348  90D8               	bcf	status,0,c
 15832  00A34A  3607               	rlcf	___awdiv@quotient,f,c
 15833  00A34C  3608               	rlcf	___awdiv@quotient+1,f,c
 15834  00A34E  5003               	movf	___awdiv@divisor,w,c
 15835  00A350  5C01               	subwf	___awdiv@dividend,w,c
 15836  00A352  5004               	movf	___awdiv@divisor+1,w,c
 15837  00A354  5802               	subwfb	___awdiv@dividend+1,w,c
 15838  00A356  A0D8               	btfss	status,0,c
 15839  00A358  D005               	goto	l8970
 15840  00A35A  5003               	movf	___awdiv@divisor,w,c
 15841  00A35C  5E01               	subwf	___awdiv@dividend,f,c
 15842  00A35E  5004               	movf	___awdiv@divisor+1,w,c
 15843  00A360  5A02               	subwfb	___awdiv@dividend+1,f,c
 15844  00A362  8007               	bsf	___awdiv@quotient,0,c
 15845  00A364                     l8970:
 15846  00A364  90D8               	bcf	status,0,c
 15847  00A366  3204               	rrcf	___awdiv@divisor+1,f,c
 15848  00A368  3203               	rrcf	___awdiv@divisor,f,c
 15849  00A36A  2E05               	decfsz	___awdiv@counter,f,c
 15850  00A36C  D7ED               	goto	u7860
 15851  00A36E                     l8974:
 15852  00A36E  5006               	movf	___awdiv@sign,w,c
 15853  00A370  B4D8               	btfsc	status,2,c
 15854  00A372  D004               	goto	l8978
 15855  00A374  6C07               	negf	___awdiv@quotient,c
 15856  00A376  1E08               	comf	___awdiv@quotient+1,f,c
 15857  00A378  B0D8               	btfsc	status,0,c
 15858  00A37A  2A08               	incf	___awdiv@quotient+1,f,c
 15859  00A37C                     l8978:
 15860  00A37C  C007  F001         	movff	___awdiv@quotient,?___awdiv
 15861  00A380  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 15862  00A384  0012               	return		;funcret
 15863  00A386                     __end_of___awdiv:
 15864                           	opt callstack 0
 15865                           
 15866 ;; *************** function _AssembleEncryptionBlock *****************
 15867 ;; Defined at:
 15868 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15869 ;; Parameters:    Size  Location     Type
 15870 ;;  dir             1    wreg     unsigned char 
 15871 ;;  frameCounter    4   11[COMRAM] unsigned long 
 15872 ;;  blockId         1   15[COMRAM] unsigned char 
 15873 ;;  firstByte       1   16[COMRAM] unsigned char 
 15874 ;;  multicastSta    1   17[COMRAM] unsigned char 
 15875 ;; Auto vars:     Size  Location     Type
 15876 ;;  dir             1   18[COMRAM] unsigned char 
 15877 ;;  bufferIndex     1   19[COMRAM] unsigned char 
 15878 ;; Return value:  Size  Location     Type
 15879 ;;                  1    wreg      void 
 15880 ;; Registers used:
 15881 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15882 ;; Tracked objects:
 15883 ;;		On entry : 0/0
 15884 ;;		On exit  : 0/0
 15885 ;;		Unchanged: 0/0
 15886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15887 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15890 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15891 ;;Total ram usage:        9 bytes
 15892 ;; Hardware stack levels used:    1
 15893 ;; Hardware stack levels required when called:    1
 15894 ;; This function calls:
 15895 ;;		_memcpy
 15896 ;;		_memset
 15897 ;; This function is called by:
 15898 ;;		_LORAWAN_RxDone
 15899 ;;		_AssemblePacket
 15900 ;;		_EncryptFRMPayload
 15901 ;; This function uses a non-reentrant model
 15902 ;;
 15903                           
 15904                           	psect	text97
 15905  00AB0A                     __ptext97:
 15906                           	opt callstack 0
 15907  00AB0A                     _AssembleEncryptionBlock:
 15908                           	opt callstack 23
 15909                           
 15910                           ;incstack = 0
 15911                           ;AssembleEncryptionBlock@dir stored from wreg
 15912  00AB0A  6E13               	movwf	AssembleEncryptionBlock@dir,c
 15913                           
 15914                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 15915  00AB0C  0E00               	movlw	0
 15916  00AB0E  6E14               	movwf	AssembleEncryptionBlock@bufferIndex,c
 15917                           
 15918                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 15919  00AB10  0E4E               	movlw	low _aesBuffer
 15920  00AB12  6E01               	movwf	memset@p1,c
 15921  00AB14  0E01               	movlw	high _aesBuffer
 15922  00AB16  6E02               	movwf	memset@p1+1,c
 15923  00AB18  0E00               	movlw	0
 15924  00AB1A  6E04               	movwf	memset@c+1,c
 15925  00AB1C  0E00               	movlw	0
 15926  00AB1E  6E03               	movwf	memset@c,c
 15927  00AB20  0E00               	movlw	0
 15928  00AB22  6E06               	movwf	memset@n+1,c
 15929  00AB24  0E10               	movlw	16
 15930  00AB26  6E05               	movwf	memset@n,c
 15931  00AB28  EC7A  F047         	call	_memset	;wreg free
 15932                           
 15933                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 15934  00AB2C  C011  F14E         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 15935                           
 15936                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 15937  00AB30  5014               	movf	AssembleEncryptionBlock@bufferIndex,w,c
 15938  00AB32  0F05               	addlw	5
 15939  00AB34  6E14               	movwf	AssembleEncryptionBlock@bufferIndex,c
 15940                           
 15941                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 15942  00AB36  0E4E               	movlw	low _aesBuffer
 15943  00AB38  2414               	addwf	AssembleEncryptionBlock@bufferIndex,w,c
 15944  00AB3A  6ED9               	movwf	fsr2l,c
 15945  00AB3C  6ADA               	clrf	fsr2h,c
 15946  00AB3E  0E01               	movlw	high _aesBuffer
 15947  00AB40  22DA               	addwfc	fsr2h,f,c
 15948  00AB42  C013  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 15949  00AB46  2A14               	incf	AssembleEncryptionBlock@bufferIndex,f,c
 15950                           
 15951                           ;lorawan.c: 2168: if (0 == multicastStatus)
 15952  00AB48  5012               	movf	AssembleEncryptionBlock@multicastStatus,w,c
 15953  00AB4A  A4D8               	btfss	status,2,c
 15954  00AB4C  D014               	goto	l13170
 15955                           
 15956                           ;lorawan.c: 2169: {;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationPa
      +                          rameters.deviceAddress, sizeof (loRa.activationParameters.deviceAddress));
 15957  00AB4E  0E4E               	movlw	low _aesBuffer
 15958  00AB50  2414               	addwf	AssembleEncryptionBlock@bufferIndex,w,c
 15959  00AB52  6E01               	movwf	memcpy@d1,c
 15960  00AB54  6A02               	clrf	memcpy@d1+1,c
 15961  00AB56  0E01               	movlw	high _aesBuffer
 15962  00AB58  2202               	addwfc	memcpy@d1+1,f,c
 15963  00AB5A  0E1E               	movlw	low (_loRa+30)
 15964  00AB5C  6E03               	movwf	memcpy@s1,c
 15965  00AB5E  0E02               	movlw	high (_loRa+30)
 15966  00AB60  6E04               	movwf	memcpy@s1+1,c
 15967  00AB62  0E00               	movlw	0
 15968  00AB64  6E06               	movwf	memcpy@n+1,c
 15969  00AB66  0E04               	movlw	4
 15970  00AB68  6E05               	movwf	memcpy@n,c
 15971  00AB6A  EC56  F04C         	call	_memcpy	;wreg free
 15972  00AB6E                     l13168:
 15973                           
 15974                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 15975  00AB6E  5014               	movf	AssembleEncryptionBlock@bufferIndex,w,c
 15976  00AB70  0F04               	addlw	4
 15977  00AB72  6E14               	movwf	AssembleEncryptionBlock@bufferIndex,c
 15978                           
 15979                           ;lorawan.c: 2172: }
 15980  00AB74  D011               	goto	l13174
 15981  00AB76                     l13170:
 15982                           
 15983                           ;lorawan.c: 2173: else;lorawan.c: 2174: {;lorawan.c: 2175: memcpy (&aesBuffer[bufferInde
      +                          x], &loRa.activationParameters.mcastDeviceAddress, sizeof (loRa.activationParameters.mca
      +                          stDeviceAddress));
 15984  00AB76  0E4E               	movlw	low _aesBuffer
 15985  00AB78  2414               	addwf	AssembleEncryptionBlock@bufferIndex,w,c
 15986  00AB7A  6E01               	movwf	memcpy@d1,c
 15987  00AB7C  6A02               	clrf	memcpy@d1+1,c
 15988  00AB7E  0E01               	movlw	high _aesBuffer
 15989  00AB80  2202               	addwfc	memcpy@d1+1,f,c
 15990  00AB82  0E62               	movlw	low (_loRa+98)
 15991  00AB84  6E03               	movwf	memcpy@s1,c
 15992  00AB86  0E02               	movlw	high (_loRa+98)
 15993  00AB88  6E04               	movwf	memcpy@s1+1,c
 15994  00AB8A  0E00               	movlw	0
 15995  00AB8C  6E06               	movwf	memcpy@n+1,c
 15996  00AB8E  0E04               	movlw	4
 15997  00AB90  6E05               	movwf	memcpy@n,c
 15998  00AB92  EC56  F04C         	call	_memcpy	;wreg free
 15999  00AB96  D7EB               	goto	l13168
 16000  00AB98                     l13174:
 16001                           
 16002                           ;lorawan.c: 2177: };lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, siz
      +                          eof (frameCounter));
 16003  00AB98  0E4E               	movlw	low _aesBuffer
 16004  00AB9A  2414               	addwf	AssembleEncryptionBlock@bufferIndex,w,c
 16005  00AB9C  6E01               	movwf	memcpy@d1,c
 16006  00AB9E  6A02               	clrf	memcpy@d1+1,c
 16007  00ABA0  0E01               	movlw	high _aesBuffer
 16008  00ABA2  2202               	addwfc	memcpy@d1+1,f,c
 16009  00ABA4  0E0C               	movlw	low AssembleEncryptionBlock@frameCounter
 16010  00ABA6  6E03               	movwf	memcpy@s1,c
 16011  00ABA8  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 16012  00ABAA  6E04               	movwf	memcpy@s1+1,c
 16013  00ABAC  0E00               	movlw	0
 16014  00ABAE  6E06               	movwf	memcpy@n+1,c
 16015  00ABB0  0E04               	movlw	4
 16016  00ABB2  6E05               	movwf	memcpy@n,c
 16017  00ABB4  EC56  F04C         	call	_memcpy	;wreg free
 16018                           
 16019                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 16020  00ABB8  5014               	movf	AssembleEncryptionBlock@bufferIndex,w,c
 16021  00ABBA  0F04               	addlw	4
 16022  00ABBC  6E14               	movwf	AssembleEncryptionBlock@bufferIndex,c
 16023                           
 16024                           ;lorawan.c: 2182: bufferIndex ++;
 16025  00ABBE  2A14               	incf	AssembleEncryptionBlock@bufferIndex,f,c
 16026                           
 16027                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 16028  00ABC0  0E4E               	movlw	low _aesBuffer
 16029  00ABC2  2414               	addwf	AssembleEncryptionBlock@bufferIndex,w,c
 16030  00ABC4  6ED9               	movwf	fsr2l,c
 16031  00ABC6  6ADA               	clrf	fsr2h,c
 16032  00ABC8  0E01               	movlw	high _aesBuffer
 16033  00ABCA  22DA               	addwfc	fsr2h,f,c
 16034  00ABCC  C010  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 16035  00ABD0  0012               	return		;funcret
 16036  00ABD2                     __end_of_AssembleEncryptionBlock:
 16037                           	opt callstack 0
 16038                           
 16039 ;; *************** function _CountfOptsLength *****************
 16040 ;; Defined at:
 16041 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16042 ;; Parameters:    Size  Location     Type
 16043 ;;		None
 16044 ;; Auto vars:     Size  Location     Type
 16045 ;;  i               1    7[COMRAM] unsigned char 
 16046 ;;  macCommandLe    1    6[COMRAM] unsigned char 
 16047 ;; Return value:  Size  Location     Type
 16048 ;;                  1    wreg      unsigned char 
 16049 ;; Registers used:
 16050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 16051 ;; Tracked objects:
 16052 ;;		On entry : 0/0
 16053 ;;		On exit  : 0/0
 16054 ;;		Unchanged: 0/0
 16055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16057 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16058 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16059 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16060 ;;Total ram usage:        8 bytes
 16061 ;; Hardware stack levels used:    1
 16062 ;; This function calls:
 16063 ;;		Nothing
 16064 ;; This function is called by:
 16065 ;;		_LORAWAN_GetMaxPayloadSize
 16066 ;;		_AssemblePacket
 16067 ;; This function uses a non-reentrant model
 16068 ;;
 16069                           
 16070                           	psect	text98
 16071  00AA44                     __ptext98:
 16072                           	opt callstack 0
 16073  00AA44                     _CountfOptsLength:
 16074                           	opt callstack 25
 16075                           
 16076                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 16077                           
 16078                           ;incstack = 0
 16079  00AA44  0E00               	movlw	0
 16080  00AA46  6E07               	movwf	CountfOptsLength@macCommandLength,c
 16081                           
 16082                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 16083  00AA48  0E00               	movlw	0
 16084  00AA4A  6E08               	movwf	CountfOptsLength@i,c
 16085  00AA4C  D057               	goto	l9474
 16086  00AA4E                     l9466:
 16087                           
 16088                           ; BSR set to: 2
 16089                           ;lorawan.c: 2139: {;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 16090  00AA4E  5008               	movf	CountfOptsLength@i,w,c
 16091  00AA50  0D02               	mullw	2
 16092  00AA52  0EA8               	movlw	low (_loRa+168)
 16093  00AA54  24F3               	addwf	prodl,w,c
 16094  00AA56  6ED9               	movwf	fsr2l,c
 16095  00AA58  0E02               	movlw	high (_loRa+168)
 16096  00AA5A  20F4               	addwfc	prodh,w,c
 16097  00AA5C  6EDA               	movwf	fsr2h,c
 16098  00AA5E  28DE               	incf	postinc2,w,c
 16099  00AA60  B4D8               	btfsc	status,2,c
 16100  00AA62  D04B               	goto	l9472
 16101                           
 16102                           ; BSR set to: 2
 16103                           ;lorawan.c: 2141: {;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.ma
      +                          cCommands[i].receivedCid - 2]) <= 0x0F)
 16104  00AA64  0EFE               	movlw	254
 16105  00AA66  6E01               	movwf	??_CountfOptsLength& (0+255),c
 16106  00AA68  0EFF               	movlw	255
 16107  00AA6A  6E02               	movwf	(??_CountfOptsLength+1)& (0+255),c
 16108  00AA6C  5008               	movf	CountfOptsLength@i,w,c
 16109  00AA6E  0D02               	mullw	2
 16110  00AA70  0EA8               	movlw	low (_loRa+168)
 16111  00AA72  24F3               	addwf	prodl,w,c
 16112  00AA74  6ED9               	movwf	fsr2l,c
 16113  00AA76  0E02               	movlw	high (_loRa+168)
 16114  00AA78  20F4               	addwfc	prodh,w,c
 16115  00AA7A  6EDA               	movwf	fsr2h,c
 16116  00AA7C  50DF               	movf	indf2,w,c
 16117  00AA7E  6E03               	movwf	(??_CountfOptsLength+2)& (0+255),c
 16118  00AA80  6A04               	clrf	(??_CountfOptsLength+3)& (0+255),c
 16119  00AA82  5001               	movf	??_CountfOptsLength,w,c
 16120  00AA84  2603               	addwf	??_CountfOptsLength+2,f,c
 16121  00AA86  5002               	movf	??_CountfOptsLength+1,w,c
 16122  00AA88  2204               	addwfc	??_CountfOptsLength+3,f,c
 16123  00AA8A  0E87               	movlw	low _macEndDevCmdReplyLen
 16124  00AA8C  2403               	addwf	??_CountfOptsLength+2,w,c
 16125  00AA8E  6EF6               	movwf	tblptrl,c
 16126  00AA90  0EFF               	movlw	high _macEndDevCmdReplyLen
 16127  00AA92  2004               	addwfc	??_CountfOptsLength+3,w,c
 16128  00AA94  6EF7               	movwf	tblptrh,c
 16129  00AA96                     	if	1	;There are 3 active tblptr bytes
 16130  00AA96  6AF8               	clrf	tblptru,c
 16131  00AA98  0E00               	movlw	low (__mediumconst shr (0+16))
 16132  00AA9A  22F8               	addwfc	tblptru,f,c
 16133  00AA9C                     	endif
 16134  00AA9C  0008               	tblrd		*
 16135  00AA9E  50F5               	movf	tablat,w,c
 16136  00AAA0  C007  F005         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 16137  00AAA4  6A06               	clrf	(??_CountfOptsLength+5)& (0+255),c
 16138  00AAA6  2605               	addwf	??_CountfOptsLength+4,f,c
 16139  00AAA8  0E00               	movlw	0
 16140  00AAAA  2206               	addwfc	??_CountfOptsLength+5,f,c
 16141  00AAAC  BE06               	btfsc	??_CountfOptsLength+5,7,c
 16142  00AAAE  D006               	goto	u8680
 16143  00AAB0  5006               	movf	??_CountfOptsLength+5,w,c
 16144  00AAB2  E129               	bnz	l9476
 16145  00AAB4  0E10               	movlw	16
 16146  00AAB6  5C05               	subwf	??_CountfOptsLength+4,w,c
 16147  00AAB8  B0D8               	btfsc	status,0,c
 16148  00AABA  D025               	goto	u8690
 16149  00AABC                     u8680:
 16150                           
 16151                           ; BSR set to: 2
 16152                           ;lorawan.c: 2143: {;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCo
      +                          mmands[i].receivedCid - 2];
 16153  00AABC  0EFE               	movlw	254
 16154  00AABE  6E01               	movwf	??_CountfOptsLength& (0+255),c
 16155  00AAC0  0EFF               	movlw	255
 16156  00AAC2  6E02               	movwf	(??_CountfOptsLength+1)& (0+255),c
 16157  00AAC4  5008               	movf	CountfOptsLength@i,w,c
 16158  00AAC6  0D02               	mullw	2
 16159  00AAC8  0EA8               	movlw	low (_loRa+168)
 16160  00AACA  24F3               	addwf	prodl,w,c
 16161  00AACC  6ED9               	movwf	fsr2l,c
 16162  00AACE  0E02               	movlw	high (_loRa+168)
 16163  00AAD0  20F4               	addwfc	prodh,w,c
 16164  00AAD2  6EDA               	movwf	fsr2h,c
 16165  00AAD4  50DF               	movf	indf2,w,c
 16166  00AAD6  6E03               	movwf	(??_CountfOptsLength+2)& (0+255),c
 16167  00AAD8  6A04               	clrf	(??_CountfOptsLength+3)& (0+255),c
 16168  00AADA  5001               	movf	??_CountfOptsLength,w,c
 16169  00AADC  2603               	addwf	??_CountfOptsLength+2,f,c
 16170  00AADE  5002               	movf	??_CountfOptsLength+1,w,c
 16171  00AAE0  2204               	addwfc	??_CountfOptsLength+3,f,c
 16172  00AAE2  0E87               	movlw	low _macEndDevCmdReplyLen
 16173  00AAE4  2403               	addwf	??_CountfOptsLength+2,w,c
 16174  00AAE6  6EF6               	movwf	tblptrl,c
 16175  00AAE8  0EFF               	movlw	high _macEndDevCmdReplyLen
 16176  00AAEA  2004               	addwfc	??_CountfOptsLength+3,w,c
 16177  00AAEC  6EF7               	movwf	tblptrh,c
 16178  00AAEE                     	if	1	;There are 3 active tblptr bytes
 16179  00AAEE  6AF8               	clrf	tblptru,c
 16180  00AAF0  0E00               	movlw	low (__mediumconst shr (0+16))
 16181  00AAF2  22F8               	addwfc	tblptru,f,c
 16182  00AAF4                     	endif
 16183  00AAF4  0008               	tblrd		*
 16184  00AAF6  50F5               	movf	tablat,w,c
 16185  00AAF8  2607               	addwf	CountfOptsLength@macCommandLength,f,c
 16186  00AAFA                     l9472:
 16187                           
 16188                           ; BSR set to: 2
 16189  00AAFA  2A08               	incf	CountfOptsLength@i,f,c
 16190  00AAFC                     l9474:
 16191  00AAFC  0102               	movlb	2	; () banked
 16192  00AAFE  51A7               	movf	(_loRa+167)& (0+255),w,b
 16193  00AB00  5C08               	subwf	CountfOptsLength@i,w,c
 16194  00AB02  A0D8               	btfss	status,0,c
 16195  00AB04  D7A4               	goto	l9466
 16196  00AB06                     u8690:
 16197  00AB06                     l9476:
 16198                           
 16199                           ; BSR set to: 2
 16200                           ;lorawan.c: 2149: };lorawan.c: 2150: };lorawan.c: 2151: };lorawan.c: 2153: return macCom
      +                          mandLength;
 16201  00AB06  5007               	movf	CountfOptsLength@macCommandLength,w,c
 16202                           
 16203                           ; BSR set to: 2
 16204  00AB08  0012               	return		;funcret
 16205  00AB0A                     __end_of_CountfOptsLength:
 16206                           	opt callstack 0
 16207                           
 16208 ;; *************** function _ExtractMic *****************
 16209 ;; Defined at:
 16210 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16211 ;; Parameters:    Size  Location     Type
 16212 ;;  buffer          2   11[COMRAM] PTR unsigned char 
 16213 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16214 ;;  bufferLength    1   13[COMRAM] unsigned char 
 16215 ;; Auto vars:     Size  Location     Type
 16216 ;;  mic             4   17[COMRAM] unsigned long 
 16217 ;; Return value:  Size  Location     Type
 16218 ;;                  4   11[COMRAM] unsigned long 
 16219 ;; Registers used:
 16220 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16221 ;; Tracked objects:
 16222 ;;		On entry : 0/0
 16223 ;;		On exit  : 0/0
 16224 ;;		Unchanged: 0/0
 16225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16227 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16229 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16230 ;;Total ram usage:       10 bytes
 16231 ;; Hardware stack levels used:    1
 16232 ;; Hardware stack levels required when called:    1
 16233 ;; This function calls:
 16234 ;;		_memcpy
 16235 ;; This function is called by:
 16236 ;;		_LORAWAN_RxDone
 16237 ;; This function uses a non-reentrant model
 16238 ;;
 16239                           
 16240                           	psect	text99
 16241  009524                     __ptext99:
 16242                           	opt callstack 0
 16243  009524                     _ExtractMic:
 16244                           	opt callstack 25
 16245                           
 16246                           ;lorawan.c: 2189: uint32_t mic = 0;
 16247                           
 16248                           ; BSR set to: 2
 16249                           ;incstack = 0
 16250  009524  0E00               	movlw	0
 16251  009526  6E12               	movwf	ExtractMic@mic,c
 16252  009528  0E00               	movlw	0
 16253  00952A  6E13               	movwf	ExtractMic@mic+1,c
 16254  00952C  0E00               	movlw	0
 16255  00952E  6E14               	movwf	ExtractMic@mic+2,c
 16256  009530  0E00               	movlw	0
 16257  009532  6E15               	movwf	ExtractMic@mic+3,c
 16258                           
 16259                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 16260  009534  0E12               	movlw	low ExtractMic@mic
 16261  009536  6E01               	movwf	memcpy@d1,c
 16262  009538  0E00               	movlw	high ExtractMic@mic
 16263  00953A  6E02               	movwf	memcpy@d1+1,c
 16264  00953C  500E               	movf	ExtractMic@bufferLength,w,c
 16265  00953E  240C               	addwf	ExtractMic@buffer,w,c
 16266  009540  6E10               	movwf	??_ExtractMic& (0+255),c
 16267  009542  0E00               	movlw	0
 16268  009544  200D               	addwfc	ExtractMic@buffer+1,w,c
 16269  009546  6E11               	movwf	(??_ExtractMic+1)& (0+255),c
 16270  009548  0EFC               	movlw	252
 16271  00954A  2410               	addwf	??_ExtractMic,w,c
 16272  00954C  6E03               	movwf	memcpy@s1,c
 16273  00954E  0EFF               	movlw	255
 16274  009550  2011               	addwfc	??_ExtractMic+1,w,c
 16275  009552  6E04               	movwf	memcpy@s1+1,c
 16276  009554  0E00               	movlw	0
 16277  009556  6E06               	movwf	memcpy@n+1,c
 16278  009558  0E04               	movlw	4
 16279  00955A  6E05               	movwf	memcpy@n,c
 16280  00955C  EC56  F04C         	call	_memcpy	;wreg free
 16281                           
 16282                           ;lorawan.c: 2191: return mic;
 16283  009560  C012  F00C         	movff	ExtractMic@mic,?_ExtractMic
 16284  009564  C013  F00D         	movff	ExtractMic@mic+1,?_ExtractMic+1
 16285  009568  C014  F00E         	movff	ExtractMic@mic+2,?_ExtractMic+2
 16286  00956C  C015  F00F         	movff	ExtractMic@mic+3,?_ExtractMic+3
 16287  009570  0012               	return		;funcret
 16288  009572                     __end_of_ExtractMic:
 16289                           	opt callstack 0
 16290                           
 16291 ;; *************** function _ComputeSessionKeys *****************
 16292 ;; Defined at:
 16293 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;  joinAcceptBu    2   50[COMRAM] PTR struct .
 16296 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16297 ;; Auto vars:     Size  Location     Type
 16298 ;;		None
 16299 ;; Return value:  Size  Location     Type
 16300 ;;                  1    wreg      void 
 16301 ;; Registers used:
 16302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16303 ;; Tracked objects:
 16304 ;;		On entry : 0/0
 16305 ;;		On exit  : 0/0
 16306 ;;		Unchanged: 0/0
 16307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16312 ;;Total ram usage:        2 bytes
 16313 ;; Hardware stack levels used:    1
 16314 ;; Hardware stack levels required when called:    3
 16315 ;; This function calls:
 16316 ;;		_AESEncodeLoRa
 16317 ;;		_PrepareSessionKeys
 16318 ;; This function is called by:
 16319 ;;		_LORAWAN_RxDone
 16320 ;; This function uses a non-reentrant model
 16321 ;;
 16322                           
 16323                           	psect	text100
 16324  00A0FE                     __ptext100:
 16325                           	opt callstack 0
 16326  00A0FE                     _ComputeSessionKeys:
 16327                           	opt callstack 23
 16328                           
 16329                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 16330                           
 16331                           ;incstack = 0
 16332  00A0FE  0E32               	movlw	low (_loRa+50)
 16333  00A100  6E0C               	movwf	PrepareSessionKeys@sessionKey,c
 16334  00A102  0E02               	movlw	high (_loRa+50)
 16335  00A104  6E0D               	movwf	PrepareSessionKeys@sessionKey+1,c
 16336  00A106  0E01               	movlw	1
 16337  00A108  2433               	addwf	ComputeSessionKeys@joinAcceptBuffer,w,c
 16338  00A10A  6E0E               	movwf	PrepareSessionKeys@appNonce,c
 16339  00A10C  0E00               	movlw	0
 16340  00A10E  2034               	addwfc	ComputeSessionKeys@joinAcceptBuffer+1,w,c
 16341  00A110  6E0F               	movwf	PrepareSessionKeys@appNonce+1,c
 16342  00A112  0E04               	movlw	4
 16343  00A114  2433               	addwf	ComputeSessionKeys@joinAcceptBuffer,w,c
 16344  00A116  6E10               	movwf	PrepareSessionKeys@networkId,c
 16345  00A118  0E00               	movlw	0
 16346  00A11A  2034               	addwfc	ComputeSessionKeys@joinAcceptBuffer+1,w,c
 16347  00A11C  6E11               	movwf	PrepareSessionKeys@networkId+1,c
 16348  00A11E  EC20  F053         	call	_PrepareSessionKeys	;wreg free
 16349                           
 16350                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 16351  00A122  0E02               	movlw	2
 16352  00A124  0102               	movlb	2	; () banked
 16353  00A126  6F32               	movwf	(_loRa+50)& (0+255),b
 16354                           
 16355                           ; BSR set to: 2
 16356                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 16357  00A128  0E32               	movlw	low (_loRa+50)
 16358  00A12A  6E1F               	movwf	AESEncodeLoRa@block,c
 16359  00A12C  0E02               	movlw	high (_loRa+50)
 16360  00A12E  6E20               	movwf	AESEncodeLoRa@block+1,c
 16361  00A130  0E42               	movlw	low (_loRa+66)
 16362  00A132  6E21               	movwf	AESEncodeLoRa@key,c
 16363  00A134  0E02               	movlw	high (_loRa+66)
 16364  00A136  6E22               	movwf	AESEncodeLoRa@key+1,c
 16365  00A138  EC5B  F048         	call	_AESEncodeLoRa	;wreg free
 16366                           
 16367                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 16368  00A13C  0E22               	movlw	low (_loRa+34)
 16369  00A13E  6E0C               	movwf	PrepareSessionKeys@sessionKey,c
 16370  00A140  0E02               	movlw	high (_loRa+34)
 16371  00A142  6E0D               	movwf	PrepareSessionKeys@sessionKey+1,c
 16372  00A144  0E01               	movlw	1
 16373  00A146  2433               	addwf	ComputeSessionKeys@joinAcceptBuffer,w,c
 16374  00A148  6E0E               	movwf	PrepareSessionKeys@appNonce,c
 16375  00A14A  0E00               	movlw	0
 16376  00A14C  2034               	addwfc	ComputeSessionKeys@joinAcceptBuffer+1,w,c
 16377  00A14E  6E0F               	movwf	PrepareSessionKeys@appNonce+1,c
 16378  00A150  0E04               	movlw	4
 16379  00A152  2433               	addwf	ComputeSessionKeys@joinAcceptBuffer,w,c
 16380  00A154  6E10               	movwf	PrepareSessionKeys@networkId,c
 16381  00A156  0E00               	movlw	0
 16382  00A158  2034               	addwfc	ComputeSessionKeys@joinAcceptBuffer+1,w,c
 16383  00A15A  6E11               	movwf	PrepareSessionKeys@networkId+1,c
 16384  00A15C  EC20  F053         	call	_PrepareSessionKeys	;wreg free
 16385                           
 16386                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 16387  00A160  0E01               	movlw	1
 16388  00A162  0102               	movlb	2	; () banked
 16389  00A164  6F22               	movwf	(_loRa+34)& (0+255),b
 16390                           
 16391                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 16392  00A166  0E22               	movlw	low (_loRa+34)
 16393  00A168  6E1F               	movwf	AESEncodeLoRa@block,c
 16394  00A16A  0E02               	movlw	high (_loRa+34)
 16395  00A16C  6E20               	movwf	AESEncodeLoRa@block+1,c
 16396  00A16E  0E42               	movlw	low (_loRa+66)
 16397  00A170  6E21               	movwf	AESEncodeLoRa@key,c
 16398  00A172  0E02               	movlw	high (_loRa+66)
 16399  00A174  6E22               	movwf	AESEncodeLoRa@key+1,c
 16400  00A176  EC5B  F048         	call	_AESEncodeLoRa	;wreg free
 16401  00A17A  0012               	return		;funcret
 16402  00A17C                     __end_of_ComputeSessionKeys:
 16403                           	opt callstack 0
 16404                           
 16405 ;; *************** function _PrepareSessionKeys *****************
 16406 ;; Defined at:
 16407 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16408 ;; Parameters:    Size  Location     Type
 16409 ;;  sessionKey      2   11[COMRAM] PTR unsigned char 
 16410 ;;		 -> loRa.activationParameters(105), loRa(245), 
 16411 ;;  appNonce        2   13[COMRAM] PTR unsigned char 
 16412 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16413 ;;  networkId       2   15[COMRAM] PTR unsigned char 
 16414 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16415 ;; Auto vars:     Size  Location     Type
 16416 ;;  index           1   17[COMRAM] unsigned char 
 16417 ;; Return value:  Size  Location     Type
 16418 ;;                  1    wreg      void 
 16419 ;; Registers used:
 16420 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16421 ;; Tracked objects:
 16422 ;;		On entry : 0/0
 16423 ;;		On exit  : 0/0
 16424 ;;		Unchanged: 0/0
 16425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16426 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16429 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16430 ;;Total ram usage:        7 bytes
 16431 ;; Hardware stack levels used:    1
 16432 ;; Hardware stack levels required when called:    1
 16433 ;; This function calls:
 16434 ;;		_memcpy
 16435 ;;		_memset
 16436 ;; This function is called by:
 16437 ;;		_ComputeSessionKeys
 16438 ;; This function uses a non-reentrant model
 16439 ;;
 16440                           
 16441                           	psect	text101
 16442  00A640                     __ptext101:
 16443                           	opt callstack 0
 16444  00A640                     _PrepareSessionKeys:
 16445                           	opt callstack 24
 16446                           
 16447                           ;lorawan.c: 2047: uint8_t index = 0;
 16448                           
 16449                           ;incstack = 0
 16450  00A640  0E00               	movlw	0
 16451  00A642  6E12               	movwf	PrepareSessionKeys@index,c
 16452                           
 16453                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 16454  00A644  C00C  F001         	movff	PrepareSessionKeys@sessionKey,memset@p1
 16455  00A648  C00D  F002         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 16456  00A64C  0E00               	movlw	0
 16457  00A64E  6E04               	movwf	memset@c+1,c
 16458  00A650  0E00               	movlw	0
 16459  00A652  6E03               	movwf	memset@c,c
 16460  00A654  0E00               	movlw	0
 16461  00A656  6E06               	movwf	memset@n+1,c
 16462  00A658  0E10               	movlw	16
 16463  00A65A  6E05               	movwf	memset@n,c
 16464  00A65C  EC7A  F047         	call	_memset	;wreg free
 16465                           
 16466                           ;lorawan.c: 2050: index ++;
 16467  00A660  2A12               	incf	PrepareSessionKeys@index,f,c
 16468                           
 16469                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 16470  00A662  5012               	movf	PrepareSessionKeys@index,w,c
 16471  00A664  240C               	addwf	PrepareSessionKeys@sessionKey,w,c
 16472  00A666  6E01               	movwf	memcpy@d1,c
 16473  00A668  0E00               	movlw	0
 16474  00A66A  200D               	addwfc	PrepareSessionKeys@sessionKey+1,w,c
 16475  00A66C  6E02               	movwf	memcpy@d1+1,c
 16476  00A66E  C00E  F003         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 16477  00A672  C00F  F004         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 16478  00A676  0E00               	movlw	0
 16479  00A678  6E06               	movwf	memcpy@n+1,c
 16480  00A67A  0E03               	movlw	3
 16481  00A67C  6E05               	movwf	memcpy@n,c
 16482  00A67E  EC56  F04C         	call	_memcpy	;wreg free
 16483                           
 16484                           ;lorawan.c: 2053: index = index + 3;
 16485  00A682  5012               	movf	PrepareSessionKeys@index,w,c
 16486  00A684  0F03               	addlw	3
 16487  00A686  6E12               	movwf	PrepareSessionKeys@index,c
 16488                           
 16489                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 16490  00A688  5012               	movf	PrepareSessionKeys@index,w,c
 16491  00A68A  240C               	addwf	PrepareSessionKeys@sessionKey,w,c
 16492  00A68C  6E01               	movwf	memcpy@d1,c
 16493  00A68E  0E00               	movlw	0
 16494  00A690  200D               	addwfc	PrepareSessionKeys@sessionKey+1,w,c
 16495  00A692  6E02               	movwf	memcpy@d1+1,c
 16496  00A694  C010  F003         	movff	PrepareSessionKeys@networkId,memcpy@s1
 16497  00A698  C011  F004         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 16498  00A69C  0E00               	movlw	0
 16499  00A69E  6E06               	movwf	memcpy@n+1,c
 16500  00A6A0  0E03               	movlw	3
 16501  00A6A2  6E05               	movwf	memcpy@n,c
 16502  00A6A4  EC56  F04C         	call	_memcpy	;wreg free
 16503                           
 16504                           ;lorawan.c: 2056: index = index + 3;
 16505  00A6A8  5012               	movf	PrepareSessionKeys@index,w,c
 16506  00A6AA  0F03               	addlw	3
 16507  00A6AC  6E12               	movwf	PrepareSessionKeys@index,c
 16508                           
 16509                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 16510  00A6AE  5012               	movf	PrepareSessionKeys@index,w,c
 16511  00A6B0  240C               	addwf	PrepareSessionKeys@sessionKey,w,c
 16512  00A6B2  6E01               	movwf	memcpy@d1,c
 16513  00A6B4  0E00               	movlw	0
 16514  00A6B6  200D               	addwfc	PrepareSessionKeys@sessionKey+1,w,c
 16515  00A6B8  6E02               	movwf	memcpy@d1+1,c
 16516  00A6BA  0ED2               	movlw	low (_loRa+210)
 16517  00A6BC  6E03               	movwf	memcpy@s1,c
 16518  00A6BE  0E02               	movlw	high (_loRa+210)
 16519  00A6C0  6E04               	movwf	memcpy@s1+1,c
 16520  00A6C2  0E00               	movlw	0
 16521  00A6C4  6E06               	movwf	memcpy@n+1,c
 16522  00A6C6  0E02               	movlw	2
 16523  00A6C8  6E05               	movwf	memcpy@n,c
 16524  00A6CA  EC56  F04C         	call	_memcpy	;wreg free
 16525  00A6CE  0012               	return		;funcret
 16526  00A6D0                     __end_of_PrepareSessionKeys:
 16527                           	opt callstack 0
 16528                           
 16529 ;; *************** function _CheckMcastFlags *****************
 16530 ;; Defined at:
 16531 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16532 ;; Parameters:    Size  Location     Type
 16533 ;;  hdr             2    0[COMRAM] PTR struct .
 16534 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16535 ;; Auto vars:     Size  Location     Type
 16536 ;;		None
 16537 ;; Return value:  Size  Location     Type
 16538 ;;                  1    wreg      unsigned char 
 16539 ;; Registers used:
 16540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16541 ;; Tracked objects:
 16542 ;;		On entry : 0/0
 16543 ;;		On exit  : 0/0
 16544 ;;		Unchanged: 0/0
 16545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16550 ;;Total ram usage:        2 bytes
 16551 ;; Hardware stack levels used:    1
 16552 ;; This function calls:
 16553 ;;		Nothing
 16554 ;; This function is called by:
 16555 ;;		_LORAWAN_RxDone
 16556 ;; This function uses a non-reentrant model
 16557 ;;
 16558                           
 16559                           	psect	text102
 16560  009F96                     __ptext102:
 16561                           	opt callstack 0
 16562  009F96                     _CheckMcastFlags:
 16563                           	opt callstack 26
 16564                           
 16565                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 16566                           
 16567                           ;incstack = 0
 16568  009F96  EE20 F005          	lfsr	2,5
 16569  009F9A  5001               	movf	CheckMcastFlags@hdr,w,c
 16570  009F9C  26D9               	addwf	fsr2l,f,c
 16571  009F9E  5002               	movf	CheckMcastFlags@hdr+1,w,c
 16572  009FA0  22DA               	addwfc	fsr2h,f,c
 16573  009FA2  BADF               	btfsc	indf2,5,c
 16574  009FA4  D012               	goto	u9890
 16575  009FA6  EE20 F005          	lfsr	2,5
 16576  009FAA  5001               	movf	CheckMcastFlags@hdr,w,c
 16577  009FAC  26D9               	addwf	fsr2l,f,c
 16578  009FAE  5002               	movf	CheckMcastFlags@hdr+1,w,c
 16579  009FB0  22DA               	addwfc	fsr2h,f,c
 16580  009FB2  BCDF               	btfsc	indf2,6,c
 16581  009FB4  D00A               	goto	u9890
 16582  009FB6  C001  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 16583  009FBA  C002  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 16584  009FBE  38DF               	swapf	indf2,w,c
 16585  009FC0  32E8               	rrcf	wreg,f,c
 16586  009FC2  0B07               	andlw	7
 16587  009FC4  0A03               	xorlw	3
 16588  009FC6  B4D8               	btfsc	status,2,c
 16589  009FC8  D002               	goto	l10294
 16590  009FCA                     u9890:
 16591                           
 16592                           ;lorawan.c: 2110: {;lorawan.c: 2111: return 0;
 16593  009FCA  0E00               	movlw	0
 16594  009FCC  0012               	return	
 16595  009FCE                     l10294:
 16596                           
 16597                           ;lorawan.c: 2112: };lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 16598  009FCE  EE20 F005          	lfsr	2,5
 16599  009FD2  5001               	movf	CheckMcastFlags@hdr,w,c
 16600  009FD4  26D9               	addwf	fsr2l,f,c
 16601  009FD6  5002               	movf	CheckMcastFlags@hdr+1,w,c
 16602  009FD8  22DA               	addwfc	fsr2h,f,c
 16603  009FDA  50DF               	movf	indf2,w,c
 16604  009FDC  0B0F               	andlw	15
 16605  009FDE  0900               	iorlw	0
 16606  009FE0  A4D8               	btfss	status,2,c
 16607  009FE2  D7F3               	goto	u9890
 16608                           
 16609                           ;lorawan.c: 2118: else;lorawan.c: 2119: {;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) 
      +                          + 8))
 16610  009FE4  EE20 F008          	lfsr	2,8
 16611  009FE8  5001               	movf	CheckMcastFlags@hdr,w,c
 16612  009FEA  26D9               	addwf	fsr2l,f,c
 16613  009FEC  5002               	movf	CheckMcastFlags@hdr+1,w,c
 16614  009FEE  22DA               	addwfc	fsr2h,f,c
 16615  009FF0  50DF               	movf	indf2,w,c
 16616  009FF2  B4D8               	btfsc	status,2,c
 16617  009FF4  D7EA               	goto	u9890
 16618                           
 16619                           ;lorawan.c: 2123: };lorawan.c: 2124: };lorawan.c: 2126: if (hdr->members.fCtrl.fPending 
      +                          == 1)
 16620  009FF6  EE20 F005          	lfsr	2,5
 16621  009FFA  5001               	movf	CheckMcastFlags@hdr,w,c
 16622  009FFC  26D9               	addwf	fsr2l,f,c
 16623  009FFE  5002               	movf	CheckMcastFlags@hdr+1,w,c
 16624  00A000  22DA               	addwfc	fsr2h,f,c
 16625  00A002  A8DF               	btfss	indf2,4,c
 16626  00A004  D002               	goto	l10312
 16627                           
 16628                           ;lorawan.c: 2127: {;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 16629  00A006  0102               	movlb	2	; () banked
 16630  00A008  8700               	bsf	_loRa& (0+255),3,b
 16631  00A00A                     l10312:
 16632                           
 16633                           ;lorawan.c: 2129: };lorawan.c: 2131: return 1;
 16634  00A00A  0E01               	movlw	1
 16635  00A00C  0012               	return		;funcret
 16636  00A00E                     __end_of_CheckMcastFlags:
 16637                           	opt callstack 0
 16638                           
 16639 ;; *************** function _CheckFlags *****************
 16640 ;; Defined at:
 16641 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16642 ;; Parameters:    Size  Location     Type
 16643 ;;  hdr             2    0[COMRAM] PTR struct .
 16644 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16645 ;; Auto vars:     Size  Location     Type
 16646 ;;		None
 16647 ;; Return value:  Size  Location     Type
 16648 ;;                  1    wreg      void 
 16649 ;; Registers used:
 16650 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16651 ;; Tracked objects:
 16652 ;;		On entry : 0/0
 16653 ;;		On exit  : 0/0
 16654 ;;		Unchanged: 0/0
 16655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16660 ;;Total ram usage:        2 bytes
 16661 ;; Hardware stack levels used:    1
 16662 ;; This function calls:
 16663 ;;		Nothing
 16664 ;; This function is called by:
 16665 ;;		_LORAWAN_RxDone
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           	psect	text103
 16670  0097FE                     __ptext103:
 16671                           	opt callstack 0
 16672  0097FE                     _CheckFlags:
 16673                           	opt callstack 26
 16674                           
 16675                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 16676                           
 16677                           ;incstack = 0
 16678  0097FE  EE20 F005          	lfsr	2,5
 16679  009802  5001               	movf	CheckFlags@hdr,w,c
 16680  009804  26D9               	addwf	fsr2l,f,c
 16681  009806  5002               	movf	CheckFlags@hdr+1,w,c
 16682  009808  22DA               	addwfc	fsr2h,f,c
 16683  00980A  AEDF               	btfss	indf2,7,c
 16684  00980C  D002               	goto	l10342
 16685                           
 16686                           ;lorawan.c: 2077: {;lorawan.c: 2078: loRa.macStatus.adr = 1;
 16687  00980E  0102               	movlb	2	; () banked
 16688  009810  8D02               	bsf	(_loRa+2)& (0+255),6,b
 16689  009812                     l10342:
 16690                           
 16691                           ;lorawan.c: 2079: };lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 16692  009812  EE20 F005          	lfsr	2,5
 16693  009816  5001               	movf	CheckFlags@hdr,w,c
 16694  009818  26D9               	addwf	fsr2l,f,c
 16695  00981A  5002               	movf	CheckFlags@hdr+1,w,c
 16696  00981C  22DA               	addwfc	fsr2h,f,c
 16697  00981E  A8DF               	btfss	indf2,4,c
 16698  009820  D002               	goto	l10346
 16699                           
 16700                           ;lorawan.c: 2082: {;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 16701  009822  0102               	movlb	2	; () banked
 16702  009824  8700               	bsf	_loRa& (0+255),3,b
 16703  009826                     l10346:
 16704                           
 16705                           ;lorawan.c: 2084: };lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 16706  009826  EE20 F005          	lfsr	2,5
 16707  00982A  5001               	movf	CheckFlags@hdr,w,c
 16708  00982C  26D9               	addwf	fsr2l,f,c
 16709  00982E  5002               	movf	CheckFlags@hdr+1,w,c
 16710  009830  22DA               	addwfc	fsr2h,f,c
 16711  009832  ACDF               	btfss	indf2,6,c
 16712  009834  D002               	goto	l10350
 16713                           
 16714                           ;lorawan.c: 2087: {;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 16715  009836  0102               	movlb	2	; () banked
 16716  009838  8900               	bsf	_loRa& (0+255),4,b
 16717  00983A                     l10350:
 16718                           
 16719                           ;lorawan.c: 2089: };lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA
      +                          _CONFIRMED_DOWN)
 16720  00983A  C001  FFD9         	movff	CheckFlags@hdr,fsr2l
 16721  00983E  C002  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 16722  009842  38DF               	swapf	indf2,w,c
 16723  009844  32E8               	rrcf	wreg,f,c
 16724  009846  0B07               	andlw	7
 16725  009848  0A05               	xorlw	5
 16726  00984A  A4D8               	btfss	status,2,c
 16727  00984C  0012               	return	
 16728                           
 16729                           ;lorawan.c: 2092: {;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMess
      +                          age = 1;
 16730  00984E  0102               	movlb	2	; () banked
 16731  009850  8300               	bsf	_loRa& (0+255),1,b
 16732  009852  0012               	return		;funcret
 16733  009854                     __end_of_CheckFlags:
 16734                           	opt callstack 0
 16735                           
 16736 ;; *************** function _RADIO_FSKPacketSent *****************
 16737 ;; Defined at:
 16738 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 16739 ;; Parameters:    Size  Location     Type
 16740 ;;		None
 16741 ;; Auto vars:     Size  Location     Type
 16742 ;;  timeOnAir       4   26[BANK0 ] unsigned long 
 16743 ;;  irqFlags        1   34[BANK0 ] unsigned char 
 16744 ;; Return value:  Size  Location     Type
 16745 ;;                  1    wreg      void 
 16746 ;; Registers used:
 16747 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16748 ;; Tracked objects:
 16749 ;;		On entry : 0/0
 16750 ;;		On exit  : 0/0
 16751 ;;		Unchanged: 0/0
 16752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16754 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16756 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16757 ;;Total ram usage:        9 bytes
 16758 ;; Hardware stack levels used:    1
 16759 ;; Hardware stack levels required when called:    8
 16760 ;; This function calls:
 16761 ;;		_LORAWAN_TxDone
 16762 ;;		_RADIO_RegisterRead
 16763 ;;		_RADIO_WriteMode
 16764 ;;		_SwTimerReadValue
 16765 ;;		_SwTimerStop
 16766 ;;		___lmul
 16767 ;; This function is called by:
 16768 ;;		_RADIO_DIO0
 16769 ;; This function uses a non-reentrant model
 16770 ;;
 16771                           
 16772                           	psect	text104
 16773  00B694                     __ptext104:
 16774                           	opt callstack 0
 16775  00B694                     _RADIO_FSKPacketSent:
 16776                           	opt callstack 20
 16777                           
 16778                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;;radio_driver_SX1276.c: 1096: uint32_t ti
      +                          meOnAir;;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 16779                           
 16780                           ;incstack = 0
 16781  00B694  0E3F               	movlw	63
 16782  00B696  EC71  F046         	call	_RADIO_RegisterRead
 16783  00B69A  0100               	movlb	0	; () banked
 16784  00B69C  6F82               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 16785                           
 16786                           ; BSR set to: 0
 16787                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 16788  00B69E  A782               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 16789  00B6A0  0012               	return	
 16790                           
 16791                           ; BSR set to: 0
 16792                           ;radio_driver_SX1276.c: 1100: {;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
 16793  00B6A2  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 16794  00B6A6  0E00               	movlw	0
 16795  00B6A8  6E07               	movwf	RADIO_WriteMode@blocking,c
 16796  00B6AA  0E00               	movlw	0
 16797  00B6AC  EC6A  F058         	call	_RADIO_WriteMode
 16798                           
 16799                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 16800  00B6B0  0101               	movlb	1	; () banked
 16801  00B6B2  913B               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 16802                           
 16803                           ; BSR set to: 1
 16804                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 16805  00B6B4  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
 16806  00B6B6  EC46  F046         	call	_SwTimerStop
 16807                           
 16808                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 16809  00B6BA  0101               	movlb	1	; () banked
 16810  00B6BC  B93B               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 16811  00B6BE  0012               	return	
 16812                           
 16813                           ; BSR set to: 1
 16814                           ;radio_driver_SX1276.c: 1107: {;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)2000
      +                          0) - ((SwTimerReadValue(RadioConfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint
      +                          32_t)(SwTimerReadValue(RadioConfiguration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((
      +                          uint32_t)(SwTimerReadValue(RadioConfiguration.t
 16815  00B6C0  513F               	movf	(_RadioConfiguration+39)& (0+255),w,b
 16816  00B6C2  ECE3  F048         	call	_SwTimerReadValue
 16817  00B6C6  502D               	movf	?_SwTimerReadValue+3,w,c
 16818  00B6C8  E108               	bnz	u16920
 16819  00B6CA  0E1F               	movlw	31
 16820  00B6CC  5C2A               	subwf	?_SwTimerReadValue,w,c
 16821  00B6CE  0EAC               	movlw	172
 16822  00B6D0  582B               	subwfb	?_SwTimerReadValue+1,w,c
 16823  00B6D2  0EDF               	movlw	223
 16824  00B6D4  582C               	subwfb	?_SwTimerReadValue+2,w,c
 16825  00B6D6  A0D8               	btfss	status,0,c
 16826  00B6D8  D020               	goto	l14864
 16827  00B6DA                     u16920:
 16828  00B6DA  0101               	movlb	1	; () banked
 16829  00B6DC  513F               	movf	(_RadioConfiguration+39)& (0+255),w,b
 16830  00B6DE  ECE3  F048         	call	_SwTimerReadValue
 16831  00B6E2  0E0D               	movlw	13
 16832  00B6E4  D005               	goto	u16930
 16833  00B6E6                     u16935:
 16834  00B6E6  90D8               	bcf	status,0,c
 16835  00B6E8  322D               	rrcf	?_SwTimerReadValue+3,f,c
 16836  00B6EA  322C               	rrcf	?_SwTimerReadValue+2,f,c
 16837  00B6EC  322B               	rrcf	?_SwTimerReadValue+1,f,c
 16838  00B6EE  322A               	rrcf	?_SwTimerReadValue,f,c
 16839  00B6F0                     u16930:
 16840  00B6F0  2EE8               	decfsz	wreg,f,c
 16841  00B6F2  D7F9               	goto	u16935
 16842  00B6F4  C02A  F033         	movff	?_SwTimerReadValue,___lmul@multiplier
 16843  00B6F8  C02B  F034         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 16844  00B6FC  C02C  F035         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 16845  00B700  C02D  F036         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 16846  00B704  0E7D               	movlw	125
 16847  00B706  6E37               	movwf	___lmul@multiplicand,c
 16848  00B708  0E00               	movlw	0
 16849  00B70A  6E38               	movwf	___lmul@multiplicand+1,c
 16850  00B70C  0E00               	movlw	0
 16851  00B70E  6E39               	movwf	___lmul@multiplicand+2,c
 16852  00B710  0E00               	movlw	0
 16853  00B712  6E3A               	movwf	___lmul@multiplicand+3,c
 16854  00B714  ECD4  F04B         	call	___lmul	;wreg free
 16855  00B718  D01F               	goto	L16
 16856  00B71A                     l14864:
 16857  00B71A  0101               	movlb	1	; () banked
 16858  00B71C  513F               	movf	(_RadioConfiguration+39)& (0+255),w,b
 16859  00B71E  ECE3  F048         	call	_SwTimerReadValue
 16860  00B722  C02A  F033         	movff	?_SwTimerReadValue,___lmul@multiplier
 16861  00B726  C02B  F034         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 16862  00B72A  C02C  F035         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 16863  00B72E  C02D  F036         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 16864  00B732  0E7D               	movlw	125
 16865  00B734  6E37               	movwf	___lmul@multiplicand,c
 16866  00B736  0E00               	movlw	0
 16867  00B738  6E38               	movwf	___lmul@multiplicand+1,c
 16868  00B73A  0E00               	movlw	0
 16869  00B73C  6E39               	movwf	___lmul@multiplicand+2,c
 16870  00B73E  0E00               	movlw	0
 16871  00B740  6E3A               	movwf	___lmul@multiplicand+3,c
 16872  00B742  ECD4  F04B         	call	___lmul	;wreg free
 16873  00B746  0E0D               	movlw	13
 16874  00B748  D005               	goto	u16940
 16875  00B74A                     u16945:
 16876  00B74A  90D8               	bcf	status,0,c
 16877  00B74C  3236               	rrcf	?___lmul+3,f,c
 16878  00B74E  3235               	rrcf	?___lmul+2,f,c
 16879  00B750  3234               	rrcf	?___lmul+1,f,c
 16880  00B752  3233               	rrcf	?___lmul,f,c
 16881  00B754                     u16940:
 16882  00B754  2EE8               	decfsz	wreg,f,c
 16883  00B756  D7F9               	goto	u16945
 16884  00B758                     L16:
 16885  00B758  C033  F07E         	movff	?___lmul,_RADIO_FSKPacketSent$799
 16886  00B75C  C034  F07F         	movff	?___lmul+1,_RADIO_FSKPacketSent$799+1
 16887  00B760  C035  F080         	movff	?___lmul+2,_RADIO_FSKPacketSent$799+2
 16888  00B764  C036  F081         	movff	?___lmul+3,_RADIO_FSKPacketSent$799+3
 16889  00B768  0100               	movlb	0	; () banked
 16890  00B76A  517E               	movf	_RADIO_FSKPacketSent$799& (0+255),w,b
 16891  00B76C  0820               	sublw	32
 16892  00B76E  6F7A               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 16893  00B770  0E4E               	movlw	78
 16894  00B772  557F               	subfwb	(_RADIO_FSKPacketSent$799+1)& (0+255),w,b
 16895  00B774  6F7B               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 16896  00B776  0E00               	movlw	0
 16897  00B778  5580               	subfwb	(_RADIO_FSKPacketSent$799+2)& (0+255),w,b
 16898  00B77A  6F7C               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 16899  00B77C  0E00               	movlw	0
 16900  00B77E  5581               	subfwb	(_RADIO_FSKPacketSent$799+3)& (0+255),w,b
 16901  00B780  6F7D               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 16902                           
 16903                           ; BSR set to: 0
 16904                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 16905  00B782  0101               	movlb	1	; () banked
 16906  00B784  513F               	movf	(_RadioConfiguration+39)& (0+255),w,b
 16907  00B786  EC46  F046         	call	_SwTimerStop
 16908                           
 16909                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 16910  00B78A  C07A  F054         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 16911  00B78E  C07B  F055         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 16912  00B792  EC48  F076         	call	_LORAWAN_TxDone	;wreg free
 16913  00B796  0012               	return		;funcret
 16914  00B798                     __end_of_RADIO_FSKPacketSent:
 16915                           	opt callstack 0
 16916                           
 16917 ;; *************** function _LORAWAN_TxDone *****************
 16918 ;; Defined at:
 16919 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16920 ;; Parameters:    Size  Location     Type
 16921 ;;  timeOnAir       2   83[COMRAM] unsigned int 
 16922 ;; Auto vars:     Size  Location     Type
 16923 ;;  minim           4   21[BANK0 ] unsigned long 
 16924 ;;  ticks           4   17[BANK0 ] unsigned long 
 16925 ;;  delta           4    9[BANK0 ] unsigned long 
 16926 ;;  i               1   25[BANK0 ] unsigned char 
 16927 ;;  found           1    8[BANK0 ] unsigned char 
 16928 ;; Return value:  Size  Location     Type
 16929 ;;                  1    wreg      void 
 16930 ;; Registers used:
 16931 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16932 ;; Tracked objects:
 16933 ;;		On entry : 0/0
 16934 ;;		On exit  : 0/0
 16935 ;;		Unchanged: 0/0
 16936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16938 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16939 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16940 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16941 ;;Total ram usage:       36 bytes
 16942 ;; Hardware stack levels used:    1
 16943 ;; Hardware stack levels required when called:    7
 16944 ;; This function calls:
 16945 ;;		_LORAWAN_EnterContinuousReceive
 16946 ;;		_RADIO_GetStatus
 16947 ;;		_RxData
 16948 ;;		_SwTimerIsRunning
 16949 ;;		_SwTimerReadValue
 16950 ;;		_SwTimerSetTimeout
 16951 ;;		_SwTimerStart
 16952 ;;		_SwTimerStop
 16953 ;;		___lldiv
 16954 ;;		___lmul
 16955 ;; This function is called by:
 16956 ;;		_RADIO_TxDone
 16957 ;;		_RADIO_FSKPacketSent
 16958 ;;		_RADIO_WatchdogTimeout
 16959 ;; This function uses a non-reentrant model
 16960 ;;
 16961                           
 16962                           	psect	text105
 16963  00EC90                     __ptext105:
 16964                           	opt callstack 0
 16965  00EC90                     _LORAWAN_TxDone:
 16966                           	opt callstack 20
 16967                           
 16968                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 16969                           
 16970                           ;incstack = 0
 16971  00EC90  0102               	movlb	2	; () banked
 16972  00EC92  B103               	btfsc	(_loRa+3)& (0+255),0,b
 16973  00EC94  D339               	goto	l14680
 16974                           
 16975                           ; BSR set to: 2
 16976                           ;lorawan_eu.c: 368: {;lorawan_eu.c: 369: bool found = 0;
 16977  00EC96  0E00               	movlw	0
 16978  00EC98  0100               	movlb	0	; () banked
 16979  00EC9A  6F68               	movwf	LORAWAN_TxDone@found& (0+255),b
 16980                           
 16981                           ;lorawan_eu.c: 370: uint8_t i;;lorawan_eu.c: 371: uint32_t delta = 0, minim = (429496729
      +                          5UL), ticks;
 16982  00EC9C  0E00               	movlw	0
 16983  00EC9E  6F69               	movwf	LORAWAN_TxDone@delta& (0+255),b
 16984  00ECA0  0E00               	movlw	0
 16985  00ECA2  6F6A               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 16986  00ECA4  0E00               	movlw	0
 16987  00ECA6  6F6B               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 16988  00ECA8  0E00               	movlw	0
 16989  00ECAA  6F6C               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 16990                           
 16991                           ; BSR set to: 0
 16992  00ECAC  6975               	setf	LORAWAN_TxDone@minim& (0+255),b
 16993  00ECAE  6976               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 16994  00ECB0  6977               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 16995  00ECB2  6978               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 16996                           
 16997                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 16998  00ECB4  0E00               	movlw	0
 16999  00ECB6  0102               	movlb	2	; () banked
 17000  00ECB8  6FF1               	movwf	(_loRa+241)& (0+255),b
 17001                           
 17002                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 17003  00ECBA  5102               	movf	(_loRa+2)& (0+255),w,b
 17004  00ECBC  0BF0               	andlw	-16
 17005  00ECBE  0902               	iorlw	2
 17006  00ECC0  6F02               	movwf	(_loRa+2)& (0+255),b
 17007                           
 17008                           ; BSR set to: 2
 17009                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 17010  00ECC2  C2DA  F079         	movff	_loRa+218,LORAWAN_TxDone@i
 17011                           
 17012                           ; BSR set to: 2
 17013                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 17014  00ECC6  A500               	btfss	_loRa& (0+255),2,b
 17015  00ECC8  D0AF               	goto	l14614
 17016                           
 17017                           ; BSR set to: 2
 17018                           ;lorawan_eu.c: 382: {;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( ((
      +                          (uint32_t)(loRa.protocolParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1
      +                          Parameters.dataRate])) << (12)) / 125UL ));
 17019  00ECCA  0E6F               	movlw	low _rxWindowOffset
 17020  00ECCC  2517               	addwf	(_loRa+23)& (0+255),w,b
 17021  00ECCE  6EF6               	movwf	tblptrl,c
 17022  00ECD0  6AF7               	clrf	tblptrh,c
 17023  00ECD2  0EFF               	movlw	high _rxWindowOffset
 17024  00ECD4  22F7               	addwfc	tblptrh,f,c
 17025  00ECD6                     	if	1	;There are 3 active tblptr bytes
 17026  00ECD6  6AF8               	clrf	tblptru,c
 17027  00ECD8  0E00               	movlw	low (__mediumconst shr (0+16))
 17028  00ECDA  22F8               	addwfc	tblptru,f,c
 17029  00ECDC                     	endif
 17030  00ECDC  0008               	tblrd		*
 17031  00ECDE  CFF5 F056          	movff	tablat,??_LORAWAN_TxDone
 17032  00ECE2  5198               	movf	(_loRa+152)& (0+255),w,b
 17033  00ECE4  2456               	addwf	??_LORAWAN_TxDone,w,c
 17034  00ECE6  6E57               	movwf	(??_LORAWAN_TxDone+1)& (0+255),c
 17035  00ECE8  0E00               	movlw	0
 17036  00ECEA  BE56               	btfsc	??_LORAWAN_TxDone,7,c
 17037  00ECEC  0EFF               	movlw	255
 17038  00ECEE  2199               	addwfc	(_loRa+153)& (0+255),w,b
 17039  00ECF0  6E58               	movwf	(??_LORAWAN_TxDone+2)& (0+255),c
 17040  00ECF2  6A59               	clrf	(??_LORAWAN_TxDone+3)& (0+255),c
 17041  00ECF4  6A5A               	clrf	(??_LORAWAN_TxDone+4)& (0+255),c
 17042  00ECF6  0E0C               	movlw	12
 17043  00ECF8                     u16495:
 17044  00ECF8  90D8               	bcf	status,0,c
 17045  00ECFA  3657               	rlcf	??_LORAWAN_TxDone+1,f,c
 17046  00ECFC  3658               	rlcf	??_LORAWAN_TxDone+2,f,c
 17047  00ECFE  3659               	rlcf	??_LORAWAN_TxDone+3,f,c
 17048  00ED00  365A               	rlcf	??_LORAWAN_TxDone+4,f,c
 17049  00ED02  2EE8               	decfsz	wreg,f,c
 17050  00ED04  D7F9               	goto	u16495
 17051  00ED06  C057  F001         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 17052  00ED0A  C058  F002         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 17053  00ED0E  C059  F003         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 17054  00ED12  C05A  F004         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 17055  00ED16  0E7D               	movlw	125
 17056  00ED18  6E05               	movwf	___lldiv@divisor,c
 17057  00ED1A  0E00               	movlw	0
 17058  00ED1C  6E06               	movwf	___lldiv@divisor+1,c
 17059  00ED1E  0E00               	movlw	0
 17060  00ED20  6E07               	movwf	___lldiv@divisor+2,c
 17061  00ED22  0E00               	movlw	0
 17062  00ED24  6E08               	movwf	___lldiv@divisor+3,c
 17063  00ED26  ECFE  F050         	call	___lldiv	;wreg free
 17064  00ED2A  C001  F00E         	movff	?___lldiv,SwTimerSetTimeout@timeout
 17065  00ED2E  C002  F00F         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 17066  00ED32  C003  F010         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 17067  00ED36  C004  F011         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 17068  00ED3A  0102               	movlb	2	; () banked
 17069  00ED3C  51E2               	movf	(_loRa+226)& (0+255),w,b
 17070  00ED3E  EC5C  F049         	call	_SwTimerSetTimeout
 17071                           
 17072                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 17073  00ED42  0E6F               	movlw	low _rxWindowOffset
 17074  00ED44  0102               	movlb	2	; () banked
 17075  00ED46  251C               	addwf	(_loRa+28)& (0+255),w,b
 17076  00ED48  6EF6               	movwf	tblptrl,c
 17077  00ED4A  6AF7               	clrf	tblptrh,c
 17078  00ED4C  0EFF               	movlw	high _rxWindowOffset
 17079  00ED4E  22F7               	addwfc	tblptrh,f,c
 17080  00ED50                     	if	1	;There are 3 active tblptr bytes
 17081  00ED50  6AF8               	clrf	tblptru,c
 17082  00ED52  0E00               	movlw	low (__mediumconst shr (0+16))
 17083  00ED54  22F8               	addwfc	tblptru,f,c
 17084  00ED56                     	endif
 17085  00ED56  0008               	tblrd		*
 17086  00ED58  CFF5 F056          	movff	tablat,??_LORAWAN_TxDone
 17087  00ED5C  519A               	movf	(_loRa+154)& (0+255),w,b
 17088  00ED5E  2456               	addwf	??_LORAWAN_TxDone,w,c
 17089  00ED60  6E57               	movwf	(??_LORAWAN_TxDone+1)& (0+255),c
 17090  00ED62  0E00               	movlw	0
 17091  00ED64  BE56               	btfsc	??_LORAWAN_TxDone,7,c
 17092  00ED66  0EFF               	movlw	255
 17093  00ED68  219B               	addwfc	(_loRa+155)& (0+255),w,b
 17094  00ED6A  6E58               	movwf	(??_LORAWAN_TxDone+2)& (0+255),c
 17095  00ED6C  6A59               	clrf	(??_LORAWAN_TxDone+3)& (0+255),c
 17096  00ED6E  6A5A               	clrf	(??_LORAWAN_TxDone+4)& (0+255),c
 17097  00ED70  0E0C               	movlw	12
 17098  00ED72                     u16505:
 17099  00ED72  90D8               	bcf	status,0,c
 17100  00ED74  3657               	rlcf	??_LORAWAN_TxDone+1,f,c
 17101  00ED76  3658               	rlcf	??_LORAWAN_TxDone+2,f,c
 17102  00ED78  3659               	rlcf	??_LORAWAN_TxDone+3,f,c
 17103  00ED7A  365A               	rlcf	??_LORAWAN_TxDone+4,f,c
 17104  00ED7C  2EE8               	decfsz	wreg,f,c
 17105  00ED7E  D7F9               	goto	u16505
 17106  00ED80  C057  F001         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 17107  00ED84  C058  F002         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 17108  00ED88  C059  F003         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 17109  00ED8C  C05A  F004         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 17110  00ED90  0E7D               	movlw	125
 17111  00ED92  6E05               	movwf	___lldiv@divisor,c
 17112  00ED94  0E00               	movlw	0
 17113  00ED96  6E06               	movwf	___lldiv@divisor+1,c
 17114  00ED98  0E00               	movlw	0
 17115  00ED9A  6E07               	movwf	___lldiv@divisor+2,c
 17116  00ED9C  0E00               	movlw	0
 17117  00ED9E  6E08               	movwf	___lldiv@divisor+3,c
 17118  00EDA0  ECFE  F050         	call	___lldiv	;wreg free
 17119  00EDA4  C001  F00E         	movff	?___lldiv,SwTimerSetTimeout@timeout
 17120  00EDA8  C002  F00F         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 17121  00EDAC  C003  F010         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 17122  00EDB0  C004  F011         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 17123  00EDB4  0102               	movlb	2	; () banked
 17124  00EDB6  51E3               	movf	(_loRa+227)& (0+255),w,b
 17125  00EDB8  EC5C  F049         	call	_SwTimerSetTimeout
 17126                           
 17127                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 17128  00EDBC  0102               	movlb	2	; () banked
 17129  00EDBE  51E2               	movf	(_loRa+226)& (0+255),w,b
 17130  00EDC0  ECC3  F051         	call	_SwTimerStart
 17131                           
 17132                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 17133  00EDC4  0102               	movlb	2	; () banked
 17134  00EDC6  51E3               	movf	(_loRa+227)& (0+255),w,b
 17135  00EDC8  ECC3  F051         	call	_SwTimerStart
 17136                           
 17137                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 17138  00EDCC  C2DB  F033         	movff	_loRa+219,___lmul@multiplier
 17139  00EDD0  C2DC  F034         	movff	_loRa+220,___lmul@multiplier+1
 17140  00EDD4  6A35               	clrf	___lmul@multiplier+2,c
 17141  00EDD6  6A36               	clrf	___lmul@multiplier+3,c
 17142  00EDD8  0ED6               	movlw	214
 17143  00EDDA  6E37               	movwf	___lmul@multiplicand,c
 17144  00EDDC  0E0B               	movlw	11
 17145  00EDDE  6E38               	movwf	___lmul@multiplicand+1,c
 17146  00EDE0  0E00               	movlw	0
 17147  00EDE2  6E39               	movwf	___lmul@multiplicand+2,c
 17148  00EDE4  0E00               	movlw	0
 17149  00EDE6  6E3A               	movwf	___lmul@multiplicand+3,c
 17150  00EDE8  ECD4  F04B         	call	___lmul	;wreg free
 17151  00EDEC  0EFF               	movlw	255
 17152  00EDEE  2433               	addwf	?___lmul,w,c
 17153  00EDF0  0100               	movlb	0	; () banked
 17154  00EDF2  6F6D               	movwf	_LORAWAN_TxDone$5110& (0+255),b
 17155  00EDF4  0EFF               	movlw	255
 17156  00EDF6  2034               	addwfc	?___lmul+1,w,c
 17157  00EDF8  6F6E               	movwf	(_LORAWAN_TxDone$5110+1)& (0+255),b
 17158  00EDFA  0EFF               	movlw	255
 17159  00EDFC  2035               	addwfc	?___lmul+2,w,c
 17160  00EDFE  6F6F               	movwf	(_LORAWAN_TxDone$5110+2)& (0+255),b
 17161  00EE00  0EFF               	movlw	255
 17162  00EE02  2036               	addwfc	?___lmul+3,w,c
 17163  00EE04  6F70               	movwf	(_LORAWAN_TxDone$5110+3)& (0+255),b
 17164                           
 17165                           ; BSR set to: 0
 17166                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 17167  00EE06  C06D  F033         	movff	_LORAWAN_TxDone$5110,___lmul@multiplier
 17168  00EE0A  C06E  F034         	movff	_LORAWAN_TxDone$5110+1,___lmul@multiplier+1
 17169  00EE0E  C06F  F035         	movff	_LORAWAN_TxDone$5110+2,___lmul@multiplier+2
 17170  00EE12  C070  F036         	movff	_LORAWAN_TxDone$5110+3,___lmul@multiplier+3
 17171  00EE16  C054  F037         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 17172  00EE1A  C055  F038         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 17173  00EE1E  6A39               	clrf	___lmul@multiplicand+2,c
 17174  00EE20  6A3A               	clrf	___lmul@multiplicand+3,c
 17175  00EE22  ECD4  F04B         	call	___lmul	;wreg free
 17176  00EE26  D0C8               	goto	L17
 17177  00EE28                     l14614:
 17178                           
 17179                           ; BSR set to: 2
 17180                           ;lorawan_eu.c: 390: else;lorawan_eu.c: 391: {;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.
      +                          receiveWindow1TimerId, ( (((uint32_t)(loRa.protocolParameters.receiveDelay1 + rxWindowOf
      +                          fset[loRa.receiveWindow1Parameters.dataRate])) << (12)) / 125UL ));
 17181  00EE28  0E6F               	movlw	low _rxWindowOffset
 17182  00EE2A  2517               	addwf	(_loRa+23)& (0+255),w,b
 17183  00EE2C  6EF6               	movwf	tblptrl,c
 17184  00EE2E  6AF7               	clrf	tblptrh,c
 17185  00EE30  0EFF               	movlw	high _rxWindowOffset
 17186  00EE32  22F7               	addwfc	tblptrh,f,c
 17187  00EE34                     	if	1	;There are 3 active tblptr bytes
 17188  00EE34  6AF8               	clrf	tblptru,c
 17189  00EE36  0E00               	movlw	low (__mediumconst shr (0+16))
 17190  00EE38  22F8               	addwfc	tblptru,f,c
 17191  00EE3A                     	endif
 17192  00EE3A  0008               	tblrd		*
 17193  00EE3C  CFF5 F056          	movff	tablat,??_LORAWAN_TxDone
 17194  00EE40  5194               	movf	(_loRa+148)& (0+255),w,b
 17195  00EE42  2456               	addwf	??_LORAWAN_TxDone,w,c
 17196  00EE44  6E57               	movwf	(??_LORAWAN_TxDone+1)& (0+255),c
 17197  00EE46  0E00               	movlw	0
 17198  00EE48  BE56               	btfsc	??_LORAWAN_TxDone,7,c
 17199  00EE4A  0EFF               	movlw	255
 17200  00EE4C  2195               	addwfc	(_loRa+149)& (0+255),w,b
 17201  00EE4E  6E58               	movwf	(??_LORAWAN_TxDone+2)& (0+255),c
 17202  00EE50  6A59               	clrf	(??_LORAWAN_TxDone+3)& (0+255),c
 17203  00EE52  6A5A               	clrf	(??_LORAWAN_TxDone+4)& (0+255),c
 17204  00EE54  0E0C               	movlw	12
 17205  00EE56                     u16515:
 17206  00EE56  90D8               	bcf	status,0,c
 17207  00EE58  3657               	rlcf	??_LORAWAN_TxDone+1,f,c
 17208  00EE5A  3658               	rlcf	??_LORAWAN_TxDone+2,f,c
 17209  00EE5C  3659               	rlcf	??_LORAWAN_TxDone+3,f,c
 17210  00EE5E  365A               	rlcf	??_LORAWAN_TxDone+4,f,c
 17211  00EE60  2EE8               	decfsz	wreg,f,c
 17212  00EE62  D7F9               	goto	u16515
 17213  00EE64  C057  F001         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 17214  00EE68  C058  F002         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 17215  00EE6C  C059  F003         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 17216  00EE70  C05A  F004         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 17217  00EE74  0E7D               	movlw	125
 17218  00EE76  6E05               	movwf	___lldiv@divisor,c
 17219  00EE78  0E00               	movlw	0
 17220  00EE7A  6E06               	movwf	___lldiv@divisor+1,c
 17221  00EE7C  0E00               	movlw	0
 17222  00EE7E  6E07               	movwf	___lldiv@divisor+2,c
 17223  00EE80  0E00               	movlw	0
 17224  00EE82  6E08               	movwf	___lldiv@divisor+3,c
 17225  00EE84  ECFE  F050         	call	___lldiv	;wreg free
 17226  00EE88  C001  F00E         	movff	?___lldiv,SwTimerSetTimeout@timeout
 17227  00EE8C  C002  F00F         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 17228  00EE90  C003  F010         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 17229  00EE94  C004  F011         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 17230  00EE98  0102               	movlb	2	; () banked
 17231  00EE9A  51E4               	movf	(_loRa+228)& (0+255),w,b
 17232  00EE9C  EC5C  F049         	call	_SwTimerSetTimeout
 17233                           
 17234                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 17235  00EEA0  0E6F               	movlw	low _rxWindowOffset
 17236  00EEA2  0102               	movlb	2	; () banked
 17237  00EEA4  251C               	addwf	(_loRa+28)& (0+255),w,b
 17238  00EEA6  6EF6               	movwf	tblptrl,c
 17239  00EEA8  6AF7               	clrf	tblptrh,c
 17240  00EEAA  0EFF               	movlw	high _rxWindowOffset
 17241  00EEAC  22F7               	addwfc	tblptrh,f,c
 17242  00EEAE                     	if	1	;There are 3 active tblptr bytes
 17243  00EEAE  6AF8               	clrf	tblptru,c
 17244  00EEB0  0E00               	movlw	low (__mediumconst shr (0+16))
 17245  00EEB2  22F8               	addwfc	tblptru,f,c
 17246  00EEB4                     	endif
 17247  00EEB4  0008               	tblrd		*
 17248  00EEB6  CFF5 F056          	movff	tablat,??_LORAWAN_TxDone
 17249  00EEBA  5196               	movf	(_loRa+150)& (0+255),w,b
 17250  00EEBC  2456               	addwf	??_LORAWAN_TxDone,w,c
 17251  00EEBE  6E57               	movwf	(??_LORAWAN_TxDone+1)& (0+255),c
 17252  00EEC0  0E00               	movlw	0
 17253  00EEC2  BE56               	btfsc	??_LORAWAN_TxDone,7,c
 17254  00EEC4  0EFF               	movlw	255
 17255  00EEC6  2197               	addwfc	(_loRa+151)& (0+255),w,b
 17256  00EEC8  6E58               	movwf	(??_LORAWAN_TxDone+2)& (0+255),c
 17257  00EECA  6A59               	clrf	(??_LORAWAN_TxDone+3)& (0+255),c
 17258  00EECC  6A5A               	clrf	(??_LORAWAN_TxDone+4)& (0+255),c
 17259  00EECE  0E0C               	movlw	12
 17260  00EED0                     u16525:
 17261  00EED0  90D8               	bcf	status,0,c
 17262  00EED2  3657               	rlcf	??_LORAWAN_TxDone+1,f,c
 17263  00EED4  3658               	rlcf	??_LORAWAN_TxDone+2,f,c
 17264  00EED6  3659               	rlcf	??_LORAWAN_TxDone+3,f,c
 17265  00EED8  365A               	rlcf	??_LORAWAN_TxDone+4,f,c
 17266  00EEDA  2EE8               	decfsz	wreg,f,c
 17267  00EEDC  D7F9               	goto	u16525
 17268  00EEDE  C057  F001         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 17269  00EEE2  C058  F002         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 17270  00EEE6  C059  F003         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 17271  00EEEA  C05A  F004         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 17272  00EEEE  0E7D               	movlw	125
 17273  00EEF0  6E05               	movwf	___lldiv@divisor,c
 17274  00EEF2  0E00               	movlw	0
 17275  00EEF4  6E06               	movwf	___lldiv@divisor+1,c
 17276  00EEF6  0E00               	movlw	0
 17277  00EEF8  6E07               	movwf	___lldiv@divisor+2,c
 17278  00EEFA  0E00               	movlw	0
 17279  00EEFC  6E08               	movwf	___lldiv@divisor+3,c
 17280  00EEFE  ECFE  F050         	call	___lldiv	;wreg free
 17281  00EF02  C001  F00E         	movff	?___lldiv,SwTimerSetTimeout@timeout
 17282  00EF06  C002  F00F         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 17283  00EF0A  C003  F010         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 17284  00EF0E  C004  F011         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 17285  00EF12  0102               	movlb	2	; () banked
 17286  00EF14  51E5               	movf	(_loRa+229)& (0+255),w,b
 17287  00EF16  EC5C  F049         	call	_SwTimerSetTimeout
 17288                           
 17289                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 17290  00EF1A  0102               	movlb	2	; () banked
 17291  00EF1C  51E4               	movf	(_loRa+228)& (0+255),w,b
 17292  00EF1E  ECC3  F051         	call	_SwTimerStart
 17293                           
 17294                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 17295  00EF22  0102               	movlb	2	; () banked
 17296  00EF24  5112               	movf	(_loRa+18)& (0+255),w,b
 17297  00EF26  A4D8               	btfss	status,2,c
 17298  00EF28  D003               	goto	l1035
 17299                           
 17300                           ; BSR set to: 2
 17301                           ;lorawan_eu.c: 396: {;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 17302  00EF2A  51E5               	movf	(_loRa+229)& (0+255),w,b
 17303  00EF2C  ECC3  F051         	call	_SwTimerStart
 17304  00EF30                     l1035:
 17305                           
 17306                           ;lorawan_eu.c: 398: };lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir
      +                          ) * (((uint32_t)Channels[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 17307  00EF30  0100               	movlb	0	; () banked
 17308  00EF32  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17309  00EF34  0D0E               	mullw	14
 17310  00EF36  0E06               	movlw	low (_Channels+6)
 17311  00EF38  24F3               	addwf	prodl,w,c
 17312  00EF3A  6ED9               	movwf	fsr2l,c
 17313  00EF3C  0E03               	movlw	high (_Channels+6)
 17314  00EF3E  20F4               	addwfc	prodh,w,c
 17315  00EF40  6EDA               	movwf	fsr2h,c
 17316  00EF42  CFDE F056          	movff	postinc2,??_LORAWAN_TxDone
 17317  00EF46  CFDD F057          	movff	postdec2,??_LORAWAN_TxDone+1
 17318  00EF4A  5056               	movf	??_LORAWAN_TxDone,w,c
 17319  00EF4C  6E58               	movwf	(??_LORAWAN_TxDone+2)& (0+255),c
 17320  00EF4E  5057               	movf	??_LORAWAN_TxDone+1,w,c
 17321  00EF50  6E59               	movwf	(??_LORAWAN_TxDone+3)& (0+255),c
 17322  00EF52  6A5A               	clrf	(??_LORAWAN_TxDone+4)& (0+255),c
 17323  00EF54  6A5B               	clrf	(??_LORAWAN_TxDone+5)& (0+255),c
 17324  00EF56  0E01               	movlw	1
 17325  00EF58  2458               	addwf	??_LORAWAN_TxDone+2,w,c
 17326  00EF5A  6E33               	movwf	___lmul@multiplier,c
 17327  00EF5C  0E00               	movlw	0
 17328  00EF5E  2059               	addwfc	??_LORAWAN_TxDone+3,w,c
 17329  00EF60  6E34               	movwf	___lmul@multiplier+1,c
 17330  00EF62  0E00               	movlw	0
 17331  00EF64  205A               	addwfc	??_LORAWAN_TxDone+4,w,c
 17332  00EF66  6E35               	movwf	___lmul@multiplier+2,c
 17333  00EF68  0E00               	movlw	0
 17334  00EF6A  205B               	addwfc	??_LORAWAN_TxDone+5,w,c
 17335  00EF6C  6E36               	movwf	___lmul@multiplier+3,c
 17336  00EF6E  C2DB  F037         	movff	_loRa+219,___lmul@multiplicand
 17337  00EF72  C2DC  F038         	movff	_loRa+220,___lmul@multiplicand+1
 17338  00EF76  6A39               	clrf	___lmul@multiplicand+2,c
 17339  00EF78  6A3A               	clrf	___lmul@multiplicand+3,c
 17340  00EF7A  ECD4  F04B         	call	___lmul	;wreg free
 17341  00EF7E  0EFF               	movlw	255
 17342  00EF80  2433               	addwf	?___lmul,w,c
 17343  00EF82  0100               	movlb	0	; () banked
 17344  00EF84  6F6D               	movwf	_LORAWAN_TxDone$5110& (0+255),b
 17345  00EF86  0EFF               	movlw	255
 17346  00EF88  2034               	addwfc	?___lmul+1,w,c
 17347  00EF8A  6F6E               	movwf	(_LORAWAN_TxDone$5110+1)& (0+255),b
 17348  00EF8C  0EFF               	movlw	255
 17349  00EF8E  2035               	addwfc	?___lmul+2,w,c
 17350  00EF90  6F6F               	movwf	(_LORAWAN_TxDone$5110+2)& (0+255),b
 17351  00EF92  0EFF               	movlw	255
 17352  00EF94  2036               	addwfc	?___lmul+3,w,c
 17353  00EF96  6F70               	movwf	(_LORAWAN_TxDone$5110+3)& (0+255),b
 17354                           
 17355                           ;lorawan_eu.c: 398: };lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir
      +                          ) * (((uint32_t)Channels[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 17356  00EF98  C06D  F033         	movff	_LORAWAN_TxDone$5110,___lmul@multiplier
 17357  00EF9C  C06E  F034         	movff	_LORAWAN_TxDone$5110+1,___lmul@multiplier+1
 17358  00EFA0  C06F  F035         	movff	_LORAWAN_TxDone$5110+2,___lmul@multiplier+2
 17359  00EFA4  C070  F036         	movff	_LORAWAN_TxDone$5110+3,___lmul@multiplier+3
 17360  00EFA8  C054  F037         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 17361  00EFAC  C055  F038         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 17362  00EFB0  6A39               	clrf	___lmul@multiplicand+2,c
 17363  00EFB2  6A3A               	clrf	___lmul@multiplicand+3,c
 17364  00EFB4  ECD4  F04B         	call	___lmul	;wreg free
 17365  00EFB8                     L17:
 17366  00EFB8  0100               	movlb	0	; () banked
 17367  00EFBA  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17368  00EFBC  0D0E               	mullw	14
 17369  00EFBE  0E08               	movlw	low (_Channels+8)
 17370  00EFC0  24F3               	addwf	prodl,w,c
 17371  00EFC2  6ED9               	movwf	fsr2l,c
 17372  00EFC4  0E03               	movlw	high (_Channels+8)
 17373  00EFC6  20F4               	addwfc	prodh,w,c
 17374  00EFC8  6EDA               	movwf	fsr2h,c
 17375  00EFCA  C033  FFDE         	movff	?___lmul,postinc2
 17376  00EFCE  C034  FFDE         	movff	?___lmul+1,postinc2
 17377  00EFD2  C035  FFDE         	movff	?___lmul+2,postinc2
 17378  00EFD6  C036  FFDE         	movff	?___lmul+3,postinc2
 17379                           
 17380                           ; BSR set to: 0
 17381                           ;lorawan_eu.c: 401: };lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 17382  00EFDA  0102               	movlb	2	; () banked
 17383  00EFDC  51E9               	movf	(_loRa+233)& (0+255),w,b
 17384  00EFDE  EC8F  F046         	call	_SwTimerIsRunning
 17385  00EFE2  0900               	iorlw	0
 17386  00EFE4  B4D8               	btfsc	status,2,c
 17387  00EFE6  D077               	goto	l14632
 17388                           
 17389                           ;lorawan_eu.c: 404: {;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 17390  00EFE8  0102               	movlb	2	; () banked
 17391  00EFEA  51E9               	movf	(_loRa+233)& (0+255),w,b
 17392  00EFEC  EC46  F046         	call	_SwTimerStop
 17393                           
 17394                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 17395  00EFF0  0102               	movlb	2	; () banked
 17396  00EFF2  51E9               	movf	(_loRa+233)& (0+255),w,b
 17397  00EFF4  ECE3  F048         	call	_SwTimerReadValue
 17398  00EFF8  C02A  F071         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 17399  00EFFC  C02B  F072         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 17400  00F000  C02C  F073         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 17401  00F004  C02D  F074         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 17402                           
 17403                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 17404  00F008  0100               	movlb	0	; () banked
 17405  00F00A  5174               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 17406  00F00C  E108               	bnz	u16550
 17407  00F00E  0E1F               	movlw	31
 17408  00F010  5D71               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 17409  00F012  0EAC               	movlw	172
 17410  00F014  5972               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 17411  00F016  0EDF               	movlw	223
 17412  00F018  5973               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 17413  00F01A  A0D8               	btfss	status,0,c
 17414  00F01C  D024               	goto	l14628
 17415  00F01E                     u16550:
 17416                           
 17417                           ; BSR set to: 0
 17418  00F01E  C071  F056         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 17419  00F022  C072  F057         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 17420  00F026  C073  F058         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 17421  00F02A  C074  F059         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 17422  00F02E  0E0D               	movlw	13
 17423  00F030  D005               	goto	u16560
 17424  00F032                     u16565:
 17425  00F032  90D8               	bcf	status,0,c
 17426  00F034  3259               	rrcf	??_LORAWAN_TxDone+3,f,c
 17427  00F036  3258               	rrcf	??_LORAWAN_TxDone+2,f,c
 17428  00F038  3257               	rrcf	??_LORAWAN_TxDone+1,f,c
 17429  00F03A  3256               	rrcf	??_LORAWAN_TxDone,f,c
 17430  00F03C                     u16560:
 17431  00F03C  2EE8               	decfsz	wreg,f,c
 17432  00F03E  D7F9               	goto	u16565
 17433  00F040  C056  F033         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 17434  00F044  C057  F034         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 17435  00F048  C058  F035         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 17436  00F04C  C059  F036         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 17437  00F050  0E7D               	movlw	125
 17438  00F052  6E37               	movwf	___lmul@multiplicand,c
 17439  00F054  0E00               	movlw	0
 17440  00F056  6E38               	movwf	___lmul@multiplicand+1,c
 17441  00F058  0E00               	movlw	0
 17442  00F05A  6E39               	movwf	___lmul@multiplicand+2,c
 17443  00F05C  0E00               	movlw	0
 17444  00F05E  6E3A               	movwf	___lmul@multiplicand+3,c
 17445  00F060  ECD4  F04B         	call	___lmul	;wreg free
 17446  00F064  D01B               	goto	L18
 17447  00F066                     l14628:
 17448                           
 17449                           ; BSR set to: 0
 17450  00F066  C071  F033         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 17451  00F06A  C072  F034         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 17452  00F06E  C073  F035         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 17453  00F072  C074  F036         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 17454  00F076  0E7D               	movlw	125
 17455  00F078  6E37               	movwf	___lmul@multiplicand,c
 17456  00F07A  0E00               	movlw	0
 17457  00F07C  6E38               	movwf	___lmul@multiplicand+1,c
 17458  00F07E  0E00               	movlw	0
 17459  00F080  6E39               	movwf	___lmul@multiplicand+2,c
 17460  00F082  0E00               	movlw	0
 17461  00F084  6E3A               	movwf	___lmul@multiplicand+3,c
 17462  00F086  ECD4  F04B         	call	___lmul	;wreg free
 17463  00F08A  0E0D               	movlw	13
 17464  00F08C  D005               	goto	u16570
 17465  00F08E                     u16575:
 17466  00F08E  90D8               	bcf	status,0,c
 17467  00F090  3236               	rrcf	?___lmul+3,f,c
 17468  00F092  3235               	rrcf	?___lmul+2,f,c
 17469  00F094  3234               	rrcf	?___lmul+1,f,c
 17470  00F096  3233               	rrcf	?___lmul,f,c
 17471  00F098                     u16570:
 17472  00F098  2EE8               	decfsz	wreg,f,c
 17473  00F09A  D7F9               	goto	u16575
 17474  00F09C                     L18:
 17475  00F09C  C033  F060         	movff	?___lmul,_LORAWAN_TxDone$1671
 17476  00F0A0  C034  F061         	movff	?___lmul+1,_LORAWAN_TxDone$1671+1
 17477  00F0A4  C035  F062         	movff	?___lmul+2,_LORAWAN_TxDone$1671+2
 17478  00F0A8  C036  F063         	movff	?___lmul+3,_LORAWAN_TxDone$1671+3
 17479  00F0AC  0100               	movlb	0	; () banked
 17480  00F0AE  5160               	movf	_LORAWAN_TxDone$1671& (0+255),w,b
 17481  00F0B0  0102               	movlb	2	; () banked
 17482  00F0B2  5DC8               	subwf	(_loRa+200)& (0+255),w,b
 17483  00F0B4  0100               	movlb	0	; () banked
 17484  00F0B6  6F69               	movwf	LORAWAN_TxDone@delta& (0+255),b
 17485  00F0B8  5161               	movf	(_LORAWAN_TxDone$1671+1)& (0+255),w,b
 17486  00F0BA  0102               	movlb	2	; () banked
 17487  00F0BC  59C9               	subwfb	(_loRa+201)& (0+255),w,b
 17488  00F0BE  0100               	movlb	0	; () banked
 17489  00F0C0  6F6A               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 17490  00F0C2  5162               	movf	(_LORAWAN_TxDone$1671+2)& (0+255),w,b
 17491  00F0C4  0102               	movlb	2	; () banked
 17492  00F0C6  59CA               	subwfb	(_loRa+202)& (0+255),w,b
 17493  00F0C8  0100               	movlb	0	; () banked
 17494  00F0CA  6F6B               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 17495  00F0CC  5163               	movf	(_LORAWAN_TxDone$1671+3)& (0+255),w,b
 17496  00F0CE  0102               	movlb	2	; () banked
 17497  00F0D0  59CB               	subwfb	(_loRa+203)& (0+255),w,b
 17498  00F0D2  0100               	movlb	0	; () banked
 17499  00F0D4  6F6C               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 17500  00F0D6                     l14632:
 17501                           
 17502                           ;lorawan_eu.c: 409: };lorawan_eu.c: 411: for (i=0; i < 16; i++)
 17503  00F0D6  0E00               	movlw	0
 17504  00F0D8  0100               	movlb	0	; () banked
 17505  00F0DA  6F79               	movwf	LORAWAN_TxDone@i& (0+255),b
 17506  00F0DC                     l14638:
 17507                           
 17508                           ; BSR set to: 0
 17509                           ;lorawan_eu.c: 412: {;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].
      +                          channelTimer != 0 ))
 17510  00F0DC  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17511  00F0DE  0D0E               	mullw	14
 17512  00F0E0  0E04               	movlw	low (_Channels+4)
 17513  00F0E2  24F3               	addwf	prodl,w,c
 17514  00F0E4  6ED9               	movwf	fsr2l,c
 17515  00F0E6  0E03               	movlw	high (_Channels+4)
 17516  00F0E8  20F4               	addwfc	prodh,w,c
 17517  00F0EA  6EDA               	movwf	fsr2h,c
 17518  00F0EC  04DE               	decf	postinc2,w,c
 17519  00F0EE  A4D8               	btfss	status,2,c
 17520  00F0F0  D092               	goto	l14656
 17521                           
 17522                           ; BSR set to: 0
 17523  00F0F2  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17524  00F0F4  0D0E               	mullw	14
 17525  00F0F6  0E08               	movlw	low (_Channels+8)
 17526  00F0F8  24F3               	addwf	prodl,w,c
 17527  00F0FA  6ED9               	movwf	fsr2l,c
 17528  00F0FC  0E03               	movlw	high (_Channels+8)
 17529  00F0FE  20F4               	addwfc	prodh,w,c
 17530  00F100  6EDA               	movwf	fsr2h,c
 17531  00F102  50DE               	movf	postinc2,w,c
 17532  00F104  10DE               	iorwf	postinc2,w,c
 17533  00F106  10DE               	iorwf	postinc2,w,c
 17534  00F108  10DE               	iorwf	postinc2,w,c
 17535  00F10A  B4D8               	btfsc	status,2,c
 17536  00F10C  D084               	goto	l14656
 17537                           
 17538                           ; BSR set to: 0
 17539                           ;lorawan_eu.c: 414: {;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 17540  00F10E  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17541  00F110  0102               	movlb	2	; () banked
 17542  00F112  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 17543  00F114  B4D8               	btfsc	status,2,c
 17544  00F116  D04C               	goto	l1044
 17545                           
 17546                           ; BSR set to: 2
 17547                           ;lorawan_eu.c: 416: {;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 17548  00F118  0100               	movlb	0	; () banked
 17549  00F11A  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17550  00F11C  0D0E               	mullw	14
 17551  00F11E  0E08               	movlw	low (_Channels+8)
 17552  00F120  24F3               	addwf	prodl,w,c
 17553  00F122  6ED9               	movwf	fsr2l,c
 17554  00F124  0E03               	movlw	high (_Channels+8)
 17555  00F126  20F4               	addwfc	prodh,w,c
 17556  00F128  6EDA               	movwf	fsr2h,c
 17557  00F12A  50DE               	movf	postinc2,w,c
 17558  00F12C  5D69               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 17559  00F12E  50DE               	movf	postinc2,w,c
 17560  00F130  596A               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 17561  00F132  50DE               	movf	postinc2,w,c
 17562  00F134  596B               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 17563  00F136  50DE               	movf	postinc2,w,c
 17564  00F138  596C               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 17565  00F13A  B0D8               	btfsc	status,0,c
 17566  00F13C  D02D               	goto	l14648
 17567                           
 17568                           ; BSR set to: 0
 17569                           ;lorawan_eu.c: 418: {;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelT
      +                          imer - delta;
 17570  00F13E  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17571  00F140  0D0E               	mullw	14
 17572  00F142  0E08               	movlw	low (_Channels+8)
 17573  00F144  24F3               	addwf	prodl,w,c
 17574  00F146  6ED9               	movwf	fsr2l,c
 17575  00F148  0E03               	movlw	high (_Channels+8)
 17576  00F14A  20F4               	addwfc	prodh,w,c
 17577  00F14C  6EDA               	movwf	fsr2h,c
 17578  00F14E  CFDE F056          	movff	postinc2,??_LORAWAN_TxDone
 17579  00F152  CFDE F057          	movff	postinc2,??_LORAWAN_TxDone+1
 17580  00F156  CFDE F058          	movff	postinc2,??_LORAWAN_TxDone+2
 17581  00F15A  CFDE F059          	movff	postinc2,??_LORAWAN_TxDone+3
 17582  00F15E  5169               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 17583  00F160  5C56               	subwf	??_LORAWAN_TxDone,w,c
 17584  00F162  6E5A               	movwf	(??_LORAWAN_TxDone+4)& (0+255),c
 17585  00F164  516A               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 17586  00F166  5857               	subwfb	??_LORAWAN_TxDone+1,w,c
 17587  00F168  6E5B               	movwf	(??_LORAWAN_TxDone+5)& (0+255),c
 17588  00F16A  516B               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 17589  00F16C  5858               	subwfb	??_LORAWAN_TxDone+2,w,c
 17590  00F16E  6E5C               	movwf	(??_LORAWAN_TxDone+6)& (0+255),c
 17591  00F170  516C               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 17592  00F172  5859               	subwfb	??_LORAWAN_TxDone+3,w,c
 17593  00F174  6E5D               	movwf	(??_LORAWAN_TxDone+7)& (0+255),c
 17594  00F176  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17595  00F178  0D0E               	mullw	14
 17596  00F17A  0E08               	movlw	low (_Channels+8)
 17597  00F17C  24F3               	addwf	prodl,w,c
 17598  00F17E  6ED9               	movwf	fsr2l,c
 17599  00F180  0E03               	movlw	high (_Channels+8)
 17600  00F182  20F4               	addwfc	prodh,w,c
 17601  00F184  6EDA               	movwf	fsr2h,c
 17602  00F186  C05A  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 17603  00F18A  C05B  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 17604  00F18E  C05C  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 17605  00F192  C05D  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 17606                           
 17607                           ;lorawan_eu.c: 420: }
 17608  00F196  D00C               	goto	l1044
 17609  00F198                     l14648:
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;lorawan_eu.c: 421: else;lorawan_eu.c: 422: {;lorawan_eu.c: 423: Channels[i].channelTime
      +                          r = 0;
 17613  00F198  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17614  00F19A  0D0E               	mullw	14
 17615  00F19C  0E08               	movlw	low (_Channels+8)
 17616  00F19E  24F3               	addwf	prodl,w,c
 17617  00F1A0  6ED9               	movwf	fsr2l,c
 17618  00F1A2  0E03               	movlw	high (_Channels+8)
 17619  00F1A4  20F4               	addwfc	prodh,w,c
 17620  00F1A6  6EDA               	movwf	fsr2h,c
 17621  00F1A8  6ADE               	clrf	postinc2,c
 17622  00F1AA  6ADE               	clrf	postinc2,c
 17623  00F1AC  6ADE               	clrf	postinc2,c
 17624  00F1AE  6ADD               	clrf	postdec2,c
 17625  00F1B0                     l1044:
 17626                           
 17627                           ;lorawan_eu.c: 424: };lorawan_eu.c: 425: };lorawan_eu.c: 426: if ( (Channels[i].channelT
      +                          imer <= minim) && (Channels[i].channelTimer !=0) )
 17628  00F1B0  0100               	movlb	0	; () banked
 17629  00F1B2  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17630  00F1B4  0D0E               	mullw	14
 17631  00F1B6  0E08               	movlw	low (_Channels+8)
 17632  00F1B8  24F3               	addwf	prodl,w,c
 17633  00F1BA  6ED9               	movwf	fsr2l,c
 17634  00F1BC  0E03               	movlw	high (_Channels+8)
 17635  00F1BE  20F4               	addwfc	prodh,w,c
 17636  00F1C0  6EDA               	movwf	fsr2h,c
 17637  00F1C2  50DE               	movf	postinc2,w,c
 17638  00F1C4  5D75               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 17639  00F1C6  50DE               	movf	postinc2,w,c
 17640  00F1C8  5976               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 17641  00F1CA  50DE               	movf	postinc2,w,c
 17642  00F1CC  5977               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 17643  00F1CE  50DE               	movf	postinc2,w,c
 17644  00F1D0  5978               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 17645  00F1D2  A0D8               	btfss	status,0,c
 17646  00F1D4  D020               	goto	l14656
 17647                           
 17648                           ; BSR set to: 0
 17649  00F1D6  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17650  00F1D8  0D0E               	mullw	14
 17651  00F1DA  0E08               	movlw	low (_Channels+8)
 17652  00F1DC  24F3               	addwf	prodl,w,c
 17653  00F1DE  6ED9               	movwf	fsr2l,c
 17654  00F1E0  0E03               	movlw	high (_Channels+8)
 17655  00F1E2  20F4               	addwfc	prodh,w,c
 17656  00F1E4  6EDA               	movwf	fsr2h,c
 17657  00F1E6  50DE               	movf	postinc2,w,c
 17658  00F1E8  10DE               	iorwf	postinc2,w,c
 17659  00F1EA  10DE               	iorwf	postinc2,w,c
 17660  00F1EC  10DE               	iorwf	postinc2,w,c
 17661  00F1EE  B4D8               	btfsc	status,2,c
 17662  00F1F0  D012               	goto	l14656
 17663                           
 17664                           ; BSR set to: 0
 17665                           ;lorawan_eu.c: 427: {;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 17666  00F1F2  5179               	movf	LORAWAN_TxDone@i& (0+255),w,b
 17667  00F1F4  0D0E               	mullw	14
 17668  00F1F6  0E08               	movlw	low (_Channels+8)
 17669  00F1F8  24F3               	addwf	prodl,w,c
 17670  00F1FA  6ED9               	movwf	fsr2l,c
 17671  00F1FC  0E03               	movlw	high (_Channels+8)
 17672  00F1FE  20F4               	addwfc	prodh,w,c
 17673  00F200  6EDA               	movwf	fsr2h,c
 17674  00F202  CFDE F075          	movff	postinc2,LORAWAN_TxDone@minim
 17675  00F206  CFDE F076          	movff	postinc2,LORAWAN_TxDone@minim+1
 17676  00F20A  CFDE F077          	movff	postinc2,LORAWAN_TxDone@minim+2
 17677  00F20E  CFDE F078          	movff	postinc2,LORAWAN_TxDone@minim+3
 17678                           
 17679                           ; BSR set to: 0
 17680                           ;lorawan_eu.c: 429: found = 1;
 17681  00F212  0E01               	movlw	1
 17682  00F214  6F68               	movwf	LORAWAN_TxDone@found& (0+255),b
 17683  00F216                     l14656:
 17684                           
 17685                           ; BSR set to: 0
 17686  00F216  2B79               	incf	LORAWAN_TxDone@i& (0+255),f,b
 17687                           
 17688                           ; BSR set to: 0
 17689  00F218  0E0F               	movlw	15
 17690  00F21A  6579               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 17691  00F21C  D75F               	goto	l14638
 17692                           
 17693                           ; BSR set to: 0
 17694                           ;lorawan_eu.c: 430: };lorawan_eu.c: 431: };lorawan_eu.c: 432: };lorawan_eu.c: 433: if (f
      +                          ound == 1)
 17695  00F21E  0568               	decf	LORAWAN_TxDone@found& (0+255),w,b
 17696  00F220  A4D8               	btfss	status,2,c
 17697  00F222  D066               	goto	l14674
 17698                           
 17699                           ; BSR set to: 0
 17700                           ;lorawan_eu.c: 434: {;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 17701  00F224  C075  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 17702  00F228  C076  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 17703  00F22C  C077  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 17704  00F230  C078  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 17708  00F234  5178               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 17709  00F236  E107               	bnz	u16660
 17710  00F238  2975               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 17711  00F23A  0EFF               	movlw	255
 17712  00F23C  5976               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 17713  00F23E  0E0F               	movlw	15
 17714  00F240  5977               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 17715  00F242  A0D8               	btfss	status,0,c
 17716  00F244  D01B               	goto	l14668
 17717  00F246                     u16660:
 17718                           
 17719                           ; BSR set to: 0
 17720  00F246  C075  F001         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 17721  00F24A  C076  F002         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 17722  00F24E  C077  F003         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 17723  00F252  C078  F004         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 17724  00F256  0E7D               	movlw	125
 17725  00F258  6E05               	movwf	___lldiv@divisor,c
 17726  00F25A  0E00               	movlw	0
 17727  00F25C  6E06               	movwf	___lldiv@divisor+1,c
 17728  00F25E  0E00               	movlw	0
 17729  00F260  6E07               	movwf	___lldiv@divisor+2,c
 17730  00F262  0E00               	movlw	0
 17731  00F264  6E08               	movwf	___lldiv@divisor+3,c
 17732  00F266  ECFE  F050         	call	___lldiv	;wreg free
 17733  00F26A  0E0C               	movlw	12
 17734  00F26C                     u16675:
 17735  00F26C  90D8               	bcf	status,0,c
 17736  00F26E  3601               	rlcf	?___lldiv,f,c
 17737  00F270  3602               	rlcf	?___lldiv+1,f,c
 17738  00F272  3603               	rlcf	?___lldiv+2,f,c
 17739  00F274  3604               	rlcf	?___lldiv+3,f,c
 17740  00F276  2EE8               	decfsz	wreg,f,c
 17741  00F278  D7F9               	goto	u16675
 17742  00F27A  D022               	goto	L19
 17743  00F27C                     l14668:
 17744                           
 17745                           ; BSR set to: 0
 17746  00F27C  C075  F056         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 17747  00F280  C076  F057         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 17748  00F284  C077  F058         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 17749  00F288  C078  F059         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 17750  00F28C  0E0C               	movlw	12
 17751  00F28E                     u16685:
 17752  00F28E  90D8               	bcf	status,0,c
 17753  00F290  3656               	rlcf	??_LORAWAN_TxDone,f,c
 17754  00F292  3657               	rlcf	??_LORAWAN_TxDone+1,f,c
 17755  00F294  3658               	rlcf	??_LORAWAN_TxDone+2,f,c
 17756  00F296  3659               	rlcf	??_LORAWAN_TxDone+3,f,c
 17757  00F298  2EE8               	decfsz	wreg,f,c
 17758  00F29A  D7F9               	goto	u16685
 17759  00F29C  C056  F001         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 17760  00F2A0  C057  F002         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 17761  00F2A4  C058  F003         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 17762  00F2A8  C059  F004         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 17763  00F2AC  0E7D               	movlw	125
 17764  00F2AE  6E05               	movwf	___lldiv@divisor,c
 17765  00F2B0  0E00               	movlw	0
 17766  00F2B2  6E06               	movwf	___lldiv@divisor+1,c
 17767  00F2B4  0E00               	movlw	0
 17768  00F2B6  6E07               	movwf	___lldiv@divisor+2,c
 17769  00F2B8  0E00               	movlw	0
 17770  00F2BA  6E08               	movwf	___lldiv@divisor+3,c
 17771  00F2BC  ECFE  F050         	call	___lldiv	;wreg free
 17772  00F2C0                     L19:
 17773  00F2C0  C001  F064         	movff	?___lldiv,_LORAWAN_TxDone$1672
 17774  00F2C4  C002  F065         	movff	?___lldiv+1,_LORAWAN_TxDone$1672+1
 17775  00F2C8  C003  F066         	movff	?___lldiv+2,_LORAWAN_TxDone$1672+2
 17776  00F2CC  C004  F067         	movff	?___lldiv+3,_LORAWAN_TxDone$1672+3
 17777  00F2D0  C064  F00E         	movff	_LORAWAN_TxDone$1672,SwTimerSetTimeout@timeout
 17778  00F2D4  C065  F00F         	movff	_LORAWAN_TxDone$1672+1,SwTimerSetTimeout@timeout+1
 17779  00F2D8  C066  F010         	movff	_LORAWAN_TxDone$1672+2,SwTimerSetTimeout@timeout+2
 17780  00F2DC  C067  F011         	movff	_LORAWAN_TxDone$1672+3,SwTimerSetTimeout@timeout+3
 17781  00F2E0  0102               	movlb	2	; () banked
 17782  00F2E2  51E9               	movf	(_loRa+233)& (0+255),w,b
 17783  00F2E4  EC5C  F049         	call	_SwTimerSetTimeout
 17784                           
 17785                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 17786  00F2E8  0102               	movlb	2	; () banked
 17787  00F2EA  51E9               	movf	(_loRa+233)& (0+255),w,b
 17788  00F2EC  ECC3  F051         	call	_SwTimerStart
 17789  00F2F0                     l14674:
 17790                           
 17791                           ;lorawan_eu.c: 438: };lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 17792  00F2F0  0E02               	movlw	2
 17793  00F2F2  0102               	movlb	2	; () banked
 17794  00F2F4  1912               	xorwf	(_loRa+18)& (0+255),w,b
 17795  00F2F6  A4D8               	btfss	status,2,c
 17796  00F2F8  0012               	return	
 17797                           
 17798                           ; BSR set to: 2
 17799                           ;lorawan_eu.c: 440: {;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 17800  00F2FA  5102               	movf	(_loRa+2)& (0+255),w,b
 17801  00F2FC  0BF0               	andlw	-16
 17802  00F2FE  0908               	iorlw	8
 17803  00F300  6F02               	movwf	(_loRa+2)& (0+255),b
 17804                           
 17805                           ; BSR set to: 2
 17806                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 17807  00F302  EC57  F04F         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 17808  00F306  0012               	return	
 17809  00F308                     l14680:
 17810                           
 17811                           ; BSR set to: 2
 17812                           ;lorawan_eu.c: 445: else;lorawan_eu.c: 446: {;lorawan_eu.c: 447: if ((RADIO_GetStatus() 
      +                          & (1 << (4))) != 0)
 17813  00F308  ECED  F044         	call	_RADIO_GetStatus	;wreg free
 17814  00F30C  6E56               	movwf	??_LORAWAN_TxDone& (0+255),c
 17815  00F30E  A856               	btfss	??_LORAWAN_TxDone,4,c
 17816  00F310  D014               	goto	l14684
 17817                           
 17818                           ;lorawan_eu.c: 448: {;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 17819  00F312  0E00               	movlw	0
 17820  00F314  6E01               	movwf	RxData@pData,c
 17821  00F316  0E00               	movlw	0
 17822  00F318  6E02               	movwf	RxData@pData+1,c
 17823  00F31A  0E00               	movlw	0
 17824  00F31C  6E03               	movwf	RxData@dataLength,c
 17825  00F31E  0E02               	movlw	2
 17826  00F320  6E04               	movwf	RxData@status,c
 17827  00F322  D801               	call	u16718
 17828  00F324  0012               	return	
 17829  00F326                     u16718:
 17830  00F326  0005               	push	
 17831  00F328  6EFA               	movwf	pclath,c
 17832  00F32A  0100               	movlb	0	; () banked
 17833  00F32C  51F0               	movf	_rxPayload& (0+255),w,b
 17834  00F32E  6EFD               	movwf	tosl,c
 17835  00F330  51F1               	movf	(_rxPayload+1)& (0+255),w,b
 17836  00F332  6EFE               	movwf	tosh,c
 17837  00F334  6AFF               	clrf	tosu,c
 17838  00F336  50FA               	movf	pclath,w,c
 17839  00F338  0012               	return		;indir
 17840  00F33A                     l14684:
 17841                           
 17842                           ;lorawan_eu.c: 452: else;lorawan_eu.c: 453: {;lorawan_eu.c: 455: if ( rxPayload.RxAppDat
      +                          a != (0) )
 17843  00F33A  0100               	movlb	0	; () banked
 17844  00F33C  51F0               	movf	_rxPayload& (0+255),w,b
 17845  00F33E  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
 17846  00F340  B4D8               	btfsc	status,2,c
 17847  00F342  0012               	return	
 17848                           
 17849                           ; BSR set to: 0
 17850                           ;lorawan_eu.c: 456: {;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 17851  00F344  0E00               	movlw	0
 17852  00F346  6E01               	movwf	RxData@pData,c
 17853  00F348  0E00               	movlw	0
 17854  00F34A  6E02               	movwf	RxData@pData+1,c
 17855  00F34C  0E00               	movlw	0
 17856  00F34E  6E03               	movwf	RxData@dataLength,c
 17857  00F350  0E03               	movlw	3
 17858  00F352  6E04               	movwf	RxData@status,c
 17859  00F354  D801               	call	u16738
 17860  00F356  0012               	return	
 17861  00F358                     u16738:
 17862  00F358  0005               	push	
 17863  00F35A  6EFA               	movwf	pclath,c
 17864  00F35C  51F0               	movf	_rxPayload& (0+255),w,b
 17865  00F35E  6EFD               	movwf	tosl,c
 17866  00F360  51F1               	movf	(_rxPayload+1)& (0+255),w,b
 17867  00F362  6EFE               	movwf	tosh,c
 17868  00F364  6AFF               	clrf	tosu,c
 17869  00F366  50FA               	movf	pclath,w,c
 17870  00F368  0012               	return		;indir
 17871  00F36A                     __end_of_LORAWAN_TxDone:
 17872                           	opt callstack 0
 17873                           
 17874 ;; *************** function _SwTimerReadValue *****************
 17875 ;; Defined at:
 17876 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 17877 ;; Parameters:    Size  Location     Type
 17878 ;;  timerId         1    wreg     unsigned char 
 17879 ;; Auto vars:     Size  Location     Type
 17880 ;;  timerId         1   49[COMRAM] unsigned char 
 17881 ;;  ticksCount      4   45[COMRAM] unsigned long 
 17882 ;; Return value:  Size  Location     Type
 17883 ;;                  4   41[COMRAM] unsigned long 
 17884 ;; Registers used:
 17885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17886 ;; Tracked objects:
 17887 ;;		On entry : 0/0
 17888 ;;		On exit  : 0/0
 17889 ;;		Unchanged: 0/0
 17890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17891 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17892 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17894 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17895 ;;Total ram usage:        9 bytes
 17896 ;; Hardware stack levels used:    1
 17897 ;; Hardware stack levels required when called:    3
 17898 ;; This function calls:
 17899 ;;		_SwTimersInterrupt
 17900 ;; This function is called by:
 17901 ;;		_RADIO_TxDone
 17902 ;;		_RADIO_FSKPacketSent
 17903 ;;		_LORAWAN_TxDone
 17904 ;;		_LORAWAN_Pause
 17905 ;; This function uses a non-reentrant model
 17906 ;;
 17907                           
 17908                           	psect	text106
 17909  0091C6                     __ptext106:
 17910                           	opt callstack 0
 17911  0091C6                     _SwTimerReadValue:
 17912                           	opt callstack 23
 17913                           
 17914                           ;incstack = 0
 17915                           ;SwTimerReadValue@timerId stored from wreg
 17916  0091C6  6E32               	movwf	SwTimerReadValue@timerId,c
 17917                           
 17918                           ;sw_timer.c: 195: uint32_t ticksCount;;sw_timer.c: 197: (INTCONbits.GIE = 0);
 17919  0091C8  9EF2               	bcf	4082,7,c	;volatile
 17920                           
 17921                           ;sw_timer.c: 200: SwTimersInterrupt();
 17922  0091CA  EC59  F059         	call	_SwTimersInterrupt	;wreg free
 17923                           
 17924                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 17925  0091CE  5032               	movf	SwTimerReadValue@timerId,w,c
 17926  0091D0  0D08               	mullw	8
 17927  0091D2  0E00               	movlw	low _swTimers
 17928  0091D4  24F3               	addwf	prodl,w,c
 17929  0091D6  6ED9               	movwf	fsr2l,c
 17930  0091D8  0E04               	movlw	high _swTimers
 17931  0091DA  20F4               	addwfc	prodh,w,c
 17932  0091DC  6EDA               	movwf	fsr2h,c
 17933  0091DE  CFDE F02E          	movff	postinc2,SwTimerReadValue@ticksCount
 17934  0091E2  CFDE F02F          	movff	postinc2,SwTimerReadValue@ticksCount+1
 17935  0091E6  CFDE F030          	movff	postinc2,SwTimerReadValue@ticksCount+2
 17936  0091EA  CFDE F031          	movff	postinc2,SwTimerReadValue@ticksCount+3
 17937                           
 17938                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 17939  0091EE  8EF2               	bsf	4082,7,c	;volatile
 17940                           
 17941                           ;sw_timer.c: 204: return ticksCount;
 17942  0091F0  C02E  F02A         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 17943  0091F4  C02F  F02B         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 17944  0091F8  C030  F02C         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 17945  0091FC  C031  F02D         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 17946  009200  0012               	return		;funcret
 17947  009202                     __end_of_SwTimerReadValue:
 17948                           	opt callstack 0
 17949                           
 17950 ;; *************** function _SwTimerIsRunning *****************
 17951 ;; Defined at:
 17952 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 17953 ;; Parameters:    Size  Location     Type
 17954 ;;  timerId         1    wreg     unsigned char 
 17955 ;; Auto vars:     Size  Location     Type
 17956 ;;  timerId         1    0[COMRAM] unsigned char 
 17957 ;;  isRunning       1    1[COMRAM] unsigned char 
 17958 ;; Return value:  Size  Location     Type
 17959 ;;                  1    wreg      unsigned char 
 17960 ;; Registers used:
 17961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17962 ;; Tracked objects:
 17963 ;;		On entry : 0/0
 17964 ;;		On exit  : 0/0
 17965 ;;		Unchanged: 0/0
 17966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17971 ;;Total ram usage:        2 bytes
 17972 ;; Hardware stack levels used:    1
 17973 ;; This function calls:
 17974 ;;		Nothing
 17975 ;; This function is called by:
 17976 ;;		_LORAWAN_TxDone
 17977 ;; This function uses a non-reentrant model
 17978 ;;
 17979                           
 17980                           	psect	text107
 17981  008D1E                     __ptext107:
 17982                           	opt callstack 0
 17983  008D1E                     _SwTimerIsRunning:
 17984                           	opt callstack 26
 17985                           
 17986                           ;incstack = 0
 17987                           ;SwTimerIsRunning@timerId stored from wreg
 17988  008D1E  6E01               	movwf	SwTimerIsRunning@timerId,c
 17989                           
 17990                           ;sw_timer.c: 209: uint8_t isRunning;;sw_timer.c: 211: (INTCONbits.GIE = 0);
 17991  008D20  9EF2               	bcf	4082,7,c	;volatile
 17992                           
 17993                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 17994  008D22  5001               	movf	SwTimerIsRunning@timerId,w,c
 17995  008D24  0D08               	mullw	8
 17996  008D26  0E04               	movlw	low (_swTimers+4)
 17997  008D28  24F3               	addwf	prodl,w,c
 17998  008D2A  6ED9               	movwf	fsr2l,c
 17999  008D2C  0E04               	movlw	high (_swTimers+4)
 18000  008D2E  20F4               	addwfc	prodh,w,c
 18001  008D30  6EDA               	movwf	fsr2h,c
 18002  008D32  50DF               	movf	indf2,w,c
 18003  008D34  6E02               	movwf	SwTimerIsRunning@isRunning,c
 18004                           
 18005                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 18006  008D36  8EF2               	bsf	4082,7,c	;volatile
 18007                           
 18008                           ;sw_timer.c: 215: return isRunning;
 18009  008D38  5002               	movf	SwTimerIsRunning@isRunning,w,c
 18010  008D3A  0012               	return		;funcret
 18011  008D3C                     __end_of_SwTimerIsRunning:
 18012                           	opt callstack 0
 18013                           
 18014 ;; *************** function _RADIO_GetStatus *****************
 18015 ;; Defined at:
 18016 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 18017 ;; Parameters:    Size  Location     Type
 18018 ;;		None
 18019 ;; Auto vars:     Size  Location     Type
 18020 ;;		None
 18021 ;; Return value:  Size  Location     Type
 18022 ;;                  1    wreg      unsigned char 
 18023 ;; Registers used:
 18024 ;;		wreg, status,2
 18025 ;; Tracked objects:
 18026 ;;		On entry : 0/0
 18027 ;;		On exit  : 0/0
 18028 ;;		Unchanged: 0/0
 18029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18034 ;;Total ram usage:        0 bytes
 18035 ;; Hardware stack levels used:    1
 18036 ;; This function calls:
 18037 ;;		Nothing
 18038 ;; This function is called by:
 18039 ;;		_LORAWAN_TxDone
 18040 ;;		_LORAWAN_ReceiveWindow2Callback
 18041 ;;		_LORAWAN_RxDone
 18042 ;; This function uses a non-reentrant model
 18043 ;;
 18044                           
 18045                           	psect	text108
 18046  0089DA                     __ptext108:
 18047                           	opt callstack 0
 18048  0089DA                     _RADIO_GetStatus:
 18049                           	opt callstack 26
 18050                           
 18051                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 18052                           
 18053                           ;incstack = 0
 18054  0089DA  0101               	movlb	1	; () banked
 18055  0089DC  513B               	movf	(_RadioConfiguration+35)& (0+255),w,b
 18056                           
 18057                           ; BSR set to: 1
 18058  0089DE  0012               	return		;funcret
 18059  0089E0                     __end_of_RADIO_GetStatus:
 18060                           	opt callstack 0
 18061                           
 18062 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 18063 ;; Defined at:
 18064 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18065 ;; Parameters:    Size  Location     Type
 18066 ;;		None
 18067 ;; Auto vars:     Size  Location     Type
 18068 ;;		None
 18069 ;; Return value:  Size  Location     Type
 18070 ;;                  1    wreg      void 
 18071 ;; Registers used:
 18072 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18073 ;; Tracked objects:
 18074 ;;		On entry : 0/0
 18075 ;;		On exit  : 0/0
 18076 ;;		Unchanged: 0/0
 18077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18082 ;;Total ram usage:        0 bytes
 18083 ;; Hardware stack levels used:    1
 18084 ;; Hardware stack levels required when called:    6
 18085 ;; This function calls:
 18086 ;;		_ConfigureRadioRx
 18087 ;;		_RADIO_ReceiveStart
 18088 ;;		_RADIO_ReceiveStop
 18089 ;;		_RADIO_ReleaseData
 18090 ;;		_ResetParametersForConfirmedTransmission
 18091 ;;		_ResetParametersForUnconfirmedTransmission
 18092 ;;		_RxData
 18093 ;; This function is called by:
 18094 ;;		_LORAWAN_TxDone
 18095 ;;		_LORAWAN_ReceiveWindow2Callback
 18096 ;;		_LORAWAN_RxDone
 18097 ;;		_SetReceptionNotOkState
 18098 ;; This function uses a non-reentrant model
 18099 ;;
 18100                           
 18101                           	psect	text109
 18102  009EAE                     __ptext109:
 18103                           	opt callstack 0
 18104  009EAE                     _LORAWAN_EnterContinuousReceive:
 18105                           	opt callstack 20
 18106                           
 18107                           ;lorawan.c: 917: RADIO_ReceiveStop();
 18108                           
 18109                           ; BSR set to: 1
 18110                           ;incstack = 0
 18111  009EAE  EC80  F046         	call	_RADIO_ReceiveStop	;wreg free
 18112                           
 18113                           ;lorawan.c: 918: RADIO_ReleaseData();
 18114  009EB2  ECEA  F044         	call	_RADIO_ReleaseData	;wreg free
 18115                           
 18116                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 18117  009EB6  C218  F014         	movff	_loRa+24,ConfigureRadioRx@freq
 18118  009EBA  C219  F015         	movff	_loRa+25,ConfigureRadioRx@freq+1
 18119  009EBE  C21A  F016         	movff	_loRa+26,ConfigureRadioRx@freq+2
 18120  009EC2  C21B  F017         	movff	_loRa+27,ConfigureRadioRx@freq+3
 18121  009EC6  0102               	movlb	2	; () banked
 18122  009EC8  511C               	movf	(_loRa+28)& (0+255),w,b
 18123  009ECA  EC02  F047         	call	_ConfigureRadioRx
 18124                           
 18125                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 18126  009ECE  0E00               	movlw	0
 18127  009ED0  6E4B               	movwf	RADIO_ReceiveStart@rxWindowSize+1,c
 18128  009ED2  0E00               	movlw	0
 18129  009ED4  6E4A               	movwf	RADIO_ReceiveStart@rxWindowSize,c
 18130  009ED6  ECF7  F068         	call	_RADIO_ReceiveStart	;wreg free
 18131  009EDA  504A               	movf	?_RADIO_ReceiveStart,w,c
 18132  009EDC  104B               	iorwf	?_RADIO_ReceiveStart+1,w,c
 18133  009EDE  B4D8               	btfsc	status,2,c
 18134  009EE0  0012               	return	
 18135                           
 18136                           ;lorawan.c: 923: {;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 18137  009EE2  EC49  F045         	call	_ResetParametersForConfirmedTransmission	;wreg free
 18138                           
 18139                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 18140  009EE6  EC91  F045         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 18141                           
 18142                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 18143  009EEA  0EF0               	movlw	-16
 18144  009EEC  0102               	movlb	2	; () banked
 18145  009EEE  1702               	andwf	(_loRa+2)& (0+255),f,b
 18146                           
 18147                           ; BSR set to: 2
 18148                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 18149  009EF0  0100               	movlb	0	; () banked
 18150  009EF2  51F0               	movf	_rxPayload& (0+255),w,b
 18151  009EF4  11F1               	iorwf	(_rxPayload+1)& (0+255),w,b
 18152  009EF6  B4D8               	btfsc	status,2,c
 18153  009EF8  0012               	return	
 18154                           
 18155                           ; BSR set to: 0
 18156                           ;lorawan.c: 928: {;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 18157  009EFA  0E00               	movlw	0
 18158  009EFC  6E01               	movwf	RxData@pData,c
 18159  009EFE  0E00               	movlw	0
 18160  009F00  6E02               	movwf	RxData@pData+1,c
 18161  009F02  0E00               	movlw	0
 18162  009F04  6E03               	movwf	RxData@dataLength,c
 18163  009F06  0E00               	movlw	0
 18164  009F08  6E04               	movwf	RxData@status,c
 18165  009F0A  D801               	call	u14688
 18166  009F0C  0012               	return	
 18167  009F0E                     u14688:
 18168  009F0E  0005               	push	
 18169  009F10  6EFA               	movwf	pclath,c
 18170  009F12  51F0               	movf	_rxPayload& (0+255),w,b
 18171  009F14  6EFD               	movwf	tosl,c
 18172  009F16  51F1               	movf	(_rxPayload+1)& (0+255),w,b
 18173  009F18  6EFE               	movwf	tosh,c
 18174  009F1A  6AFF               	clrf	tosu,c
 18175  009F1C  50FA               	movf	pclath,w,c
 18176  009F1E  0012               	return		;indir
 18177  009F20                     __end_of_LORAWAN_EnterContinuousReceive:
 18178                           	opt callstack 0
 18179                           
 18180 ;; *************** function _RxData *****************
 18181 ;; Defined at:
 18182 ;;		line 15 in file "main.c"
 18183 ;; Parameters:    Size  Location     Type
 18184 ;;  pData           2    0[COMRAM] PTR unsigned char 
 18185 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 18186 ;;  dataLength      1    2[COMRAM] unsigned char 
 18187 ;;  status          1    3[COMRAM] enum E6128
 18188 ;; Auto vars:     Size  Location     Type
 18189 ;;		None
 18190 ;; Return value:  Size  Location     Type
 18191 ;;                  1    wreg      void 
 18192 ;; Registers used:
 18193 ;;		None
 18194 ;; Tracked objects:
 18195 ;;		On entry : 0/0
 18196 ;;		On exit  : 0/0
 18197 ;;		Unchanged: 0/0
 18198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18202 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18203 ;;Total ram usage:        4 bytes
 18204 ;; Hardware stack levels used:    1
 18205 ;; This function calls:
 18206 ;;		Nothing
 18207 ;; This function is called by:
 18208 ;;		_main
 18209 ;;		_LORAWAN_EnterContinuousReceive
 18210 ;;		_LORAWAN_ReceiveWindow2Callback
 18211 ;;		_SetReceptionNotOkState
 18212 ;;		_LORAWAN_RxDone
 18213 ;;		_LORAWAN_RxTimeout
 18214 ;;		_LORAWAN_TxDone
 18215 ;;		_AckRetransmissionCallback
 18216 ;;		_UnconfirmedTransmissionCallback
 18217 ;; This function uses a non-reentrant model
 18218 ;;
 18219                           
 18220                           	psect	text110
 18221  0089B4                     __ptext110:
 18222                           	opt callstack 0
 18223  0089B4                     _RxData:
 18224                           	opt callstack 27
 18225                           
 18226                           ;incstack = 0
 18227  0089B4  0012               	return		;funcret
 18228  0089B6                     __end_of_RxData:
 18229                           	opt callstack 0
 18230                           
 18231 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 18232 ;; Defined at:
 18233 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18234 ;; Parameters:    Size  Location     Type
 18235 ;;		None
 18236 ;; Auto vars:     Size  Location     Type
 18237 ;;		None
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  1    wreg      void 
 18240 ;; Registers used:
 18241 ;;		wreg, status,2
 18242 ;; Tracked objects:
 18243 ;;		On entry : 0/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18251 ;;Total ram usage:        0 bytes
 18252 ;; Hardware stack levels used:    1
 18253 ;; This function calls:
 18254 ;;		Nothing
 18255 ;; This function is called by:
 18256 ;;		_LORAWAN_RxTimeout
 18257 ;;		_LORAWAN_ReceiveWindow2Callback
 18258 ;;		_LORAWAN_EnterContinuousReceive
 18259 ;;		_UnconfirmedTransmissionCallback
 18260 ;; This function uses a non-reentrant model
 18261 ;;
 18262                           
 18263                           	psect	text111
 18264  008B22                     __ptext111:
 18265                           	opt callstack 0
 18266  008B22                     _ResetParametersForUnconfirmedTransmission:
 18267                           	opt callstack 27
 18268                           
 18269                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 18270                           
 18271                           ;incstack = 0
 18272  008B22  0EF0               	movlw	-16
 18273  008B24  0102               	movlb	2	; () banked
 18274  008B26  1702               	andwf	(_loRa+2)& (0+255),f,b
 18275                           
 18276                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 18277  008B28  0E01               	movlw	1
 18278  008B2A  6FD8               	movwf	(_loRa+216)& (0+255),b
 18279                           
 18280                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 18281  008B2C  0E00               	movlw	0
 18282  008B2E  6FA7               	movwf	(_loRa+167)& (0+255),b
 18283                           
 18284                           ; BSR set to: 2
 18285  008B30  0012               	return		;funcret
 18286  008B32                     __end_of_ResetParametersForUnconfirmedTransmission:
 18287                           	opt callstack 0
 18288                           
 18289 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 18290 ;; Defined at:
 18291 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18292 ;; Parameters:    Size  Location     Type
 18293 ;;		None
 18294 ;; Auto vars:     Size  Location     Type
 18295 ;;		None
 18296 ;; Return value:  Size  Location     Type
 18297 ;;                  1    wreg      void 
 18298 ;; Registers used:
 18299 ;;		wreg, status,2
 18300 ;; Tracked objects:
 18301 ;;		On entry : 0/0
 18302 ;;		On exit  : 0/0
 18303 ;;		Unchanged: 0/0
 18304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18309 ;;Total ram usage:        0 bytes
 18310 ;; Hardware stack levels used:    1
 18311 ;; This function calls:
 18312 ;;		Nothing
 18313 ;; This function is called by:
 18314 ;;		_LORAWAN_RxTimeout
 18315 ;;		_LORAWAN_ReceiveWindow2Callback
 18316 ;;		_LORAWAN_EnterContinuousReceive
 18317 ;;		_AckRetransmissionCallback
 18318 ;; This function uses a non-reentrant model
 18319 ;;
 18320                           
 18321                           	psect	text112
 18322  008A92                     __ptext112:
 18323                           	opt callstack 0
 18324  008A92                     _ResetParametersForConfirmedTransmission:
 18325                           	opt callstack 25
 18326                           
 18327                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 18328                           
 18329                           ; BSR set to: 2
 18330                           ;incstack = 0
 18331  008A92  0EF0               	movlw	-16
 18332  008A94  0102               	movlb	2	; () banked
 18333  008A96  1702               	andwf	(_loRa+2)& (0+255),f,b
 18334                           
 18335                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 18336  008A98  0E01               	movlw	1
 18337  008A9A  6FD9               	movwf	(_loRa+217)& (0+255),b
 18338                           
 18339                           ; BSR set to: 2
 18340                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 18341  008A9C  9100               	bcf	_loRa& (0+255),0,b
 18342                           
 18343                           ; BSR set to: 2
 18344  008A9E  0012               	return		;funcret
 18345  008AA0                     __end_of_ResetParametersForConfirmedTransmission:
 18346                           	opt callstack 0
 18347                           
 18348 ;; *************** function _RADIO_ReleaseData *****************
 18349 ;; Defined at:
 18350 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 18351 ;; Parameters:    Size  Location     Type
 18352 ;;		None
 18353 ;; Auto vars:     Size  Location     Type
 18354 ;;		None
 18355 ;; Return value:  Size  Location     Type
 18356 ;;                  1    wreg      void 
 18357 ;; Registers used:
 18358 ;;		status,2, status,0
 18359 ;; Tracked objects:
 18360 ;;		On entry : 0/0
 18361 ;;		On exit  : 0/0
 18362 ;;		Unchanged: 0/0
 18363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18368 ;;Total ram usage:        0 bytes
 18369 ;; Hardware stack levels used:    1
 18370 ;; This function calls:
 18371 ;;		Nothing
 18372 ;; This function is called by:
 18373 ;;		_LORAWAN_ReceiveWindow1Callback
 18374 ;;		_LORAWAN_ReceiveWindow2Callback
 18375 ;;		_LORAWAN_EnterContinuousReceive
 18376 ;;		_LORAWAN_RxDone
 18377 ;; This function uses a non-reentrant model
 18378 ;;
 18379                           
 18380                           	psect	text113
 18381  0089D4                     __ptext113:
 18382                           	opt callstack 0
 18383  0089D4                     _RADIO_ReleaseData:
 18384                           	opt callstack 25
 18385                           
 18386                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 18387                           
 18388                           ; BSR set to: 2
 18389                           ;incstack = 0
 18390  0089D4  0101               	movlb	1	; () banked
 18391  0089D6  953B               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 18392                           
 18393                           ; BSR set to: 1
 18394  0089D8  0012               	return		;funcret
 18395  0089DA                     __end_of_RADIO_ReleaseData:
 18396                           	opt callstack 0
 18397                           
 18398 ;; *************** function _RADIO_ReceiveStop *****************
 18399 ;; Defined at:
 18400 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 18401 ;; Parameters:    Size  Location     Type
 18402 ;;		None
 18403 ;; Auto vars:     Size  Location     Type
 18404 ;;		None
 18405 ;; Return value:  Size  Location     Type
 18406 ;;                  1    wreg      void 
 18407 ;; Registers used:
 18408 ;;		wreg, status,2, status,0, cstack
 18409 ;; Tracked objects:
 18410 ;;		On entry : 0/0
 18411 ;;		On exit  : 0/0
 18412 ;;		Unchanged: 0/0
 18413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18418 ;;Total ram usage:        0 bytes
 18419 ;; Hardware stack levels used:    1
 18420 ;; Hardware stack levels required when called:    4
 18421 ;; This function calls:
 18422 ;;		_RADIO_WriteMode
 18423 ;; This function is called by:
 18424 ;;		_LORAWAN_Send
 18425 ;;		_LORAWAN_ReceiveWindow1Callback
 18426 ;;		_LORAWAN_ReceiveWindow2Callback
 18427 ;;		_LORAWAN_EnterContinuousReceive
 18428 ;;		_LORAWAN_SetClass
 18429 ;; This function uses a non-reentrant model
 18430 ;;
 18431                           
 18432                           	psect	text114
 18433  008D00                     __ptext114:
 18434                           	opt callstack 0
 18435  008D00                     _RADIO_ReceiveStop:
 18436                           	opt callstack 21
 18437                           
 18438                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 18439                           
 18440                           ; BSR set to: 1
 18441                           ;incstack = 0
 18442  008D00  0E02               	movlw	2
 18443  008D02  0101               	movlb	1	; () banked
 18444  008D04  193B               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 18445  008D06  A4D8               	btfss	status,2,c
 18446  008D08  0012               	return	
 18447                           
 18448                           ; BSR set to: 1
 18449                           ;radio_driver_SX1276.c: 954: {;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, R
      +                          adioConfiguration.modulation, 0);
 18450  008D0A  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 18451  008D0E  0E00               	movlw	0
 18452  008D10  6E07               	movwf	RADIO_WriteMode@blocking,c
 18453  008D12  0E00               	movlw	0
 18454  008D14  EC6A  F058         	call	_RADIO_WriteMode
 18455                           
 18456                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 18457  008D18  0101               	movlb	1	; () banked
 18458  008D1A  933B               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 18459                           
 18460                           ; BSR set to: 1
 18461  008D1C  0012               	return		;funcret
 18462  008D1E                     __end_of_RADIO_ReceiveStop:
 18463                           	opt callstack 0
 18464                           
 18465 ;; *************** function _RADIO_ReceiveStart *****************
 18466 ;; Defined at:
 18467 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 18468 ;; Parameters:    Size  Location     Type
 18469 ;;  rxWindowSize    2   73[COMRAM] unsigned int 
 18470 ;; Auto vars:     Size  Location     Type
 18471 ;;		None
 18472 ;; Return value:  Size  Location     Type
 18473 ;;                  2   73[COMRAM] enum E5907
 18474 ;; Registers used:
 18475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18476 ;; Tracked objects:
 18477 ;;		On entry : 0/0
 18478 ;;		On exit  : 0/0
 18479 ;;		Unchanged: 0/0
 18480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18482 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18483 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18484 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18485 ;;Total ram usage:       10 bytes
 18486 ;; Hardware stack levels used:    1
 18487 ;; Hardware stack levels required when called:    5
 18488 ;; This function calls:
 18489 ;;		_RADIO_RegisterWrite
 18490 ;;		_RADIO_WriteConfiguration
 18491 ;;		_RADIO_WriteMode
 18492 ;;		_SwTimerSetTimeout
 18493 ;;		_SwTimerStart
 18494 ;;		___lldiv
 18495 ;; This function is called by:
 18496 ;;		_LORAWAN_ReceiveWindow1Callback
 18497 ;;		_LORAWAN_ReceiveWindow2Callback
 18498 ;;		_LORAWAN_EnterContinuousReceive
 18499 ;; This function uses a non-reentrant model
 18500 ;;
 18501                           
 18502                           	psect	text115
 18503  00D1EE                     __ptext115:
 18504                           	opt callstack 0
 18505  00D1EE                     _RADIO_ReceiveStart:
 18506                           	opt callstack 20
 18507                           
 18508                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 18509                           
 18510                           ; BSR set to: 1
 18511                           ;incstack = 0
 18512  00D1EE  0101               	movlb	1	; () banked
 18513  00D1F0  A53B               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 18514  00D1F2  D005               	goto	l13292
 18515                           
 18516                           ; BSR set to: 1
 18517                           ;radio_driver_SX1276.c: 878: {;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 18518  00D1F4  0E80               	movlw	128
 18519  00D1F6  6E4B               	movwf	?_RADIO_ReceiveStart+1,c
 18520  00D1F8  0E03               	movlw	3
 18521  00D1FA  6E4A               	movwf	?_RADIO_ReceiveStart,c
 18522  00D1FC  0012               	return	
 18523  00D1FE                     l13292:
 18524                           
 18525                           ; BSR set to: 1
 18526                           ;radio_driver_SX1276.c: 880: };radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags
      +                           & ((1 << (0)) | (1 << (1)))) != 0)
 18527  00D1FE  C13B  F04C         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 18528  00D202  0E03               	movlw	3
 18529  00D204  164C               	andwf	??_RADIO_ReceiveStart,f,c
 18530  00D206  B4D8               	btfsc	status,2,c
 18531  00D208  D005               	goto	l13298
 18532                           
 18533                           ; BSR set to: 1
 18534                           ;radio_driver_SX1276.c: 883: {;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 18535  00D20A  0E80               	movlw	128
 18536  00D20C  6E4B               	movwf	?_RADIO_ReceiveStart+1,c
 18537  00D20E  0E04               	movlw	4
 18538  00D210  6E4A               	movwf	?_RADIO_ReceiveStart,c
 18539  00D212  0012               	return	
 18540  00D214                     l13298:
 18541                           
 18542                           ; BSR set to: 1
 18543                           ;radio_driver_SX1276.c: 885: };radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 18544  00D214  504A               	movf	RADIO_ReceiveStart@rxWindowSize,w,c
 18545  00D216  104B               	iorwf	RADIO_ReceiveStart@rxWindowSize+1,w,c
 18546  00D218  A4D8               	btfss	status,2,c
 18547  00D21A  D007               	goto	l13302
 18548                           
 18549                           ; BSR set to: 1
 18550                           ;radio_driver_SX1276.c: 888: {;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 18551  00D21C  0E00               	movlw	0
 18552  00D21E  6E40               	movwf	RADIO_WriteConfiguration@symbolTimeout+1,c
 18553  00D220  0E04               	movlw	4
 18554  00D222  6E3F               	movwf	RADIO_WriteConfiguration@symbolTimeout,c
 18555  00D224  EC01  F074         	call	_RADIO_WriteConfiguration	;wreg free
 18556                           
 18557                           ;radio_driver_SX1276.c: 890: }
 18558  00D228  D006               	goto	l13304
 18559  00D22A                     l13302:
 18560                           
 18561                           ; BSR set to: 1
 18562                           ;radio_driver_SX1276.c: 891: else;radio_driver_SX1276.c: 892: {;radio_driver_SX1276.c: 8
      +                          93: RADIO_WriteConfiguration(rxWindowSize);
 18563  00D22A  C04A  F03F         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 18564  00D22E  C04B  F040         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 18565  00D232  EC01  F074         	call	_RADIO_WriteConfiguration	;wreg free
 18566  00D236                     l13304:
 18567                           
 18568                           ;radio_driver_SX1276.c: 894: };radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioC
      +                          onfiguration.modulation)
 18569  00D236  0101               	movlb	1	; () banked
 18570  00D238  0530               	decf	(_RadioConfiguration+24)& (0+255),w,b
 18571  00D23A  A4D8               	btfss	status,2,c
 18572  00D23C  D010               	goto	l13308
 18573                           
 18574                           ; BSR set to: 1
 18575                           ;radio_driver_SX1276.c: 897: {;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x0
      +                          1);
 18576  00D23E  0E01               	movlw	1
 18577  00D240  6E03               	movwf	RADIO_RegisterWrite@value,c
 18578  00D242  0E22               	movlw	34
 18579  00D244  ECF7  F045         	call	_RADIO_RegisterWrite
 18580                           
 18581                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 18582  00D248  0E00               	movlw	0
 18583  00D24A  6E03               	movwf	RADIO_RegisterWrite@value,c
 18584  00D24C  0E40               	movlw	64
 18585  00D24E  ECF7  F045         	call	_RADIO_RegisterWrite
 18586                           
 18587                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 18588  00D252  0E00               	movlw	0
 18589  00D254  6E03               	movwf	RADIO_RegisterWrite@value,c
 18590  00D256  0E41               	movlw	65
 18591  00D258  ECF7  F045         	call	_RADIO_RegisterWrite
 18592                           
 18593                           ;radio_driver_SX1276.c: 908: }
 18594  00D25C  D014               	goto	l13310
 18595  00D25E                     l13308:
 18596                           
 18597                           ; BSR set to: 1
 18598                           ;radio_driver_SX1276.c: 909: else;radio_driver_SX1276.c: 910: {;radio_driver_SX1276.c: 9
      +                          11: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 18599  00D25E  C14C  F003         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 18600  00D262  0E12               	movlw	18
 18601  00D264  ECF7  F045         	call	_RADIO_RegisterWrite
 18602                           
 18603                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 18604  00D268  C14D  F003         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 18605  00D26C  0E13               	movlw	19
 18606  00D26E  ECF7  F045         	call	_RADIO_RegisterWrite
 18607                           
 18608                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 18609  00D272  0E00               	movlw	0
 18610  00D274  6E03               	movwf	RADIO_RegisterWrite@value,c
 18611  00D276  0E40               	movlw	64
 18612  00D278  ECF7  F045         	call	_RADIO_RegisterWrite
 18613                           
 18614                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 18615  00D27C  0E00               	movlw	0
 18616  00D27E  6E03               	movwf	RADIO_RegisterWrite@value,c
 18617  00D280  0E41               	movlw	65
 18618  00D282  ECF7  F045         	call	_RADIO_RegisterWrite
 18619  00D286                     l13310:
 18620                           
 18621                           ;radio_driver_SX1276.c: 917: };radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (
      +                          1 << (1));
 18622  00D286  0101               	movlb	1	; () banked
 18623  00D288  833B               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 18624                           
 18625                           ; BSR set to: 1
 18626                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 18627  00D28A  0EE7               	movlw	231
 18628  00D28C  173B               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 18629                           
 18630                           ; BSR set to: 1
 18631                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 18632  00D28E  504A               	movf	RADIO_ReceiveStart@rxWindowSize,w,c
 18633  00D290  104B               	iorwf	RADIO_ReceiveStart@rxWindowSize+1,w,c
 18634  00D292  A4D8               	btfss	status,2,c
 18635  00D294  D008               	goto	l13318
 18636                           
 18637                           ; BSR set to: 1
 18638                           ;radio_driver_SX1276.c: 925: {;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, 
      +                          RadioConfiguration.modulation, 0);
 18639  00D296  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 18640  00D29A  0E00               	movlw	0
 18641  00D29C  6E07               	movwf	RADIO_WriteMode@blocking,c
 18642  00D29E  0E05               	movlw	5
 18643  00D2A0  EC6A  F058         	call	_RADIO_WriteMode
 18644                           
 18645                           ;radio_driver_SX1276.c: 927: }
 18646  00D2A4  D042               	goto	l13328
 18647  00D2A6                     l13318:
 18648                           
 18649                           ; BSR set to: 1
 18650                           ;radio_driver_SX1276.c: 928: else;radio_driver_SX1276.c: 929: {;radio_driver_SX1276.c: 9
      +                          30: if (MODULATION_LORA == RadioConfiguration.modulation)
 18651  00D2A6  0530               	decf	(_RadioConfiguration+24)& (0+255),w,b
 18652  00D2A8  A4D8               	btfss	status,2,c
 18653  00D2AA  D008               	goto	l13322
 18654                           
 18655                           ; BSR set to: 1
 18656                           ;radio_driver_SX1276.c: 931: {;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE
      +                          , MODULATION_LORA, 0);
 18657  00D2AC  0E01               	movlw	1
 18658  00D2AE  6E06               	movwf	RADIO_WriteMode@newModulation,c
 18659  00D2B0  0E00               	movlw	0
 18660  00D2B2  6E07               	movwf	RADIO_WriteMode@blocking,c
 18661  00D2B4  0E06               	movlw	6
 18662  00D2B6  EC6A  F058         	call	_RADIO_WriteMode
 18663                           
 18664                           ;radio_driver_SX1276.c: 933: }
 18665  00D2BA  D037               	goto	l13328
 18666  00D2BC                     l13322:
 18667                           
 18668                           ; BSR set to: 1
 18669                           ;radio_driver_SX1276.c: 934: else;radio_driver_SX1276.c: 935: {;radio_driver_SX1276.c: 9
      +                          36: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 18670  00D2BC  0E00               	movlw	0
 18671  00D2BE  6E06               	movwf	RADIO_WriteMode@newModulation,c
 18672  00D2C0  0E00               	movlw	0
 18673  00D2C2  6E07               	movwf	RADIO_WriteMode@blocking,c
 18674  00D2C4  0E05               	movlw	5
 18675  00D2C6  EC6A  F058         	call	_RADIO_WriteMode
 18676                           
 18677                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 18678  00D2CA  504A               	movf	RADIO_ReceiveStart@rxWindowSize,w,c
 18679  00D2CC  6E4C               	movwf	??_RADIO_ReceiveStart& (0+255),c
 18680  00D2CE  504B               	movf	RADIO_ReceiveStart@rxWindowSize+1,w,c
 18681  00D2D0  6E4D               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),c
 18682  00D2D2  6A4E               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),c
 18683  00D2D4  6A4F               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),c
 18684  00D2D6  0E0C               	movlw	12
 18685  00D2D8                     u14345:
 18686  00D2D8  90D8               	bcf	status,0,c
 18687  00D2DA  364C               	rlcf	??_RADIO_ReceiveStart,f,c
 18688  00D2DC  364D               	rlcf	??_RADIO_ReceiveStart+1,f,c
 18689  00D2DE  364E               	rlcf	??_RADIO_ReceiveStart+2,f,c
 18690  00D2E0  364F               	rlcf	??_RADIO_ReceiveStart+3,f,c
 18691  00D2E2  2EE8               	decfsz	wreg,f,c
 18692  00D2E4  D7F9               	goto	u14345
 18693  00D2E6  C04C  F001         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 18694  00D2EA  C04D  F002         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 18695  00D2EE  C04E  F003         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 18696  00D2F2  C04F  F004         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 18697  00D2F6  0E7D               	movlw	125
 18698  00D2F8  6E05               	movwf	___lldiv@divisor,c
 18699  00D2FA  0E00               	movlw	0
 18700  00D2FC  6E06               	movwf	___lldiv@divisor+1,c
 18701  00D2FE  0E00               	movlw	0
 18702  00D300  6E07               	movwf	___lldiv@divisor+2,c
 18703  00D302  0E00               	movlw	0
 18704  00D304  6E08               	movwf	___lldiv@divisor+3,c
 18705  00D306  ECFE  F050         	call	___lldiv	;wreg free
 18706  00D30A  C001  F00E         	movff	?___lldiv,SwTimerSetTimeout@timeout
 18707  00D30E  C002  F00F         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 18708  00D312  C003  F010         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 18709  00D316  C004  F011         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 18710  00D31A  0101               	movlb	1	; () banked
 18711  00D31C  5140               	movf	(_RadioConfiguration+40)& (0+255),w,b
 18712  00D31E  EC5C  F049         	call	_SwTimerSetTimeout
 18713                           
 18714                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 18715  00D322  0101               	movlb	1	; () banked
 18716  00D324  5140               	movf	(_RadioConfiguration+40)& (0+255),w,b
 18717  00D326  ECC3  F051         	call	_SwTimerStart
 18718  00D32A                     l13328:
 18719                           
 18720                           ;radio_driver_SX1276.c: 939: };radio_driver_SX1276.c: 940: };radio_driver_SX1276.c: 942:
      +                           if (0 != RadioConfiguration.watchdogTimerTimeout)
 18721  00D32A  0101               	movlb	1	; () banked
 18722  00D32C  5142               	movf	(_RadioConfiguration+42)& (0+255),w,b
 18723  00D32E  1143               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 18724  00D330  1144               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 18725  00D332  1145               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 18726  00D334  B4D8               	btfsc	status,2,c
 18727  00D336  D05E               	goto	l13340
 18728                           
 18729                           ; BSR set to: 1
 18730                           ;radio_driver_SX1276.c: 943: {;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfig
      +                          uration.watchdogTimerId, ((RadioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (
      +                          ((uint32_t)(RadioConfiguration.watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t
      +                          )(RadioConfiguration.watchdogTimerTimeout)) /
 18731  00D338  5145               	movf	(_RadioConfiguration+45)& (0+255),w,b
 18732  00D33A  E107               	bnz	u14360
 18733  00D33C  2942               	incf	(_RadioConfiguration+42)& (0+255),w,b
 18734  00D33E  0EFF               	movlw	255
 18735  00D340  5943               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 18736  00D342  0E0F               	movlw	15
 18737  00D344  5944               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 18738  00D346  A0D8               	btfss	status,0,c
 18739  00D348  D01B               	goto	l13334
 18740  00D34A                     u14360:
 18741                           
 18742                           ; BSR set to: 1
 18743  00D34A  C142  F001         	movff	_RadioConfiguration+42,___lldiv@dividend
 18744  00D34E  C143  F002         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 18745  00D352  C144  F003         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 18746  00D356  C145  F004         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 18747  00D35A  0E7D               	movlw	125
 18748  00D35C  6E05               	movwf	___lldiv@divisor,c
 18749  00D35E  0E00               	movlw	0
 18750  00D360  6E06               	movwf	___lldiv@divisor+1,c
 18751  00D362  0E00               	movlw	0
 18752  00D364  6E07               	movwf	___lldiv@divisor+2,c
 18753  00D366  0E00               	movlw	0
 18754  00D368  6E08               	movwf	___lldiv@divisor+3,c
 18755  00D36A  ECFE  F050         	call	___lldiv	;wreg free
 18756  00D36E  0E0C               	movlw	12
 18757  00D370                     u14375:
 18758  00D370  90D8               	bcf	status,0,c
 18759  00D372  3601               	rlcf	?___lldiv,f,c
 18760  00D374  3602               	rlcf	?___lldiv+1,f,c
 18761  00D376  3603               	rlcf	?___lldiv+2,f,c
 18762  00D378  3604               	rlcf	?___lldiv+3,f,c
 18763  00D37A  2EE8               	decfsz	wreg,f,c
 18764  00D37C  D7F9               	goto	u14375
 18765  00D37E  D022               	goto	L20
 18766  00D380                     l13334:
 18767                           
 18768                           ; BSR set to: 1
 18769  00D380  C142  F04C         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 18770  00D384  C143  F04D         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 18771  00D388  C144  F04E         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 18772  00D38C  C145  F04F         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 18773  00D390  0E0C               	movlw	12
 18774  00D392                     u14385:
 18775  00D392  90D8               	bcf	status,0,c
 18776  00D394  364C               	rlcf	??_RADIO_ReceiveStart,f,c
 18777  00D396  364D               	rlcf	??_RADIO_ReceiveStart+1,f,c
 18778  00D398  364E               	rlcf	??_RADIO_ReceiveStart+2,f,c
 18779  00D39A  364F               	rlcf	??_RADIO_ReceiveStart+3,f,c
 18780  00D39C  2EE8               	decfsz	wreg,f,c
 18781  00D39E  D7F9               	goto	u14385
 18782  00D3A0  C04C  F001         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 18783  00D3A4  C04D  F002         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 18784  00D3A8  C04E  F003         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 18785  00D3AC  C04F  F004         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 18786  00D3B0  0E7D               	movlw	125
 18787  00D3B2  6E05               	movwf	___lldiv@divisor,c
 18788  00D3B4  0E00               	movlw	0
 18789  00D3B6  6E06               	movwf	___lldiv@divisor+1,c
 18790  00D3B8  0E00               	movlw	0
 18791  00D3BA  6E07               	movwf	___lldiv@divisor+2,c
 18792  00D3BC  0E00               	movlw	0
 18793  00D3BE  6E08               	movwf	___lldiv@divisor+3,c
 18794  00D3C0  ECFE  F050         	call	___lldiv	;wreg free
 18795  00D3C4                     L20:
 18796  00D3C4  C001  F050         	movff	?___lldiv,_RADIO_ReceiveStart$783
 18797  00D3C8  C002  F051         	movff	?___lldiv+1,_RADIO_ReceiveStart$783+1
 18798  00D3CC  C003  F052         	movff	?___lldiv+2,_RADIO_ReceiveStart$783+2
 18799  00D3D0  C004  F053         	movff	?___lldiv+3,_RADIO_ReceiveStart$783+3
 18800  00D3D4  C050  F00E         	movff	_RADIO_ReceiveStart$783,SwTimerSetTimeout@timeout
 18801  00D3D8  C051  F00F         	movff	_RADIO_ReceiveStart$783+1,SwTimerSetTimeout@timeout+1
 18802  00D3DC  C052  F010         	movff	_RADIO_ReceiveStart$783+2,SwTimerSetTimeout@timeout+2
 18803  00D3E0  C053  F011         	movff	_RADIO_ReceiveStart$783+3,SwTimerSetTimeout@timeout+3
 18804  00D3E4  0101               	movlb	1	; () banked
 18805  00D3E6  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
 18806  00D3E8  EC5C  F049         	call	_SwTimerSetTimeout
 18807                           
 18808                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 18809  00D3EC  0101               	movlb	1	; () banked
 18810  00D3EE  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
 18811  00D3F0  ECC3  F051         	call	_SwTimerStart
 18812  00D3F4                     l13340:
 18813                           
 18814                           ;radio_driver_SX1276.c: 946: };radio_driver_SX1276.c: 947: return ERR_NONE;
 18815  00D3F4  0E00               	movlw	0
 18816  00D3F6  6E4B               	movwf	?_RADIO_ReceiveStart+1,c
 18817  00D3F8  0E00               	movlw	0
 18818  00D3FA  6E4A               	movwf	?_RADIO_ReceiveStart,c
 18819  00D3FC  0012               	return		;funcret
 18820  00D3FE                     __end_of_RADIO_ReceiveStart:
 18821                           	opt callstack 0
 18822                           
 18823 ;; *************** function _ConfigureRadioRx *****************
 18824 ;; Defined at:
 18825 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18826 ;; Parameters:    Size  Location     Type
 18827 ;;  dataRate        1    wreg     unsigned char 
 18828 ;;  freq            4   19[COMRAM] unsigned long 
 18829 ;; Auto vars:     Size  Location     Type
 18830 ;;  dataRate        1   23[COMRAM] unsigned char 
 18831 ;; Return value:  Size  Location     Type
 18832 ;;                  1    wreg      void 
 18833 ;; Registers used:
 18834 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18835 ;; Tracked objects:
 18836 ;;		On entry : 0/0
 18837 ;;		On exit  : 0/0
 18838 ;;		Unchanged: 0/0
 18839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18843 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18844 ;;Total ram usage:        5 bytes
 18845 ;; Hardware stack levels used:    1
 18846 ;; Hardware stack levels required when called:    3
 18847 ;; This function calls:
 18848 ;;		_ConfigureRadio
 18849 ;;		_RADIO_SetCRC
 18850 ;;		_RADIO_SetIQInverted
 18851 ;; This function is called by:
 18852 ;;		_LORAWAN_ReceiveWindow1Callback
 18853 ;;		_LORAWAN_ReceiveWindow2Callback
 18854 ;;		_LORAWAN_EnterContinuousReceive
 18855 ;; This function uses a non-reentrant model
 18856 ;;
 18857                           
 18858                           	psect	text116
 18859  008E04                     __ptext116:
 18860                           	opt callstack 0
 18861  008E04                     _ConfigureRadioRx:
 18862                           	opt callstack 22
 18863                           
 18864                           ;incstack = 0
 18865                           ;ConfigureRadioRx@dataRate stored from wreg
 18866  008E04  6E18               	movwf	ConfigureRadioRx@dataRate,c
 18867                           
 18868                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 18869  008E06  C014  F00F         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 18870  008E0A  C015  F010         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 18871  008E0E  C016  F011         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 18872  008E12  C017  F012         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 18873  008E16  5018               	movf	ConfigureRadioRx@dataRate,w,c
 18874  008E18  ECD8  F052         	call	_ConfigureRadio
 18875                           
 18876                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 18877  008E1C  0E00               	movlw	0
 18878  008E1E  EC03  F045         	call	_RADIO_SetCRC
 18879                           
 18880                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 18881  008E22  0E01               	movlw	1
 18882  008E24  EC07  F045         	call	_RADIO_SetIQInverted
 18883  008E28  0012               	return		;funcret
 18884  008E2A                     __end_of_ConfigureRadioRx:
 18885                           	opt callstack 0
 18886                           
 18887 ;; *************** function _INTERRUPT_GetDioStatus *****************
 18888 ;; Defined at:
 18889 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 18890 ;; Parameters:    Size  Location     Type
 18891 ;;		None
 18892 ;; Auto vars:     Size  Location     Type
 18893 ;;  a               1    0[COMRAM] unsigned char 
 18894 ;; Return value:  Size  Location     Type
 18895 ;;                  1    wreg      unsigned char 
 18896 ;; Registers used:
 18897 ;;		wreg, status,2
 18898 ;; Tracked objects:
 18899 ;;		On entry : 0/0
 18900 ;;		On exit  : 0/0
 18901 ;;		Unchanged: 0/0
 18902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18906 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18907 ;;Total ram usage:        1 bytes
 18908 ;; Hardware stack levels used:    1
 18909 ;; This function calls:
 18910 ;;		Nothing
 18911 ;; This function is called by:
 18912 ;;		_LORAWAN_Mainloop
 18913 ;; This function uses a non-reentrant model
 18914 ;;
 18915                           
 18916                           	psect	text117
 18917  008B32                     __ptext117:
 18918                           	opt callstack 0
 18919  008B32                     _INTERRUPT_GetDioStatus:
 18920                           	opt callstack 29
 18921                           
 18922                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;;interrupt_manager_lora_addons.c: 51: (I
      +                          NTCONbits.GIE = 0);
 18923                           
 18924                           ;incstack = 0
 18925  008B32  9EF2               	bcf	4082,7,c	;volatile
 18926                           
 18927                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 18928  008B34  C117  F001         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 18929                           
 18930                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 18931  008B38  0E00               	movlw	0
 18932  008B3A  0101               	movlb	1	; () banked
 18933  008B3C  6F17               	movwf	_dioStatus& (0+255),b	;volatile
 18934                           
 18935                           ; BSR set to: 1
 18936                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 18937  008B3E  8EF2               	bsf	4082,7,c	;volatile
 18938                           
 18939                           ;interrupt_manager_lora_addons.c: 55: return a;
 18940  008B40  5001               	movf	INTERRUPT_GetDioStatus@a,w,c
 18941                           
 18942                           ; BSR set to: 1
 18943  008B42  0012               	return		;funcret
 18944  008B44                     __end_of_INTERRUPT_GetDioStatus:
 18945                           	opt callstack 0
 18946                           
 18947 ;; *************** function _LORAWAN_Join *****************
 18948 ;; Defined at:
 18949 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18950 ;; Parameters:    Size  Location     Type
 18951 ;;  activationTy    1    wreg     enum E6082
 18952 ;; Auto vars:     Size  Location     Type
 18953 ;;  activationTy    1  131[BANK0 ] enum E6082
 18954 ;;  result          1  130[BANK0 ] enum E6059
 18955 ;;  bufferIndex     1  129[BANK0 ] unsigned char 
 18956 ;; Return value:  Size  Location     Type
 18957 ;;                  1    wreg      enum E6059
 18958 ;; Registers used:
 18959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18960 ;; Tracked objects:
 18961 ;;		On entry : 0/0
 18962 ;;		On exit  : 0/0
 18963 ;;		Unchanged: 0/0
 18964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18966 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18968 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18969 ;;Total ram usage:        3 bytes
 18970 ;; Hardware stack levels used:    1
 18971 ;; Hardware stack levels required when called:    7
 18972 ;; This function calls:
 18973 ;;		_PrepareJoinRequestFrame
 18974 ;;		_RADIO_Transmit
 18975 ;;		_SelectChannelForTransmission
 18976 ;;		_SwTimerSetTimeout
 18977 ;;		_SwTimerStart
 18978 ;;		_UpdateJoinInProgress
 18979 ;; This function is called by:
 18980 ;;		_main
 18981 ;; This function uses a non-reentrant model
 18982 ;;
 18983                           
 18984                           	psect	text118
 18985  00A6D0                     __ptext118:
 18986                           	opt callstack 0
 18987  00A6D0                     _LORAWAN_Join:
 18988                           	opt callstack 23
 18989                           
 18990                           ; BSR set to: 1
 18991                           ;incstack = 0
 18992                           ;LORAWAN_Join@activationTypeNew stored from wreg
 18993  00A6D0  0100               	movlb	0	; () banked
 18994  00A6D2  6FE3               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 18995                           
 18996                           ;lorawan.c: 117: uint8_t bufferIndex;;lorawan.c: 118: LorawanError_t result;;lorawan.c: 
      +                          120: if (loRa.macStatus.macPause == 1)
 18997  00A6D4  0102               	movlb	2	; () banked
 18998  00A6D6  B103               	btfsc	(_loRa+3)& (0+255),0,b
 18999  00A6D8  0012               	return	
 19000                           
 19001                           ; BSR set to: 2
 19002                           ;lorawan.c: 123: };lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 19003  00A6DA  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 19004  00A6DC  0012               	return	
 19005                           
 19006                           ; BSR set to: 2
 19007                           ;lorawan.c: 128: };lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 19008  00A6DE  5102               	movf	(_loRa+2)& (0+255),w,b
 19009  00A6E0  0B0F               	andlw	15
 19010  00A6E2  0900               	iorlw	0
 19011  00A6E4  A4D8               	btfss	status,2,c
 19012  00A6E6  0012               	return	
 19013                           
 19014                           ; BSR set to: 2
 19015                           ;lorawan.c: 133: };lorawan.c: 135: loRa.activationParameters.activationType = activation
      +                          TypeNew;
 19016  00A6E8  C0E3  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 19017                           
 19018                           ; BSR set to: 2
 19019                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 19020  00A6EC  0100               	movlb	0	; () banked
 19021  00A6EE  51E3               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 19022  00A6F0  A4D8               	btfss	status,2,c
 19023  00A6F2  D023               	goto	l1506
 19024                           
 19025                           ; BSR set to: 0
 19026                           ;lorawan.c: 138: {;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.a
      +                          pplicationEui == 0) || (loRa.macKeys.applicationKey == 0) )
 19027  00A6F4  0102               	movlb	2	; () banked
 19028  00A6F6  A1A5               	btfss	(_loRa+165)& (0+255),0,b
 19029  00A6F8  0012               	return	
 19030                           
 19031                           ; BSR set to: 2
 19032  00A6FA  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 19033  00A6FC  0012               	return	
 19034                           
 19035                           ; BSR set to: 2
 19036  00A6FE  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 19037  00A700  0012               	return	
 19038                           
 19039                           ; BSR set to: 2
 19040                           ;lorawan.c: 144: else;lorawan.c: 145: {;lorawan.c: 146: bufferIndex = PrepareJoinRequest
      +                          Frame ();
 19041  00A702  EC67  F060         	call	_PrepareJoinRequestFrame	;wreg free
 19042  00A706  0100               	movlb	0	; () banked
 19043  00A708  6FE1               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 19047  00A70A  0E00               	movlw	0
 19048  00A70C  ECE4  F04C         	call	_SelectChannelForTransmission
 19049  00A710  0100               	movlb	0	; () banked
 19050  00A712  6FE2               	movwf	LORAWAN_Join@result& (0+255),b
 19051                           
 19052                           ; BSR set to: 0
 19053                           ;lorawan.c: 149: if (result == OK)
 19054  00A714  51E2               	movf	LORAWAN_Join@result& (0+255),w,b
 19055  00A716  A4D8               	btfss	status,2,c
 19056  00A718  0012               	return	
 19057                           
 19058                           ; BSR set to: 0
 19059                           ;lorawan.c: 150: {;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 19060  00A71A  0EA0               	movlw	low _macBuffer
 19061  00A71C  6E4A               	movwf	RADIO_Transmit@buffer,c
 19062  00A71E  0E04               	movlw	high _macBuffer
 19063  00A720  6E4B               	movwf	RADIO_Transmit@buffer+1,c
 19064  00A722  C0E1  F04C         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 19065  00A726  ECF7  F065         	call	_RADIO_Transmit	;wreg free
 19066  00A72A  504A               	movf	?_RADIO_Transmit,w,c
 19067  00A72C  104B               	iorwf	?_RADIO_Transmit+1,w,c
 19068  00A72E  A4D8               	btfss	status,2,c
 19069  00A730  0012               	return	
 19070                           
 19071                           ;lorawan.c: 152: {;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 19072  00A732  0E01               	movlw	1
 19073  00A734  ECAB  F045         	call	_UpdateJoinInProgress
 19074  00A738  0012               	return	
 19075  00A73A                     l1506:
 19076                           
 19077                           ; BSR set to: 0
 19078                           ;lorawan.c: 167: else;lorawan.c: 168: {;lorawan.c: 170: if ( (loRa.macKeys.applicationSe
      +                          ssionKey == 0) || (loRa.macKeys.networkSessionKey == 0) || (loRa.macKeys.deviceAddress =
      +                          = 0) )
 19079  00A73A  0102               	movlb	2	; () banked
 19080  00A73C  ABA5               	btfss	(_loRa+165)& (0+255),5,b
 19081  00A73E  0012               	return	
 19082                           
 19083                           ; BSR set to: 2
 19084  00A740  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 19085  00A742  0012               	return	
 19086                           
 19087                           ; BSR set to: 2
 19088  00A744  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 19089  00A746  0012               	return	
 19090                           
 19091                           ; BSR set to: 2
 19092                           ;lorawan.c: 174: else;lorawan.c: 175: {;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 19093  00A748  0E07               	movlw	7
 19094  00A74A  ECAB  F045         	call	_UpdateJoinInProgress
 19095                           
 19096                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 19097  00A74E  0E8F               	movlw	143
 19098  00A750  6E0E               	movwf	SwTimerSetTimeout@timeout,c
 19099  00A752  0E02               	movlw	2
 19100  00A754  6E0F               	movwf	SwTimerSetTimeout@timeout+1,c
 19101  00A756  0E00               	movlw	0
 19102  00A758  6E10               	movwf	SwTimerSetTimeout@timeout+2,c
 19103  00A75A  0E00               	movlw	0
 19104  00A75C  6E11               	movwf	SwTimerSetTimeout@timeout+3,c
 19105  00A75E  0102               	movlb	2	; () banked
 19106  00A760  51F3               	movf	(_loRa+243)& (0+255),w,b
 19107  00A762  EC5C  F049         	call	_SwTimerSetTimeout
 19108                           
 19109                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 19110  00A766  0102               	movlb	2	; () banked
 19111  00A768  51F3               	movf	(_loRa+243)& (0+255),w,b
 19112  00A76A  ECC3  F051         	call	_SwTimerStart
 19113  00A76E  0012               	return		;funcret
 19114  00A770                     __end_of_LORAWAN_Join:
 19115                           	opt callstack 0
 19116                           
 19117 ;; *************** function _UpdateJoinInProgress *****************
 19118 ;; Defined at:
 19119 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19120 ;; Parameters:    Size  Location     Type
 19121 ;;  state           1    wreg     unsigned char 
 19122 ;; Auto vars:     Size  Location     Type
 19123 ;;  state           1    0[COMRAM] unsigned char 
 19124 ;; Return value:  Size  Location     Type
 19125 ;;                  1    wreg      void 
 19126 ;; Registers used:
 19127 ;;		wreg, status,2, status,0
 19128 ;; Tracked objects:
 19129 ;;		On entry : 0/0
 19130 ;;		On exit  : 0/0
 19131 ;;		Unchanged: 0/0
 19132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19137 ;;Total ram usage:        1 bytes
 19138 ;; Hardware stack levels used:    1
 19139 ;; This function calls:
 19140 ;;		Nothing
 19141 ;; This function is called by:
 19142 ;;		_LORAWAN_Join
 19143 ;; This function uses a non-reentrant model
 19144 ;;
 19145                           
 19146                           	psect	text119
 19147  008B56                     __ptext119:
 19148                           	opt callstack 0
 19149  008B56                     _UpdateJoinInProgress:
 19150                           	opt callstack 29
 19151                           
 19152                           ;incstack = 0
 19153                           ;UpdateJoinInProgress@state stored from wreg
 19154  008B56  6E01               	movwf	UpdateJoinInProgress@state,c
 19155                           
 19156                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 19157  008B58  0102               	movlb	2	; () banked
 19158  008B5A  9902               	bcf	(_loRa+2)& (0+255),4,b
 19159                           
 19160                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 19161  008B5C  8500               	bsf	_loRa& (0+255),2,b
 19162                           
 19163                           ; BSR set to: 2
 19164                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 19165  008B5E  5102               	movf	(_loRa+2)& (0+255),w,b
 19166  008B60  1801               	xorwf	UpdateJoinInProgress@state,w,c
 19167  008B62  0BF0               	andlw	-16
 19168  008B64  1801               	xorwf	UpdateJoinInProgress@state,w,c
 19169  008B66  6F02               	movwf	(_loRa+2)& (0+255),b
 19170                           
 19171                           ; BSR set to: 2
 19172  008B68  0012               	return		;funcret
 19173  008B6A                     __end_of_UpdateJoinInProgress:
 19174                           	opt callstack 0
 19175                           
 19176 ;; *************** function _SelectChannelForTransmission *****************
 19177 ;; Defined at:
 19178 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19179 ;; Parameters:    Size  Location     Type
 19180 ;;  transmission    1    wreg     unsigned char 
 19181 ;; Auto vars:     Size  Location     Type
 19182 ;;  transmission    1   83[COMRAM] unsigned char 
 19183 ;;  channelIndex    1   85[COMRAM] unsigned char 
 19184 ;;  result          1   84[COMRAM] enum E6118
 19185 ;; Return value:  Size  Location     Type
 19186 ;;                  1    wreg      enum E6118
 19187 ;; Registers used:
 19188 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19189 ;; Tracked objects:
 19190 ;;		On entry : 0/0
 19191 ;;		On exit  : 0/0
 19192 ;;		Unchanged: 0/0
 19193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19195 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19197 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19198 ;;Total ram usage:        3 bytes
 19199 ;; Hardware stack levels used:    1
 19200 ;; Hardware stack levels required when called:    4
 19201 ;; This function calls:
 19202 ;;		_ConfigureRadioTx
 19203 ;;		_SearchAvailableChannel
 19204 ;; This function is called by:
 19205 ;;		_LORAWAN_RxTimeout
 19206 ;;		_LORAWAN_Join
 19207 ;;		_LORAWAN_Send
 19208 ;;		_AckRetransmissionCallback
 19209 ;;		_UnconfirmedTransmissionCallback
 19210 ;; This function uses a non-reentrant model
 19211 ;;
 19212                           
 19213                           	psect	text120
 19214  0099C8                     __ptext120:
 19215                           	opt callstack 0
 19216  0099C8                     _SelectChannelForTransmission:
 19217                           	opt callstack 23
 19218                           
 19219                           ; BSR set to: 2
 19220                           ;incstack = 0
 19221                           ;SelectChannelForTransmission@transmissionType stored from wreg
 19222  0099C8  6E54               	movwf	SelectChannelForTransmission@transmissionType,c
 19223                           
 19224                           ;lorawan_eu.c: 922: uint8_t channelIndex;;lorawan_eu.c: 924: result = SearchAvailableCha
      +                          nnel (16, transmissionType, &channelIndex);
 19225  0099CA  C054  F048         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 19226  0099CE  0E56               	movlw	low SelectChannelForTransmission@channelIndex
 19227  0099D0  6E49               	movwf	SearchAvailableChannel@channelIndex,c
 19228  0099D2  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 19229  0099D4  6E4A               	movwf	SearchAvailableChannel@channelIndex+1,c
 19230  0099D6  0E10               	movlw	16
 19231  0099D8  ECE0  F058         	call	_SearchAvailableChannel
 19232  0099DC  6E55               	movwf	SelectChannelForTransmission@result,c
 19233                           
 19234                           ;lorawan_eu.c: 926: if (result == OK)
 19235  0099DE  5055               	movf	SelectChannelForTransmission@result,w,c
 19236  0099E0  A4D8               	btfss	status,2,c
 19237  0099E2  D020               	goto	l13588
 19238                           
 19239                           ;lorawan_eu.c: 927: {;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 19240  0099E4  C056  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 19241                           
 19242                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 19243  0099E8  5056               	movf	SelectChannelForTransmission@channelIndex,w,c
 19244  0099EA  0D0E               	mullw	14
 19245  0099EC  0E00               	movlw	low _Channels
 19246  0099EE  24F3               	addwf	prodl,w,c
 19247  0099F0  6ED9               	movwf	fsr2l,c
 19248  0099F2  0E03               	movlw	high _Channels
 19249  0099F4  20F4               	addwfc	prodh,w,c
 19250  0099F6  6EDA               	movwf	fsr2h,c
 19251  0099F8  CFDE F213          	movff	postinc2,_loRa+19
 19252  0099FC  CFDE F214          	movff	postinc2,_loRa+20
 19253  009A00  CFDE F215          	movff	postinc2,_loRa+21
 19254  009A04  CFDE F216          	movff	postinc2,_loRa+22
 19255                           
 19256                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 19257  009A08  C2DF  F217         	movff	_loRa+223,_loRa+23
 19258                           
 19259                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 19260  009A0C  C213  F014         	movff	_loRa+19,ConfigureRadioTx@freq
 19261  009A10  C214  F015         	movff	_loRa+20,ConfigureRadioTx@freq+1
 19262  009A14  C215  F016         	movff	_loRa+21,ConfigureRadioTx@freq+2
 19263  009A18  C216  F017         	movff	_loRa+22,ConfigureRadioTx@freq+3
 19264  009A1C  0102               	movlb	2	; () banked
 19265  009A1E  5117               	movf	(_loRa+23)& (0+255),w,b
 19266  009A20  EC00  F04A         	call	_ConfigureRadioTx
 19267  009A24                     l13588:
 19268                           
 19269                           ;lorawan_eu.c: 933: };lorawan_eu.c: 934: return result;
 19270  009A24  5055               	movf	SelectChannelForTransmission@result,w,c
 19271  009A26  0012               	return		;funcret
 19272  009A28                     __end_of_SelectChannelForTransmission:
 19273                           	opt callstack 0
 19274                           
 19275 ;; *************** function _SearchAvailableChannel *****************
 19276 ;; Defined at:
 19277 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19278 ;; Parameters:    Size  Location     Type
 19279 ;;  maxChannels     1    wreg     unsigned char 
 19280 ;;  transmission    1   71[COMRAM] unsigned char 
 19281 ;;  channelIndex    2   72[COMRAM] PTR unsigned char 
 19282 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 19283 ;; Auto vars:     Size  Location     Type
 19284 ;;  maxChannels     1   80[COMRAM] unsigned char 
 19285 ;;  i               1   82[COMRAM] unsigned char 
 19286 ;;  randomNumber    1   81[COMRAM] unsigned char 
 19287 ;;  result          1   79[COMRAM] enum E6118
 19288 ;;  randomNumber    1   78[COMRAM] unsigned char 
 19289 ;; Return value:  Size  Location     Type
 19290 ;;                  1    wreg      enum E6118
 19291 ;; Registers used:
 19292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19293 ;; Tracked objects:
 19294 ;;		On entry : 0/0
 19295 ;;		On exit  : 0/0
 19296 ;;		Unchanged: 0/0
 19297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19298 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19299 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19300 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19301 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19302 ;;Total ram usage:       12 bytes
 19303 ;; Hardware stack levels used:    1
 19304 ;; Hardware stack levels required when called:    3
 19305 ;; This function calls:
 19306 ;;		_Random
 19307 ;; This function is called by:
 19308 ;;		_SelectChannelForTransmission
 19309 ;;		_LORAWAN_RxDone
 19310 ;; This function uses a non-reentrant model
 19311 ;;
 19312                           
 19313                           	psect	text121
 19314  00B1C0                     __ptext121:
 19315                           	opt callstack 0
 19316  00B1C0                     _SearchAvailableChannel:
 19317                           	opt callstack 23
 19318                           
 19319                           ;incstack = 0
 19320                           ;SearchAvailableChannel@maxChannels stored from wreg
 19321  00B1C0  6E51               	movwf	SearchAvailableChannel@maxChannels,c
 19322                           
 19323                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;;lorawan_eu.c: 781: Lorawa
      +                          nError_t result = OK;
 19324  00B1C2  0E00               	movlw	0
 19325  00B1C4  6E50               	movwf	SearchAvailableChannel@result,c
 19326                           
 19327                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 19328  00B1C6  C051  F046         	movff	SearchAvailableChannel@maxChannels,Random@max
 19329  00B1CA  6A47               	clrf	Random@max+1,c
 19330  00B1CC  ECBD  F046         	call	_Random	;wreg free
 19331  00B1D0  2846               	incf	?_Random,w,c
 19332  00B1D2  6E52               	movwf	SearchAvailableChannel@randomNumber,c
 19333                           
 19334                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 19335  00B1D4  C052  F04F         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 19336                           
 19337                           ;lorawan_eu.c: 786: while (randomNumber)
 19338  00B1D8  D05B               	goto	l13390
 19339  00B1DA                     l13364:
 19340                           
 19341                           ;lorawan_eu.c: 787: {;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber !=
      +                           0) ; i++)
 19342  00B1DA  0E00               	movlw	0
 19343  00B1DC  6E53               	movwf	SearchAvailableChannel@i,c
 19344  00B1DE  D04A               	goto	l13382
 19345  00B1E0                     l13366:
 19346                           
 19347                           ;lorawan_eu.c: 789: {;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[
      +                          i].channelTimer == 0 ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loR
      +                          a.currentDataRate <= Channels[i].dataRange.max ) )
 19348  00B1E0  5053               	movf	SearchAvailableChannel@i,w,c
 19349  00B1E2  0D0E               	mullw	14
 19350  00B1E4  0E04               	movlw	low (_Channels+4)
 19351  00B1E6  24F3               	addwf	prodl,w,c
 19352  00B1E8  6ED9               	movwf	fsr2l,c
 19353  00B1EA  0E03               	movlw	high (_Channels+4)
 19354  00B1EC  20F4               	addwfc	prodh,w,c
 19355  00B1EE  6EDA               	movwf	fsr2h,c
 19356  00B1F0  04DE               	decf	postinc2,w,c
 19357  00B1F2  A4D8               	btfss	status,2,c
 19358  00B1F4  D03E               	goto	l1149
 19359  00B1F6  5053               	movf	SearchAvailableChannel@i,w,c
 19360  00B1F8  0D0E               	mullw	14
 19361  00B1FA  0E08               	movlw	low (_Channels+8)
 19362  00B1FC  24F3               	addwf	prodl,w,c
 19363  00B1FE  6ED9               	movwf	fsr2l,c
 19364  00B200  0E03               	movlw	high (_Channels+8)
 19365  00B202  20F4               	addwfc	prodh,w,c
 19366  00B204  6EDA               	movwf	fsr2h,c
 19367  00B206  50DE               	movf	postinc2,w,c
 19368  00B208  10DE               	iorwf	postinc2,w,c
 19369  00B20A  10DE               	iorwf	postinc2,w,c
 19370  00B20C  10DE               	iorwf	postinc2,w,c
 19371  00B20E  A4D8               	btfss	status,2,c
 19372  00B210  D030               	goto	l1149
 19373  00B212  5053               	movf	SearchAvailableChannel@i,w,c
 19374  00B214  0D0E               	mullw	14
 19375  00B216  0E05               	movlw	low (_Channels+5)
 19376  00B218  24F3               	addwf	prodl,w,c
 19377  00B21A  6ED9               	movwf	fsr2l,c
 19378  00B21C  0E03               	movlw	high (_Channels+5)
 19379  00B21E  20F4               	addwfc	prodh,w,c
 19380  00B220  6EDA               	movwf	fsr2h,c
 19381  00B222  0103               	movlb	3	; () banked
 19382  00B224  50DF               	movf	223,w,c
 19383  00B226  0B0F               	andlw	15
 19384  00B228  6E4B               	movwf	??_SearchAvailableChannel& (0+255),c
 19385  00B22A  504B               	movf	??_SearchAvailableChannel,w,c
 19386  00B22C  0102               	movlb	2	; () banked
 19387  00B22E  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 19388  00B230  A0D8               	btfss	status,0,c
 19389  00B232  D01F               	goto	l1149
 19390                           
 19391                           ; BSR set to: 2
 19392  00B234  5053               	movf	SearchAvailableChannel@i,w,c
 19393  00B236  0D0E               	mullw	14
 19394  00B238  0E05               	movlw	low (_Channels+5)
 19395  00B23A  24F3               	addwf	prodl,w,c
 19396  00B23C  6ED9               	movwf	fsr2l,c
 19397  00B23E  0E03               	movlw	high (_Channels+5)
 19398  00B240  20F4               	addwfc	prodh,w,c
 19399  00B242  6EDA               	movwf	fsr2h,c
 19400  00B244  0103               	movlb	3	; () banked
 19401  00B246  38DF               	swapf	223,w,c
 19402  00B248  0B0F               	andlw	15
 19403  00B24A  6E4B               	movwf	??_SearchAvailableChannel& (0+255),c
 19404  00B24C  0102               	movlb	2	; () banked
 19405  00B24E  51DF               	movf	(_loRa+223)& (0+255),w,b
 19406  00B250  5C4B               	subwf	??_SearchAvailableChannel,w,c
 19407  00B252  A0D8               	btfss	status,0,c
 19408  00B254  D00E               	goto	l1149
 19409                           
 19410                           ; BSR set to: 2
 19411                           ;lorawan_eu.c: 791: {;lorawan_eu.c: 792: if (transmissionType == 0)
 19412  00B256  5048               	movf	SearchAvailableChannel@transmissionType,w,c
 19413  00B258  A4D8               	btfss	status,2,c
 19414  00B25A  D00A               	goto	u14450
 19415                           
 19416                           ; BSR set to: 2
 19417                           ;lorawan_eu.c: 793: {;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 19418  00B25C  5053               	movf	SearchAvailableChannel@i,w,c
 19419  00B25E  0D0E               	mullw	14
 19420  00B260  0E0C               	movlw	low (_Channels+12)
 19421  00B262  24F3               	addwf	prodl,w,c
 19422  00B264  6ED9               	movwf	fsr2l,c
 19423  00B266  0E03               	movlw	high (_Channels+12)
 19424  00B268  20F4               	addwfc	prodh,w,c
 19425  00B26A  6EDA               	movwf	fsr2h,c
 19426  00B26C  04DE               	decf	postinc2,w,c
 19427  00B26E  B4D8               	btfsc	status,2,c
 19428  00B270                     u14450:
 19429                           
 19430                           ; BSR set to: 2
 19431                           ;lorawan_eu.c: 795: {;lorawan_eu.c: 796: randomNumber --;
 19432  00B270  0652               	decf	SearchAvailableChannel@randomNumber,f,c
 19433  00B272                     l1149:
 19434  00B272  2A53               	incf	SearchAvailableChannel@i,f,c
 19435  00B274                     l13382:
 19436  00B274  5051               	movf	SearchAvailableChannel@maxChannels,w,c
 19437  00B276  5C53               	subwf	SearchAvailableChannel@i,w,c
 19438  00B278  B0D8               	btfsc	status,0,c
 19439  00B27A  D003               	goto	u14470
 19440  00B27C  5052               	movf	SearchAvailableChannel@randomNumber,w,c
 19441  00B27E  A4D8               	btfss	status,2,c
 19442  00B280  D7AF               	goto	l13366
 19443  00B282                     u14470:
 19444                           
 19445                           ;lorawan_eu.c: 802: };lorawan_eu.c: 803: };lorawan_eu.c: 804: };lorawan_eu.c: 806: if ( 
      +                          randomNumber == randomNumberCopy )
 19446  00B282  504F               	movf	SearchAvailableChannel@randomNumberCopy,w,c
 19447  00B284  1852               	xorwf	SearchAvailableChannel@randomNumber,w,c
 19448  00B286  A4D8               	btfss	status,2,c
 19449  00B288  D003               	goto	l13390
 19450                           
 19451                           ;lorawan_eu.c: 807: {;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 19452  00B28A  0E09               	movlw	9
 19453  00B28C  6E50               	movwf	SearchAvailableChannel@result,c
 19454                           
 19455                           ;lorawan_eu.c: 809: break;
 19456  00B28E  D003               	goto	u14490
 19457  00B290                     l13390:
 19458  00B290  5052               	movf	SearchAvailableChannel@randomNumber,w,c
 19459  00B292  A4D8               	btfss	status,2,c
 19460  00B294  D7A2               	goto	l13364
 19461  00B296                     u14490:
 19462                           
 19463                           ;lorawan_eu.c: 810: };lorawan_eu.c: 811: };lorawan_eu.c: 813: if ( i != 0)
 19464  00B296  5053               	movf	SearchAvailableChannel@i,w,c
 19465  00B298  B4D8               	btfsc	status,2,c
 19466  00B29A  D007               	goto	l13396
 19467                           
 19468                           ;lorawan_eu.c: 814: {;lorawan_eu.c: 815: *channelIndex = i - 1;
 19469  00B29C  0453               	decf	SearchAvailableChannel@i,w,c
 19470  00B29E  C049  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 19471  00B2A2  C04A  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 19472  00B2A6  6EDF               	movwf	indf2,c
 19473                           
 19474                           ;lorawan_eu.c: 816: }
 19475  00B2A8  D002               	goto	l1159
 19476  00B2AA                     l13396:
 19477                           
 19478                           ;lorawan_eu.c: 817: else;lorawan_eu.c: 818: {;lorawan_eu.c: 819: result = NO_CHANNELS_FO
      +                          UND;
 19479  00B2AA  0E09               	movlw	9
 19480  00B2AC  6E50               	movwf	SearchAvailableChannel@result,c
 19481  00B2AE                     l1159:
 19482                           
 19483                           ;lorawan_eu.c: 820: };lorawan_eu.c: 821: return result;
 19484  00B2AE  5050               	movf	SearchAvailableChannel@result,w,c
 19485  00B2B0  0012               	return		;funcret
 19486  00B2B2                     __end_of_SearchAvailableChannel:
 19487                           	opt callstack 0
 19488                           
 19489 ;; *************** function _ConfigureRadioTx *****************
 19490 ;; Defined at:
 19491 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19492 ;; Parameters:    Size  Location     Type
 19493 ;;  dataRate        1    wreg     unsigned char 
 19494 ;;  freq            4   19[COMRAM] unsigned long 
 19495 ;; Auto vars:     Size  Location     Type
 19496 ;;  dataRate        1   23[COMRAM] unsigned char 
 19497 ;;  txPower         1   24[COMRAM] char 
 19498 ;; Return value:  Size  Location     Type
 19499 ;;                  1    wreg      void 
 19500 ;; Registers used:
 19501 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19502 ;; Tracked objects:
 19503 ;;		On entry : 0/0
 19504 ;;		On exit  : 0/0
 19505 ;;		Unchanged: 0/0
 19506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19510 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19511 ;;Total ram usage:        6 bytes
 19512 ;; Hardware stack levels used:    1
 19513 ;; Hardware stack levels required when called:    3
 19514 ;; This function calls:
 19515 ;;		_ConfigureRadio
 19516 ;;		_RADIO_SetCRC
 19517 ;;		_RADIO_SetIQInverted
 19518 ;;		_RADIO_SetOutputPower
 19519 ;; This function is called by:
 19520 ;;		_SelectChannelForTransmission
 19521 ;; This function uses a non-reentrant model
 19522 ;;
 19523                           
 19524                           	psect	text122
 19525  009400                     __ptext122:
 19526                           	opt callstack 0
 19527  009400                     _ConfigureRadioTx:
 19528                           	opt callstack 23
 19529                           
 19530                           ;incstack = 0
 19531                           ;ConfigureRadioTx@dataRate stored from wreg
 19532  009400  6E18               	movwf	ConfigureRadioTx@dataRate,c
 19533                           
 19534                           ;lorawan_eu.c: 1257: int8_t txPower;;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 19535  009402  C014  F00F         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 19536  009406  C015  F010         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 19537  00940A  C016  F011         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 19538  00940E  C017  F012         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 19539  009412  5018               	movf	ConfigureRadioTx@dataRate,w,c
 19540  009414  ECD8  F052         	call	_ConfigureRadio
 19541                           
 19542                           ;lorawan_eu.c: 1262: {;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 19543  009418  0EA2               	movlw	low _txPower868
 19544  00941A  0102               	movlb	2	; () banked
 19545  00941C  25E1               	addwf	(_loRa+225)& (0+255),w,b
 19546  00941E  6EF6               	movwf	tblptrl,c
 19547  009420  6AF7               	clrf	tblptrh,c
 19548  009422  0EFF               	movlw	high _txPower868
 19549  009424  22F7               	addwfc	tblptrh,f,c
 19550  009426                     	if	1	;There are 3 active tblptr bytes
 19551  009426  6AF8               	clrf	tblptru,c
 19552  009428  0E00               	movlw	low (__mediumconst shr (0+16))
 19553  00942A  22F8               	addwfc	tblptru,f,c
 19554  00942C                     	endif
 19555  00942C  0008               	tblrd		*
 19556  00942E  CFF5 F019          	movff	tablat,ConfigureRadioTx@txPower
 19557                           
 19558                           ; BSR set to: 2
 19559                           ;lorawan_eu.c: 1268: };lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 19560                           
 19561                           ;lorawan_eu.c: 1264: }
 19562  009432  5019               	movf	ConfigureRadioTx@txPower,w,c
 19563  009434  EC0B  F045         	call	_RADIO_SetOutputPower
 19564                           
 19565                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 19566  009438  0E01               	movlw	1
 19567  00943A  EC03  F045         	call	_RADIO_SetCRC
 19568                           
 19569                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 19570  00943E  0E00               	movlw	0
 19571  009440  EC07  F045         	call	_RADIO_SetIQInverted
 19572  009444  0012               	return		;funcret
 19573  009446                     __end_of_ConfigureRadioTx:
 19574                           	opt callstack 0
 19575                           
 19576 ;; *************** function _RADIO_SetOutputPower *****************
 19577 ;; Defined at:
 19578 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19579 ;; Parameters:    Size  Location     Type
 19580 ;;  power           1    wreg     char 
 19581 ;; Auto vars:     Size  Location     Type
 19582 ;;  power           1    0[COMRAM] char 
 19583 ;; Return value:  Size  Location     Type
 19584 ;;                  1    wreg      void 
 19585 ;; Registers used:
 19586 ;;		wreg
 19587 ;; Tracked objects:
 19588 ;;		On entry : 0/0
 19589 ;;		On exit  : 0/0
 19590 ;;		Unchanged: 0/0
 19591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19596 ;;Total ram usage:        1 bytes
 19597 ;; Hardware stack levels used:    1
 19598 ;; This function calls:
 19599 ;;		Nothing
 19600 ;; This function is called by:
 19601 ;;		_ConfigureRadioTx
 19602 ;; This function uses a non-reentrant model
 19603 ;;
 19604                           
 19605                           	psect	text123
 19606  008A16                     __ptext123:
 19607                           	opt callstack 0
 19608  008A16                     _RADIO_SetOutputPower:
 19609                           	opt callstack 25
 19610                           
 19611                           ;incstack = 0
 19612                           ;RADIO_SetOutputPower@power stored from wreg
 19613  008A16  6E01               	movwf	RADIO_SetOutputPower@power,c
 19614                           
 19615                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 19616  008A18  C001  F133         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 19617  008A1C  0012               	return		;funcret
 19618  008A1E                     __end_of_RADIO_SetOutputPower:
 19619                           	opt callstack 0
 19620                           
 19621 ;; *************** function _RADIO_SetIQInverted *****************
 19622 ;; Defined at:
 19623 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19624 ;; Parameters:    Size  Location     Type
 19625 ;;  iqInverted      1    wreg     unsigned char 
 19626 ;; Auto vars:     Size  Location     Type
 19627 ;;  iqInverted      1    0[COMRAM] unsigned char 
 19628 ;; Return value:  Size  Location     Type
 19629 ;;                  1    wreg      void 
 19630 ;; Registers used:
 19631 ;;		wreg
 19632 ;; Tracked objects:
 19633 ;;		On entry : 0/0
 19634 ;;		On exit  : 0/0
 19635 ;;		Unchanged: 0/0
 19636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19641 ;;Total ram usage:        1 bytes
 19642 ;; Hardware stack levels used:    1
 19643 ;; This function calls:
 19644 ;;		Nothing
 19645 ;; This function is called by:
 19646 ;;		_ConfigureRadioTx
 19647 ;;		_ConfigureRadioRx
 19648 ;; This function uses a non-reentrant model
 19649 ;;
 19650                           
 19651                           	psect	text124
 19652  008A0E                     __ptext124:
 19653                           	opt callstack 0
 19654  008A0E                     _RADIO_SetIQInverted:
 19655                           	opt callstack 25
 19656                           
 19657                           ;incstack = 0
 19658                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 19659  008A0E  6E01               	movwf	RADIO_SetIQInverted@iqInverted,c
 19660                           
 19661                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 19662  008A10  C001  F138         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 19663  008A14  0012               	return		;funcret
 19664  008A16                     __end_of_RADIO_SetIQInverted:
 19665                           	opt callstack 0
 19666                           
 19667 ;; *************** function _RADIO_SetCRC *****************
 19668 ;; Defined at:
 19669 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19670 ;; Parameters:    Size  Location     Type
 19671 ;;  crc             1    wreg     unsigned char 
 19672 ;; Auto vars:     Size  Location     Type
 19673 ;;  crc             1    0[COMRAM] unsigned char 
 19674 ;; Return value:  Size  Location     Type
 19675 ;;                  1    wreg      void 
 19676 ;; Registers used:
 19677 ;;		wreg
 19678 ;; Tracked objects:
 19679 ;;		On entry : 0/0
 19680 ;;		On exit  : 0/0
 19681 ;;		Unchanged: 0/0
 19682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19687 ;;Total ram usage:        1 bytes
 19688 ;; Hardware stack levels used:    1
 19689 ;; This function calls:
 19690 ;;		Nothing
 19691 ;; This function is called by:
 19692 ;;		_ConfigureRadioTx
 19693 ;;		_ConfigureRadioRx
 19694 ;; This function uses a non-reentrant model
 19695 ;;
 19696                           
 19697                           	psect	text125
 19698  008A06                     __ptext125:
 19699                           	opt callstack 0
 19700  008A06                     _RADIO_SetCRC:
 19701                           	opt callstack 25
 19702                           
 19703                           ;incstack = 0
 19704                           ;RADIO_SetCRC@crc stored from wreg
 19705  008A06  6E01               	movwf	RADIO_SetCRC@crc,c
 19706                           
 19707                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 19708  008A08  C001  F134         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 19709  008A0C  0012               	return		;funcret
 19710  008A0E                     __end_of_RADIO_SetCRC:
 19711                           	opt callstack 0
 19712                           
 19713 ;; *************** function _ConfigureRadio *****************
 19714 ;; Defined at:
 19715 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19716 ;; Parameters:    Size  Location     Type
 19717 ;;  dataRate        1    wreg     unsigned char 
 19718 ;;  freq            4   14[COMRAM] unsigned long 
 19719 ;; Auto vars:     Size  Location     Type
 19720 ;;  dataRate        1   18[COMRAM] unsigned char 
 19721 ;; Return value:  Size  Location     Type
 19722 ;;                  1    wreg      void 
 19723 ;; Registers used:
 19724 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19725 ;; Tracked objects:
 19726 ;;		On entry : 0/0
 19727 ;;		On exit  : 0/0
 19728 ;;		Unchanged: 0/0
 19729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19733 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19734 ;;Total ram usage:        5 bytes
 19735 ;; Hardware stack levels used:    1
 19736 ;; Hardware stack levels required when called:    2
 19737 ;; This function calls:
 19738 ;;		_RADIO_SetBandwidth
 19739 ;;		_RADIO_SetChannelFrequency
 19740 ;;		_RADIO_SetFSKSyncWord
 19741 ;;		_RADIO_SetFrequencyHopPeriod
 19742 ;;		_RADIO_SetLoRaSyncWord
 19743 ;;		_RADIO_SetModulation
 19744 ;;		_RADIO_SetSpreadingFactor
 19745 ;; This function is called by:
 19746 ;;		_ConfigureRadioTx
 19747 ;;		_ConfigureRadioRx
 19748 ;; This function uses a non-reentrant model
 19749 ;;
 19750                           
 19751                           	psect	text126
 19752  00A5B0                     __ptext126:
 19753                           	opt callstack 0
 19754  00A5B0                     _ConfigureRadio:
 19755                           	opt callstack 23
 19756                           
 19757                           ;incstack = 0
 19758                           ;ConfigureRadio@dataRate stored from wreg
 19759  00A5B0  6E13               	movwf	ConfigureRadio@dataRate,c
 19760                           
 19761                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 19762  00A5B2  0E67               	movlw	low _modulation
 19763  00A5B4  2413               	addwf	ConfigureRadio@dataRate,w,c
 19764  00A5B6  6EF6               	movwf	tblptrl,c
 19765  00A5B8  6AF7               	clrf	tblptrh,c
 19766  00A5BA  0EFF               	movlw	high _modulation
 19767  00A5BC  22F7               	addwfc	tblptrh,f,c
 19768  00A5BE                     	if	1	;There are 3 active tblptr bytes
 19769  00A5BE  6AF8               	clrf	tblptru,c
 19770  00A5C0  0E00               	movlw	low (__mediumconst shr (0+16))
 19771  00A5C2  22F8               	addwfc	tblptru,f,c
 19772  00A5C4                     	endif
 19773  00A5C4  0008               	tblrd		*
 19774  00A5C6  50F5               	movf	tablat,w,c
 19775  00A5C8  ECFB  F044         	call	_RADIO_SetModulation
 19776                           
 19777                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 19778  00A5CC  C00F  F001         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 19779  00A5D0  C010  F002         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 19780  00A5D4  C011  F003         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 19781  00A5D8  C012  F004         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 19782  00A5DC  EC07  F052         	call	_RADIO_SetChannelFrequency	;wreg free
 19783                           
 19784                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 19785  00A5E0  0E00               	movlw	0
 19786  00A5E2  6E02               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,c
 19787  00A5E4  0E00               	movlw	0
 19788  00A5E6  6E01               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,c
 19789  00A5E8  EC20  F045         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 19790                           
 19791                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 19792  00A5EC  0E07               	movlw	7
 19793  00A5EE  6013               	cpfslt	ConfigureRadio@dataRate,c
 19794  00A5F0  D01F               	goto	l13150
 19795                           
 19796                           ;lorawan_eu.c: 870: {;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataR
      +                          ate]);
 19797  00A5F2  0E95               	movlw	low _spreadingFactor
 19798  00A5F4  2413               	addwf	ConfigureRadio@dataRate,w,c
 19799  00A5F6  6EF6               	movwf	tblptrl,c
 19800  00A5F8  6AF7               	clrf	tblptrh,c
 19801  00A5FA  0EFF               	movlw	high _spreadingFactor
 19802  00A5FC  22F7               	addwfc	tblptrh,f,c
 19803  00A5FE                     	if	1	;There are 3 active tblptr bytes
 19804  00A5FE  6AF8               	clrf	tblptru,c
 19805  00A600  0E00               	movlw	low (__mediumconst shr (0+16))
 19806  00A602  22F8               	addwfc	tblptru,f,c
 19807  00A604                     	endif
 19808  00A604  0008               	tblrd		*
 19809  00A606  50F5               	movf	tablat,w,c
 19810  00A608  ECFF  F044         	call	_RADIO_SetSpreadingFactor
 19811                           
 19812                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 19813  00A60C  0E8E               	movlw	low _bandwidth
 19814  00A60E  2413               	addwf	ConfigureRadio@dataRate,w,c
 19815  00A610  6EF6               	movwf	tblptrl,c
 19816  00A612  6AF7               	clrf	tblptrh,c
 19817  00A614  0EFF               	movlw	high _bandwidth
 19818  00A616  22F7               	addwfc	tblptrh,f,c
 19819  00A618                     	if	1	;There are 3 active tblptr bytes
 19820  00A618  6AF8               	clrf	tblptru,c
 19821  00A61A  0E00               	movlw	low (__mediumconst shr (0+16))
 19822  00A61C  22F8               	addwfc	tblptru,f,c
 19823  00A61E                     	endif
 19824  00A61E  0008               	tblrd		*
 19825  00A620  50F5               	movf	tablat,w,c
 19826  00A622  ECF7  F044         	call	_RADIO_SetBandwidth
 19827                           
 19828                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 19829  00A626  0102               	movlb	2	; () banked
 19830  00A628  51F4               	movf	(_loRa+244)& (0+255),w,b
 19831  00A62A  ECF3  F044         	call	_RADIO_SetLoRaSyncWord
 19832                           
 19833                           ;lorawan_eu.c: 875: }
 19834  00A62E  0012               	return	
 19835  00A630                     l13150:
 19836                           
 19837                           ;lorawan_eu.c: 876: else;lorawan_eu.c: 877: {;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(si
      +                          zeof(FskSyncWordBuff) / sizeof(FskSyncWordBuff[0]), (uint8_t*)FskSyncWordBuff);
 19838  00A630  0EFC               	movlw	low _FskSyncWordBuff
 19839  00A632  6E0C               	movwf	RADIO_SetFSKSyncWord@syncWord,c
 19840  00A634  0EFF               	movlw	high _FskSyncWordBuff
 19841  00A636  6E0D               	movwf	RADIO_SetFSKSyncWord@syncWord+1,c
 19842  00A638  0E03               	movlw	3
 19843  00A63A  EC90  F047         	call	_RADIO_SetFSKSyncWord
 19844  00A63E  0012               	return		;funcret
 19845  00A640                     __end_of_ConfigureRadio:
 19846                           	opt callstack 0
 19847                           
 19848 ;; *************** function _RADIO_SetSpreadingFactor *****************
 19849 ;; Defined at:
 19850 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19851 ;; Parameters:    Size  Location     Type
 19852 ;;  spreadingFac    1    wreg     enum E5863
 19853 ;; Auto vars:     Size  Location     Type
 19854 ;;  spreadingFac    1    0[COMRAM] enum E5863
 19855 ;; Return value:  Size  Location     Type
 19856 ;;                  1    wreg      void 
 19857 ;; Registers used:
 19858 ;;		wreg
 19859 ;; Tracked objects:
 19860 ;;		On entry : 0/0
 19861 ;;		On exit  : 0/0
 19862 ;;		Unchanged: 0/0
 19863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19868 ;;Total ram usage:        1 bytes
 19869 ;; Hardware stack levels used:    1
 19870 ;; This function calls:
 19871 ;;		Nothing
 19872 ;; This function is called by:
 19873 ;;		_ConfigureRadio
 19874 ;; This function uses a non-reentrant model
 19875 ;;
 19876                           
 19877                           	psect	text127
 19878  0089FE                     __ptext127:
 19879                           	opt callstack 0
 19880  0089FE                     _RADIO_SetSpreadingFactor:
 19881                           	opt callstack 24
 19882                           
 19883                           ;incstack = 0
 19884                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 19885  0089FE  6E01               	movwf	RADIO_SetSpreadingFactor@spreadingFactor,c
 19886                           
 19887                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 19888  008A00  C001  F131         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 19889  008A04  0012               	return		;funcret
 19890  008A06                     __end_of_RADIO_SetSpreadingFactor:
 19891                           	opt callstack 0
 19892                           
 19893 ;; *************** function _RADIO_SetModulation *****************
 19894 ;; Defined at:
 19895 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19896 ;; Parameters:    Size  Location     Type
 19897 ;;  modulation      1    wreg     enum E5853
 19898 ;; Auto vars:     Size  Location     Type
 19899 ;;  modulation      1    0[COMRAM] enum E5853
 19900 ;; Return value:  Size  Location     Type
 19901 ;;                  1    wreg      void 
 19902 ;; Registers used:
 19903 ;;		wreg
 19904 ;; Tracked objects:
 19905 ;;		On entry : 0/0
 19906 ;;		On exit  : 0/0
 19907 ;;		Unchanged: 0/0
 19908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19913 ;;Total ram usage:        1 bytes
 19914 ;; Hardware stack levels used:    1
 19915 ;; This function calls:
 19916 ;;		Nothing
 19917 ;; This function is called by:
 19918 ;;		_ConfigureRadio
 19919 ;; This function uses a non-reentrant model
 19920 ;;
 19921                           
 19922                           	psect	text128
 19923  0089F6                     __ptext128:
 19924                           	opt callstack 0
 19925  0089F6                     _RADIO_SetModulation:
 19926                           	opt callstack 24
 19927                           
 19928                           ;incstack = 0
 19929                           ;RADIO_SetModulation@modulation stored from wreg
 19930  0089F6  6E01               	movwf	RADIO_SetModulation@modulation,c
 19931                           
 19932                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 19933  0089F8  C001  F130         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 19934  0089FC  0012               	return		;funcret
 19935  0089FE                     __end_of_RADIO_SetModulation:
 19936                           	opt callstack 0
 19937                           
 19938 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 19939 ;; Defined at:
 19940 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19941 ;; Parameters:    Size  Location     Type
 19942 ;;  frequencyHop    2    0[COMRAM] unsigned int 
 19943 ;; Auto vars:     Size  Location     Type
 19944 ;;		None
 19945 ;; Return value:  Size  Location     Type
 19946 ;;                  1    wreg      void 
 19947 ;; Registers used:
 19948 ;;		None
 19949 ;; Tracked objects:
 19950 ;;		On entry : 0/0
 19951 ;;		On exit  : 0/0
 19952 ;;		Unchanged: 0/0
 19953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19958 ;;Total ram usage:        2 bytes
 19959 ;; Hardware stack levels used:    1
 19960 ;; This function calls:
 19961 ;;		Nothing
 19962 ;; This function is called by:
 19963 ;;		_ConfigureRadio
 19964 ;; This function uses a non-reentrant model
 19965 ;;
 19966                           
 19967                           	psect	text129
 19968  008A40                     __ptext129:
 19969                           	opt callstack 0
 19970  008A40                     _RADIO_SetFrequencyHopPeriod:
 19971                           	opt callstack 24
 19972                           
 19973                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 19974                           
 19975                           ;incstack = 0
 19976  008A40  C001  F136         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 19977  008A44  C002  F137         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 19978  008A48  0012               	return		;funcret
 19979  008A4A                     __end_of_RADIO_SetFrequencyHopPeriod:
 19980                           	opt callstack 0
 19981                           
 19982 ;; *************** function _RADIO_SetFSKSyncWord *****************
 19983 ;; Defined at:
 19984 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19985 ;; Parameters:    Size  Location     Type
 19986 ;;  syncWordLen     1    wreg     unsigned char 
 19987 ;;  syncWord        2   11[COMRAM] PTR unsigned char 
 19988 ;;		 -> FskSyncWordBuff(3), 
 19989 ;; Auto vars:     Size  Location     Type
 19990 ;;  syncWordLen     1   13[COMRAM] unsigned char 
 19991 ;; Return value:  Size  Location     Type
 19992 ;;                  1    wreg      void 
 19993 ;; Registers used:
 19994 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19995 ;; Tracked objects:
 19996 ;;		On entry : 0/0
 19997 ;;		On exit  : 0/0
 19998 ;;		Unchanged: 0/0
 19999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20003 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20004 ;;Total ram usage:        3 bytes
 20005 ;; Hardware stack levels used:    1
 20006 ;; Hardware stack levels required when called:    1
 20007 ;; This function calls:
 20008 ;;		_memcpy
 20009 ;; This function is called by:
 20010 ;;		_ConfigureRadio
 20011 ;; This function uses a non-reentrant model
 20012 ;;
 20013                           
 20014                           	psect	text130
 20015  008F20                     __ptext130:
 20016                           	opt callstack 0
 20017  008F20                     _RADIO_SetFSKSyncWord:
 20018                           	opt callstack 23
 20019                           
 20020                           ;incstack = 0
 20021                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 20022  008F20  6E0E               	movwf	RADIO_SetFSKSyncWord@syncWordLen,c
 20023                           
 20024                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 20025  008F22  0E08               	movlw	8
 20026  008F24  640E               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen,c
 20027  008F26  D002               	goto	l12874
 20028                           
 20029                           ;radio_driver_SX1276.c: 1627: {;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 20030  008F28  0E08               	movlw	8
 20031  008F2A  6E0E               	movwf	RADIO_SetFSKSyncWord@syncWordLen,c
 20032  008F2C                     l12874:
 20033                           
 20034                           ;radio_driver_SX1276.c: 1629: };radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.s
      +                          yncWord, syncWord, syncWordLen);
 20035  008F2C  0E27               	movlw	low (_RadioConfiguration+15)
 20036  008F2E  6E01               	movwf	memcpy@d1,c
 20037  008F30  0E01               	movlw	high (_RadioConfiguration+15)
 20038  008F32  6E02               	movwf	memcpy@d1+1,c
 20039  008F34  C00C  F003         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 20040  008F38  C00D  F004         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 20041  008F3C  C00E  F005         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 20042  008F40  6A06               	clrf	memcpy@n+1,c
 20043  008F42  EC56  F04C         	call	_memcpy	;wreg free
 20044                           
 20045                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 20046  008F46  C00E  F12F         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 20047  008F4A  0012               	return		;funcret
 20048  008F4C                     __end_of_RADIO_SetFSKSyncWord:
 20049                           	opt callstack 0
 20050                           
 20051 ;; *************** function _RADIO_SetChannelFrequency *****************
 20052 ;; Defined at:
 20053 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20054 ;; Parameters:    Size  Location     Type
 20055 ;;  frequency       4    0[COMRAM] unsigned long 
 20056 ;; Auto vars:     Size  Location     Type
 20057 ;;		None
 20058 ;; Return value:  Size  Location     Type
 20059 ;;                  2    0[COMRAM] enum E5907
 20060 ;; Registers used:
 20061 ;;		wreg, status,2, status,0
 20062 ;; Tracked objects:
 20063 ;;		On entry : 0/0
 20064 ;;		On exit  : 0/0
 20065 ;;		Unchanged: 0/0
 20066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20070 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20071 ;;Total ram usage:        4 bytes
 20072 ;; Hardware stack levels used:    1
 20073 ;; This function calls:
 20074 ;;		Nothing
 20075 ;; This function is called by:
 20076 ;;		_ConfigureRadio
 20077 ;; This function uses a non-reentrant model
 20078 ;;
 20079                           
 20080                           	psect	text131
 20081  00A40E                     __ptext131:
 20082                           	opt callstack 0
 20083  00A40E                     _RADIO_SetChannelFrequency:
 20084                           	opt callstack 24
 20085                           
 20086                           ;radio_driver_SX1276.c: 1446: if (((frequency >= 137000000) && (frequency <= 175000000))
      +                           ||;radio_driver_SX1276.c: 1447: ((frequency >= 410000000) && (frequency <= 525000000)) 
      +                          ||;radio_driver_SX1276.c: 1448: ((frequency >= 862000000) && (frequency <= 1020000000)))
 20087                           
 20088                           ;incstack = 0
 20089  00A40E  0E40               	movlw	64
 20090  00A410  5C01               	subwf	RADIO_SetChannelFrequency@frequency,w,c
 20091  00A412  0E74               	movlw	116
 20092  00A414  5802               	subwfb	RADIO_SetChannelFrequency@frequency+1,w,c
 20093  00A416  0E2A               	movlw	42
 20094  00A418  5803               	subwfb	RADIO_SetChannelFrequency@frequency+2,w,c
 20095  00A41A  0E08               	movlw	8
 20096  00A41C  5804               	subwfb	RADIO_SetChannelFrequency@frequency+3,w,c
 20097  00A41E  A0D8               	btfss	status,0,c
 20098  00A420  D00A               	goto	u13730
 20099  00A422  0EC1               	movlw	193
 20100  00A424  5C01               	subwf	RADIO_SetChannelFrequency@frequency,w,c
 20101  00A426  0E49               	movlw	73
 20102  00A428  5802               	subwfb	RADIO_SetChannelFrequency@frequency+1,w,c
 20103  00A42A  0E6E               	movlw	110
 20104  00A42C  5803               	subwfb	RADIO_SetChannelFrequency@frequency+2,w,c
 20105  00A42E  0E0A               	movlw	10
 20106  00A430  5804               	subwfb	RADIO_SetChannelFrequency@frequency+3,w,c
 20107  00A432  A0D8               	btfss	status,0,c
 20108  00A434  D027               	goto	u13770
 20109  00A436                     u13730:
 20110  00A436  0E80               	movlw	128
 20111  00A438  5C01               	subwf	RADIO_SetChannelFrequency@frequency,w,c
 20112  00A43A  0E1A               	movlw	26
 20113  00A43C  5802               	subwfb	RADIO_SetChannelFrequency@frequency+1,w,c
 20114  00A43E  0E70               	movlw	112
 20115  00A440  5803               	subwfb	RADIO_SetChannelFrequency@frequency+2,w,c
 20116  00A442  0E18               	movlw	24
 20117  00A444  5804               	subwfb	RADIO_SetChannelFrequency@frequency+3,w,c
 20118  00A446  A0D8               	btfss	status,0,c
 20119  00A448  D00A               	goto	u13750
 20120  00A44A  0E41               	movlw	65
 20121  00A44C  5C01               	subwf	RADIO_SetChannelFrequency@frequency,w,c
 20122  00A44E  0EDD               	movlw	221
 20123  00A450  5802               	subwfb	RADIO_SetChannelFrequency@frequency+1,w,c
 20124  00A452  0E4A               	movlw	74
 20125  00A454  5803               	subwfb	RADIO_SetChannelFrequency@frequency+2,w,c
 20126  00A456  0E1F               	movlw	31
 20127  00A458  5804               	subwfb	RADIO_SetChannelFrequency@frequency+3,w,c
 20128  00A45A  A0D8               	btfss	status,0,c
 20129  00A45C  D013               	goto	u13770
 20130  00A45E                     u13750:
 20131  00A45E  0E80               	movlw	128
 20132  00A460  5C01               	subwf	RADIO_SetChannelFrequency@frequency,w,c
 20133  00A462  0E13               	movlw	19
 20134  00A464  5802               	subwfb	RADIO_SetChannelFrequency@frequency+1,w,c
 20135  00A466  0E61               	movlw	97
 20136  00A468  5803               	subwfb	RADIO_SetChannelFrequency@frequency+2,w,c
 20137  00A46A  0E33               	movlw	51
 20138  00A46C  5804               	subwfb	RADIO_SetChannelFrequency@frequency+3,w,c
 20139  00A46E  A0D8               	btfss	status,0,c
 20140  00A470  0012               	return	
 20141  00A472  0401               	decf	RADIO_SetChannelFrequency@frequency,w,c
 20142  00A474  0EF7               	movlw	247
 20143  00A476  5802               	subwfb	RADIO_SetChannelFrequency@frequency+1,w,c
 20144  00A478  0ECB               	movlw	203
 20145  00A47A  5803               	subwfb	RADIO_SetChannelFrequency@frequency+2,w,c
 20146  00A47C  0E3C               	movlw	60
 20147  00A47E  5804               	subwfb	RADIO_SetChannelFrequency@frequency+3,w,c
 20148  00A480  B0D8               	btfsc	status,0,c
 20149  00A482  0012               	return	
 20150  00A484                     u13770:
 20151                           
 20152                           ;radio_driver_SX1276.c: 1449: {;radio_driver_SX1276.c: 1450: RadioConfiguration.frequenc
      +                          y = frequency;
 20153  00A484  C001  F118         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 20154  00A488  C002  F119         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 20155  00A48C  C003  F11A         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 20156  00A490  C004  F11B         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 20157                           
 20158                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;;	Return value of _RADIO_SetChannelFrequen
      +                          cy is never used
 20159  00A494  0012               	return		;funcret
 20160  00A496                     __end_of_RADIO_SetChannelFrequency:
 20161                           	opt callstack 0
 20162                           
 20163 ;; *************** function _RADIO_SetBandwidth *****************
 20164 ;; Defined at:
 20165 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20166 ;; Parameters:    Size  Location     Type
 20167 ;;  bandwidth       1    wreg     enum E5871
 20168 ;; Auto vars:     Size  Location     Type
 20169 ;;  bandwidth       1    0[COMRAM] enum E5871
 20170 ;; Return value:  Size  Location     Type
 20171 ;;                  1    wreg      void 
 20172 ;; Registers used:
 20173 ;;		wreg
 20174 ;; Tracked objects:
 20175 ;;		On entry : 0/0
 20176 ;;		On exit  : 0/0
 20177 ;;		Unchanged: 0/0
 20178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20182 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20183 ;;Total ram usage:        1 bytes
 20184 ;; Hardware stack levels used:    1
 20185 ;; This function calls:
 20186 ;;		Nothing
 20187 ;; This function is called by:
 20188 ;;		_ConfigureRadio
 20189 ;; This function uses a non-reentrant model
 20190 ;;
 20191                           
 20192                           	psect	text132
 20193  0089EE                     __ptext132:
 20194                           	opt callstack 0
 20195  0089EE                     _RADIO_SetBandwidth:
 20196                           	opt callstack 24
 20197                           
 20198                           ;incstack = 0
 20199                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 20200  0089EE  6E01               	movwf	RADIO_SetBandwidth@bandwidth,c
 20201                           
 20202                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 20203  0089F0  C001  F132         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 20204  0089F4  0012               	return		;funcret
 20205  0089F6                     __end_of_RADIO_SetBandwidth:
 20206                           	opt callstack 0
 20207                           
 20208 ;; *************** function _RADIO_Transmit *****************
 20209 ;; Defined at:
 20210 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20211 ;; Parameters:    Size  Location     Type
 20212 ;;  buffer          2   73[COMRAM] PTR unsigned char 
 20213 ;;		 -> macBuffer(271), 
 20214 ;;  bufferLen       1   75[COMRAM] unsigned char 
 20215 ;; Auto vars:     Size  Location     Type
 20216 ;;  i               1   89[COMRAM] unsigned char 
 20217 ;;  regValue        1   88[COMRAM] unsigned char 
 20218 ;; Return value:  Size  Location     Type
 20219 ;;                  2   73[COMRAM] enum E5907
 20220 ;; Registers used:
 20221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20222 ;; Tracked objects:
 20223 ;;		On entry : 0/0
 20224 ;;		On exit  : 0/0
 20225 ;;		Unchanged: 0/0
 20226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20227 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20228 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20229 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20230 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20231 ;;Total ram usage:       17 bytes
 20232 ;; Hardware stack levels used:    1
 20233 ;; Hardware stack levels required when called:    5
 20234 ;; This function calls:
 20235 ;;		_HALSPICSAssert
 20236 ;;		_HALSPICSDeassert
 20237 ;;		_HALSPISend
 20238 ;;		_RADIO_RegisterRead
 20239 ;;		_RADIO_RegisterWrite
 20240 ;;		_RADIO_WriteConfiguration
 20241 ;;		_RADIO_WriteMode
 20242 ;;		_SwTimerSetTimeout
 20243 ;;		_SwTimerStart
 20244 ;;		_SwTimerStop
 20245 ;;		___lldiv
 20246 ;; This function is called by:
 20247 ;;		_LORAWAN_RxTimeout
 20248 ;;		_LORAWAN_Join
 20249 ;;		_LORAWAN_Send
 20250 ;;		_AckRetransmissionCallback
 20251 ;;		_UnconfirmedTransmissionCallback
 20252 ;; This function uses a non-reentrant model
 20253 ;;
 20254                           
 20255                           	psect	text133
 20256  00CBEE                     __ptext133:
 20257                           	opt callstack 0
 20258  00CBEE                     _RADIO_Transmit:
 20259                           	opt callstack 22
 20260                           
 20261                           ;radio_driver_SX1276.c: 788: uint8_t regValue;;radio_driver_SX1276.c: 789: uint8_t i;;ra
      +                          dio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 20262                           
 20263                           ;incstack = 0
 20264  00CBEE  0101               	movlb	1	; () banked
 20265  00CBF0  A53B               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 20266  00CBF2  D005               	goto	l13470
 20267                           
 20268                           ; BSR set to: 1
 20269                           ;radio_driver_SX1276.c: 792: {;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 20270  00CBF4  0E80               	movlw	128
 20271  00CBF6  6E4B               	movwf	?_RADIO_Transmit+1,c
 20272  00CBF8  0E03               	movlw	3
 20273  00CBFA  6E4A               	movwf	?_RADIO_Transmit,c
 20274  00CBFC  0012               	return	
 20275  00CBFE                     l13470:
 20276                           
 20277                           ; BSR set to: 1
 20278                           ;radio_driver_SX1276.c: 794: };radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags
      +                           & ((1 << (0)) | (1 << (1)))) != 0)
 20279  00CBFE  C13B  F04D         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 20280  00CC02  0E03               	movlw	3
 20281  00CC04  164D               	andwf	??_RADIO_Transmit,f,c
 20282  00CC06  B4D8               	btfsc	status,2,c
 20283  00CC08  D005               	goto	l13476
 20284                           
 20285                           ; BSR set to: 1
 20286                           ;radio_driver_SX1276.c: 797: {;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 20287  00CC0A  0E80               	movlw	128
 20288  00CC0C  6E4B               	movwf	?_RADIO_Transmit+1,c
 20289  00CC0E  0E04               	movlw	4
 20290  00CC10  6E4A               	movwf	?_RADIO_Transmit,c
 20291  00CC12  0012               	return	
 20292  00CC14                     l13476:
 20293                           
 20294                           ; BSR set to: 1
 20295                           ;radio_driver_SX1276.c: 799: };radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioC
      +                          onfiguration.modulation) && (bufferLen > 64))
 20296  00CC14  5130               	movf	(_RadioConfiguration+24)& (0+255),w,b
 20297  00CC16  A4D8               	btfss	status,2,c
 20298  00CC18  D008               	goto	l13484
 20299                           
 20300                           ; BSR set to: 1
 20301  00CC1A  0E40               	movlw	64
 20302  00CC1C  644C               	cpfsgt	RADIO_Transmit@bufferLen,c
 20303  00CC1E  D005               	goto	l13484
 20304                           
 20305                           ; BSR set to: 1
 20306                           ;radio_driver_SX1276.c: 802: {;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 20307  00CC20  0E80               	movlw	128
 20308  00CC22  6E4B               	movwf	?_RADIO_Transmit+1,c
 20309  00CC24  0E02               	movlw	2
 20310  00CC26  6E4A               	movwf	?_RADIO_Transmit,c
 20311  00CC28  0012               	return	
 20312  00CC2A                     l13484:
 20313                           
 20314                           ; BSR set to: 1
 20315                           ;radio_driver_SX1276.c: 804: };radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguratio
      +                          n.timeOnAirTimerId);
 20316  00CC2A  513F               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20317  00CC2C  EC46  F046         	call	_SwTimerStop
 20318                           
 20319                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 20320  00CC30  0E00               	movlw	0
 20321  00CC32  6E40               	movwf	RADIO_WriteConfiguration@symbolTimeout+1,c
 20322  00CC34  0E04               	movlw	4
 20323  00CC36  6E3F               	movwf	RADIO_WriteConfiguration@symbolTimeout,c
 20324  00CC38  EC01  F074         	call	_RADIO_WriteConfiguration	;wreg free
 20325                           
 20326                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 20327  00CC3C  0101               	movlb	1	; () banked
 20328  00CC3E  0530               	decf	(_RadioConfiguration+24)& (0+255),w,b
 20329  00CC40  A4D8               	btfss	status,2,c
 20330  00CC42  D023               	goto	l13504
 20331                           
 20332                           ; BSR set to: 1
 20333                           ;radio_driver_SX1276.c: 813: {;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, buf
      +                          ferLen);
 20334  00CC44  C04C  F003         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 20335  00CC48  0E22               	movlw	34
 20336  00CC4A  ECF7  F045         	call	_RADIO_RegisterWrite
 20337                           
 20338                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 20339  00CC4E  0E0A               	movlw	10
 20340  00CC50  EC71  F046         	call	_RADIO_RegisterRead
 20341  00CC54  6E59               	movwf	RADIO_Transmit@regValue,c
 20342                           
 20343                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 20344  00CC56  0EF0               	movlw	240
 20345  00CC58  1659               	andwf	RADIO_Transmit@regValue,f,c
 20346                           
 20347                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 20348  00CC5A  8659               	bsf	RADIO_Transmit@regValue,3,c
 20349                           
 20350                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 20351  00CC5C  C059  F003         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 20352  00CC60  0E0A               	movlw	10
 20353  00CC62  ECF7  F045         	call	_RADIO_RegisterWrite
 20354                           
 20355                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 20356  00CC66  0E40               	movlw	64
 20357  00CC68  6E03               	movwf	RADIO_RegisterWrite@value,c
 20358  00CC6A  0E40               	movlw	64
 20359  00CC6C  ECF7  F045         	call	_RADIO_RegisterWrite
 20360                           
 20361                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 20362  00CC70  0E00               	movlw	0
 20363  00CC72  6E03               	movwf	RADIO_RegisterWrite@value,c
 20364  00CC74  0E41               	movlw	65
 20365  00CC76  ECF7  F045         	call	_RADIO_RegisterWrite
 20366                           
 20367                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 20368  00CC7A  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 20369  00CC7E  0E01               	movlw	1
 20370  00CC80  6E07               	movwf	RADIO_WriteMode@blocking,c
 20371  00CC82  0E01               	movlw	1
 20372  00CC84  EC6A  F058         	call	_RADIO_WriteMode
 20373                           
 20374                           ;radio_driver_SX1276.c: 828: }
 20375  00CC88  D00A               	goto	l13506
 20376  00CC8A                     l13504:
 20377                           
 20378                           ; BSR set to: 1
 20379                           ;radio_driver_SX1276.c: 829: else;radio_driver_SX1276.c: 830: {;radio_driver_SX1276.c: 8
      +                          32: RADIO_RegisterWrite(0x40, 0x00);
 20380  00CC8A  0E00               	movlw	0
 20381  00CC8C  6E03               	movwf	RADIO_RegisterWrite@value,c
 20382  00CC8E  0E40               	movlw	64
 20383  00CC90  ECF7  F045         	call	_RADIO_RegisterWrite
 20384                           
 20385                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 20386  00CC94  0E00               	movlw	0
 20387  00CC96  6E03               	movwf	RADIO_RegisterWrite@value,c
 20388  00CC98  0E41               	movlw	65
 20389  00CC9A  ECF7  F045         	call	_RADIO_RegisterWrite
 20390  00CC9E                     l13506:
 20391                           
 20392                           ;radio_driver_SX1276.c: 834: };radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioCo
      +                          nfiguration.modulation)
 20393  00CC9E  0101               	movlb	1	; () banked
 20394  00CCA0  5130               	movf	(_RadioConfiguration+24)& (0+255),w,b
 20395  00CCA2  A4D8               	btfss	status,2,c
 20396  00CCA4  D005               	goto	l13510
 20397                           
 20398                           ; BSR set to: 1
 20399                           ;radio_driver_SX1276.c: 837: {;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, buf
      +                          ferLen);
 20400  00CCA6  C04C  F003         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 20401  00CCAA  0E00               	movlw	0
 20402  00CCAC  ECF7  F045         	call	_RADIO_RegisterWrite
 20403  00CCB0                     l13510:
 20404                           
 20405                           ;radio_driver_SX1276.c: 840: };radio_driver_SX1276.c: 842: HALSPICSAssert();
 20406  00CCB0  ECE2  F044         	call	_HALSPICSAssert	;wreg free
 20407                           
 20408                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 20409  00CCB4  0E80               	movlw	128
 20410  00CCB6  EC1B  F045         	call	_HALSPISend
 20411                           
 20412                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 20413  00CCBA  0E00               	movlw	0
 20414  00CCBC  6E5A               	movwf	RADIO_Transmit@i,c
 20415  00CCBE  D00A               	goto	l13520
 20416  00CCC0                     l13516:
 20417                           
 20418                           ;radio_driver_SX1276.c: 846: {;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 20419  00CCC0  505A               	movf	RADIO_Transmit@i,w,c
 20420  00CCC2  244A               	addwf	RADIO_Transmit@buffer,w,c
 20421  00CCC4  6ED9               	movwf	fsr2l,c
 20422  00CCC6  0E00               	movlw	0
 20423  00CCC8  204B               	addwfc	RADIO_Transmit@buffer+1,w,c
 20424  00CCCA  6EDA               	movwf	fsr2h,c
 20425  00CCCC  50DF               	movf	indf2,w,c
 20426  00CCCE  EC1B  F045         	call	_HALSPISend
 20427  00CCD2  2A5A               	incf	RADIO_Transmit@i,f,c
 20428  00CCD4                     l13520:
 20429  00CCD4  504C               	movf	RADIO_Transmit@bufferLen,w,c
 20430  00CCD6  5C5A               	subwf	RADIO_Transmit@i,w,c
 20431  00CCD8  A0D8               	btfss	status,0,c
 20432  00CCDA  D7F2               	goto	l13516
 20433                           
 20434                           ;radio_driver_SX1276.c: 848: };radio_driver_SX1276.c: 849: HALSPICSDeassert();
 20435  00CCDC  ECE4  F044         	call	_HALSPICSDeassert	;wreg free
 20436                           
 20437                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 20438  00CCE0  0101               	movlb	1	; () banked
 20439  00CCE2  813B               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 20440                           
 20441                           ; BSR set to: 1
 20442                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 20443  00CCE4  0EE7               	movlw	231
 20444  00CCE6  173B               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 20445                           
 20446                           ; BSR set to: 1
 20447                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 20448  00CCE8  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 20449  00CCEC  0E00               	movlw	0
 20450  00CCEE  6E07               	movwf	RADIO_WriteMode@blocking,c
 20451  00CCF0  0E03               	movlw	3
 20452  00CCF2  EC6A  F058         	call	_RADIO_WriteMode
 20453                           
 20454                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 20455  00CCF6  0E00               	movlw	0
 20456  00CCF8  6E0E               	movwf	SwTimerSetTimeout@timeout,c
 20457  00CCFA  0E00               	movlw	0
 20458  00CCFC  6E0F               	movwf	SwTimerSetTimeout@timeout+1,c
 20459  00CCFE  0E0A               	movlw	10
 20460  00CD00  6E10               	movwf	SwTimerSetTimeout@timeout+2,c
 20461  00CD02  0E00               	movlw	0
 20462  00CD04  6E11               	movwf	SwTimerSetTimeout@timeout+3,c
 20463  00CD06  0101               	movlb	1	; () banked
 20464  00CD08  513F               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20465  00CD0A  EC5C  F049         	call	_SwTimerSetTimeout
 20466                           
 20467                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 20468  00CD0E  0101               	movlb	1	; () banked
 20469  00CD10  513F               	movf	(_RadioConfiguration+39)& (0+255),w,b
 20470  00CD12  ECC3  F051         	call	_SwTimerStart
 20471                           
 20472                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 20473  00CD16  0101               	movlb	1	; () banked
 20474  00CD18  5142               	movf	(_RadioConfiguration+42)& (0+255),w,b
 20475  00CD1A  1143               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 20476  00CD1C  1144               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 20477  00CD1E  1145               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 20478  00CD20  B4D8               	btfsc	status,2,c
 20479  00CD22  D05E               	goto	l13550
 20480                           
 20481                           ; BSR set to: 1
 20482                           ;radio_driver_SX1276.c: 866: {;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfig
      +                          uration.watchdogTimerId, ((RadioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (
      +                          ((uint32_t)(RadioConfiguration.watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t
      +                          )(RadioConfiguration.watchdogTimerTimeout)) /
 20483  00CD24  5145               	movf	(_RadioConfiguration+45)& (0+255),w,b
 20484  00CD26  E107               	bnz	u14630
 20485  00CD28  2942               	incf	(_RadioConfiguration+42)& (0+255),w,b
 20486  00CD2A  0EFF               	movlw	255
 20487  00CD2C  5943               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 20488  00CD2E  0E0F               	movlw	15
 20489  00CD30  5944               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 20490  00CD32  A0D8               	btfss	status,0,c
 20491  00CD34  D01B               	goto	l13544
 20492  00CD36                     u14630:
 20493                           
 20494                           ; BSR set to: 1
 20495  00CD36  C142  F001         	movff	_RadioConfiguration+42,___lldiv@dividend
 20496  00CD3A  C143  F002         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 20497  00CD3E  C144  F003         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 20498  00CD42  C145  F004         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 20499  00CD46  0E7D               	movlw	125
 20500  00CD48  6E05               	movwf	___lldiv@divisor,c
 20501  00CD4A  0E00               	movlw	0
 20502  00CD4C  6E06               	movwf	___lldiv@divisor+1,c
 20503  00CD4E  0E00               	movlw	0
 20504  00CD50  6E07               	movwf	___lldiv@divisor+2,c
 20505  00CD52  0E00               	movlw	0
 20506  00CD54  6E08               	movwf	___lldiv@divisor+3,c
 20507  00CD56  ECFE  F050         	call	___lldiv	;wreg free
 20508  00CD5A  0E0C               	movlw	12
 20509  00CD5C                     u14645:
 20510  00CD5C  90D8               	bcf	status,0,c
 20511  00CD5E  3601               	rlcf	?___lldiv,f,c
 20512  00CD60  3602               	rlcf	?___lldiv+1,f,c
 20513  00CD62  3603               	rlcf	?___lldiv+2,f,c
 20514  00CD64  3604               	rlcf	?___lldiv+3,f,c
 20515  00CD66  2EE8               	decfsz	wreg,f,c
 20516  00CD68  D7F9               	goto	u14645
 20517  00CD6A  D022               	goto	L21
 20518  00CD6C                     l13544:
 20519                           
 20520                           ; BSR set to: 1
 20521  00CD6C  C142  F04D         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 20522  00CD70  C143  F04E         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 20523  00CD74  C144  F04F         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 20524  00CD78  C145  F050         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 20525  00CD7C  0E0C               	movlw	12
 20526  00CD7E                     u14655:
 20527  00CD7E  90D8               	bcf	status,0,c
 20528  00CD80  364D               	rlcf	??_RADIO_Transmit,f,c
 20529  00CD82  364E               	rlcf	??_RADIO_Transmit+1,f,c
 20530  00CD84  364F               	rlcf	??_RADIO_Transmit+2,f,c
 20531  00CD86  3650               	rlcf	??_RADIO_Transmit+3,f,c
 20532  00CD88  2EE8               	decfsz	wreg,f,c
 20533  00CD8A  D7F9               	goto	u14655
 20534  00CD8C  C04D  F001         	movff	??_RADIO_Transmit,___lldiv@dividend
 20535  00CD90  C04E  F002         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 20536  00CD94  C04F  F003         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 20537  00CD98  C050  F004         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 20538  00CD9C  0E7D               	movlw	125
 20539  00CD9E  6E05               	movwf	___lldiv@divisor,c
 20540  00CDA0  0E00               	movlw	0
 20541  00CDA2  6E06               	movwf	___lldiv@divisor+1,c
 20542  00CDA4  0E00               	movlw	0
 20543  00CDA6  6E07               	movwf	___lldiv@divisor+2,c
 20544  00CDA8  0E00               	movlw	0
 20545  00CDAA  6E08               	movwf	___lldiv@divisor+3,c
 20546  00CDAC  ECFE  F050         	call	___lldiv	;wreg free
 20547  00CDB0                     L21:
 20548  00CDB0  C001  F055         	movff	?___lldiv,_RADIO_Transmit$780
 20549  00CDB4  C002  F056         	movff	?___lldiv+1,_RADIO_Transmit$780+1
 20550  00CDB8  C003  F057         	movff	?___lldiv+2,_RADIO_Transmit$780+2
 20551  00CDBC  C004  F058         	movff	?___lldiv+3,_RADIO_Transmit$780+3
 20552  00CDC0  C055  F00E         	movff	_RADIO_Transmit$780,SwTimerSetTimeout@timeout
 20553  00CDC4  C056  F00F         	movff	_RADIO_Transmit$780+1,SwTimerSetTimeout@timeout+1
 20554  00CDC8  C057  F010         	movff	_RADIO_Transmit$780+2,SwTimerSetTimeout@timeout+2
 20555  00CDCC  C058  F011         	movff	_RADIO_Transmit$780+3,SwTimerSetTimeout@timeout+3
 20556  00CDD0  0101               	movlb	1	; () banked
 20557  00CDD2  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
 20558  00CDD4  EC5C  F049         	call	_SwTimerSetTimeout
 20559                           
 20560                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 20561  00CDD8  0101               	movlb	1	; () banked
 20562  00CDDA  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
 20563  00CDDC  ECC3  F051         	call	_SwTimerStart
 20564  00CDE0                     l13550:
 20565                           
 20566                           ;radio_driver_SX1276.c: 869: };radio_driver_SX1276.c: 871: return ERR_NONE;
 20567  00CDE0  0E00               	movlw	0
 20568  00CDE2  6E4B               	movwf	?_RADIO_Transmit+1,c
 20569  00CDE4  0E00               	movlw	0
 20570  00CDE6  6E4A               	movwf	?_RADIO_Transmit,c
 20571  00CDE8  0012               	return		;funcret
 20572  00CDEA                     __end_of_RADIO_Transmit:
 20573                           	opt callstack 0
 20574                           
 20575 ;; *************** function _RADIO_WriteConfiguration *****************
 20576 ;; Defined at:
 20577 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20578 ;; Parameters:    Size  Location     Type
 20579 ;;  symbolTimeou    2   62[COMRAM] unsigned int 
 20580 ;; Auto vars:     Size  Location     Type
 20581 ;;  tempValue       4   68[COMRAM] unsigned long 
 20582 ;;  regValue        1   72[COMRAM] unsigned char 
 20583 ;;  i               1   67[COMRAM] unsigned char 
 20584 ;; Return value:  Size  Location     Type
 20585 ;;                  1    wreg      void 
 20586 ;; Registers used:
 20587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20588 ;; Tracked objects:
 20589 ;;		On entry : 0/0
 20590 ;;		On exit  : 0/0
 20591 ;;		Unchanged: 0/0
 20592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20594 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20595 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20596 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20597 ;;Total ram usage:       11 bytes
 20598 ;; Hardware stack levels used:    1
 20599 ;; Hardware stack levels required when called:    4
 20600 ;; This function calls:
 20601 ;;		_RADIO_RegisterRead
 20602 ;;		_RADIO_RegisterWrite
 20603 ;;		_RADIO_WriteFSKBitRate
 20604 ;;		_RADIO_WriteFSKFrequencyDeviation
 20605 ;;		_RADIO_WriteFrequency
 20606 ;;		_RADIO_WriteMode
 20607 ;;		_RADIO_WritePower
 20608 ;;		___lmul
 20609 ;; This function is called by:
 20610 ;;		_RADIO_Transmit
 20611 ;;		_RADIO_ReceiveStart
 20612 ;;		_RADIO_TransmitCW
 20613 ;; This function uses a non-reentrant model
 20614 ;;
 20615                           
 20616                           	psect	text134
 20617  00E802                     __ptext134:
 20618                           	opt callstack 0
 20619  00E802                     _RADIO_WriteConfiguration:
 20620                           	opt callstack 22
 20621                           
 20622                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;;radio_driver_SX1276.c: 536: uint8_t reg
      +                          Value;;radio_driver_SX1276.c: 537: uint8_t i;;radio_driver_SX1276.c: 540: RADIO_WriteMod
      +                          e(MODE_SLEEP, RadioConfiguration.modulation, 0);
 20623                           
 20624                           ;incstack = 0
 20625  00E802  C130  F006         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 20626  00E806  0E00               	movlw	0
 20627  00E808  6E07               	movwf	RADIO_WriteMode@blocking,c
 20628  00E80A  0E00               	movlw	0
 20629  00E80C  EC6A  F058         	call	_RADIO_WriteMode
 20630                           
 20631                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 20632  00E810  C118  F00E         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 20633  00E814  C119  F00F         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 20634  00E818  C11A  F010         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 20635  00E81C  C11B  F011         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 20636  00E820  ECF6  F057         	call	_RADIO_WriteFrequency	;wreg free
 20637                           
 20638                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 20639  00E824  0101               	movlb	1	; () banked
 20640  00E826  5133               	movf	(_RadioConfiguration+27)& (0+255),w,b
 20641  00E828  EC87  F057         	call	_RADIO_WritePower
 20642                           
 20643                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 20644  00E82C  0101               	movlb	1	; () banked
 20645  00E82E  0530               	decf	(_RadioConfiguration+24)& (0+255),w,b
 20646  00E830  A4D8               	btfss	status,2,c
 20647  00E832  D1C5               	goto	l13100
 20648                           
 20649                           ; BSR set to: 1
 20650                           ;radio_driver_SX1276.c: 545: {;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, Rad
      +                          ioConfiguration.syncWordLoRa);
 20651  00E834  C126  F003         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 20652  00E838  0E39               	movlw	57
 20653  00E83A  ECF7  F045         	call	_RADIO_RegisterWrite
 20654                           
 20655                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,;radio_driver_SX1276.c: 549: (Radi
      +                          oConfiguration.bandWidth << (4)) |;radio_driver_SX1276.c: 550: (RadioConfiguration.error
      +                          CodingRate << (1)) |;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode 
      +                          & 0x01));
 20656  00E83E  C13A  F041         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 20657  00E842  0E01               	movlw	1
 20658  00E844  1641               	andwf	??_RADIO_WriteConfiguration,f,c
 20659  00E846  0101               	movlb	1	; () banked
 20660  00E848  90D8               	bcf	status,0,c
 20661  00E84A  3539               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 20662  00E84C  6E42               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),c
 20663  00E84E  3932               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 20664  00E850  0BF0               	andlw	240
 20665  00E852  1042               	iorwf	??_RADIO_WriteConfiguration+1,w,c
 20666  00E854  1041               	iorwf	??_RADIO_WriteConfiguration,w,c
 20667  00E856  6E03               	movwf	RADIO_RegisterWrite@value,c
 20668  00E858  0E1D               	movlw	29
 20669  00E85A  ECF7  F045         	call	_RADIO_RegisterWrite
 20670                           
 20671                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,;radio_driver_SX1276.c: 554: (Radi
      +                          oConfiguration.dataRate << (4)) |;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn
      +                           & 0x01) << (2)) |;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 20672  00E85E  C03F  F041         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 20673  00E862  C040  F042         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 20674  00E866  C042  F041         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 20675  00E86A  6A42               	clrf	??_RADIO_WriteConfiguration+1,c
 20676  00E86C  0E03               	movlw	3
 20677  00E86E  1641               	andwf	??_RADIO_WriteConfiguration,f,c
 20678  00E870  C134  F043         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 20679  00E874  0E01               	movlw	1
 20680  00E876  1643               	andwf	??_RADIO_WriteConfiguration+2,f,c
 20681  00E878  90D8               	bcf	status,0,c
 20682  00E87A  3643               	rlcf	??_RADIO_WriteConfiguration+2,f,c
 20683  00E87C  90D8               	bcf	status,0,c
 20684  00E87E  3643               	rlcf	??_RADIO_WriteConfiguration+2,f,c
 20685  00E880  0101               	movlb	1	; () banked
 20686  00E882  3931               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 20687  00E884  0BF0               	andlw	240
 20688  00E886  1043               	iorwf	??_RADIO_WriteConfiguration+2,w,c
 20689  00E888  1041               	iorwf	??_RADIO_WriteConfiguration,w,c
 20690  00E88A  6E03               	movwf	RADIO_RegisterWrite@value,c
 20691  00E88C  0E1E               	movlw	30
 20692  00E88E  ECF7  F045         	call	_RADIO_RegisterWrite
 20693                           
 20694                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 20695  00E892  0101               	movlb	1	; () banked
 20696  00E894  5136               	movf	(_RadioConfiguration+30)& (0+255),w,b
 20697  00E896  1137               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 20698  00E898  B4D8               	btfsc	status,2,c
 20699  00E89A  D068               	goto	l12990
 20700                           
 20701                           ; BSR set to: 1
 20702                           ;radio_driver_SX1276.c: 561: {;radio_driver_SX1276.c: 562: tempValue = RadioConfiguratio
      +                          n.frequencyHopPeriod;
 20703  00E89C  C136  F045         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 20704  00E8A0  C137  F046         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 20705  00E8A4  6A47               	clrf	RADIO_WriteConfiguration@tempValue+2,c
 20706  00E8A6  6A48               	clrf	RADIO_WriteConfiguration@tempValue+3,c
 20707                           
 20708                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 20709  00E8A8  D04A               	goto	l12986
 20710  00E8AA                     l12976:
 20711                           
 20712                           ; BSR set to: 1
 20713                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 20714  00E8AA  C045  F033         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 20715  00E8AE  C046  F034         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 20716  00E8B2  C047  F035         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 20717  00E8B6  C048  F036         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 20718  00E8BA  0E7D               	movlw	125
 20719  00E8BC  6E37               	movwf	___lmul@multiplicand,c
 20720  00E8BE  0E00               	movlw	0
 20721  00E8C0  6E38               	movwf	___lmul@multiplicand+1,c
 20722  00E8C2  0E00               	movlw	0
 20723  00E8C4  6E39               	movwf	___lmul@multiplicand+2,c
 20724  00E8C6  0E00               	movlw	0
 20725  00E8C8  6E3A               	movwf	___lmul@multiplicand+3,c
 20726  00E8CA  ECD4  F04B         	call	___lmul	;wreg free
 20727  00E8CE  D025               	goto	L23
 20728  00E8D0                     l12978:
 20729                           
 20730                           ; BSR set to: 1
 20731                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 20732  00E8D0  C045  F033         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 20733  00E8D4  C046  F034         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 20734  00E8D8  C047  F035         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 20735  00E8DC  C048  F036         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 20736  00E8E0  0EFA               	movlw	250
 20737  00E8E2  6E37               	movwf	___lmul@multiplicand,c
 20738  00E8E4  0E00               	movlw	0
 20739  00E8E6  6E38               	movwf	___lmul@multiplicand+1,c
 20740  00E8E8  0E00               	movlw	0
 20741  00E8EA  6E39               	movwf	___lmul@multiplicand+2,c
 20742  00E8EC  0E00               	movlw	0
 20743  00E8EE  6E3A               	movwf	___lmul@multiplicand+3,c
 20744  00E8F0  ECD4  F04B         	call	___lmul	;wreg free
 20745  00E8F4  D012               	goto	L23
 20746  00E8F6                     l12980:
 20747                           
 20748                           ; BSR set to: 1
 20749                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 20750  00E8F6  C045  F033         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 20751  00E8FA  C046  F034         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 20752  00E8FE  C047  F035         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 20753  00E902  C048  F036         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 20754  00E906  0EF4               	movlw	244
 20755  00E908  6E37               	movwf	___lmul@multiplicand,c
 20756  00E90A  0E01               	movlw	1
 20757  00E90C  6E38               	movwf	___lmul@multiplicand+1,c
 20758  00E90E  0E00               	movlw	0
 20759  00E910  6E39               	movwf	___lmul@multiplicand+2,c
 20760  00E912  0E00               	movlw	0
 20761  00E914  6E3A               	movwf	___lmul@multiplicand+3,c
 20762  00E916  ECD4  F04B         	call	___lmul	;wreg free
 20763  00E91A                     L23:
 20764  00E91A  C033  F045         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 20765  00E91E  C034  F046         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 20766  00E922  C035  F047         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 20767  00E926  C036  F048         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 20768                           
 20769                           ;radio_driver_SX1276.c: 574: break;
 20770  00E92A  D014               	goto	l12988
 20771  00E92C                     l12982:
 20772                           
 20773                           ; BSR set to: 1
 20774                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 20775  00E92C  0E00               	movlw	0
 20776  00E92E  6E45               	movwf	RADIO_WriteConfiguration@tempValue,c
 20777  00E930  0E00               	movlw	0
 20778  00E932  6E46               	movwf	RADIO_WriteConfiguration@tempValue+1,c
 20779  00E934  0E00               	movlw	0
 20780  00E936  6E47               	movwf	RADIO_WriteConfiguration@tempValue+2,c
 20781  00E938  0E00               	movlw	0
 20782  00E93A  6E48               	movwf	RADIO_WriteConfiguration@tempValue+3,c
 20783                           
 20784                           ;radio_driver_SX1276.c: 578: break;
 20785  00E93C  D00B               	goto	l12988
 20786  00E93E                     l12986:
 20787                           
 20788                           ; BSR set to: 1
 20789  00E93E  5132               	movf	(_RadioConfiguration+26)& (0+255),w,b
 20790                           
 20791                           ; Switch size 1, requested type "simple"
 20792                           ; Number of cases is 3, Range of values is 7 to 9
 20793                           ; switch strategies available:
 20794                           ; Name         Instructions Cycles
 20795                           ; simple_byte           10     6 (average)
 20796                           ;	Chosen strategy is simple_byte
 20797  00E940  0A07               	xorlw	7	; case 7
 20798  00E942  B4D8               	btfsc	status,2,c
 20799  00E944  D7B2               	goto	l12976
 20800  00E946  0A0F               	xorlw	15	; case 8
 20801  00E948  B4D8               	btfsc	status,2,c
 20802  00E94A  D7C2               	goto	l12978
 20803  00E94C  0A01               	xorlw	1	; case 9
 20804  00E94E  B4D8               	btfsc	status,2,c
 20805  00E950  D7D2               	goto	l12980
 20806  00E952  D7EC               	goto	l12982
 20807  00E954                     l12988:
 20808                           
 20809                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 20810  00E954  0101               	movlb	1	; () banked
 20811  00E956  2931               	incf	(_RadioConfiguration+25)& (0+255),w,b
 20812  00E958  6E41               	movwf	??_RADIO_WriteConfiguration& (0+255),c
 20813  00E95A  D005               	goto	u13900
 20814  00E95C                     u13905:
 20815  00E95C  90D8               	bcf	status,0,c
 20816  00E95E  3248               	rrcf	RADIO_WriteConfiguration@tempValue+3,f,c
 20817  00E960  3247               	rrcf	RADIO_WriteConfiguration@tempValue+2,f,c
 20818  00E962  3246               	rrcf	RADIO_WriteConfiguration@tempValue+1,f,c
 20819  00E964  3245               	rrcf	RADIO_WriteConfiguration@tempValue,f,c
 20820  00E966                     u13900:
 20821  00E966  2E41               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,c
 20822  00E968  D7F9               	goto	u13905
 20823                           
 20824                           ;radio_driver_SX1276.c: 582: }
 20825  00E96A  D008               	goto	l12992
 20826  00E96C                     l12990:
 20827                           
 20828                           ; BSR set to: 1
 20829                           ;radio_driver_SX1276.c: 583: else;radio_driver_SX1276.c: 584: {;radio_driver_SX1276.c: 5
      +                          85: tempValue = 0;
 20830  00E96C  0E00               	movlw	0
 20831  00E96E  6E45               	movwf	RADIO_WriteConfiguration@tempValue,c
 20832  00E970  0E00               	movlw	0
 20833  00E972  6E46               	movwf	RADIO_WriteConfiguration@tempValue+1,c
 20834  00E974  0E00               	movlw	0
 20835  00E976  6E47               	movwf	RADIO_WriteConfiguration@tempValue+2,c
 20836  00E978  0E00               	movlw	0
 20837  00E97A  6E48               	movwf	RADIO_WriteConfiguration@tempValue+3,c
 20838  00E97C                     l12992:
 20839                           
 20840                           ;radio_driver_SX1276.c: 586: };radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (ui
      +                          nt8_t)tempValue);
 20841  00E97C  C045  F003         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 20842  00E980  0E24               	movlw	36
 20843  00E982  ECF7  F045         	call	_RADIO_RegisterWrite
 20844                           
 20845                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 20846  00E986  C03F  F003         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 20847  00E98A  0E1F               	movlw	31
 20848  00E98C  ECF7  F045         	call	_RADIO_RegisterWrite
 20849                           
 20850                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 20851  00E990  0E26               	movlw	38
 20852  00E992  EC71  F046         	call	_RADIO_RegisterRead
 20853  00E996  6E49               	movwf	RADIO_WriteConfiguration@regValue,c
 20854                           
 20855                           ;radio_driver_SX1276.c: 596: if (;radio_driver_SX1276.c: 597: (;radio_driver_SX1276.c: 5
      +                          98: (SF_12 == RadioConfiguration.dataRate) &&;radio_driver_SX1276.c: 599: ((BW_125KHZ ==
      +                           RadioConfiguration.bandWidth) || (BW_250KHZ == RadioConfiguration.bandWidth));radio_dri
      +                          ver_SX1276.c: 600: ) ||;radio_driver_SX1276.c: 601: (;radio_driver_SX1276.c: 602: (SF_11
      +                           == RadioConfiguration.dataRate) &&;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfi
      +                          guration.bandWidth);radio_driver_SX1276.c: 604: );radio_driver_SX1276.c: 605: )
 20856  00E998  0E0C               	movlw	12
 20857  00E99A  0101               	movlb	1	; () banked
 20858  00E99C  1931               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 20859  00E99E  A4D8               	btfss	status,2,c
 20860  00E9A0  D008               	goto	u13930
 20861                           
 20862                           ; BSR set to: 1
 20863  00E9A2  0E07               	movlw	7
 20864  00E9A4  1932               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 20865  00E9A6  B4D8               	btfsc	status,2,c
 20866  00E9A8  D00C               	goto	u13950
 20867                           
 20868                           ; BSR set to: 1
 20869  00E9AA  0E08               	movlw	8
 20870  00E9AC  1932               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 20871  00E9AE  B4D8               	btfsc	status,2,c
 20872  00E9B0  D008               	goto	u13950
 20873  00E9B2                     u13930:
 20874                           
 20875                           ; BSR set to: 1
 20876  00E9B2  0E0B               	movlw	11
 20877  00E9B4  1931               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 20878  00E9B6  A4D8               	btfss	status,2,c
 20879  00E9B8  D006               	goto	l13010
 20880                           
 20881                           ; BSR set to: 1
 20882  00E9BA  0E07               	movlw	7
 20883  00E9BC  1932               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 20884  00E9BE  A4D8               	btfss	status,2,c
 20885  00E9C0  D002               	goto	l13010
 20886  00E9C2                     u13950:
 20887                           
 20888                           ; BSR set to: 1
 20889                           ;radio_driver_SX1276.c: 606: {;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 20890  00E9C2  8649               	bsf	RADIO_WriteConfiguration@regValue,3,c
 20891                           
 20892                           ;radio_driver_SX1276.c: 608: }
 20893  00E9C4  D001               	goto	l473
 20894  00E9C6                     l13010:
 20895                           
 20896                           ; BSR set to: 1
 20897                           ;radio_driver_SX1276.c: 609: else;radio_driver_SX1276.c: 610: {;radio_driver_SX1276.c: 6
      +                          11: regValue &= ~(1 << (3));
 20898  00E9C6  9649               	bcf	RADIO_WriteConfiguration@regValue,3,c
 20899  00E9C8                     l473:
 20900                           
 20901                           ; BSR set to: 1
 20902                           ;radio_driver_SX1276.c: 612: };radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 20903  00E9C8  8449               	bsf	RADIO_WriteConfiguration@regValue,2,c
 20904                           
 20905                           ; BSR set to: 1
 20906                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 20907  00E9CA  C049  F003         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 20908  00E9CE  0E26               	movlw	38
 20909  00E9D0  ECF7  F045         	call	_RADIO_RegisterWrite
 20910                           
 20911                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 20912  00E9D4  0E31               	movlw	49
 20913  00E9D6  EC71  F046         	call	_RADIO_RegisterRead
 20914  00E9DA  6E49               	movwf	RADIO_WriteConfiguration@regValue,c
 20915                           
 20916                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 20917  00E9DC  0EF8               	movlw	248
 20918  00E9DE  1649               	andwf	RADIO_WriteConfiguration@regValue,f,c
 20919                           
 20920                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 20921  00E9E0  0E03               	movlw	3
 20922  00E9E2  1249               	iorwf	RADIO_WriteConfiguration@regValue,f,c
 20923                           
 20924                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 20925  00E9E4  C049  F003         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 20926  00E9E8  0E31               	movlw	49
 20927  00E9EA  ECF7  F045         	call	_RADIO_RegisterWrite
 20928                           
 20929                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 20930  00E9EE  0E0A               	movlw	10
 20931  00E9F0  6E03               	movwf	RADIO_RegisterWrite@value,c
 20932  00E9F2  0E37               	movlw	55
 20933  00E9F4  ECF7  F045         	call	_RADIO_RegisterWrite
 20934                           
 20935                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 20936  00E9F8  0E12               	movlw	18
 20937  00E9FA  0101               	movlb	1	; () banked
 20938  00E9FC  1949               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 20939  00E9FE  A4D8               	btfss	status,2,c
 20940  00EA00  D02B               	goto	l13048
 20941                           
 20942                           ; BSR set to: 1
 20943                           ;radio_driver_SX1276.c: 626: {;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfi
      +                          guration.bandWidth) ||;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.band
      +                          Width) )
 20944  00EA02  0E07               	movlw	7
 20945  00EA04  1932               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 20946  00EA06  B4D8               	btfsc	status,2,c
 20947  00EA08  D004               	goto	u13980
 20948                           
 20949                           ; BSR set to: 1
 20950  00EA0A  0E08               	movlw	8
 20951  00EA0C  1932               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 20952  00EA0E  A4D8               	btfss	status,2,c
 20953  00EA10  D014               	goto	l13040
 20954  00EA12                     u13980:
 20955                           
 20956                           ; BSR set to: 1
 20957                           ;radio_driver_SX1276.c: 631: {;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead
      +                          (0x31);
 20958  00EA12  0E31               	movlw	49
 20959  00EA14  EC71  F046         	call	_RADIO_RegisterRead
 20960  00EA18  6E49               	movwf	RADIO_WriteConfiguration@regValue,c
 20961                           
 20962                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 20963  00EA1A  9E49               	bcf	RADIO_WriteConfiguration@regValue,7,c
 20964                           
 20965                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 20966  00EA1C  C049  F003         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 20967  00EA20  0E31               	movlw	49
 20968  00EA22  ECF7  F045         	call	_RADIO_RegisterWrite
 20969                           
 20970                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 20971  00EA26  0E40               	movlw	64
 20972  00EA28  6E03               	movwf	RADIO_RegisterWrite@value,c
 20973  00EA2A  0E2F               	movlw	47
 20974  00EA2C  ECF7  F045         	call	_RADIO_RegisterWrite
 20975                           
 20976                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 20977  00EA30  0E00               	movlw	0
 20978  00EA32  6E03               	movwf	RADIO_RegisterWrite@value,c
 20979  00EA34  0E30               	movlw	48
 20980  00EA36  ECF7  F045         	call	_RADIO_RegisterWrite
 20981  00EA3A                     l13040:
 20982                           
 20983                           ;radio_driver_SX1276.c: 637: };radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfigu
      +                          ration.bandWidth)
 20984  00EA3A  0E09               	movlw	9
 20985  00EA3C  0101               	movlb	1	; () banked
 20986  00EA3E  1932               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 20987  00EA40  A4D8               	btfss	status,2,c
 20988  00EA42  D00A               	goto	l13048
 20989                           
 20990                           ; BSR set to: 1
 20991                           ;radio_driver_SX1276.c: 640: {;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead
      +                          (0x31);
 20992  00EA44  0E31               	movlw	49
 20993  00EA46  EC71  F046         	call	_RADIO_RegisterRead
 20994  00EA4A  6E49               	movwf	RADIO_WriteConfiguration@regValue,c
 20995                           
 20996                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 20997  00EA4C  8E49               	bsf	RADIO_WriteConfiguration@regValue,7,c
 20998                           
 20999                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 21000  00EA4E  C049  F003         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 21001  00EA52  0E31               	movlw	49
 21002  00EA54  ECF7  F045         	call	_RADIO_RegisterWrite
 21003  00EA58                     l13048:
 21004                           
 21005                           ;radio_driver_SX1276.c: 644: };radio_driver_SX1276.c: 645: };radio_driver_SX1276.c: 647:
      +                           regValue = RADIO_RegisterRead(0x33);
 21006  00EA58  0E33               	movlw	51
 21007  00EA5A  EC71  F046         	call	_RADIO_RegisterRead
 21008  00EA5E  6E49               	movwf	RADIO_WriteConfiguration@regValue,c
 21009                           
 21010                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 21011  00EA60  9C49               	bcf	RADIO_WriteConfiguration@regValue,6,c
 21012                           
 21013                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 21014  00EA62  8049               	bsf	RADIO_WriteConfiguration@regValue,0,c
 21015                           
 21016                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 21017  00EA64  C138  F041         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 21018  00EA68  0E01               	movlw	1
 21019  00EA6A  1641               	andwf	??_RADIO_WriteConfiguration,f,c
 21020  00EA6C  0E06               	movlw	6
 21021  00EA6E  6E42               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),c
 21022  00EA70                     u14005:
 21023  00EA70  90D8               	bcf	status,0,c
 21024  00EA72  3641               	rlcf	??_RADIO_WriteConfiguration,f,c
 21025  00EA74  2E42               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,c
 21026  00EA76  D7FC               	goto	u14005
 21027  00EA78  5041               	movf	??_RADIO_WriteConfiguration,w,c
 21028  00EA7A  1249               	iorwf	RADIO_WriteConfiguration@regValue,f,c
 21029                           
 21030                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 21031  00EA7C  C049  F003         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 21032  00EA80  0E33               	movlw	51
 21033  00EA82  ECF7  F045         	call	_RADIO_RegisterWrite
 21034                           
 21035                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 21036  00EA86  C138  F041         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 21037  00EA8A  0E01               	movlw	1
 21038  00EA8C  1641               	andwf	??_RADIO_WriteConfiguration,f,c
 21039  00EA8E  90D8               	bcf	status,0,c
 21040  00EA90  3641               	rlcf	??_RADIO_WriteConfiguration,f,c
 21041  00EA92  90D8               	bcf	status,0,c
 21042  00EA94  3441               	rlcf	??_RADIO_WriteConfiguration,w,c
 21043  00EA96  0AFF               	xorlw	255
 21044  00EA98  0B1D               	andlw	29
 21045  00EA9A  6E49               	movwf	RADIO_WriteConfiguration@regValue,c
 21046                           
 21047                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 21048  00EA9C  C049  F003         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 21049  00EAA0  0E3B               	movlw	59
 21050  00EAA2  ECF7  F045         	call	_RADIO_RegisterWrite
 21051                           
 21052                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 21053  00EAA6  0101               	movlb	1	; () banked
 21054  00EAA8  5125               	movf	(_RadioConfiguration+13)& (0+255),w,b
 21055  00EAAA  6E03               	movwf	RADIO_RegisterWrite@value,c
 21056  00EAAC  0E20               	movlw	32
 21057  00EAAE  ECF7  F045         	call	_RADIO_RegisterWrite
 21058                           
 21059                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 21060  00EAB2  C124  F003         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 21061  00EAB6  0E21               	movlw	33
 21062  00EAB8  ECF7  F045         	call	_RADIO_RegisterWrite
 21063                           
 21064                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 21065  00EABC  0E00               	movlw	0
 21066  00EABE  6E03               	movwf	RADIO_RegisterWrite@value,c
 21067  00EAC0  0E0D               	movlw	13
 21068  00EAC2  ECF7  F045         	call	_RADIO_RegisterWrite
 21069                           
 21070                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 21071  00EAC6  0E00               	movlw	0
 21072  00EAC8  6E03               	movwf	RADIO_RegisterWrite@value,c
 21073  00EACA  0E0E               	movlw	14
 21074  00EACC  ECF7  F045         	call	_RADIO_RegisterWrite
 21075                           
 21076                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 21077  00EAD0  0E00               	movlw	0
 21078  00EAD2  6E03               	movwf	RADIO_RegisterWrite@value,c
 21079  00EAD4  0E0F               	movlw	15
 21080  00EAD6  ECF7  F045         	call	_RADIO_RegisterWrite
 21081                           
 21082                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 21083  00EADA  0E12               	movlw	18
 21084  00EADC  0101               	movlb	1	; () banked
 21085  00EADE  1949               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 21086  00EAE0  A4D8               	btfss	status,2,c
 21087  00EAE2  D067               	goto	l479
 21088                           
 21089                           ; BSR set to: 1
 21090                           ;radio_driver_SX1276.c: 665: {;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfi
      +                          guration.bandWidth) &&;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 8620
      +                          00000) &&;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000);radio
      +                          _driver_SX1276.c: 669: )
 21091  00EAE4  0E09               	movlw	9
 21092  00EAE6  1932               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 21093  00EAE8  A4D8               	btfss	status,2,c
 21094  00EAEA  D01E               	goto	l13082
 21095                           
 21096                           ; BSR set to: 1
 21097  00EAEC  0E80               	movlw	128
 21098  00EAEE  5D18               	subwf	_RadioConfiguration& (0+255),w,b
 21099  00EAF0  0E13               	movlw	19
 21100  00EAF2  5919               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 21101  00EAF4  0E61               	movlw	97
 21102  00EAF6  591A               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 21103  00EAF8  0E33               	movlw	51
 21104  00EAFA  591B               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 21105  00EAFC  A0D8               	btfss	status,0,c
 21106  00EAFE  D014               	goto	l13082
 21107                           
 21108                           ; BSR set to: 1
 21109  00EB00  0518               	decf	_RadioConfiguration& (0+255),w,b
 21110  00EB02  0EF7               	movlw	247
 21111  00EB04  5919               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 21112  00EB06  0ECB               	movlw	203
 21113  00EB08  591A               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 21114  00EB0A  0E3C               	movlw	60
 21115  00EB0C  591B               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 21116  00EB0E  B0D8               	btfsc	status,0,c
 21117  00EB10  D00B               	goto	l13082
 21118                           
 21119                           ; BSR set to: 1
 21120                           ;radio_driver_SX1276.c: 670: {;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x0
      +                          2);
 21121  00EB12  0E02               	movlw	2
 21122  00EB14  6E03               	movwf	RADIO_RegisterWrite@value,c
 21123  00EB16  0E36               	movlw	54
 21124  00EB18  ECF7  F045         	call	_RADIO_RegisterWrite
 21125                           
 21126                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 21127  00EB1C  0E64               	movlw	100
 21128  00EB1E  6E03               	movwf	RADIO_RegisterWrite@value,c
 21129  00EB20  0E3A               	movlw	58
 21130  00EB22  ECF7  F045         	call	_RADIO_RegisterWrite
 21131                           
 21132                           ;radio_driver_SX1276.c: 673: }
 21133  00EB26  D028               	goto	l13092
 21134  00EB28                     l13082:
 21135                           
 21136                           ; BSR set to: 1
 21137                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&;ra
      +                          dio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&;radio_driver_SX
      +                          1276.c: 676: (RadioConfiguration.frequency <= 525000000);radio_driver_SX1276.c: 677: )
 21138  00EB28  0E09               	movlw	9
 21139  00EB2A  1932               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 21140  00EB2C  A4D8               	btfss	status,2,c
 21141  00EB2E  D01F               	goto	l13090
 21142                           
 21143                           ; BSR set to: 1
 21144  00EB30  0E80               	movlw	128
 21145  00EB32  5D18               	subwf	_RadioConfiguration& (0+255),w,b
 21146  00EB34  0E1A               	movlw	26
 21147  00EB36  5919               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 21148  00EB38  0E70               	movlw	112
 21149  00EB3A  591A               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 21150  00EB3C  0E18               	movlw	24
 21151  00EB3E  591B               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 21152  00EB40  A0D8               	btfss	status,0,c
 21153  00EB42  D015               	goto	l13090
 21154                           
 21155                           ; BSR set to: 1
 21156  00EB44  0E41               	movlw	65
 21157  00EB46  5D18               	subwf	_RadioConfiguration& (0+255),w,b
 21158  00EB48  0EDD               	movlw	221
 21159  00EB4A  5919               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 21160  00EB4C  0E4A               	movlw	74
 21161  00EB4E  591A               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 21162  00EB50  0E1F               	movlw	31
 21163  00EB52  591B               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 21164  00EB54  B0D8               	btfsc	status,0,c
 21165  00EB56  D00B               	goto	l13090
 21166                           
 21167                           ; BSR set to: 1
 21168                           ;radio_driver_SX1276.c: 678: {;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x0
      +                          2);
 21169  00EB58  0E02               	movlw	2
 21170  00EB5A  6E03               	movwf	RADIO_RegisterWrite@value,c
 21171  00EB5C  0E36               	movlw	54
 21172  00EB5E  ECF7  F045         	call	_RADIO_RegisterWrite
 21173                           
 21174                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 21175  00EB62  0E7F               	movlw	127
 21176  00EB64  6E03               	movwf	RADIO_RegisterWrite@value,c
 21177  00EB66  0E3A               	movlw	58
 21178  00EB68  ECF7  F045         	call	_RADIO_RegisterWrite
 21179                           
 21180                           ;radio_driver_SX1276.c: 681: }
 21181  00EB6C  D005               	goto	l13092
 21182  00EB6E                     l13090:
 21183                           
 21184                           ; BSR set to: 1
 21185                           ;radio_driver_SX1276.c: 682: else;radio_driver_SX1276.c: 683: {;radio_driver_SX1276.c: 6
      +                          84: RADIO_RegisterWrite(0x36, 0x03);
 21186  00EB6E  0E03               	movlw	3
 21187  00EB70  6E03               	movwf	RADIO_RegisterWrite@value,c
 21188  00EB72  0E36               	movlw	54
 21189  00EB74  ECF7  F045         	call	_RADIO_RegisterWrite
 21190  00EB78                     l13092:
 21191                           
 21192                           ;radio_driver_SX1276.c: 685: };radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfig
      +                          uration.bandWidth) && (1 == RadioConfiguration.iqInverted))
 21193  00EB78  0E09               	movlw	9
 21194  00EB7A  0101               	movlb	1	; () banked
 21195  00EB7C  1932               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 21196  00EB7E  A4D8               	btfss	status,2,c
 21197  00EB80  D00E               	goto	l13098
 21198                           
 21199                           ; BSR set to: 1
 21200  00EB82  0538               	decf	(_RadioConfiguration+32)& (0+255),w,b
 21201  00EB84  A4D8               	btfss	status,2,c
 21202  00EB86  D00B               	goto	l13098
 21203                           
 21204                           ; BSR set to: 1
 21205                           ;radio_driver_SX1276.c: 689: {;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x6
      +                          5);
 21206  00EB88  0E65               	movlw	101
 21207  00EB8A  6E03               	movwf	RADIO_RegisterWrite@value,c
 21208  00EB8C  0E3A               	movlw	58
 21209  00EB8E  ECF7  F045         	call	_RADIO_RegisterWrite
 21210                           
 21211                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 21212  00EB92  0E19               	movlw	25
 21213  00EB94  6E03               	movwf	RADIO_RegisterWrite@value,c
 21214  00EB96  0E3B               	movlw	59
 21215  00EB98  ECF7  F045         	call	_RADIO_RegisterWrite
 21216                           
 21217                           ;radio_driver_SX1276.c: 692: }
 21218  00EB9C  D00A               	goto	l479
 21219  00EB9E                     l13098:
 21220                           
 21221                           ; BSR set to: 1
 21222                           ;radio_driver_SX1276.c: 693: else;radio_driver_SX1276.c: 694: {;radio_driver_SX1276.c: 6
      +                          95: RADIO_RegisterWrite(0x3A, 0x65);
 21223  00EB9E  0E65               	movlw	101
 21224  00EBA0  6E03               	movwf	RADIO_RegisterWrite@value,c
 21225  00EBA2  0E3A               	movlw	58
 21226  00EBA4  ECF7  F045         	call	_RADIO_RegisterWrite
 21227                           
 21228                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 21229  00EBA8  0E1D               	movlw	29
 21230  00EBAA  6E03               	movwf	RADIO_RegisterWrite@value,c
 21231  00EBAC  0E3B               	movlw	59
 21232  00EBAE  ECF7  F045         	call	_RADIO_RegisterWrite
 21233  00EBB2                     l479:
 21234                           
 21235                           ;radio_driver_SX1276.c: 697: };radio_driver_SX1276.c: 698: };radio_driver_SX1276.c: 701:
      +                           RADIO_RegisterWrite(0x12, 0xFF);
 21236  00EBB2  0EFF               	movlw	255
 21237  00EBB4  6E03               	movwf	RADIO_RegisterWrite@value,c
 21238  00EBB6  0E12               	movlw	18
 21239  00EBB8  ECF7  F045         	call	_RADIO_RegisterWrite
 21240                           
 21241                           ;radio_driver_SX1276.c: 702: }
 21242  00EBBC  0012               	return	
 21243  00EBBE                     l13100:
 21244                           
 21245                           ; BSR set to: 1
 21246                           ;radio_driver_SX1276.c: 703: else;radio_driver_SX1276.c: 704: {;radio_driver_SX1276.c: 7
      +                          06: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequencyDeviation);
 21247  00EBBE  C11C  F00E         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 21248  00EBC2  C11D  F00F         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 21249  00EBC6  C11E  F010         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 21250  00EBCA  C11F  F011         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 21251  00EBCE  EC42  F04E         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 21252                           
 21253                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 21254  00EBD2  C120  F00E         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 21255  00EBD6  C121  F00F         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 21256  00EBDA  C122  F010         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 21257  00EBDE  C123  F011         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 21258  00EBE2  EC45  F04D         	call	_RADIO_WriteFSKBitRate	;wreg free
 21259                           
 21260                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 21261  00EBE6  0101               	movlb	1	; () banked
 21262  00EBE8  5125               	movf	(_RadioConfiguration+13)& (0+255),w,b
 21263  00EBEA  6E03               	movwf	RADIO_RegisterWrite@value,c
 21264  00EBEC  0E25               	movlw	37
 21265  00EBEE  ECF7  F045         	call	_RADIO_RegisterWrite
 21266                           
 21267                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 21268  00EBF2  C124  F003         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 21269  00EBF6  0E26               	movlw	38
 21270  00EBF8  ECF7  F045         	call	_RADIO_RegisterWrite
 21271                           
 21272                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 21273  00EBFC  0E0A               	movlw	10
 21274  00EBFE  EC71  F046         	call	_RADIO_RegisterRead
 21275  00EC02  6E49               	movwf	RADIO_WriteConfiguration@regValue,c
 21276                           
 21277                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 21278  00EC04  0E9F               	movlw	159
 21279  00EC06  1649               	andwf	RADIO_WriteConfiguration@regValue,f,c
 21280                           
 21281                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 21282  00EC08  0101               	movlb	1	; () banked
 21283  00EC0A  394B               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 21284  00EC0C  46E8               	rlncf	wreg,f,c
 21285  00EC0E  0BE0               	andlw	224
 21286  00EC10  1249               	iorwf	RADIO_WriteConfiguration@regValue,f,c
 21287                           
 21288                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 21289  00EC12  C049  F003         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 21290  00EC16  0E0A               	movlw	10
 21291  00EC18  ECF7  F045         	call	_RADIO_RegisterWrite
 21292                           
 21293                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 21294  00EC1C  0EC8               	movlw	200
 21295  00EC1E  6E49               	movwf	RADIO_WriteConfiguration@regValue,c
 21296                           
 21297                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 21298  00EC20  0101               	movlb	1	; () banked
 21299  00EC22  5134               	movf	(_RadioConfiguration+28)& (0+255),w,b
 21300  00EC24  A4D8               	btfss	status,2,c
 21301                           
 21302                           ; BSR set to: 1
 21303                           ;radio_driver_SX1276.c: 722: {;radio_driver_SX1276.c: 723: regValue |= 0x10;
 21304  00EC26  8849               	bsf	RADIO_WriteConfiguration@regValue,4,c
 21305                           
 21306                           ; BSR set to: 1
 21307                           ;radio_driver_SX1276.c: 724: };radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, reg
      +                          Value);
 21308  00EC28  C049  F003         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 21309  00EC2C  0E30               	movlw	48
 21310  00EC2E  ECF7  F045         	call	_RADIO_RegisterWrite
 21311                           
 21312                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 21313  00EC32  0E00               	movlw	0
 21314  00EC34  6E44               	movwf	RADIO_WriteConfiguration@i,c
 21315  00EC36  D00D               	goto	l13120
 21316  00EC38                     l13116:
 21317                           
 21318                           ; BSR set to: 1
 21319                           ;radio_driver_SX1276.c: 729: {;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i,
      +                           RadioConfiguration.syncWord[i]);
 21320  00EC38  0E27               	movlw	low (_RadioConfiguration+15)
 21321  00EC3A  2444               	addwf	RADIO_WriteConfiguration@i,w,c
 21322  00EC3C  6ED9               	movwf	fsr2l,c
 21323  00EC3E  6ADA               	clrf	fsr2h,c
 21324  00EC40  0E01               	movlw	high (_RadioConfiguration+15)
 21325  00EC42  22DA               	addwfc	fsr2h,f,c
 21326  00EC44  50DF               	movf	indf2,w,c
 21327  00EC46  6E03               	movwf	RADIO_RegisterWrite@value,c
 21328  00EC48  5044               	movf	RADIO_WriteConfiguration@i,w,c
 21329  00EC4A  0F28               	addlw	40
 21330  00EC4C  ECF7  F045         	call	_RADIO_RegisterWrite
 21331  00EC50  2A44               	incf	RADIO_WriteConfiguration@i,f,c
 21332  00EC52                     l13120:
 21333  00EC52  0101               	movlb	1	; () banked
 21334  00EC54  512F               	movf	(_RadioConfiguration+23)& (0+255),w,b
 21335  00EC56  5C44               	subwf	RADIO_WriteConfiguration@i,w,c
 21336  00EC58  A0D8               	btfss	status,0,c
 21337  00EC5A  D7EE               	goto	l13116
 21338                           
 21339                           ; BSR set to: 1
 21340                           ;radio_driver_SX1276.c: 733: };radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWo
      +                          rdLen != 0)
 21341  00EC5C  512F               	movf	(_RadioConfiguration+23)& (0+255),w,b
 21342  00EC5E  B4D8               	btfsc	status,2,c
 21343  00EC60  D007               	goto	l13126
 21344                           
 21345                           ; BSR set to: 1
 21346                           ;radio_driver_SX1276.c: 737: {;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x1
      +                          0 | (RadioConfiguration.syncWordLen - 1));
 21347  00EC62  052F               	decf	(_RadioConfiguration+23)& (0+255),w,b
 21348  00EC64  0910               	iorlw	16
 21349  00EC66  6E03               	movwf	RADIO_RegisterWrite@value,c
 21350  00EC68  0E27               	movlw	39
 21351  00EC6A  ECF7  F045         	call	_RADIO_RegisterWrite
 21352                           
 21353                           ;radio_driver_SX1276.c: 739: }
 21354  00EC6E  D005               	goto	l492
 21355  00EC70                     l13126:
 21356                           
 21357                           ; BSR set to: 1
 21358                           ;radio_driver_SX1276.c: 740: else;radio_driver_SX1276.c: 741: {;radio_driver_SX1276.c: 7
      +                          42: RADIO_RegisterWrite(0x27, 0x00);
 21359  00EC70  0E00               	movlw	0
 21360  00EC72  6E03               	movwf	RADIO_RegisterWrite@value,c
 21361  00EC74  0E27               	movlw	39
 21362  00EC76  ECF7  F045         	call	_RADIO_RegisterWrite
 21363  00EC7A                     l492:
 21364                           
 21365                           ;radio_driver_SX1276.c: 743: };radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xF
      +                          F);
 21366  00EC7A  0EFF               	movlw	255
 21367  00EC7C  6E03               	movwf	RADIO_RegisterWrite@value,c
 21368  00EC7E  0E3E               	movlw	62
 21369  00EC80  ECF7  F045         	call	_RADIO_RegisterWrite
 21370                           
 21371                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 21372  00EC84  0EFF               	movlw	255
 21373  00EC86  6E03               	movwf	RADIO_RegisterWrite@value,c
 21374  00EC88  0E3F               	movlw	63
 21375  00EC8A  ECF7  F045         	call	_RADIO_RegisterWrite
 21376  00EC8E  0012               	return		;funcret
 21377  00EC90                     __end_of_RADIO_WriteConfiguration:
 21378                           	opt callstack 0
 21379                           
 21380 ;; *************** function _RADIO_WritePower *****************
 21381 ;; Defined at:
 21382 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 21383 ;; Parameters:    Size  Location     Type
 21384 ;;  power           1    wreg     char 
 21385 ;; Auto vars:     Size  Location     Type
 21386 ;;  power           1    6[COMRAM] char 
 21387 ;;  paDac           1    5[COMRAM] unsigned char 
 21388 ;;  ocp             1    4[COMRAM] unsigned char 
 21389 ;; Return value:  Size  Location     Type
 21390 ;;                  1    wreg      void 
 21391 ;; Registers used:
 21392 ;;		wreg, status,2, status,0, cstack
 21393 ;; Tracked objects:
 21394 ;;		On entry : 0/0
 21395 ;;		On exit  : 0/0
 21396 ;;		Unchanged: 0/0
 21397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21399 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21401 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21402 ;;Total ram usage:        3 bytes
 21403 ;; Hardware stack levels used:    1
 21404 ;; Hardware stack levels required when called:    3
 21405 ;; This function calls:
 21406 ;;		_RADIO_RegisterRead
 21407 ;;		_RADIO_RegisterWrite
 21408 ;; This function is called by:
 21409 ;;		_RADIO_WriteConfiguration
 21410 ;; This function uses a non-reentrant model
 21411 ;;
 21412                           
 21413                           	psect	text135
 21414  00AF0E                     __ptext135:
 21415                           	opt callstack 0
 21416  00AF0E                     _RADIO_WritePower:
 21417                           	opt callstack 22
 21418                           
 21419                           ;incstack = 0
 21420                           ;RADIO_WritePower@power stored from wreg
 21421  00AF0E  6E07               	movwf	RADIO_WritePower@power,c
 21422                           
 21423                           ;radio_driver_SX1276.c: 344: uint8_t paDac;;radio_driver_SX1276.c: 345: uint8_t ocp;;rad
      +                          io_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 21424  00AF10  0101               	movlb	1	; () banked
 21425  00AF12  5135               	movf	(_RadioConfiguration+29)& (0+255),w,b
 21426  00AF14  A4D8               	btfss	status,2,c
 21427  00AF16  D02C               	goto	l12808
 21428                           
 21429                           ; BSR set to: 1
 21430                           ;radio_driver_SX1276.c: 348: {;radio_driver_SX1276.c: 350: if (power < -3)
 21431  00AF18  5007               	movf	RADIO_WritePower@power,w,c
 21432  00AF1A  0A80               	xorlw	128
 21433  00AF1C  0F83               	addlw	131
 21434  00AF1E  B0D8               	btfsc	status,0,c
 21435  00AF20  D002               	goto	l12788
 21436                           
 21437                           ; BSR set to: 1
 21438                           ;radio_driver_SX1276.c: 351: {;radio_driver_SX1276.c: 352: power = -3;
 21439  00AF22  0EFD               	movlw	253
 21440  00AF24  6E07               	movwf	RADIO_WritePower@power,c
 21441  00AF26                     l12788:
 21442                           
 21443                           ; BSR set to: 1
 21444                           ;radio_driver_SX1276.c: 353: };radio_driver_SX1276.c: 354: if (power > 15)
 21445  00AF26  5007               	movf	RADIO_WritePower@power,w,c
 21446  00AF28  0A80               	xorlw	128
 21447  00AF2A  0F70               	addlw	-144
 21448  00AF2C  A0D8               	btfss	status,0,c
 21449  00AF2E  D002               	goto	l12792
 21450                           
 21451                           ; BSR set to: 1
 21452                           ;radio_driver_SX1276.c: 355: {;radio_driver_SX1276.c: 356: power = 15;
 21453  00AF30  0E0F               	movlw	15
 21454  00AF32  6E07               	movwf	RADIO_WritePower@power,c
 21455  00AF34                     l12792:
 21456                           
 21457                           ; BSR set to: 1
 21458                           ;radio_driver_SX1276.c: 357: };radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x
      +                          4D);
 21459  00AF34  0E4D               	movlw	77
 21460  00AF36  EC71  F046         	call	_RADIO_RegisterRead
 21461  00AF3A  6E06               	movwf	RADIO_WritePower@paDac,c
 21462                           
 21463                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 21464  00AF3C  0EF8               	movlw	248
 21465  00AF3E  1606               	andwf	RADIO_WritePower@paDac,f,c
 21466                           
 21467                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 21468  00AF40  8406               	bsf	RADIO_WritePower@paDac,2,c
 21469                           
 21470                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 21471  00AF42  C006  F003         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 21472  00AF46  0E4D               	movlw	77
 21473  00AF48  ECF7  F045         	call	_RADIO_RegisterWrite
 21474                           
 21475                           ;radio_driver_SX1276.c: 364: if (power < 0)
 21476  00AF4C  AE07               	btfss	RADIO_WritePower@power,7,c
 21477  00AF4E  D009               	goto	l12806
 21478                           
 21479                           ;radio_driver_SX1276.c: 365: {;radio_driver_SX1276.c: 369: power += 3;
 21480  00AF50  0E03               	movlw	3
 21481  00AF52  2607               	addwf	RADIO_WritePower@power,f,c
 21482                           
 21483                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 21484  00AF54  5007               	movf	RADIO_WritePower@power,w,c
 21485  00AF56  0920               	iorlw	32
 21486  00AF58  6E03               	movwf	RADIO_RegisterWrite@value,c
 21487  00AF5A  0E09               	movlw	9
 21488  00AF5C  ECF7  F045         	call	_RADIO_RegisterWrite
 21489                           
 21490                           ;radio_driver_SX1276.c: 371: }
 21491  00AF60  0012               	return	
 21492  00AF62                     l12806:
 21493                           
 21494                           ;radio_driver_SX1276.c: 372: else;radio_driver_SX1276.c: 373: {;radio_driver_SX1276.c: 3
      +                          77: RADIO_RegisterWrite(0x09, 0x70 | power);
 21495  00AF62  5007               	movf	RADIO_WritePower@power,w,c
 21496  00AF64  0970               	iorlw	112
 21497  00AF66  6E03               	movwf	RADIO_RegisterWrite@value,c
 21498  00AF68  0E09               	movlw	9
 21499  00AF6A  ECF7  F045         	call	_RADIO_RegisterWrite
 21500  00AF6E  0012               	return	
 21501  00AF70                     l12808:
 21502                           
 21503                           ; BSR set to: 1
 21504                           ;radio_driver_SX1276.c: 380: else;radio_driver_SX1276.c: 381: {;radio_driver_SX1276.c: 3
      +                          85: if (power < 2)
 21505  00AF70  5007               	movf	RADIO_WritePower@power,w,c
 21506  00AF72  0A80               	xorlw	128
 21507  00AF74  0F7E               	addlw	-130
 21508  00AF76  B0D8               	btfsc	status,0,c
 21509  00AF78  D002               	goto	l12812
 21510                           
 21511                           ; BSR set to: 1
 21512                           ;radio_driver_SX1276.c: 386: {;radio_driver_SX1276.c: 387: power = 2;
 21513  00AF7A  0E02               	movlw	2
 21514  00AF7C  6E07               	movwf	RADIO_WritePower@power,c
 21515  00AF7E                     l12812:
 21516                           
 21517                           ; BSR set to: 1
 21518                           ;radio_driver_SX1276.c: 388: };radio_driver_SX1276.c: 391: if (power >= 20)
 21519  00AF7E  5007               	movf	RADIO_WritePower@power,w,c
 21520  00AF80  0A80               	xorlw	128
 21521  00AF82  0F6C               	addlw	-148
 21522  00AF84  A0D8               	btfss	status,0,c
 21523  00AF86  D002               	goto	l12816
 21524                           
 21525                           ; BSR set to: 1
 21526                           ;radio_driver_SX1276.c: 392: {;radio_driver_SX1276.c: 393: power = 20;
 21527  00AF88  0E14               	movlw	20
 21528  00AF8A  D006               	goto	L24
 21529  00AF8C                     l12816:
 21530                           
 21531                           ; BSR set to: 1
 21532                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 21533  00AF8C  5007               	movf	RADIO_WritePower@power,w,c
 21534  00AF8E  0A80               	xorlw	128
 21535  00AF90  0F6E               	addlw	-146
 21536  00AF92  A0D8               	btfss	status,0,c
 21537  00AF94  D002               	goto	l12820
 21538                           
 21539                           ; BSR set to: 1
 21540                           ;radio_driver_SX1276.c: 396: {;radio_driver_SX1276.c: 397: power = 17;
 21541  00AF96  0E11               	movlw	17
 21542  00AF98                     L24:
 21543  00AF98  6E07               	movwf	RADIO_WritePower@power,c
 21544  00AF9A                     l12820:
 21545                           
 21546                           ; BSR set to: 1
 21547                           ;radio_driver_SX1276.c: 398: };radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B
      +                          );
 21548  00AF9A  0E0B               	movlw	11
 21549  00AF9C  EC71  F046         	call	_RADIO_RegisterRead
 21550  00AFA0  6E05               	movwf	RADIO_WritePower@ocp,c
 21551                           
 21552                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 21553  00AFA2  0E4D               	movlw	77
 21554  00AFA4  EC71  F046         	call	_RADIO_RegisterRead
 21555  00AFA8  6E06               	movwf	RADIO_WritePower@paDac,c
 21556                           
 21557                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 21558  00AFAA  0EF8               	movlw	248
 21559  00AFAC  1606               	andwf	RADIO_WritePower@paDac,f,c
 21560                           
 21561                           ;radio_driver_SX1276.c: 403: if (power == 20)
 21562  00AFAE  0E14               	movlw	20
 21563  00AFB0  1807               	xorwf	RADIO_WritePower@power,w,c
 21564  00AFB2  A4D8               	btfss	status,2,c
 21565  00AFB4  D006               	goto	l12834
 21566                           
 21567                           ;radio_driver_SX1276.c: 404: {;radio_driver_SX1276.c: 405: paDac |= 0x07;
 21568  00AFB6  0E07               	movlw	7
 21569  00AFB8  1206               	iorwf	RADIO_WritePower@paDac,f,c
 21570                           
 21571                           ;radio_driver_SX1276.c: 406: power = 15;
 21572  00AFBA  0E0F               	movlw	15
 21573  00AFBC  6E07               	movwf	RADIO_WritePower@power,c
 21574                           
 21575                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 21576  00AFBE  9A05               	bcf	RADIO_WritePower@ocp,5,c
 21577                           
 21578                           ;radio_driver_SX1276.c: 408: }
 21579  00AFC0  D004               	goto	l12840
 21580  00AFC2                     l12834:
 21581                           
 21582                           ;radio_driver_SX1276.c: 409: else;radio_driver_SX1276.c: 410: {;radio_driver_SX1276.c: 4
      +                          11: paDac |= 0x04;
 21583  00AFC2  8406               	bsf	RADIO_WritePower@paDac,2,c
 21584                           
 21585                           ;radio_driver_SX1276.c: 412: power -= 2;
 21586  00AFC4  0EFE               	movlw	254
 21587  00AFC6  2607               	addwf	RADIO_WritePower@power,f,c
 21588                           
 21589                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 21590  00AFC8  8A05               	bsf	RADIO_WritePower@ocp,5,c
 21591  00AFCA                     l12840:
 21592                           
 21593                           ;radio_driver_SX1276.c: 414: };radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paD
      +                          ac);
 21594  00AFCA  C006  F003         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 21595  00AFCE  0E4D               	movlw	77
 21596  00AFD0  ECF7  F045         	call	_RADIO_RegisterWrite
 21597                           
 21598                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 21599  00AFD4  5007               	movf	RADIO_WritePower@power,w,c
 21600  00AFD6  0980               	iorlw	128
 21601  00AFD8  6E03               	movwf	RADIO_RegisterWrite@value,c
 21602  00AFDA  0E09               	movlw	9
 21603  00AFDC  ECF7  F045         	call	_RADIO_RegisterWrite
 21604                           
 21605                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 21606  00AFE0  C005  F003         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 21607  00AFE4  0E0B               	movlw	11
 21608  00AFE6  ECF7  F045         	call	_RADIO_RegisterWrite
 21609  00AFEA  0012               	return		;funcret
 21610  00AFEC                     __end_of_RADIO_WritePower:
 21611                           	opt callstack 0
 21612                           
 21613 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 21614 ;; Defined at:
 21615 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 21616 ;; Parameters:    Size  Location     Type
 21617 ;;  frequencyDev    4   13[COMRAM] unsigned long 
 21618 ;; Auto vars:     Size  Location     Type
 21619 ;;  num             4   17[COMRAM] unsigned long 
 21620 ;; Return value:  Size  Location     Type
 21621 ;;                  1    wreg      void 
 21622 ;; Registers used:
 21623 ;;		wreg, status,2, status,0, cstack
 21624 ;; Tracked objects:
 21625 ;;		On entry : 0/0
 21626 ;;		On exit  : 0/0
 21627 ;;		Unchanged: 0/0
 21628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21629 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21630 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21632 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21633 ;;Total ram usage:        8 bytes
 21634 ;; Hardware stack levels used:    1
 21635 ;; Hardware stack levels required when called:    3
 21636 ;; This function calls:
 21637 ;;		_RADIO_RegisterWrite
 21638 ;;		___lldiv
 21639 ;; This function is called by:
 21640 ;;		_RADIO_WriteConfiguration
 21641 ;; This function uses a non-reentrant model
 21642 ;;
 21643                           
 21644                           	psect	text136
 21645  009C84                     __ptext136:
 21646                           	opt callstack 0
 21647  009C84                     _RADIO_WriteFSKFrequencyDeviation:
 21648                           	opt callstack 22
 21649                           
 21650                           ;radio_driver_SX1276.c: 296: uint32_t num;;radio_driver_SX1276.c: 303: num = frequencyDe
      +                          viation;
 21651                           
 21652                           ;incstack = 0
 21653  009C84  C00E  F012         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 21654  009C88  C00F  F013         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 21655  009C8C  C010  F014         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 21656  009C90  C011  F015         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 21657                           
 21658                           ;radio_driver_SX1276.c: 304: num <<= (8);
 21659  009C94  C014  F015         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 21660  009C98  C013  F014         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 21661  009C9C  C012  F013         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 21662  009CA0  6A12               	clrf	RADIO_WriteFSKFrequencyDeviation@num,c
 21663                           
 21664                           ;radio_driver_SX1276.c: 305: num /= 15625;
 21665  009CA2  C012  F001         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 21666  009CA6  C013  F002         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 21667  009CAA  C014  F003         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 21668  009CAE  C015  F004         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 21669  009CB2  0E09               	movlw	9
 21670  009CB4  6E05               	movwf	___lldiv@divisor,c
 21671  009CB6  0E3D               	movlw	61
 21672  009CB8  6E06               	movwf	___lldiv@divisor+1,c
 21673  009CBA  0E00               	movlw	0
 21674  009CBC  6E07               	movwf	___lldiv@divisor+2,c
 21675  009CBE  0E00               	movlw	0
 21676  009CC0  6E08               	movwf	___lldiv@divisor+3,c
 21677  009CC2  ECFE  F050         	call	___lldiv	;wreg free
 21678  009CC6  C001  F012         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 21679  009CCA  C002  F013         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 21680  009CCE  C003  F014         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 21681  009CD2  C004  F015         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 21682                           
 21683                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 21684  009CD6  C013  F003         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 21685  009CDA  0E04               	movlw	4
 21686  009CDC  ECF7  F045         	call	_RADIO_RegisterWrite
 21687                           
 21688                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 21689  009CE0  C012  F003         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 21690  009CE4  0E05               	movlw	5
 21691  009CE6  ECF7  F045         	call	_RADIO_RegisterWrite
 21692  009CEA  0012               	return		;funcret
 21693  009CEC                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 21694                           	opt callstack 0
 21695                           
 21696 ;; *************** function _RADIO_WriteFSKBitRate *****************
 21697 ;; Defined at:
 21698 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 21699 ;; Parameters:    Size  Location     Type
 21700 ;;  bitRate         4   13[COMRAM] unsigned long 
 21701 ;; Auto vars:     Size  Location     Type
 21702 ;;  num             4   17[COMRAM] unsigned long 
 21703 ;; Return value:  Size  Location     Type
 21704 ;;                  1    wreg      void 
 21705 ;; Registers used:
 21706 ;;		wreg, status,2, status,0, cstack
 21707 ;; Tracked objects:
 21708 ;;		On entry : 0/0
 21709 ;;		On exit  : 0/0
 21710 ;;		Unchanged: 0/0
 21711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21713 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21715 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21716 ;;Total ram usage:        8 bytes
 21717 ;; Hardware stack levels used:    1
 21718 ;; Hardware stack levels required when called:    3
 21719 ;; This function calls:
 21720 ;;		_RADIO_RegisterWrite
 21721 ;;		___lldiv
 21722 ;; This function is called by:
 21723 ;;		_RADIO_WriteConfiguration
 21724 ;; This function uses a non-reentrant model
 21725 ;;
 21726                           
 21727                           	psect	text137
 21728  009A8A                     __ptext137:
 21729                           	opt callstack 0
 21730  009A8A                     _RADIO_WriteFSKBitRate:
 21731                           	opt callstack 22
 21732                           
 21733                           ;radio_driver_SX1276.c: 318: uint32_t num;;radio_driver_SX1276.c: 320: num = 32000000;
 21734                           
 21735                           ;incstack = 0
 21736  009A8A  0E00               	movlw	0
 21737  009A8C  6E12               	movwf	RADIO_WriteFSKBitRate@num,c
 21738  009A8E  0E48               	movlw	72
 21739  009A90  6E13               	movwf	RADIO_WriteFSKBitRate@num+1,c
 21740  009A92  0EE8               	movlw	232
 21741  009A94  6E14               	movwf	RADIO_WriteFSKBitRate@num+2,c
 21742  009A96  0E01               	movlw	1
 21743  009A98  6E15               	movwf	RADIO_WriteFSKBitRate@num+3,c
 21744                           
 21745                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 21746  009A9A  C012  F001         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 21747  009A9E  C013  F002         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 21748  009AA2  C014  F003         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 21749  009AA6  C015  F004         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 21750  009AAA  C00E  F005         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 21751  009AAE  C00F  F006         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 21752  009AB2  C010  F007         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 21753  009AB6  C011  F008         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 21754  009ABA  ECFE  F050         	call	___lldiv	;wreg free
 21755  009ABE  C001  F012         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 21756  009AC2  C002  F013         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 21757  009AC6  C003  F014         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 21758  009ACA  C004  F015         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 21759                           
 21760                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 21761  009ACE  C013  F003         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 21762  009AD2  0E02               	movlw	2
 21763  009AD4  ECF7  F045         	call	_RADIO_RegisterWrite
 21764                           
 21765                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 21766  009AD8  C012  F003         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 21767  009ADC  0E03               	movlw	3
 21768  009ADE  ECF7  F045         	call	_RADIO_RegisterWrite
 21769                           
 21770                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 21771  009AE2  0E00               	movlw	0
 21772  009AE4  6E03               	movwf	RADIO_RegisterWrite@value,c
 21773  009AE6  0E5D               	movlw	93
 21774  009AE8  ECF7  F045         	call	_RADIO_RegisterWrite
 21775  009AEC  0012               	return		;funcret
 21776  009AEE                     __end_of_RADIO_WriteFSKBitRate:
 21777                           	opt callstack 0
 21778                           
 21779 ;; *************** function _PrepareJoinRequestFrame *****************
 21780 ;; Defined at:
 21781 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21782 ;; Parameters:    Size  Location     Type
 21783 ;;		None
 21784 ;; Auto vars:     Size  Location     Type
 21785 ;;  mic             4  122[BANK0 ] unsigned long 
 21786 ;;  bufferIndex     1  128[BANK0 ] unsigned char 
 21787 ;;  iCtr            1  127[BANK0 ] unsigned char 
 21788 ;;  mhdr            1  126[BANK0 ] struct .
 21789 ;; Return value:  Size  Location     Type
 21790 ;;                  1    wreg      unsigned char 
 21791 ;; Registers used:
 21792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21793 ;; Tracked objects:
 21794 ;;		On entry : 0/0
 21795 ;;		On exit  : 0/0
 21796 ;;		Unchanged: 0/0
 21797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21799 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21800 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21801 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21802 ;;Total ram usage:        9 bytes
 21803 ;; Hardware stack levels used:    1
 21804 ;; Hardware stack levels required when called:    6
 21805 ;; This function calls:
 21806 ;;		_ComputeMic
 21807 ;;		_Random
 21808 ;;		_memcpy
 21809 ;;		_memset
 21810 ;; This function is called by:
 21811 ;;		_LORAWAN_Join
 21812 ;; This function uses a non-reentrant model
 21813 ;;
 21814                           
 21815                           	psect	text138
 21816  00C0CE                     __ptext138:
 21817                           	opt callstack 0
 21818  00C0CE                     _PrepareJoinRequestFrame:
 21819                           	opt callstack 23
 21820                           
 21821                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 21822                           
 21823                           ;incstack = 0
 21824  00C0CE  0E00               	movlw	0
 21825  00C0D0  0100               	movlb	0	; () banked
 21826  00C0D2  6FE0               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 21827                           
 21828                           ; BSR set to: 0
 21829                           ;lorawan.c: 1809: Mhdr_t mhdr;;lorawan.c: 1810: uint32_t mic;;lorawan.c: 1812: memset (m
      +                          acBuffer, 0, sizeof(macBuffer) );
 21830  00C0D4  0EA0               	movlw	low _macBuffer
 21831  00C0D6  6E01               	movwf	memset@p1,c
 21832  00C0D8  0E04               	movlw	high _macBuffer
 21833  00C0DA  6E02               	movwf	memset@p1+1,c
 21834  00C0DC  0E00               	movlw	0
 21835  00C0DE  6E04               	movwf	memset@c+1,c
 21836  00C0E0  0E00               	movlw	0
 21837  00C0E2  6E03               	movwf	memset@c,c
 21838  00C0E4  0E01               	movlw	1
 21839  00C0E6  6E06               	movwf	memset@n+1,c
 21840  00C0E8  0E0F               	movlw	15
 21841  00C0EA  6E05               	movwf	memset@n,c
 21842  00C0EC  EC7A  F047         	call	_memset	;wreg free
 21843                           
 21844                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 21845  00C0F0  0E1F               	movlw	-225
 21846  00C0F2  0100               	movlb	0	; () banked
 21847  00C0F4  17DE               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 21848                           
 21849                           ; BSR set to: 0
 21850                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 21851  00C0F6  0EFC               	movlw	-4
 21852  00C0F8  17DE               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 21853                           
 21854                           ; BSR set to: 0
 21855                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 21856  00C0FA  0EE3               	movlw	-29
 21857  00C0FC  17DE               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 21858                           
 21859                           ; BSR set to: 0
 21860                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 21861  00C0FE  EE24  F0A0         	lfsr	2,_macBuffer
 21862  00C102  C0DE  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 21863                           
 21864                           ; BSR set to: 0
 21865  00C106  2BE0               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 21866                           
 21867                           ; BSR set to: 0
 21868                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 21869  00C108  0E00               	movlw	0
 21870  00C10A  6FDF               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 21871  00C10C                     l15410:
 21872                           
 21873                           ; BSR set to: 0
 21874                           ;lorawan.c: 1821: {;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationPara
      +                          meters.applicationEui.buffer[7 - iCtr];
 21875  00C10C  51DF               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 21876  00C10E  0859               	sublw	low (_loRa+89)
 21877  00C110  6ED9               	movwf	fsr2l,c
 21878  00C112  0E00               	movlw	0
 21879  00C114  A0D8               	btfss	status,0,c
 21880  00C116  2AE8               	incf	wreg,f,c
 21881  00C118  0802               	sublw	high (_loRa+89)
 21882  00C11A  6EDA               	movwf	fsr2h,c
 21883  00C11C  0EA0               	movlw	low _macBuffer
 21884  00C11E  6FD8               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 21885  00C120  0E04               	movlw	high _macBuffer
 21886  00C122  6FD9               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 21887  00C124  51E0               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 21888  00C126  27D8               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 21889  00C128  0E00               	movlw	0
 21890  00C12A  23D9               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 21891  00C12C  51DF               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 21892  00C12E  25D8               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 21893  00C130  6EE1               	movwf	fsr1l,c
 21894  00C132  0E00               	movlw	0
 21895  00C134  21D9               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 21896  00C136  6EE2               	movwf	fsr1h,c
 21897  00C138  CFDF FFE7          	movff	indf2,indf1
 21898                           
 21899                           ; BSR set to: 0
 21900  00C13C  2BDF               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 21901                           
 21902                           ; BSR set to: 0
 21903  00C13E  0E07               	movlw	7
 21904  00C140  65DF               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 21905  00C142  D7E4               	goto	l15410
 21906                           
 21907                           ; BSR set to: 0
 21908                           ;lorawan.c: 1823: };lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationP
      +                          arameters.applicationEui);
 21909  00C144  51E0               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 21910  00C146  0F08               	addlw	8
 21911  00C148  6FE0               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 21912                           
 21913                           ; BSR set to: 0
 21914                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 21915  00C14A  0E00               	movlw	0
 21916  00C14C  6FDF               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 21917  00C14E                     l15424:
 21918                           
 21919                           ; BSR set to: 0
 21920                           ;lorawan.c: 1828: {;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationPara
      +                          meters.deviceEui.buffer[7 - iCtr];
 21921  00C14E  51DF               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 21922  00C150  0861               	sublw	low (_loRa+97)
 21923  00C152  6ED9               	movwf	fsr2l,c
 21924  00C154  0E00               	movlw	0
 21925  00C156  A0D8               	btfss	status,0,c
 21926  00C158  2AE8               	incf	wreg,f,c
 21927  00C15A  0802               	sublw	high (_loRa+97)
 21928  00C15C  6EDA               	movwf	fsr2h,c
 21929  00C15E  0EA0               	movlw	low _macBuffer
 21930  00C160  6FD8               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 21931  00C162  0E04               	movlw	high _macBuffer
 21932  00C164  6FD9               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 21933  00C166  51E0               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 21934  00C168  27D8               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 21935  00C16A  0E00               	movlw	0
 21936  00C16C  23D9               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 21937  00C16E  51DF               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 21938  00C170  25D8               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 21939  00C172  6EE1               	movwf	fsr1l,c
 21940  00C174  0E00               	movlw	0
 21941  00C176  21D9               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 21942  00C178  6EE2               	movwf	fsr1h,c
 21943  00C17A  CFDF FFE7          	movff	indf2,indf1
 21944                           
 21945                           ; BSR set to: 0
 21946  00C17E  2BDF               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 21947                           
 21948                           ; BSR set to: 0
 21949  00C180  0E07               	movlw	7
 21950  00C182  65DF               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 21951  00C184  D7E4               	goto	l15424
 21952                           
 21953                           ; BSR set to: 0
 21954                           ;lorawan.c: 1830: };lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activation
      +                          Parameters.deviceEui );
 21955  00C186  51E0               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 21956  00C188  0F08               	addlw	8
 21957  00C18A  6FE0               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 21958                           
 21959                           ; BSR set to: 0
 21960                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 21961  00C18C  0EFF               	movlw	255
 21962  00C18E  6E47               	movwf	Random@max+1,c
 21963  00C190  6846               	setf	Random@max,c
 21964  00C192  ECBD  F046         	call	_Random	;wreg free
 21965  00C196  C046  F2D2         	movff	?_Random,_loRa+210
 21966  00C19A  C047  F2D3         	movff	?_Random+1,_loRa+211
 21967                           
 21968                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 21969  00C19E  0EA0               	movlw	low _macBuffer
 21970  00C1A0  0100               	movlb	0	; () banked
 21971  00C1A2  25E0               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 21972  00C1A4  6E01               	movwf	memcpy@d1,c
 21973  00C1A6  6A02               	clrf	memcpy@d1+1,c
 21974  00C1A8  0E04               	movlw	high _macBuffer
 21975  00C1AA  2202               	addwfc	memcpy@d1+1,f,c
 21976  00C1AC  0ED2               	movlw	low (_loRa+210)
 21977  00C1AE  6E03               	movwf	memcpy@s1,c
 21978  00C1B0  0E02               	movlw	high (_loRa+210)
 21979  00C1B2  6E04               	movwf	memcpy@s1+1,c
 21980  00C1B4  0E00               	movlw	0
 21981  00C1B6  6E06               	movwf	memcpy@n+1,c
 21982  00C1B8  0E02               	movlw	2
 21983  00C1BA  6E05               	movwf	memcpy@n,c
 21984  00C1BC  EC56  F04C         	call	_memcpy	;wreg free
 21985                           
 21986                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 21987  00C1C0  0100               	movlb	0	; () banked
 21988  00C1C2  51E0               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 21989  00C1C4  0F02               	addlw	2
 21990  00C1C6  6FE0               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 21991                           
 21992                           ; BSR set to: 0
 21993                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 21994  00C1C8  0E42               	movlw	low (_loRa+66)
 21995  00C1CA  6E5B               	movwf	ComputeMic@key,c
 21996  00C1CC  0E02               	movlw	high (_loRa+66)
 21997  00C1CE  6E5C               	movwf	ComputeMic@key+1,c
 21998  00C1D0  0EA0               	movlw	low _macBuffer
 21999  00C1D2  6E5D               	movwf	ComputeMic@buffer,c
 22000  00C1D4  0E04               	movlw	high _macBuffer
 22001  00C1D6  6E5E               	movwf	ComputeMic@buffer+1,c
 22002  00C1D8  C0E0  F05F         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 22003  00C1DC  ECB4  F04C         	call	_ComputeMic	;wreg free
 22004  00C1E0  C05B  F0DA         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 22005  00C1E4  C05C  F0DB         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 22006  00C1E8  C05D  F0DC         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 22007  00C1EC  C05E  F0DD         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 22008                           
 22009                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 22010  00C1F0  0EA0               	movlw	low _macBuffer
 22011  00C1F2  0100               	movlb	0	; () banked
 22012  00C1F4  25E0               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 22013  00C1F6  6E01               	movwf	memcpy@d1,c
 22014  00C1F8  6A02               	clrf	memcpy@d1+1,c
 22015  00C1FA  0E04               	movlw	high _macBuffer
 22016  00C1FC  2202               	addwfc	memcpy@d1+1,f,c
 22017  00C1FE  0EDA               	movlw	low PrepareJoinRequestFrame@mic
 22018  00C200  6E03               	movwf	memcpy@s1,c
 22019  00C202  0E00               	movlw	high PrepareJoinRequestFrame@mic
 22020  00C204  6E04               	movwf	memcpy@s1+1,c
 22021  00C206  0E00               	movlw	0
 22022  00C208  6E06               	movwf	memcpy@n+1,c
 22023  00C20A  0E04               	movlw	4
 22024  00C20C  6E05               	movwf	memcpy@n,c
 22025  00C20E  EC56  F04C         	call	_memcpy	;wreg free
 22026                           
 22027                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 22028  00C212  0100               	movlb	0	; () banked
 22029  00C214  51E0               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 22030  00C216  0F04               	addlw	4
 22031  00C218  6FE0               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 22032                           
 22033                           ; BSR set to: 0
 22034                           ;lorawan.c: 1842: return bufferIndex;
 22035  00C21A  51E0               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 22036                           
 22037                           ; BSR set to: 0
 22038  00C21C  0012               	return		;funcret
 22039  00C21E                     __end_of_PrepareJoinRequestFrame:
 22040                           	opt callstack 0
 22041                           
 22042 ;; *************** function _Random *****************
 22043 ;; Defined at:
 22044 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22045 ;; Parameters:    Size  Location     Type
 22046 ;;  max             2   69[COMRAM] unsigned int 
 22047 ;; Auto vars:     Size  Location     Type
 22048 ;;		None
 22049 ;; Return value:  Size  Location     Type
 22050 ;;                  2   69[COMRAM] unsigned int 
 22051 ;; Registers used:
 22052 ;;		wreg, status,2, status,0, cstack
 22053 ;; Tracked objects:
 22054 ;;		On entry : 0/0
 22055 ;;		On exit  : 0/0
 22056 ;;		Unchanged: 0/0
 22057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22061 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22062 ;;Total ram usage:        2 bytes
 22063 ;; Hardware stack levels used:    1
 22064 ;; Hardware stack levels required when called:    2
 22065 ;; This function calls:
 22066 ;;		___lwmod
 22067 ;;		_rand
 22068 ;; This function is called by:
 22069 ;;		_SearchAvailableChannel
 22070 ;;		_PrepareJoinRequestFrame
 22071 ;; This function uses a non-reentrant model
 22072 ;;
 22073                           
 22074                           	psect	text139
 22075  008D7A                     __ptext139:
 22076                           	opt callstack 0
 22077  008D7A                     _Random:
 22078                           	opt callstack 23
 22079                           
 22080                           ;lorawan.c: 1118: return (rand () % max);
 22081                           
 22082                           ; BSR set to: 0
 22083                           ;incstack = 0
 22084  008D7A  ECAA  F04B         	call	_rand	;wreg free
 22085  008D7E  C03F  F041         	movff	?_rand,___lwmod@dividend
 22086  008D82  C040  F042         	movff	?_rand+1,___lwmod@dividend+1
 22087  008D86  C046  F043         	movff	Random@max,___lwmod@divisor
 22088  008D8A  C047  F044         	movff	Random@max+1,___lwmod@divisor+1
 22089  008D8E  ECBD  F049         	call	___lwmod	;wreg free
 22090  008D92  C041  F046         	movff	?___lwmod,?_Random
 22091  008D96  C042  F047         	movff	?___lwmod+1,?_Random+1
 22092  008D9A  0012               	return		;funcret
 22093  008D9C                     __end_of_Random:
 22094                           	opt callstack 0
 22095                           
 22096 ;; *************** function _rand *****************
 22097 ;; Defined at:
 22098 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 22099 ;; Parameters:    Size  Location     Type
 22100 ;;		None
 22101 ;; Auto vars:     Size  Location     Type
 22102 ;;		None
 22103 ;; Return value:  Size  Location     Type
 22104 ;;                  2   62[COMRAM] int 
 22105 ;; Registers used:
 22106 ;;		wreg, status,2, status,0, cstack
 22107 ;; Tracked objects:
 22108 ;;		On entry : 0/0
 22109 ;;		On exit  : 0/0
 22110 ;;		Unchanged: 0/0
 22111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22115 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22116 ;;Total ram usage:        2 bytes
 22117 ;; Hardware stack levels used:    1
 22118 ;; Hardware stack levels required when called:    1
 22119 ;; This function calls:
 22120 ;;		___lmul
 22121 ;; This function is called by:
 22122 ;;		_Random
 22123 ;; This function uses a non-reentrant model
 22124 ;;
 22125                           
 22126                           	psect	text140
 22127  009754                     __ptext140:
 22128                           	opt callstack 0
 22129  009754                     _rand:
 22130                           	opt callstack 23
 22131                           
 22132                           ;incstack = 0
 22133  009754  C189  F033         	movff	_randx,___lmul@multiplier
 22134  009758  C18A  F034         	movff	_randx+1,___lmul@multiplier+1
 22135  00975C  C18B  F035         	movff	_randx+2,___lmul@multiplier+2
 22136  009760  C18C  F036         	movff	_randx+3,___lmul@multiplier+3
 22137  009764  0E6D               	movlw	109
 22138  009766  6E37               	movwf	___lmul@multiplicand,c
 22139  009768  0E4E               	movlw	78
 22140  00976A  6E38               	movwf	___lmul@multiplicand+1,c
 22141  00976C  0EC6               	movlw	198
 22142  00976E  6E39               	movwf	___lmul@multiplicand+2,c
 22143  009770  0E41               	movlw	65
 22144  009772  6E3A               	movwf	___lmul@multiplicand+3,c
 22145  009774  ECD4  F04B         	call	___lmul	;wreg free
 22146  009778  C033  F189         	movff	?___lmul,_randx
 22147  00977C  C034  F18A         	movff	?___lmul+1,_randx+1
 22148  009780  C035  F18B         	movff	?___lmul+2,_randx+2
 22149  009784  C036  F18C         	movff	?___lmul+3,_randx+3
 22150  009788  0E39               	movlw	57
 22151  00978A  0101               	movlb	1	; () banked
 22152  00978C  2789               	addwf	_randx& (0+255),f,b
 22153  00978E  0E30               	movlw	48
 22154  009790  238A               	addwfc	(_randx+1)& (0+255),f,b
 22155  009792  0E00               	movlw	0
 22156  009794  238B               	addwfc	(_randx+2)& (0+255),f,b
 22157  009796  0E00               	movlw	0
 22158  009798  238C               	addwfc	(_randx+3)& (0+255),f,b
 22159                           
 22160                           ; BSR set to: 1
 22161  00979A  0EFF               	movlw	255
 22162  00979C  158B               	andwf	(_randx+2)& (0+255),w,b
 22163  00979E  6E3F               	movwf	?_rand,c
 22164  0097A0  0E7F               	movlw	127
 22165  0097A2  158C               	andwf	(_randx+3)& (0+255),w,b
 22166  0097A4  6E40               	movwf	?_rand+1,c
 22167                           
 22168                           ; BSR set to: 1
 22169  0097A6  0012               	return		;funcret
 22170  0097A8                     __end_of_rand:
 22171                           	opt callstack 0
 22172                           
 22173 ;; *************** function ___lwmod *****************
 22174 ;; Defined at:
 22175 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 22176 ;; Parameters:    Size  Location     Type
 22177 ;;  dividend        2   64[COMRAM] unsigned int 
 22178 ;;  divisor         2   66[COMRAM] unsigned int 
 22179 ;; Auto vars:     Size  Location     Type
 22180 ;;  counter         1   68[COMRAM] unsigned char 
 22181 ;; Return value:  Size  Location     Type
 22182 ;;                  2   64[COMRAM] unsigned int 
 22183 ;; Registers used:
 22184 ;;		wreg, status,2, status,0
 22185 ;; Tracked objects:
 22186 ;;		On entry : 0/0
 22187 ;;		On exit  : 0/0
 22188 ;;		Unchanged: 0/0
 22189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22193 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22194 ;;Total ram usage:        5 bytes
 22195 ;; Hardware stack levels used:    1
 22196 ;; This function calls:
 22197 ;;		Nothing
 22198 ;; This function is called by:
 22199 ;;		_Random
 22200 ;; This function uses a non-reentrant model
 22201 ;;
 22202                           
 22203                           	psect	text141
 22204  00937A                     __ptext141:
 22205                           	opt callstack 0
 22206  00937A                     ___lwmod:
 22207                           	opt callstack 24
 22208                           
 22209                           ; BSR set to: 1
 22210                           ;incstack = 0
 22211  00937A  5043               	movf	___lwmod@divisor,w,c
 22212  00937C  1044               	iorwf	___lwmod@divisor+1,w,c
 22213  00937E  B4D8               	btfsc	status,2,c
 22214  009380  D018               	goto	l3010
 22215  009382  0E01               	movlw	1
 22216  009384  6E45               	movwf	___lwmod@counter,c
 22217  009386  D004               	goto	l12892
 22218  009388                     l12890:
 22219  009388  90D8               	bcf	status,0,c
 22220  00938A  3643               	rlcf	___lwmod@divisor,f,c
 22221  00938C  3644               	rlcf	___lwmod@divisor+1,f,c
 22222  00938E  2A45               	incf	___lwmod@counter,f,c
 22223  009390                     l12892:
 22224  009390  AE44               	btfss	___lwmod@divisor+1,7,c
 22225  009392  D7FA               	goto	l12890
 22226  009394                     u13800:
 22227  009394  5043               	movf	___lwmod@divisor,w,c
 22228  009396  5C41               	subwf	___lwmod@dividend,w,c
 22229  009398  5044               	movf	___lwmod@divisor+1,w,c
 22230  00939A  5842               	subwfb	___lwmod@dividend+1,w,c
 22231  00939C  A0D8               	btfss	status,0,c
 22232  00939E  D004               	goto	l12898
 22233  0093A0  5043               	movf	___lwmod@divisor,w,c
 22234  0093A2  5E41               	subwf	___lwmod@dividend,f,c
 22235  0093A4  5044               	movf	___lwmod@divisor+1,w,c
 22236  0093A6  5A42               	subwfb	___lwmod@dividend+1,f,c
 22237  0093A8                     l12898:
 22238  0093A8  90D8               	bcf	status,0,c
 22239  0093AA  3244               	rrcf	___lwmod@divisor+1,f,c
 22240  0093AC  3243               	rrcf	___lwmod@divisor,f,c
 22241  0093AE  2E45               	decfsz	___lwmod@counter,f,c
 22242  0093B0  D7F1               	goto	u13800
 22243  0093B2                     l3010:
 22244  0093B2  C041  F041         	movff	___lwmod@dividend,?___lwmod
 22245  0093B6  C042  F042         	movff	___lwmod@dividend+1,?___lwmod+1
 22246  0093BA  0012               	return		;funcret
 22247  0093BC                     __end_of___lwmod:
 22248                           	opt callstack 0
 22249                           
 22250 ;; *************** function _ComputeMic *****************
 22251 ;; Defined at:
 22252 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22253 ;; Parameters:    Size  Location     Type
 22254 ;;  key             2   90[COMRAM] PTR unsigned char 
 22255 ;;		 -> loRa.activationParameters(105), loRa(245), 
 22256 ;;  buffer          2   92[COMRAM] PTR unsigned char 
 22257 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 22258 ;;  bufferLength    1   94[COMRAM] unsigned char 
 22259 ;; Auto vars:     Size  Location     Type
 22260 ;;  mic             4  116[BANK0 ] unsigned long 
 22261 ;; Return value:  Size  Location     Type
 22262 ;;                  4   90[COMRAM] unsigned long 
 22263 ;; Registers used:
 22264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22265 ;; Tracked objects:
 22266 ;;		On entry : 0/0
 22267 ;;		On exit  : 0/0
 22268 ;;		Unchanged: 0/0
 22269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22270 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22271 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22273 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22274 ;;Total ram usage:        9 bytes
 22275 ;; Hardware stack levels used:    1
 22276 ;; Hardware stack levels required when called:    5
 22277 ;; This function calls:
 22278 ;;		_AESCmac
 22279 ;;		_memcpy
 22280 ;; This function is called by:
 22281 ;;		_LORAWAN_RxDone
 22282 ;;		_PrepareJoinRequestFrame
 22283 ;; This function uses a non-reentrant model
 22284 ;;
 22285                           
 22286                           	psect	text142
 22287  009968                     __ptext142:
 22288                           	opt callstack 0
 22289  009968                     _ComputeMic:
 22290                           	opt callstack 21
 22291                           
 22292                           ;lorawan.c: 2196: uint32_t mic = 0;
 22293                           
 22294                           ;incstack = 0
 22295  009968  0E00               	movlw	0
 22296  00996A  0100               	movlb	0	; () banked
 22297  00996C  6FD4               	movwf	ComputeMic@mic& (0+255),b
 22298  00996E  0E00               	movlw	0
 22299  009970  6FD5               	movwf	(ComputeMic@mic+1)& (0+255),b
 22300  009972  0E00               	movlw	0
 22301  009974  6FD6               	movwf	(ComputeMic@mic+2)& (0+255),b
 22302  009976  0E00               	movlw	0
 22303  009978  6FD7               	movwf	(ComputeMic@mic+3)& (0+255),b
 22304                           
 22305                           ; BSR set to: 0
 22306                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 22307  00997A  C05B  F060         	movff	ComputeMic@key,AESCmac@key
 22308  00997E  C05C  F061         	movff	ComputeMic@key+1,AESCmac@key+1
 22309  009982  0E4E               	movlw	low _aesBuffer
 22310  009984  6F62               	movwf	AESCmac@output& (0+255),b
 22311  009986  0E01               	movlw	high _aesBuffer
 22312  009988  6F63               	movwf	(AESCmac@output+1)& (0+255),b
 22313  00998A  C05D  F064         	movff	ComputeMic@buffer,AESCmac@input
 22314  00998E  C05E  F065         	movff	ComputeMic@buffer+1,AESCmac@input+1
 22315  009992  C05F  F066         	movff	ComputeMic@bufferLength,AESCmac@size
 22316  009996  ECCB  F06D         	call	_AESCmac	;wreg free
 22317                           
 22318                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 22319  00999A  0ED4               	movlw	low ComputeMic@mic
 22320  00999C  6E01               	movwf	memcpy@d1,c
 22321  00999E  0E00               	movlw	high ComputeMic@mic
 22322  0099A0  6E02               	movwf	memcpy@d1+1,c
 22323  0099A2  0E4E               	movlw	low _aesBuffer
 22324  0099A4  6E03               	movwf	memcpy@s1,c
 22325  0099A6  0E01               	movlw	high _aesBuffer
 22326  0099A8  6E04               	movwf	memcpy@s1+1,c
 22327  0099AA  0E00               	movlw	0
 22328  0099AC  6E06               	movwf	memcpy@n+1,c
 22329  0099AE  0E04               	movlw	4
 22330  0099B0  6E05               	movwf	memcpy@n,c
 22331  0099B2  EC56  F04C         	call	_memcpy	;wreg free
 22332                           
 22333                           ;lorawan.c: 2202: return mic;
 22334  0099B6  C0D4  F05B         	movff	ComputeMic@mic,?_ComputeMic
 22335  0099BA  C0D5  F05C         	movff	ComputeMic@mic+1,?_ComputeMic+1
 22336  0099BE  C0D6  F05D         	movff	ComputeMic@mic+2,?_ComputeMic+2
 22337  0099C2  C0D7  F05E         	movff	ComputeMic@mic+3,?_ComputeMic+3
 22338  0099C6  0012               	return		;funcret
 22339  0099C8                     __end_of_ComputeMic:
 22340                           	opt callstack 0
 22341                           
 22342 ;; *************** function _AESCmac *****************
 22343 ;; Defined at:
 22344 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 22345 ;; Parameters:    Size  Location     Type
 22346 ;;  key             2    0[BANK0 ] PTR unsigned char 
 22347 ;;		 -> loRa.activationParameters(105), loRa(245), 
 22348 ;;  output          2    2[BANK0 ] PTR unsigned char 
 22349 ;;		 -> aesBuffer(16), 
 22350 ;;  input           2    4[BANK0 ] PTR unsigned char 
 22351 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 22352 ;;  size            1    6[BANK0 ] unsigned char 
 22353 ;; Auto vars:     Size  Location     Type
 22354 ;;  x              16   94[BANK0 ] unsigned char [16]
 22355 ;;  y              16   78[BANK0 ] unsigned char [16]
 22356 ;;  padded         16   62[BANK0 ] unsigned char [16]
 22357 ;;  mLast          16   46[BANK0 ] unsigned char [16]
 22358 ;;  k1             16   30[BANK0 ] unsigned char [16]
 22359 ;;  k2             16   14[BANK0 ] unsigned char [16]
 22360 ;;  ptr             2  110[BANK0 ] PTR unsigned char 
 22361 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 22362 ;;  i               1  115[BANK0 ] unsigned char 
 22363 ;;  j               1  114[BANK0 ] unsigned char 
 22364 ;;  n               1  113[BANK0 ] unsigned char 
 22365 ;;  flag            1  112[BANK0 ] unsigned char 
 22366 ;; Return value:  Size  Location     Type
 22367 ;;                  1    wreg      void 
 22368 ;; Registers used:
 22369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22370 ;; Tracked objects:
 22371 ;;		On entry : 0/0
 22372 ;;		On exit  : 0/0
 22373 ;;		Unchanged: 0/0
 22374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22375 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22376 ;;      Locals:         0     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22377 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22378 ;;      Totals:         0     116       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22379 ;;Total ram usage:      116 bytes
 22380 ;; Hardware stack levels used:    1
 22381 ;; Hardware stack levels required when called:    4
 22382 ;; This function calls:
 22383 ;;		_AESEncodeLoRa
 22384 ;;		_GenerateSubkey
 22385 ;;		_memcpy
 22386 ;;		_memset
 22387 ;; This function is called by:
 22388 ;;		_LORAWAN_RxDone
 22389 ;;		_AssemblePacket
 22390 ;;		_ComputeMic
 22391 ;; This function uses a non-reentrant model
 22392 ;;
 22393                           
 22394                           	psect	text143
 22395  00DB96                     __ptext143:
 22396                           	opt callstack 0
 22397  00DB96                     _AESCmac:
 22398                           	opt callstack 21
 22399                           
 22400                           ;incstack = 0
 22401  00DB96  0E00               	movlw	0
 22402  00DB98  0100               	movlb	0	; () banked
 22403  00DB9A  6FD3               	movwf	AESCmac@i& (0+255),b
 22404  00DB9C  0E00               	movlw	0
 22405  00DB9E  6FD2               	movwf	AESCmac@j& (0+255),b
 22406                           
 22407                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 22408  00DBA0  0E00               	movlw	0
 22409  00DBA2  6FD0               	movwf	AESCmac@flag& (0+255),b
 22410                           
 22411                           ; BSR set to: 0
 22412                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 22413                           
 22414                           ; BSR set to: 0
 22415  00DBA4  C060  F033         	movff	AESCmac@key,GenerateSubkey@key
 22416  00DBA8  C061  F034         	movff	AESCmac@key+1,GenerateSubkey@key+1
 22417  00DBAC  0E7E               	movlw	low AESCmac@k1
 22418  00DBAE  6E35               	movwf	GenerateSubkey@k1,c
 22419  00DBB0  0E00               	movlw	high AESCmac@k1
 22420  00DBB2  6E36               	movwf	GenerateSubkey@k1+1,c
 22421  00DBB4  0E6E               	movlw	low AESCmac@k2
 22422  00DBB6  6E37               	movwf	GenerateSubkey@k2,c
 22423  00DBB8  0E00               	movlw	high AESCmac@k2
 22424  00DBBA  6E38               	movwf	GenerateSubkey@k2+1,c
 22425  00DBBC  ECEB  F05D         	call	_GenerateSubkey	;wreg free
 22426                           
 22427                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 22428  00DBC0  0100               	movlb	0	; () banked
 22429  00DBC2  5166               	movf	AESCmac@size& (0+255),w,b
 22430  00DBC4  6F67               	movwf	??_AESCmac& (0+255),b
 22431  00DBC6  6B68               	clrf	(??_AESCmac+1)& (0+255),b
 22432  00DBC8  0E0F               	movlw	15
 22433  00DBCA  2767               	addwf	??_AESCmac& (0+255),f,b
 22434  00DBCC  0E00               	movlw	0
 22435  00DBCE  2368               	addwfc	(??_AESCmac+1)& (0+255),f,b
 22436  00DBD0  0E04               	movlw	4
 22437  00DBD2  6F69               	movwf	(??_AESCmac+2)& (0+255),b
 22438  00DBD4                     u14155:
 22439  00DBD4  3568               	rlcf	(??_AESCmac+1)& (0+255),w,b
 22440  00DBD6  3368               	rrcf	(??_AESCmac+1)& (0+255),f,b
 22441  00DBD8  3367               	rrcf	??_AESCmac& (0+255),f,b
 22442  00DBDA  2F69               	decfsz	(??_AESCmac+2)& (0+255),f,b
 22443  00DBDC  D7FB               	goto	u14155
 22444  00DBDE  5167               	movf	??_AESCmac& (0+255),w,b
 22445  00DBE0  6FD1               	movwf	AESCmac@n& (0+255),b
 22446                           
 22447                           ; BSR set to: 0
 22448                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 22449  00DBE2  51D1               	movf	AESCmac@n& (0+255),w,b
 22450  00DBE4  A4D8               	btfss	status,2,c
 22451  00DBE6  D003               	goto	l13192
 22452                           
 22453                           ; BSR set to: 0
 22454                           ;lorawan_aes_cmac.c: 53: {;lorawan_aes_cmac.c: 54: n = 1;
 22455  00DBE8  0E01               	movlw	1
 22456  00DBEA  6FD1               	movwf	AESCmac@n& (0+255),b
 22457  00DBEC  D008               	goto	u14170
 22458  00DBEE                     l13192:
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;lorawan_aes_cmac.c: 57: else;lorawan_aes_cmac.c: 58: {;lorawan_aes_cmac.c: 59: flag = !
      +                          (size % 16);
 22462  00DBEE  C066  F067         	movff	AESCmac@size,??_AESCmac
 22463  00DBF2  0E0F               	movlw	15
 22464  00DBF4  1767               	andwf	??_AESCmac& (0+255),f,b
 22465  00DBF6  A4D8               	btfss	status,2,c
 22466  00DBF8  D002               	goto	u14170
 22467  00DBFA  0E01               	movlw	1
 22468  00DBFC  D001               	goto	u14180
 22469  00DBFE                     u14170:
 22470  00DBFE  0E00               	movlw	0
 22471  00DC00                     u14180:
 22472  00DC00  6FD0               	movwf	AESCmac@flag& (0+255),b
 22473                           
 22474                           ; BSR set to: 0
 22475                           ;lorawan_aes_cmac.c: 60: };lorawan_aes_cmac.c: 62: if ( flag == 1 )
 22476  00DC02  05D0               	decf	AESCmac@flag& (0+255),w,b
 22477  00DC04  A4D8               	btfss	status,2,c
 22478  00DC06  D03B               	goto	l13206
 22479                           
 22480                           ; BSR set to: 0
 22481                           ;lorawan_aes_cmac.c: 63: {;lorawan_aes_cmac.c: 64: j = 0;
 22482  00DC08  0E00               	movlw	0
 22483  00DC0A  6FD2               	movwf	AESCmac@j& (0+255),b
 22484                           
 22485                           ; BSR set to: 0
 22486                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 22487  00DC0C  51D1               	movf	AESCmac@n& (0+255),w,b
 22488  00DC0E  0D10               	mullw	16
 22489  00DC10  50F3               	movf	prodl,w,c
 22490  00DC12  0FF0               	addlw	240
 22491  00DC14  6FD3               	movwf	AESCmac@i& (0+255),b
 22492  00DC16  D019               	goto	l13204
 22493  00DC18                     l13198:
 22494                           
 22495                           ; BSR set to: 0
 22496                           ;lorawan_aes_cmac.c: 66: {;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 22497  00DC18  0E8E               	movlw	low AESCmac@mLast
 22498  00DC1A  25D2               	addwf	AESCmac@j& (0+255),w,b
 22499  00DC1C  6ED9               	movwf	fsr2l,c
 22500  00DC1E  6ADA               	clrf	fsr2h,c
 22501  00DC20  0E00               	movlw	high AESCmac@mLast
 22502  00DC22  22DA               	addwfc	fsr2h,f,c
 22503  00DC24  0E7E               	movlw	low AESCmac@k1
 22504  00DC26  25D2               	addwf	AESCmac@j& (0+255),w,b
 22505  00DC28  6EE1               	movwf	fsr1l,c
 22506  00DC2A  6AE2               	clrf	fsr1h,c
 22507  00DC2C  0E00               	movlw	high AESCmac@k1
 22508  00DC2E  22E2               	addwfc	fsr1h,f,c
 22509  00DC30  50E7               	movf	indf1,w,c
 22510  00DC32  6F67               	movwf	??_AESCmac& (0+255),b
 22511  00DC34  51D3               	movf	AESCmac@i& (0+255),w,b
 22512  00DC36  2564               	addwf	AESCmac@input& (0+255),w,b
 22513  00DC38  6EE1               	movwf	fsr1l,c
 22514  00DC3A  0E00               	movlw	0
 22515  00DC3C  2165               	addwfc	(AESCmac@input+1)& (0+255),w,b
 22516  00DC3E  6EE2               	movwf	fsr1h,c
 22517  00DC40  50E7               	movf	indf1,w,c
 22518  00DC42  1967               	xorwf	??_AESCmac& (0+255),w,b
 22519  00DC44  6EDF               	movwf	indf2,c
 22520                           
 22521                           ; BSR set to: 0
 22522                           ;lorawan_aes_cmac.c: 68: j++;
 22523  00DC46  2BD2               	incf	AESCmac@j& (0+255),f,b
 22524                           
 22525                           ; BSR set to: 0
 22526  00DC48  2BD3               	incf	AESCmac@i& (0+255),f,b
 22527  00DC4A                     l13204:
 22528                           
 22529                           ; BSR set to: 0
 22530  00DC4A  51D1               	movf	AESCmac@n& (0+255),w,b
 22531  00DC4C  6F67               	movwf	??_AESCmac& (0+255),b
 22532  00DC4E  6B68               	clrf	(??_AESCmac+1)& (0+255),b
 22533  00DC50  3B67               	swapf	??_AESCmac& (0+255),f,b
 22534  00DC52  3B68               	swapf	(??_AESCmac+1)& (0+255),f,b
 22535  00DC54  0EF0               	movlw	240
 22536  00DC56  1768               	andwf	(??_AESCmac+1)& (0+255),f,b
 22537  00DC58  5167               	movf	??_AESCmac& (0+255),w,b
 22538  00DC5A  0B0F               	andlw	15
 22539  00DC5C  1368               	iorwf	(??_AESCmac+1)& (0+255),f,b
 22540  00DC5E  0EF0               	movlw	240
 22541  00DC60  1767               	andwf	??_AESCmac& (0+255),f,b
 22542  00DC62  51D3               	movf	AESCmac@i& (0+255),w,b
 22543  00DC64  6F69               	movwf	(??_AESCmac+2)& (0+255),b
 22544  00DC66  6B6A               	clrf	(??_AESCmac+3)& (0+255),b
 22545  00DC68  5167               	movf	??_AESCmac& (0+255),w,b
 22546  00DC6A  5D69               	subwf	(??_AESCmac+2)& (0+255),w,b
 22547  00DC6C  516A               	movf	(??_AESCmac+3)& (0+255),w,b
 22548  00DC6E  0A80               	xorlw	128
 22549  00DC70  6F6B               	movwf	(??_AESCmac+4)& (0+255),b
 22550  00DC72  5168               	movf	(??_AESCmac+1)& (0+255),w,b
 22551  00DC74  0A80               	xorlw	128
 22552  00DC76  596B               	subwfb	(??_AESCmac+4)& (0+255),w,b
 22553  00DC78  B0D8               	btfsc	status,0,c
 22554  00DC7A  D05D               	goto	u14240
 22555  00DC7C  D7CD               	goto	l13198
 22556  00DC7E                     l13206:
 22557                           
 22558                           ; BSR set to: 0
 22559                           ;lorawan_aes_cmac.c: 71: else;lorawan_aes_cmac.c: 72: {;lorawan_aes_cmac.c: 74: ptr = &i
      +                          nput[size - (size%16)];
 22560  00DC7E  5166               	movf	AESCmac@size& (0+255),w,b
 22561  00DC80  2564               	addwf	AESCmac@input& (0+255),w,b
 22562  00DC82  6F67               	movwf	??_AESCmac& (0+255),b
 22563  00DC84  0E00               	movlw	0
 22564  00DC86  2165               	addwfc	(AESCmac@input+1)& (0+255),w,b
 22565  00DC88  6F68               	movwf	(??_AESCmac+1)& (0+255),b
 22566  00DC8A  C066  F069         	movff	AESCmac@size,??_AESCmac+2
 22567  00DC8E  0E0F               	movlw	15
 22568  00DC90  1769               	andwf	(??_AESCmac+2)& (0+255),f,b
 22569  00DC92  5169               	movf	(??_AESCmac+2)& (0+255),w,b
 22570  00DC94  5D67               	subwf	??_AESCmac& (0+255),w,b
 22571  00DC96  6FCE               	movwf	AESCmac@ptr& (0+255),b
 22572  00DC98  5168               	movf	(??_AESCmac+1)& (0+255),w,b
 22573  00DC9A  A0D8               	btfss	status,0,c
 22574  00DC9C  0568               	decf	(??_AESCmac+1)& (0+255),w,b
 22575  00DC9E  6FCF               	movwf	(AESCmac@ptr+1)& (0+255),b
 22576                           
 22577                           ; BSR set to: 0
 22578                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 22579  00DCA0  0E00               	movlw	0
 22580  00DCA2  6FD3               	movwf	AESCmac@i& (0+255),b
 22581  00DCA4                     l13214:
 22582                           
 22583                           ; BSR set to: 0
 22584                           ;lorawan_aes_cmac.c: 76: {;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 22585  00DCA4  5166               	movf	AESCmac@size& (0+255),w,b
 22586  00DCA6  0B0F               	andlw	15
 22587  00DCA8  61D3               	cpfslt	AESCmac@i& (0+255),b
 22588  00DCAA  D00F               	goto	l13218
 22589                           
 22590                           ; BSR set to: 0
 22591                           ;lorawan_aes_cmac.c: 78: {;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 22592  00DCAC  51D3               	movf	AESCmac@i& (0+255),w,b
 22593  00DCAE  25CE               	addwf	AESCmac@ptr& (0+255),w,b
 22594  00DCB0  6ED9               	movwf	fsr2l,c
 22595  00DCB2  0E00               	movlw	0
 22596  00DCB4  21CF               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 22597  00DCB6  6EDA               	movwf	fsr2h,c
 22598  00DCB8  0E9E               	movlw	low AESCmac@padded
 22599  00DCBA  25D3               	addwf	AESCmac@i& (0+255),w,b
 22600  00DCBC  6EE1               	movwf	fsr1l,c
 22601  00DCBE  6AE2               	clrf	fsr1h,c
 22602  00DCC0  0E00               	movlw	high AESCmac@padded
 22603  00DCC2  22E2               	addwfc	fsr1h,f,c
 22604  00DCC4  CFDF FFE7          	movff	indf2,indf1
 22605                           
 22606                           ;lorawan_aes_cmac.c: 80: }
 22607  00DCC8  D015               	goto	l13224
 22608  00DCCA                     l13218:
 22609                           
 22610                           ; BSR set to: 0
 22611                           ;lorawan_aes_cmac.c: 81: else;lorawan_aes_cmac.c: 82: {;lorawan_aes_cmac.c: 83: if ( i =
      +                          = (size%16) )
 22612  00DCCA  5166               	movf	AESCmac@size& (0+255),w,b
 22613  00DCCC  0B0F               	andlw	15
 22614  00DCCE  19D3               	xorwf	AESCmac@i& (0+255),w,b
 22615  00DCD0  A4D8               	btfss	status,2,c
 22616  00DCD2  D008               	goto	l13222
 22617                           
 22618                           ; BSR set to: 0
 22619                           ;lorawan_aes_cmac.c: 84: {;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 22620  00DCD4  0E9E               	movlw	low AESCmac@padded
 22621  00DCD6  25D3               	addwf	AESCmac@i& (0+255),w,b
 22622  00DCD8  6ED9               	movwf	fsr2l,c
 22623  00DCDA  6ADA               	clrf	fsr2h,c
 22624  00DCDC  0E00               	movlw	high AESCmac@padded
 22625  00DCDE  22DA               	addwfc	fsr2h,f,c
 22626  00DCE0  0E80               	movlw	128
 22627  00DCE2  D007               	goto	L25
 22628  00DCE4                     l13222:
 22629                           
 22630                           ; BSR set to: 0
 22631                           ;lorawan_aes_cmac.c: 87: else;lorawan_aes_cmac.c: 88: {;lorawan_aes_cmac.c: 89: padded[i
      +                          ] = 0x00;
 22632  00DCE4  0E9E               	movlw	low AESCmac@padded
 22633  00DCE6  25D3               	addwf	AESCmac@i& (0+255),w,b
 22634  00DCE8  6ED9               	movwf	fsr2l,c
 22635  00DCEA  6ADA               	clrf	fsr2h,c
 22636  00DCEC  0E00               	movlw	high AESCmac@padded
 22637  00DCEE  22DA               	addwfc	fsr2h,f,c
 22638  00DCF0  0E00               	movlw	0
 22639  00DCF2                     L25:
 22640  00DCF2  6EDF               	movwf	indf2,c
 22641  00DCF4                     l13224:
 22642                           
 22643                           ; BSR set to: 0
 22644  00DCF4  2BD3               	incf	AESCmac@i& (0+255),f,b
 22645                           
 22646                           ; BSR set to: 0
 22647  00DCF6  0E0F               	movlw	15
 22648  00DCF8  65D3               	cpfsgt	AESCmac@i& (0+255),b
 22649  00DCFA  D7D4               	goto	l13214
 22650                           
 22651                           ; BSR set to: 0
 22652                           ;lorawan_aes_cmac.c: 90: };lorawan_aes_cmac.c: 91: };lorawan_aes_cmac.c: 92: };lorawan_a
      +                          es_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 22653  00DCFC  0E00               	movlw	0
 22654  00DCFE  6FD3               	movwf	AESCmac@i& (0+255),b
 22655  00DD00                     l13234:
 22656                           
 22657                           ; BSR set to: 0
 22658                           ;lorawan_aes_cmac.c: 96: {;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 22659  00DD00  0E8E               	movlw	low AESCmac@mLast
 22660  00DD02  25D3               	addwf	AESCmac@i& (0+255),w,b
 22661  00DD04  6ED9               	movwf	fsr2l,c
 22662  00DD06  6ADA               	clrf	fsr2h,c
 22663  00DD08  0E00               	movlw	high AESCmac@mLast
 22664  00DD0A  22DA               	addwfc	fsr2h,f,c
 22665  00DD0C  0E6E               	movlw	low AESCmac@k2
 22666  00DD0E  25D3               	addwf	AESCmac@i& (0+255),w,b
 22667  00DD10  6EE1               	movwf	fsr1l,c
 22668  00DD12  6AE2               	clrf	fsr1h,c
 22669  00DD14  0E00               	movlw	high AESCmac@k2
 22670  00DD16  22E2               	addwfc	fsr1h,f,c
 22671  00DD18  50E7               	movf	indf1,w,c
 22672  00DD1A  6F67               	movwf	??_AESCmac& (0+255),b
 22673  00DD1C  0E9E               	movlw	low AESCmac@padded
 22674  00DD1E  25D3               	addwf	AESCmac@i& (0+255),w,b
 22675  00DD20  6EE1               	movwf	fsr1l,c
 22676  00DD22  6AE2               	clrf	fsr1h,c
 22677  00DD24  0E00               	movlw	high AESCmac@padded
 22678  00DD26  22E2               	addwfc	fsr1h,f,c
 22679  00DD28  50E7               	movf	indf1,w,c
 22680  00DD2A  1967               	xorwf	??_AESCmac& (0+255),w,b
 22681  00DD2C  6EDF               	movwf	indf2,c
 22682                           
 22683                           ; BSR set to: 0
 22684  00DD2E  2BD3               	incf	AESCmac@i& (0+255),f,b
 22685                           
 22686                           ; BSR set to: 0
 22687  00DD30  0E0F               	movlw	15
 22688  00DD32  65D3               	cpfsgt	AESCmac@i& (0+255),b
 22689  00DD34  D7E5               	goto	l13234
 22690  00DD36                     u14240:
 22691                           
 22692                           ; BSR set to: 0
 22693                           ;lorawan_aes_cmac.c: 98: };lorawan_aes_cmac.c: 99: };lorawan_aes_cmac.c: 101: memset(x, 
      +                          0, sizeof(x));
 22694  00DD36  0EBE               	movlw	low AESCmac@x
 22695  00DD38  6E01               	movwf	memset@p1,c
 22696  00DD3A  0E00               	movlw	high AESCmac@x
 22697  00DD3C  6E02               	movwf	memset@p1+1,c
 22698  00DD3E  0E00               	movlw	0
 22699  00DD40  6E04               	movwf	memset@c+1,c
 22700  00DD42  0E00               	movlw	0
 22701  00DD44  6E03               	movwf	memset@c,c
 22702  00DD46  0E00               	movlw	0
 22703  00DD48  6E06               	movwf	memset@n+1,c
 22704  00DD4A  0E10               	movlw	16
 22705  00DD4C  6E05               	movwf	memset@n,c
 22706  00DD4E  EC7A  F047         	call	_memset	;wreg free
 22707                           
 22708                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 22709  00DD52  0E00               	movlw	0
 22710  00DD54  0100               	movlb	0	; () banked
 22711  00DD56  6FD3               	movwf	AESCmac@i& (0+255),b
 22712  00DD58  D04B               	goto	l13262
 22713  00DD5A                     l13244:
 22714                           
 22715                           ; BSR set to: 0
 22716                           ;lorawan_aes_cmac.c: 104: {;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 22717  00DD5A  0E00               	movlw	0
 22718  00DD5C  6FD2               	movwf	AESCmac@j& (0+255),b
 22719  00DD5E                     l13250:
 22720                           
 22721                           ; BSR set to: 0
 22722                           ;lorawan_aes_cmac.c: 106: {;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 22723  00DD5E  0EAE               	movlw	low AESCmac@y
 22724  00DD60  25D2               	addwf	AESCmac@j& (0+255),w,b
 22725  00DD62  6ED9               	movwf	fsr2l,c
 22726  00DD64  6ADA               	clrf	fsr2h,c
 22727  00DD66  0E00               	movlw	high AESCmac@y
 22728  00DD68  22DA               	addwfc	fsr2h,f,c
 22729  00DD6A  51D3               	movf	AESCmac@i& (0+255),w,b
 22730  00DD6C  6F67               	movwf	??_AESCmac& (0+255),b
 22731  00DD6E  6B68               	clrf	(??_AESCmac+1)& (0+255),b
 22732  00DD70  3B67               	swapf	??_AESCmac& (0+255),f,b
 22733  00DD72  3B68               	swapf	(??_AESCmac+1)& (0+255),f,b
 22734  00DD74  0EF0               	movlw	240
 22735  00DD76  1768               	andwf	(??_AESCmac+1)& (0+255),f,b
 22736  00DD78  5167               	movf	??_AESCmac& (0+255),w,b
 22737  00DD7A  0B0F               	andlw	15
 22738  00DD7C  1368               	iorwf	(??_AESCmac+1)& (0+255),f,b
 22739  00DD7E  0EF0               	movlw	240
 22740  00DD80  1767               	andwf	??_AESCmac& (0+255),f,b
 22741  00DD82  C064  F069         	movff	AESCmac@input,??_AESCmac+2
 22742  00DD86  C065  F06A         	movff	AESCmac@input+1,??_AESCmac+3
 22743  00DD8A  5167               	movf	??_AESCmac& (0+255),w,b
 22744  00DD8C  2769               	addwf	(??_AESCmac+2)& (0+255),f,b
 22745  00DD8E  5168               	movf	(??_AESCmac+1)& (0+255),w,b
 22746  00DD90  236A               	addwfc	(??_AESCmac+3)& (0+255),f,b
 22747  00DD92  51D2               	movf	AESCmac@j& (0+255),w,b
 22748  00DD94  2569               	addwf	(??_AESCmac+2)& (0+255),w,b
 22749  00DD96  6EE1               	movwf	fsr1l,c
 22750  00DD98  0E00               	movlw	0
 22751  00DD9A  216A               	addwfc	(??_AESCmac+3)& (0+255),w,b
 22752  00DD9C  6EE2               	movwf	fsr1h,c
 22753  00DD9E  50E7               	movf	indf1,w,c
 22754  00DDA0  6F6B               	movwf	(??_AESCmac+4)& (0+255),b
 22755  00DDA2  0EBE               	movlw	low AESCmac@x
 22756  00DDA4  25D2               	addwf	AESCmac@j& (0+255),w,b
 22757  00DDA6  6EE1               	movwf	fsr1l,c
 22758  00DDA8  6AE2               	clrf	fsr1h,c
 22759  00DDAA  0E00               	movlw	high AESCmac@x
 22760  00DDAC  22E2               	addwfc	fsr1h,f,c
 22761  00DDAE  50E7               	movf	indf1,w,c
 22762  00DDB0  196B               	xorwf	(??_AESCmac+4)& (0+255),w,b
 22763  00DDB2  6EDF               	movwf	indf2,c
 22764                           
 22765                           ; BSR set to: 0
 22766  00DDB4  2BD2               	incf	AESCmac@j& (0+255),f,b
 22767                           
 22768                           ; BSR set to: 0
 22769  00DDB6  0E0F               	movlw	15
 22770  00DDB8  65D2               	cpfsgt	AESCmac@j& (0+255),b
 22771  00DDBA  D7D1               	goto	l13250
 22772                           
 22773                           ; BSR set to: 0
 22774                           ;lorawan_aes_cmac.c: 108: };lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 22775  00DDBC  0EBE               	movlw	low AESCmac@x
 22776  00DDBE  6E01               	movwf	memcpy@d1,c
 22777  00DDC0  0E00               	movlw	high AESCmac@x
 22778  00DDC2  6E02               	movwf	memcpy@d1+1,c
 22779  00DDC4  0EAE               	movlw	low AESCmac@y
 22780  00DDC6  6E03               	movwf	memcpy@s1,c
 22781  00DDC8  0E00               	movlw	high AESCmac@y
 22782  00DDCA  6E04               	movwf	memcpy@s1+1,c
 22783  00DDCC  0E00               	movlw	0
 22784  00DDCE  6E06               	movwf	memcpy@n+1,c
 22785  00DDD0  0E10               	movlw	16
 22786  00DDD2  6E05               	movwf	memcpy@n,c
 22787  00DDD4  EC56  F04C         	call	_memcpy	;wreg free
 22788                           
 22789                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 22790  00DDD8  0EBE               	movlw	low AESCmac@x
 22791  00DDDA  6E1F               	movwf	AESEncodeLoRa@block,c
 22792  00DDDC  0E00               	movlw	high AESCmac@x
 22793  00DDDE  6E20               	movwf	AESEncodeLoRa@block+1,c
 22794  00DDE0  C060  F021         	movff	AESCmac@key,AESEncodeLoRa@key
 22795  00DDE4  C061  F022         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 22796  00DDE8  EC5B  F048         	call	_AESEncodeLoRa	;wreg free
 22797  00DDEC  0100               	movlb	0	; () banked
 22798  00DDEE  2BD3               	incf	AESCmac@i& (0+255),f,b
 22799  00DDF0                     l13262:
 22800                           
 22801                           ; BSR set to: 0
 22802  00DDF0  0EFF               	movlw	255
 22803  00DDF2  6F67               	movwf	??_AESCmac& (0+255),b
 22804  00DDF4  0EFF               	movlw	255
 22805  00DDF6  6F68               	movwf	(??_AESCmac+1)& (0+255),b
 22806  00DDF8  51D1               	movf	AESCmac@n& (0+255),w,b
 22807  00DDFA  6F69               	movwf	(??_AESCmac+2)& (0+255),b
 22808  00DDFC  6B6A               	clrf	(??_AESCmac+3)& (0+255),b
 22809  00DDFE  5167               	movf	??_AESCmac& (0+255),w,b
 22810  00DE00  2769               	addwf	(??_AESCmac+2)& (0+255),f,b
 22811  00DE02  5168               	movf	(??_AESCmac+1)& (0+255),w,b
 22812  00DE04  236A               	addwfc	(??_AESCmac+3)& (0+255),f,b
 22813  00DE06  51D3               	movf	AESCmac@i& (0+255),w,b
 22814  00DE08  6F6B               	movwf	(??_AESCmac+4)& (0+255),b
 22815  00DE0A  6B6C               	clrf	(??_AESCmac+5)& (0+255),b
 22816  00DE0C  5169               	movf	(??_AESCmac+2)& (0+255),w,b
 22817  00DE0E  5D6B               	subwf	(??_AESCmac+4)& (0+255),w,b
 22818  00DE10  516C               	movf	(??_AESCmac+5)& (0+255),w,b
 22819  00DE12  0A80               	xorlw	128
 22820  00DE14  6F6D               	movwf	(??_AESCmac+6)& (0+255),b
 22821  00DE16  516A               	movf	(??_AESCmac+3)& (0+255),w,b
 22822  00DE18  0A80               	xorlw	128
 22823  00DE1A  596D               	subwfb	(??_AESCmac+6)& (0+255),w,b
 22824  00DE1C  A0D8               	btfss	status,0,c
 22825  00DE1E  D79D               	goto	l13244
 22826                           
 22827                           ; BSR set to: 0
 22828                           ;lorawan_aes_cmac.c: 111: };lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 22829  00DE20  0E00               	movlw	0
 22830  00DE22  6FD3               	movwf	AESCmac@i& (0+255),b
 22831  00DE24                     l13270:
 22832                           
 22833                           ; BSR set to: 0
 22834                           ;lorawan_aes_cmac.c: 114: {;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 22835  00DE24  0EAE               	movlw	low AESCmac@y
 22836  00DE26  25D3               	addwf	AESCmac@i& (0+255),w,b
 22837  00DE28  6ED9               	movwf	fsr2l,c
 22838  00DE2A  6ADA               	clrf	fsr2h,c
 22839  00DE2C  0E00               	movlw	high AESCmac@y
 22840  00DE2E  22DA               	addwfc	fsr2h,f,c
 22841  00DE30  0E8E               	movlw	low AESCmac@mLast
 22842  00DE32  25D3               	addwf	AESCmac@i& (0+255),w,b
 22843  00DE34  6EE1               	movwf	fsr1l,c
 22844  00DE36  6AE2               	clrf	fsr1h,c
 22845  00DE38  0E00               	movlw	high AESCmac@mLast
 22846  00DE3A  22E2               	addwfc	fsr1h,f,c
 22847  00DE3C  50E7               	movf	indf1,w,c
 22848  00DE3E  6F67               	movwf	??_AESCmac& (0+255),b
 22849  00DE40  0EBE               	movlw	low AESCmac@x
 22850  00DE42  25D3               	addwf	AESCmac@i& (0+255),w,b
 22851  00DE44  6EE1               	movwf	fsr1l,c
 22852  00DE46  6AE2               	clrf	fsr1h,c
 22853  00DE48  0E00               	movlw	high AESCmac@x
 22854  00DE4A  22E2               	addwfc	fsr1h,f,c
 22855  00DE4C  50E7               	movf	indf1,w,c
 22856  00DE4E  1967               	xorwf	??_AESCmac& (0+255),w,b
 22857  00DE50  6EDF               	movwf	indf2,c
 22858                           
 22859                           ; BSR set to: 0
 22860  00DE52  2BD3               	incf	AESCmac@i& (0+255),f,b
 22861                           
 22862                           ; BSR set to: 0
 22863  00DE54  0E0F               	movlw	15
 22864  00DE56  65D3               	cpfsgt	AESCmac@i& (0+255),b
 22865  00DE58  D7E5               	goto	l13270
 22866                           
 22867                           ; BSR set to: 0
 22868                           ;lorawan_aes_cmac.c: 116: };lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 22869  00DE5A  0EAE               	movlw	low AESCmac@y
 22870  00DE5C  6E1F               	movwf	AESEncodeLoRa@block,c
 22871  00DE5E  0E00               	movlw	high AESCmac@y
 22872  00DE60  6E20               	movwf	AESEncodeLoRa@block+1,c
 22873  00DE62  C060  F021         	movff	AESCmac@key,AESEncodeLoRa@key
 22874  00DE66  C061  F022         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 22875  00DE6A  EC5B  F048         	call	_AESEncodeLoRa	;wreg free
 22876                           
 22877                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 22878  00DE6E  C062  F001         	movff	AESCmac@output,memcpy@d1
 22879  00DE72  C063  F002         	movff	AESCmac@output+1,memcpy@d1+1
 22880  00DE76  0EAE               	movlw	low AESCmac@y
 22881  00DE78  6E03               	movwf	memcpy@s1,c
 22882  00DE7A  0E00               	movlw	high AESCmac@y
 22883  00DE7C  6E04               	movwf	memcpy@s1+1,c
 22884  00DE7E  0E00               	movlw	0
 22885  00DE80  6E06               	movwf	memcpy@n+1,c
 22886  00DE82  0E10               	movlw	16
 22887  00DE84  6E05               	movwf	memcpy@n,c
 22888  00DE86  EC56  F04C         	call	_memcpy	;wreg free
 22889  00DE8A  0012               	return		;funcret
 22890  00DE8C                     __end_of_AESCmac:
 22891                           	opt callstack 0
 22892                           
 22893 ;; *************** function _GenerateSubkey *****************
 22894 ;; Defined at:
 22895 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 22896 ;; Parameters:    Size  Location     Type
 22897 ;;  key             2   50[COMRAM] PTR unsigned char 
 22898 ;;		 -> loRa.activationParameters(105), loRa(245), 
 22899 ;;  k1              2   52[COMRAM] PTR unsigned char 
 22900 ;;		 -> AESCmac@k1(16), 
 22901 ;;  k2              2   54[COMRAM] PTR unsigned char 
 22902 ;;		 -> AESCmac@k2(16), 
 22903 ;; Auto vars:     Size  Location     Type
 22904 ;;  l              16   73[COMRAM] unsigned char [16]
 22905 ;;  const_Rb       16   57[COMRAM] unsigned char [16]
 22906 ;;  i               1   89[COMRAM] unsigned char 
 22907 ;; Return value:  Size  Location     Type
 22908 ;;                  1    wreg      void 
 22909 ;; Registers used:
 22910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22911 ;; Tracked objects:
 22912 ;;		On entry : 0/0
 22913 ;;		On exit  : 0/0
 22914 ;;		Unchanged: 0/0
 22915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22916 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22917 ;;      Locals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22918 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22919 ;;      Totals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22920 ;;Total ram usage:       40 bytes
 22921 ;; Hardware stack levels used:    1
 22922 ;; Hardware stack levels required when called:    3
 22923 ;; This function calls:
 22924 ;;		_AESEncodeLoRa
 22925 ;;		_FillSubKey
 22926 ;;		_memset
 22927 ;; This function is called by:
 22928 ;;		_AESCmac
 22929 ;; This function uses a non-reentrant model
 22930 ;;
 22931                           
 22932                           	psect	text144
 22933  00BBD6                     __ptext144:
 22934                           	opt callstack 0
 22935  00BBD6                     _GenerateSubkey:
 22936                           	opt callstack 21
 22937                           
 22938                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] =
      +                           {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0
      +                          x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 22939                           
 22940                           ;incstack = 0
 22941  00BBD6  EE21  F071         	lfsr	2,GenerateSubkey@F5972
 22942  00BBDA  EE10  F03A         	lfsr	1,GenerateSubkey@const_Rb
 22943  00BBDE  0E0F               	movlw	15
 22944  00BBE0                     u13821:
 22945  00BBE0  CFDB FFE3          	movff	plusw2,plusw1
 22946  00BBE4  06E8               	decf	wreg,f,c
 22947  00BBE6  E2FC               	bc	u13821
 22948                           
 22949                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 22950  00BBE8  0E4A               	movlw	low GenerateSubkey@l
 22951  00BBEA  6E01               	movwf	memset@p1,c
 22952  00BBEC  0E00               	movlw	high GenerateSubkey@l
 22953  00BBEE  6E02               	movwf	memset@p1+1,c
 22954  00BBF0  0E00               	movlw	0
 22955  00BBF2  6E04               	movwf	memset@c+1,c
 22956  00BBF4  0E00               	movlw	0
 22957  00BBF6  6E03               	movwf	memset@c,c
 22958  00BBF8  0E00               	movlw	0
 22959  00BBFA  6E06               	movwf	memset@n+1,c
 22960  00BBFC  0E10               	movlw	16
 22961  00BBFE  6E05               	movwf	memset@n,c
 22962  00BC00  EC7A  F047         	call	_memset	;wreg free
 22963                           
 22964                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 22965  00BC04  0E4A               	movlw	low GenerateSubkey@l
 22966  00BC06  6E1F               	movwf	AESEncodeLoRa@block,c
 22967  00BC08  0E00               	movlw	high GenerateSubkey@l
 22968  00BC0A  6E20               	movwf	AESEncodeLoRa@block+1,c
 22969  00BC0C  C033  F021         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 22970  00BC10  C034  F022         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 22971  00BC14  EC5B  F048         	call	_AESEncodeLoRa	;wreg free
 22972                           
 22973                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 22974  00BC18  BE4A               	btfsc	GenerateSubkey@l,7,c
 22975  00BC1A  D00D               	goto	l12914
 22976                           
 22977                           ;lorawan_aes_cmac.c: 138: {;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 22978  00BC1C  0E4A               	movlw	low GenerateSubkey@l
 22979  00BC1E  6E01               	movwf	FillSubKey@source,c
 22980  00BC20  0E00               	movlw	high GenerateSubkey@l
 22981  00BC22  6E02               	movwf	FillSubKey@source+1,c
 22982  00BC24  C035  F003         	movff	GenerateSubkey@k1,FillSubKey@key
 22983  00BC28  C036  F004         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 22984  00BC2C  0E10               	movlw	16
 22985  00BC2E  6E05               	movwf	FillSubKey@size,c
 22986  00BC30  ECE0  F04A         	call	_FillSubKey	;wreg free
 22987                           
 22988                           ;lorawan_aes_cmac.c: 140: }
 22989  00BC34  D022               	goto	u13840
 22990  00BC36                     l12914:
 22991                           
 22992                           ;lorawan_aes_cmac.c: 141: else;lorawan_aes_cmac.c: 142: {;lorawan_aes_cmac.c: 143: FillS
      +                          ubKey( l, k1, (sizeof(l) ) );
 22993  00BC36  0E4A               	movlw	low GenerateSubkey@l
 22994  00BC38  6E01               	movwf	FillSubKey@source,c
 22995  00BC3A  0E00               	movlw	high GenerateSubkey@l
 22996  00BC3C  6E02               	movwf	FillSubKey@source+1,c
 22997  00BC3E  C035  F003         	movff	GenerateSubkey@k1,FillSubKey@key
 22998  00BC42  C036  F004         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 22999  00BC46  0E10               	movlw	16
 23000  00BC48  6E05               	movwf	FillSubKey@size,c
 23001  00BC4A  ECE0  F04A         	call	_FillSubKey	;wreg free
 23002                           
 23003                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 23004  00BC4E  0E00               	movlw	0
 23005  00BC50  6E5A               	movwf	GenerateSubkey@i,c
 23006  00BC52                     l12922:
 23007                           
 23008                           ;lorawan_aes_cmac.c: 146: {;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 23009  00BC52  0E3A               	movlw	low GenerateSubkey@const_Rb
 23010  00BC54  245A               	addwf	GenerateSubkey@i,w,c
 23011  00BC56  6ED9               	movwf	fsr2l,c
 23012  00BC58  6ADA               	clrf	fsr2h,c
 23013  00BC5A  0E00               	movlw	high GenerateSubkey@const_Rb
 23014  00BC5C  22DA               	addwfc	fsr2h,f,c
 23015  00BC5E  50DF               	movf	indf2,w,c
 23016  00BC60  6E39               	movwf	??_GenerateSubkey& (0+255),c
 23017  00BC62  505A               	movf	GenerateSubkey@i,w,c
 23018  00BC64  2435               	addwf	GenerateSubkey@k1,w,c
 23019  00BC66  6ED9               	movwf	fsr2l,c
 23020  00BC68  0E00               	movlw	0
 23021  00BC6A  2036               	addwfc	GenerateSubkey@k1+1,w,c
 23022  00BC6C  6EDA               	movwf	fsr2h,c
 23023  00BC6E  5039               	movf	??_GenerateSubkey,w,c
 23024  00BC70  1ADF               	xorwf	indf2,f,c
 23025  00BC72  2A5A               	incf	GenerateSubkey@i,f,c
 23026  00BC74  0E0F               	movlw	15
 23027  00BC76  645A               	cpfsgt	GenerateSubkey@i,c
 23028  00BC78  D7EC               	goto	l12922
 23029  00BC7A                     u13840:
 23030                           
 23031                           ;lorawan_aes_cmac.c: 148: };lorawan_aes_cmac.c: 149: };lorawan_aes_cmac.c: 152: if ( (k1
      +                          [0] & 0x80) == 0x00 )
 23032  00BC7A  C035  FFD9         	movff	GenerateSubkey@k1,fsr2l
 23033  00BC7E  C036  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 23034  00BC82  BEDF               	btfsc	indf2,7,c
 23035  00BC84  D00D               	goto	l12932
 23036                           
 23037                           ;lorawan_aes_cmac.c: 153: {;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 23038  00BC86  C035  F001         	movff	GenerateSubkey@k1,FillSubKey@source
 23039  00BC8A  C036  F002         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 23040  00BC8E  C037  F003         	movff	GenerateSubkey@k2,FillSubKey@key
 23041  00BC92  C038  F004         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 23042  00BC96  0E10               	movlw	16
 23043  00BC98  6E05               	movwf	FillSubKey@size,c
 23044  00BC9A  ECE0  F04A         	call	_FillSubKey	;wreg free
 23045                           
 23046                           ;lorawan_aes_cmac.c: 155: }
 23047  00BC9E  0012               	return	
 23048  00BCA0                     l12932:
 23049                           
 23050                           ;lorawan_aes_cmac.c: 156: else;lorawan_aes_cmac.c: 157: {;lorawan_aes_cmac.c: 158: FillS
      +                          ubKey( k1, k2, (sizeof(l) ) );
 23051  00BCA0  C035  F001         	movff	GenerateSubkey@k1,FillSubKey@source
 23052  00BCA4  C036  F002         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 23053  00BCA8  C037  F003         	movff	GenerateSubkey@k2,FillSubKey@key
 23054  00BCAC  C038  F004         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 23055  00BCB0  0E10               	movlw	16
 23056  00BCB2  6E05               	movwf	FillSubKey@size,c
 23057  00BCB4  ECE0  F04A         	call	_FillSubKey	;wreg free
 23058                           
 23059                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 23060  00BCB8  0E00               	movlw	0
 23061  00BCBA  6E5A               	movwf	GenerateSubkey@i,c
 23062  00BCBC                     l12940:
 23063                           
 23064                           ;lorawan_aes_cmac.c: 161: {;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 23065  00BCBC  505A               	movf	GenerateSubkey@i,w,c
 23066  00BCBE  2437               	addwf	GenerateSubkey@k2,w,c
 23067  00BCC0  6ED9               	movwf	fsr2l,c
 23068  00BCC2  0E00               	movlw	0
 23069  00BCC4  2038               	addwfc	GenerateSubkey@k2+1,w,c
 23070  00BCC6  6EDA               	movwf	fsr2h,c
 23071  00BCC8  0E3A               	movlw	low GenerateSubkey@const_Rb
 23072  00BCCA  245A               	addwf	GenerateSubkey@i,w,c
 23073  00BCCC  6EE1               	movwf	fsr1l,c
 23074  00BCCE  6AE2               	clrf	fsr1h,c
 23075  00BCD0  0E00               	movlw	high GenerateSubkey@const_Rb
 23076  00BCD2  22E2               	addwfc	fsr1h,f,c
 23077  00BCD4  50E7               	movf	indf1,w,c
 23078  00BCD6  6E39               	movwf	??_GenerateSubkey& (0+255),c
 23079  00BCD8  505A               	movf	GenerateSubkey@i,w,c
 23080  00BCDA  2437               	addwf	GenerateSubkey@k2,w,c
 23081  00BCDC  6EE1               	movwf	fsr1l,c
 23082  00BCDE  0E00               	movlw	0
 23083  00BCE0  2038               	addwfc	GenerateSubkey@k2+1,w,c
 23084  00BCE2  6EE2               	movwf	fsr1h,c
 23085  00BCE4  50E7               	movf	indf1,w,c
 23086  00BCE6  1839               	xorwf	??_GenerateSubkey,w,c
 23087  00BCE8  6EDF               	movwf	indf2,c
 23088  00BCEA  2A5A               	incf	GenerateSubkey@i,f,c
 23089  00BCEC  0E0F               	movlw	15
 23090  00BCEE  645A               	cpfsgt	GenerateSubkey@i,c
 23091  00BCF0  D7E5               	goto	l12940
 23092  00BCF2  0012               	return	
 23093  00BCF4                     __end_of_GenerateSubkey:
 23094                           	opt callstack 0
 23095                           
 23096 ;; *************** function _FillSubKey *****************
 23097 ;; Defined at:
 23098 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 23099 ;; Parameters:    Size  Location     Type
 23100 ;;  source          2    0[COMRAM] PTR unsigned char 
 23101 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 23102 ;;  key             2    2[COMRAM] PTR unsigned char 
 23103 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 23104 ;;  size            1    4[COMRAM] unsigned char 
 23105 ;; Auto vars:     Size  Location     Type
 23106 ;;  i               1    7[COMRAM] unsigned char 
 23107 ;;  carry           1    6[COMRAM] unsigned char 
 23108 ;; Return value:  Size  Location     Type
 23109 ;;                  1    wreg      void 
 23110 ;; Registers used:
 23111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23112 ;; Tracked objects:
 23113 ;;		On entry : 0/0
 23114 ;;		On exit  : 0/0
 23115 ;;		Unchanged: 0/0
 23116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23117 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23118 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23119 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23120 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23121 ;;Total ram usage:        8 bytes
 23122 ;; Hardware stack levels used:    1
 23123 ;; This function calls:
 23124 ;;		Nothing
 23125 ;; This function is called by:
 23126 ;;		_GenerateSubkey
 23127 ;; This function uses a non-reentrant model
 23128 ;;
 23129                           
 23130                           	psect	text145
 23131  0095C0                     __ptext145:
 23132                           	opt callstack 0
 23133  0095C0                     _FillSubKey:
 23134                           	opt callstack 23
 23135                           
 23136                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 23137                           
 23138                           ;incstack = 0
 23139  0095C0  0E00               	movlw	0
 23140  0095C2  6E07               	movwf	FillSubKey@carry,c
 23141                           
 23142                           ;lorawan_aes_cmac.c: 172: i=size;
 23143  0095C4  C005  F008         	movff	FillSubKey@size,FillSubKey@i
 23144                           
 23145                           ;lorawan_aes_cmac.c: 174: while(i--)
 23146  0095C8  D01E               	goto	l8326
 23147  0095CA                     l8322:
 23148                           
 23149                           ;lorawan_aes_cmac.c: 175: {;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry
      +                          ;
 23150  0095CA  5008               	movf	FillSubKey@i,w,c
 23151  0095CC  2403               	addwf	FillSubKey@key,w,c
 23152  0095CE  6ED9               	movwf	fsr2l,c
 23153  0095D0  0E00               	movlw	0
 23154  0095D2  2004               	addwfc	FillSubKey@key+1,w,c
 23155  0095D4  6EDA               	movwf	fsr2h,c
 23156  0095D6  5008               	movf	FillSubKey@i,w,c
 23157  0095D8  2401               	addwf	FillSubKey@source,w,c
 23158  0095DA  6EE1               	movwf	fsr1l,c
 23159  0095DC  0E00               	movlw	0
 23160  0095DE  2002               	addwfc	FillSubKey@source+1,w,c
 23161  0095E0  6EE2               	movwf	fsr1h,c
 23162  0095E2  50E7               	movf	indf1,w,c
 23163  0095E4  6E06               	movwf	??_FillSubKey& (0+255),c
 23164  0095E6  90D8               	bcf	status,0,c
 23165  0095E8  3406               	rlcf	??_FillSubKey,w,c
 23166  0095EA  1007               	iorwf	FillSubKey@carry,w,c
 23167  0095EC  6EDF               	movwf	indf2,c
 23168                           
 23169                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 23170  0095EE  5008               	movf	FillSubKey@i,w,c
 23171  0095F0  2401               	addwf	FillSubKey@source,w,c
 23172  0095F2  6ED9               	movwf	fsr2l,c
 23173  0095F4  0E00               	movlw	0
 23174  0095F6  2002               	addwfc	FillSubKey@source+1,w,c
 23175  0095F8  6EDA               	movwf	fsr2h,c
 23176  0095FA  AEDF               	btfss	indf2,7,c
 23177  0095FC  D002               	goto	u6920
 23178  0095FE  0E01               	movlw	1
 23179  009600  D001               	goto	u6930
 23180  009602                     u6920:
 23181  009602  0E00               	movlw	0
 23182  009604                     u6930:
 23183  009604  6E07               	movwf	FillSubKey@carry,c
 23184  009606                     l8326:
 23185  009606  0608               	decf	FillSubKey@i,f,c
 23186  009608  2808               	incf	FillSubKey@i,w,c
 23187  00960A  B4D8               	btfsc	status,2,c
 23188  00960C  0012               	return	
 23189  00960E  D7DD               	goto	l8322
 23190  009610                     __end_of_FillSubKey:
 23191                           	opt callstack 0
 23192                           
 23193 ;; *************** function _AESEncodeLoRa *****************
 23194 ;; Defined at:
 23195 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 23196 ;; Parameters:    Size  Location     Type
 23197 ;;  block           2   30[COMRAM] PTR unsigned char 
 23198 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 23199 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 23200 ;;  key             2   32[COMRAM] PTR unsigned char 
 23201 ;;		 -> loRa.activationParameters(105), loRa(245), 
 23202 ;; Auto vars:     Size  Location     Type
 23203 ;;  useKey         16   34[COMRAM] unsigned char [16]
 23204 ;; Return value:  Size  Location     Type
 23205 ;;                  1    wreg      void 
 23206 ;; Registers used:
 23207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23208 ;; Tracked objects:
 23209 ;;		On entry : 0/0
 23210 ;;		On exit  : 0/0
 23211 ;;		Unchanged: 0/0
 23212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23213 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23214 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23216 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23217 ;;Total ram usage:       20 bytes
 23218 ;; Hardware stack levels used:    1
 23219 ;; Hardware stack levels required when called:    2
 23220 ;; This function calls:
 23221 ;;		_AESEncode
 23222 ;;		_memcpy
 23223 ;; This function is called by:
 23224 ;;		_AESCmac
 23225 ;;		_GenerateSubkey
 23226 ;;		_LORAWAN_RxDone
 23227 ;;		_ComputeSessionKeys
 23228 ;;		_EncryptFRMPayload
 23229 ;; This function uses a non-reentrant model
 23230 ;;
 23231                           
 23232                           	psect	text146
 23233  0090B6                     __ptext146:
 23234                           	opt callstack 0
 23235  0090B6                     _AESEncodeLoRa:
 23236                           	opt callstack 22
 23237                           
 23238                           ;lorawan_aes.c: 36: uint8_t useKey[16];;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(us
      +                          eKey));
 23239                           
 23240                           ;incstack = 0
 23241  0090B6  0E23               	movlw	low AESEncodeLoRa@useKey
 23242  0090B8  6E01               	movwf	memcpy@d1,c
 23243  0090BA  0E00               	movlw	high AESEncodeLoRa@useKey
 23244  0090BC  6E02               	movwf	memcpy@d1+1,c
 23245  0090BE  C021  F003         	movff	AESEncodeLoRa@key,memcpy@s1
 23246  0090C2  C022  F004         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 23247  0090C6  0E00               	movlw	0
 23248  0090C8  6E06               	movwf	memcpy@n+1,c
 23249  0090CA  0E10               	movlw	16
 23250  0090CC  6E05               	movwf	memcpy@n,c
 23251  0090CE  EC56  F04C         	call	_memcpy	;wreg free
 23252                           
 23253                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 23254  0090D2  C01F  F008         	movff	AESEncodeLoRa@block,AESEncode@block
 23255  0090D6  C020  F009         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 23256  0090DA  0E23               	movlw	low AESEncodeLoRa@useKey
 23257  0090DC  6E0A               	movwf	AESEncode@key,c
 23258  0090DE  0E00               	movlw	high AESEncodeLoRa@useKey
 23259  0090E0  6E0B               	movwf	AESEncode@key+1,c
 23260  0090E2  ECC4  F070         	call	_AESEncode	;wreg free
 23261  0090E6  0012               	return		;funcret
 23262  0090E8                     __end_of_AESEncodeLoRa:
 23263                           	opt callstack 0
 23264                           
 23265 ;; *************** function _AESEncode *****************
 23266 ;; Defined at:
 23267 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
 23268 ;; Parameters:    Size  Location     Type
 23269 ;;  block           2    7[COMRAM] PTR unsigned char 
 23270 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 23271 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 23272 ;;  key             2    9[COMRAM] PTR unsigned char 
 23273 ;;		 -> AESEncodeLoRa@useKey(16), 
 23274 ;; Auto vars:     Size  Location     Type
 23275 ;;  aux3            1   28[COMRAM] unsigned char 
 23276 ;;  aux1            1   27[COMRAM] unsigned char 
 23277 ;;  aux2            1   26[COMRAM] unsigned char 
 23278 ;;  aux             1   25[COMRAM] unsigned char 
 23279 ;;  i               1   29[COMRAM] unsigned char 
 23280 ;;  temp            1    0        unsigned char 
 23281 ;; Return value:  Size  Location     Type
 23282 ;;                  1    wreg      void 
 23283 ;; Registers used:
 23284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23285 ;; Tracked objects:
 23286 ;;		On entry : 0/0
 23287 ;;		On exit  : 0/0
 23288 ;;		Unchanged: 0/0
 23289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23291 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23292 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23293 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23294 ;;Total ram usage:       23 bytes
 23295 ;; Hardware stack levels used:    1
 23296 ;; Hardware stack levels required when called:    1
 23297 ;; This function calls:
 23298 ;;		_EncKeySchedule
 23299 ;;		_EncodeShiftRow
 23300 ;; This function is called by:
 23301 ;;		_AESEncodeLoRa
 23302 ;; This function uses a non-reentrant model
 23303 ;;
 23304                           
 23305                           	psect	text147
 23306  00E188                     __ptext147:
 23307                           	opt callstack 0
 23308  00E188                     _AESEncode:
 23309                           	opt callstack 22
 23310                           
 23311                           ;AES.c: 250: unsigned char i;;AES.c: 251: unsigned char temp;;AES.c: 254: _roundCounter 
      +                          = 10;
 23312                           
 23313                           ;incstack = 0
 23314  00E188  0E0A               	movlw	10
 23315  00E18A  0101               	movlb	1	; () banked
 23316  00E18C  6F15               	movwf	__roundCounter& (0+255),b
 23317                           
 23318                           ;AES.c: 256: _rcon = 0x01;
 23319  00E18E  0E01               	movlw	1
 23320  00E190  6F14               	movwf	__rcon& (0+255),b
 23321                           
 23322                           ;AES.c: 259: for(i=0;i<16;i++)
 23323  00E192  0E00               	movlw	0
 23324  00E194  6E1E               	movwf	AESEncode@i,c
 23325  00E196                     l8158:
 23326                           
 23327                           ;AES.c: 260: {;AES.c: 261: block[i] ^= key[i];
 23328  00E196  501E               	movf	AESEncode@i,w,c
 23329  00E198  240A               	addwf	AESEncode@key,w,c
 23330  00E19A  6ED9               	movwf	fsr2l,c
 23331  00E19C  0E00               	movlw	0
 23332  00E19E  200B               	addwfc	AESEncode@key+1,w,c
 23333  00E1A0  6EDA               	movwf	fsr2h,c
 23334  00E1A2  50DF               	movf	indf2,w,c
 23335  00E1A4  6E0C               	movwf	??_AESEncode& (0+255),c
 23336  00E1A6  501E               	movf	AESEncode@i,w,c
 23337  00E1A8  2408               	addwf	AESEncode@block,w,c
 23338  00E1AA  6ED9               	movwf	fsr2l,c
 23339  00E1AC  0E00               	movlw	0
 23340  00E1AE  2009               	addwfc	AESEncode@block+1,w,c
 23341  00E1B0  6EDA               	movwf	fsr2h,c
 23342  00E1B2  500C               	movf	??_AESEncode,w,c
 23343  00E1B4  1ADF               	xorwf	indf2,f,c
 23344  00E1B6  2A1E               	incf	AESEncode@i,f,c
 23345  00E1B8  0E0F               	movlw	15
 23346  00E1BA  641E               	cpfsgt	AESEncode@i,c
 23347  00E1BC  D7EC               	goto	l8158
 23348  00E1BE                     u6740:
 23349                           
 23350                           ;AES.c: 265: {;AES.c: 268: for(i=0;i<16;i++)
 23351  00E1BE  0E00               	movlw	0
 23352  00E1C0  6E1E               	movwf	AESEncode@i,c
 23353  00E1C2                     l8170:
 23354                           
 23355                           ;AES.c: 269: {;AES.c: 270: block[i]=STable[block[i]];
 23356  00E1C2  501E               	movf	AESEncode@i,w,c
 23357  00E1C4  2408               	addwf	AESEncode@block,w,c
 23358  00E1C6  6ED9               	movwf	fsr2l,c
 23359  00E1C8  0E00               	movlw	0
 23360  00E1CA  2009               	addwfc	AESEncode@block+1,w,c
 23361  00E1CC  6EDA               	movwf	fsr2h,c
 23362  00E1CE  50DF               	movf	indf2,w,c
 23363  00E1D0  6E0C               	movwf	??_AESEncode& (0+255),c
 23364  00E1D2  6A0D               	clrf	(??_AESEncode+1)& (0+255),c
 23365  00E1D4  0E67               	movlw	low _STable
 23366  00E1D6  240C               	addwf	??_AESEncode,w,c
 23367  00E1D8  6EF6               	movwf	tblptrl,c
 23368  00E1DA  0EFE               	movlw	high _STable
 23369  00E1DC  200D               	addwfc	??_AESEncode+1,w,c
 23370  00E1DE  6EF7               	movwf	tblptrh,c
 23371  00E1E0                     	if	1	;There are 3 active tblptr bytes
 23372  00E1E0  6AF8               	clrf	tblptru,c
 23373  00E1E2  0E00               	movlw	low (__mediumconst shr (0+16))
 23374  00E1E4  22F8               	addwfc	tblptru,f,c
 23375  00E1E6                     	endif
 23376  00E1E6  501E               	movf	AESEncode@i,w,c
 23377  00E1E8  2408               	addwf	AESEncode@block,w,c
 23378  00E1EA  6ED9               	movwf	fsr2l,c
 23379  00E1EC  0E00               	movlw	0
 23380  00E1EE  2009               	addwfc	AESEncode@block+1,w,c
 23381  00E1F0  6EDA               	movwf	fsr2h,c
 23382  00E1F2  0008               	tblrd		*
 23383  00E1F4  CFF5 FFDF          	movff	tablat,indf2
 23384  00E1F8  2A1E               	incf	AESEncode@i,f,c
 23385  00E1FA  0E0F               	movlw	15
 23386  00E1FC  641E               	cpfsgt	AESEncode@i,c
 23387  00E1FE  D7E1               	goto	l8170
 23388                           
 23389                           ;AES.c: 271: };AES.c: 274: EncodeShiftRow(block);
 23390  00E200  C008  F001         	movff	AESEncode@block,EncodeShiftRow@stateTable
 23391  00E204  C009  F002         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 23392  00E208  EC0F  F061         	call	_EncodeShiftRow	;wreg free
 23393                           
 23394                           ;AES.c: 277: if(_roundCounter != 1)
 23395  00E20C  0101               	movlb	1	; () banked
 23396  00E20E  0515               	decf	__roundCounter& (0+255),w,b
 23397  00E210  B4D8               	btfsc	status,2,c
 23398  00E212  D118               	goto	u6800
 23399                           
 23400                           ; BSR set to: 1
 23401                           ;AES.c: 278: {;AES.c: 279: unsigned char aux,aux1,aux2,aux3;;AES.c: 281: for(i=0;i<16;i+
      +                          =4)
 23402  00E214  0E00               	movlw	0
 23403  00E216  6E1E               	movwf	AESEncode@i,c
 23404  00E218                     l8186:
 23405                           
 23406                           ;AES.c: 282: {;AES.c: 283: aux1= block[i+0] ^ block[i+1];
 23407  00E218  501E               	movf	AESEncode@i,w,c
 23408  00E21A  2408               	addwf	AESEncode@block,w,c
 23409  00E21C  6E0C               	movwf	??_AESEncode& (0+255),c
 23410  00E21E  0E00               	movlw	0
 23411  00E220  2009               	addwfc	AESEncode@block+1,w,c
 23412  00E222  6E0D               	movwf	(??_AESEncode+1)& (0+255),c
 23413  00E224  0E01               	movlw	1
 23414  00E226  240C               	addwf	??_AESEncode,w,c
 23415  00E228  6ED9               	movwf	fsr2l,c
 23416  00E22A  0E00               	movlw	0
 23417  00E22C  200D               	addwfc	??_AESEncode+1,w,c
 23418  00E22E  6EDA               	movwf	fsr2h,c
 23419  00E230  50DF               	movf	indf2,w,c
 23420  00E232  6E0E               	movwf	(??_AESEncode+2)& (0+255),c
 23421  00E234  501E               	movf	AESEncode@i,w,c
 23422  00E236  2408               	addwf	AESEncode@block,w,c
 23423  00E238  6ED9               	movwf	fsr2l,c
 23424  00E23A  0E00               	movlw	0
 23425  00E23C  2009               	addwfc	AESEncode@block+1,w,c
 23426  00E23E  6EDA               	movwf	fsr2h,c
 23427  00E240  50DF               	movf	indf2,w,c
 23428  00E242  180E               	xorwf	??_AESEncode+2,w,c
 23429  00E244  6E1C               	movwf	AESEncode@aux1,c
 23430                           
 23431                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
 23432  00E246  501E               	movf	AESEncode@i,w,c
 23433  00E248  2408               	addwf	AESEncode@block,w,c
 23434  00E24A  6E0C               	movwf	??_AESEncode& (0+255),c
 23435  00E24C  0E00               	movlw	0
 23436  00E24E  2009               	addwfc	AESEncode@block+1,w,c
 23437  00E250  6E0D               	movwf	(??_AESEncode+1)& (0+255),c
 23438  00E252  0E03               	movlw	3
 23439  00E254  240C               	addwf	??_AESEncode,w,c
 23440  00E256  6ED9               	movwf	fsr2l,c
 23441  00E258  0E00               	movlw	0
 23442  00E25A  200D               	addwfc	??_AESEncode+1,w,c
 23443  00E25C  6EDA               	movwf	fsr2h,c
 23444  00E25E  50DF               	movf	indf2,w,c
 23445  00E260  6E0E               	movwf	(??_AESEncode+2)& (0+255),c
 23446  00E262  501E               	movf	AESEncode@i,w,c
 23447  00E264  2408               	addwf	AESEncode@block,w,c
 23448  00E266  6E0F               	movwf	(??_AESEncode+3)& (0+255),c
 23449  00E268  0E00               	movlw	0
 23450  00E26A  2009               	addwfc	AESEncode@block+1,w,c
 23451  00E26C  6E10               	movwf	(??_AESEncode+4)& (0+255),c
 23452  00E26E  0E02               	movlw	2
 23453  00E270  240F               	addwf	??_AESEncode+3,w,c
 23454  00E272  6ED9               	movwf	fsr2l,c
 23455  00E274  0E00               	movlw	0
 23456  00E276  2010               	addwfc	??_AESEncode+4,w,c
 23457  00E278  6EDA               	movwf	fsr2h,c
 23458  00E27A  50DF               	movf	indf2,w,c
 23459  00E27C  180E               	xorwf	??_AESEncode+2,w,c
 23460  00E27E  6E1D               	movwf	AESEncode@aux3,c
 23461                           
 23462                           ;AES.c: 285: aux = aux1 ^ aux3;
 23463  00E280  501C               	movf	AESEncode@aux1,w,c
 23464  00E282  181D               	xorwf	AESEncode@aux3,w,c
 23465  00E284  6E1A               	movwf	AESEncode@aux,c
 23466                           
 23467                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
 23468  00E286  501E               	movf	AESEncode@i,w,c
 23469  00E288  2408               	addwf	AESEncode@block,w,c
 23470  00E28A  6E0C               	movwf	??_AESEncode& (0+255),c
 23471  00E28C  0E00               	movlw	0
 23472  00E28E  2009               	addwfc	AESEncode@block+1,w,c
 23473  00E290  6E0D               	movwf	(??_AESEncode+1)& (0+255),c
 23474  00E292  0E01               	movlw	1
 23475  00E294  240C               	addwf	??_AESEncode,w,c
 23476  00E296  6ED9               	movwf	fsr2l,c
 23477  00E298  0E00               	movlw	0
 23478  00E29A  200D               	addwfc	??_AESEncode+1,w,c
 23479  00E29C  6EDA               	movwf	fsr2h,c
 23480  00E29E  50DF               	movf	indf2,w,c
 23481  00E2A0  6E0E               	movwf	(??_AESEncode+2)& (0+255),c
 23482  00E2A2  501E               	movf	AESEncode@i,w,c
 23483  00E2A4  2408               	addwf	AESEncode@block,w,c
 23484  00E2A6  6E0F               	movwf	(??_AESEncode+3)& (0+255),c
 23485  00E2A8  0E00               	movlw	0
 23486  00E2AA  2009               	addwfc	AESEncode@block+1,w,c
 23487  00E2AC  6E10               	movwf	(??_AESEncode+4)& (0+255),c
 23488  00E2AE  0E02               	movlw	2
 23489  00E2B0  240F               	addwf	??_AESEncode+3,w,c
 23490  00E2B2  6ED9               	movwf	fsr2l,c
 23491  00E2B4  0E00               	movlw	0
 23492  00E2B6  2010               	addwfc	??_AESEncode+4,w,c
 23493  00E2B8  6EDA               	movwf	fsr2h,c
 23494  00E2BA  50DF               	movf	indf2,w,c
 23495  00E2BC  180E               	xorwf	??_AESEncode+2,w,c
 23496  00E2BE  6E1B               	movwf	AESEncode@aux2,c
 23497                           
 23498                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 23499  00E2C0  0E7F               	movlw	127
 23500  00E2C2  641C               	cpfsgt	AESEncode@aux1,c
 23501  00E2C4  D00C               	goto	l8194
 23502  00E2C6  0E1B               	movlw	27
 23503  00E2C8  C01C  F00C         	movff	AESEncode@aux1,??_AESEncode
 23504  00E2CC  6A0D               	clrf	(??_AESEncode+1)& (0+255),c
 23505  00E2CE  90D8               	bcf	status,0,c
 23506  00E2D0  360C               	rlcf	??_AESEncode,f,c
 23507  00E2D2  360D               	rlcf	??_AESEncode+1,f,c
 23508  00E2D4  180C               	xorwf	??_AESEncode,w,c
 23509  00E2D6  6E14               	movwf	_AESEncode$515,c
 23510  00E2D8  500D               	movf	??_AESEncode+1,w,c
 23511  00E2DA  6E15               	movwf	_AESEncode$515+1,c
 23512  00E2DC  D005               	goto	l8196
 23513  00E2DE                     l8194:
 23514  00E2DE  90D8               	bcf	status,0,c
 23515  00E2E0  341C               	rlcf	AESEncode@aux1,w,c
 23516  00E2E2  6E14               	movwf	_AESEncode$515,c
 23517  00E2E4  6A15               	clrf	_AESEncode$515+1,c
 23518  00E2E6  3615               	rlcf	_AESEncode$515+1,f,c
 23519  00E2E8                     l8196:
 23520  00E2E8  C014  F01C         	movff	_AESEncode$515,AESEncode@aux1
 23521                           
 23522                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 23523  00E2EC  0E7F               	movlw	127
 23524  00E2EE  641B               	cpfsgt	AESEncode@aux2,c
 23525  00E2F0  D00C               	goto	l8200
 23526  00E2F2  0E1B               	movlw	27
 23527  00E2F4  C01B  F00C         	movff	AESEncode@aux2,??_AESEncode
 23528  00E2F8  6A0D               	clrf	(??_AESEncode+1)& (0+255),c
 23529  00E2FA  90D8               	bcf	status,0,c
 23530  00E2FC  360C               	rlcf	??_AESEncode,f,c
 23531  00E2FE  360D               	rlcf	??_AESEncode+1,f,c
 23532  00E300  180C               	xorwf	??_AESEncode,w,c
 23533  00E302  6E16               	movwf	_AESEncode$516,c
 23534  00E304  500D               	movf	??_AESEncode+1,w,c
 23535  00E306  6E17               	movwf	_AESEncode$516+1,c
 23536  00E308  D005               	goto	l8202
 23537  00E30A                     l8200:
 23538  00E30A  90D8               	bcf	status,0,c
 23539  00E30C  341B               	rlcf	AESEncode@aux2,w,c
 23540  00E30E  6E16               	movwf	_AESEncode$516,c
 23541  00E310  6A17               	clrf	_AESEncode$516+1,c
 23542  00E312  3617               	rlcf	_AESEncode$516+1,f,c
 23543  00E314                     l8202:
 23544  00E314  C016  F01B         	movff	_AESEncode$516,AESEncode@aux2
 23545                           
 23546                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 23547  00E318  0E7F               	movlw	127
 23548  00E31A  641D               	cpfsgt	AESEncode@aux3,c
 23549  00E31C  D00C               	goto	l8206
 23550  00E31E  0E1B               	movlw	27
 23551  00E320  C01D  F00C         	movff	AESEncode@aux3,??_AESEncode
 23552  00E324  6A0D               	clrf	(??_AESEncode+1)& (0+255),c
 23553  00E326  90D8               	bcf	status,0,c
 23554  00E328  360C               	rlcf	??_AESEncode,f,c
 23555  00E32A  360D               	rlcf	??_AESEncode+1,f,c
 23556  00E32C  180C               	xorwf	??_AESEncode,w,c
 23557  00E32E  6E18               	movwf	_AESEncode$517,c
 23558  00E330  500D               	movf	??_AESEncode+1,w,c
 23559  00E332  6E19               	movwf	_AESEncode$517+1,c
 23560  00E334  D005               	goto	l8208
 23561  00E336                     l8206:
 23562  00E336  90D8               	bcf	status,0,c
 23563  00E338  341D               	rlcf	AESEncode@aux3,w,c
 23564  00E33A  6E18               	movwf	_AESEncode$517,c
 23565  00E33C  6A19               	clrf	_AESEncode$517+1,c
 23566  00E33E  3619               	rlcf	_AESEncode$517+1,f,c
 23567  00E340                     l8208:
 23568  00E340  C018  F01D         	movff	_AESEncode$517,AESEncode@aux3
 23569                           
 23570                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
 23571  00E344  501E               	movf	AESEncode@i,w,c
 23572  00E346  2408               	addwf	AESEncode@block,w,c
 23573  00E348  6ED9               	movwf	fsr2l,c
 23574  00E34A  0E00               	movlw	0
 23575  00E34C  2009               	addwfc	AESEncode@block+1,w,c
 23576  00E34E  6EDA               	movwf	fsr2h,c
 23577  00E350  501E               	movf	AESEncode@i,w,c
 23578  00E352  2408               	addwf	AESEncode@block,w,c
 23579  00E354  6EE1               	movwf	fsr1l,c
 23580  00E356  0E00               	movlw	0
 23581  00E358  2009               	addwfc	AESEncode@block+1,w,c
 23582  00E35A  6EE2               	movwf	fsr1h,c
 23583  00E35C  50E7               	movf	indf1,w,c
 23584  00E35E  181A               	xorwf	AESEncode@aux,w,c
 23585  00E360  181C               	xorwf	AESEncode@aux1,w,c
 23586  00E362  6EDF               	movwf	indf2,c
 23587                           
 23588                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
 23589  00E364  501E               	movf	AESEncode@i,w,c
 23590  00E366  2408               	addwf	AESEncode@block,w,c
 23591  00E368  6E0C               	movwf	??_AESEncode& (0+255),c
 23592  00E36A  0E00               	movlw	0
 23593  00E36C  2009               	addwfc	AESEncode@block+1,w,c
 23594  00E36E  6E0D               	movwf	(??_AESEncode+1)& (0+255),c
 23595  00E370  0E01               	movlw	1
 23596  00E372  240C               	addwf	??_AESEncode,w,c
 23597  00E374  6ED9               	movwf	fsr2l,c
 23598  00E376  0E00               	movlw	0
 23599  00E378  200D               	addwfc	??_AESEncode+1,w,c
 23600  00E37A  6EDA               	movwf	fsr2h,c
 23601  00E37C  501E               	movf	AESEncode@i,w,c
 23602  00E37E  2408               	addwf	AESEncode@block,w,c
 23603  00E380  6E0E               	movwf	(??_AESEncode+2)& (0+255),c
 23604  00E382  0E00               	movlw	0
 23605  00E384  2009               	addwfc	AESEncode@block+1,w,c
 23606  00E386  6E0F               	movwf	(??_AESEncode+3)& (0+255),c
 23607  00E388  0E01               	movlw	1
 23608  00E38A  240E               	addwf	??_AESEncode+2,w,c
 23609  00E38C  6EE1               	movwf	fsr1l,c
 23610  00E38E  0E00               	movlw	0
 23611  00E390  200F               	addwfc	??_AESEncode+3,w,c
 23612  00E392  6EE2               	movwf	fsr1h,c
 23613  00E394  50E7               	movf	indf1,w,c
 23614  00E396  181A               	xorwf	AESEncode@aux,w,c
 23615  00E398  181B               	xorwf	AESEncode@aux2,w,c
 23616  00E39A  6EDF               	movwf	indf2,c
 23617                           
 23618                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
 23619  00E39C  501E               	movf	AESEncode@i,w,c
 23620  00E39E  2408               	addwf	AESEncode@block,w,c
 23621  00E3A0  6E0C               	movwf	??_AESEncode& (0+255),c
 23622  00E3A2  0E00               	movlw	0
 23623  00E3A4  2009               	addwfc	AESEncode@block+1,w,c
 23624  00E3A6  6E0D               	movwf	(??_AESEncode+1)& (0+255),c
 23625  00E3A8  0E02               	movlw	2
 23626  00E3AA  240C               	addwf	??_AESEncode,w,c
 23627  00E3AC  6ED9               	movwf	fsr2l,c
 23628  00E3AE  0E00               	movlw	0
 23629  00E3B0  200D               	addwfc	??_AESEncode+1,w,c
 23630  00E3B2  6EDA               	movwf	fsr2h,c
 23631  00E3B4  501E               	movf	AESEncode@i,w,c
 23632  00E3B6  2408               	addwf	AESEncode@block,w,c
 23633  00E3B8  6E0E               	movwf	(??_AESEncode+2)& (0+255),c
 23634  00E3BA  0E00               	movlw	0
 23635  00E3BC  2009               	addwfc	AESEncode@block+1,w,c
 23636  00E3BE  6E0F               	movwf	(??_AESEncode+3)& (0+255),c
 23637  00E3C0  0E02               	movlw	2
 23638  00E3C2  240E               	addwf	??_AESEncode+2,w,c
 23639  00E3C4  6EE1               	movwf	fsr1l,c
 23640  00E3C6  0E00               	movlw	0
 23641  00E3C8  200F               	addwfc	??_AESEncode+3,w,c
 23642  00E3CA  6EE2               	movwf	fsr1h,c
 23643  00E3CC  50E7               	movf	indf1,w,c
 23644  00E3CE  181A               	xorwf	AESEncode@aux,w,c
 23645  00E3D0  181D               	xorwf	AESEncode@aux3,w,c
 23646  00E3D2  6EDF               	movwf	indf2,c
 23647                           
 23648                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 23649  00E3D4  501E               	movf	AESEncode@i,w,c
 23650  00E3D6  2408               	addwf	AESEncode@block,w,c
 23651  00E3D8  6E0C               	movwf	??_AESEncode& (0+255),c
 23652  00E3DA  0E00               	movlw	0
 23653  00E3DC  2009               	addwfc	AESEncode@block+1,w,c
 23654  00E3DE  6E0D               	movwf	(??_AESEncode+1)& (0+255),c
 23655  00E3E0  0E03               	movlw	3
 23656  00E3E2  240C               	addwf	??_AESEncode,w,c
 23657  00E3E4  6ED9               	movwf	fsr2l,c
 23658  00E3E6  0E00               	movlw	0
 23659  00E3E8  200D               	addwfc	??_AESEncode+1,w,c
 23660  00E3EA  6EDA               	movwf	fsr2h,c
 23661  00E3EC  501E               	movf	AESEncode@i,w,c
 23662  00E3EE  2408               	addwf	AESEncode@block,w,c
 23663  00E3F0  6E0E               	movwf	(??_AESEncode+2)& (0+255),c
 23664  00E3F2  0E00               	movlw	0
 23665  00E3F4  2009               	addwfc	AESEncode@block+1,w,c
 23666  00E3F6  6E0F               	movwf	(??_AESEncode+3)& (0+255),c
 23667  00E3F8  0E02               	movlw	2
 23668  00E3FA  240E               	addwf	??_AESEncode+2,w,c
 23669  00E3FC  6EE1               	movwf	fsr1l,c
 23670  00E3FE  0E00               	movlw	0
 23671  00E400  200F               	addwfc	??_AESEncode+3,w,c
 23672  00E402  6EE2               	movwf	fsr1h,c
 23673  00E404  50E7               	movf	indf1,w,c
 23674  00E406  6E10               	movwf	(??_AESEncode+4)& (0+255),c
 23675  00E408  501E               	movf	AESEncode@i,w,c
 23676  00E40A  2408               	addwf	AESEncode@block,w,c
 23677  00E40C  6E11               	movwf	(??_AESEncode+5)& (0+255),c
 23678  00E40E  0E00               	movlw	0
 23679  00E410  2009               	addwfc	AESEncode@block+1,w,c
 23680  00E412  6E12               	movwf	(??_AESEncode+6)& (0+255),c
 23681  00E414  0E01               	movlw	1
 23682  00E416  2411               	addwf	??_AESEncode+5,w,c
 23683  00E418  6EE1               	movwf	fsr1l,c
 23684  00E41A  0E00               	movlw	0
 23685  00E41C  2012               	addwfc	??_AESEncode+6,w,c
 23686  00E41E  6EE2               	movwf	fsr1h,c
 23687  00E420  50E7               	movf	indf1,w,c
 23688  00E422  6E13               	movwf	(??_AESEncode+7)& (0+255),c
 23689  00E424  501E               	movf	AESEncode@i,w,c
 23690  00E426  2408               	addwf	AESEncode@block,w,c
 23691  00E428  6EE1               	movwf	fsr1l,c
 23692  00E42A  0E00               	movlw	0
 23693  00E42C  2009               	addwfc	AESEncode@block+1,w,c
 23694  00E42E  6EE2               	movwf	fsr1h,c
 23695  00E430  50E7               	movf	indf1,w,c
 23696  00E432  1813               	xorwf	??_AESEncode+7,w,c
 23697  00E434  1810               	xorwf	??_AESEncode+4,w,c
 23698  00E436  181A               	xorwf	AESEncode@aux,w,c
 23699  00E438  6EDF               	movwf	indf2,c
 23700  00E43A  0E04               	movlw	4
 23701  00E43C  261E               	addwf	AESEncode@i,f,c
 23702  00E43E  0E0F               	movlw	15
 23703  00E440  641E               	cpfsgt	AESEncode@i,c
 23704  00E442  D6EA               	goto	l8186
 23705  00E444                     u6800:
 23706                           
 23707                           ;AES.c: 296: };AES.c: 297: };AES.c: 299: EncKeySchedule(key);
 23708  00E444  C00A  F001         	movff	AESEncode@key,EncKeySchedule@key
 23709  00E448  C00B  F002         	movff	AESEncode@key+1,EncKeySchedule@key+1
 23710  00E44C  EC0C  F06B         	call	_EncKeySchedule	;wreg free
 23711                           
 23712                           ;AES.c: 302: for(i=0;i<16;i++)
 23713  00E450  0E00               	movlw	0
 23714  00E452  6E1E               	movwf	AESEncode@i,c
 23715  00E454                     l8226:
 23716                           
 23717                           ;AES.c: 303: {;AES.c: 304: block[i] ^= key[i];
 23718  00E454  501E               	movf	AESEncode@i,w,c
 23719  00E456  240A               	addwf	AESEncode@key,w,c
 23720  00E458  6ED9               	movwf	fsr2l,c
 23721  00E45A  0E00               	movlw	0
 23722  00E45C  200B               	addwfc	AESEncode@key+1,w,c
 23723  00E45E  6EDA               	movwf	fsr2h,c
 23724  00E460  50DF               	movf	indf2,w,c
 23725  00E462  6E0C               	movwf	??_AESEncode& (0+255),c
 23726  00E464  501E               	movf	AESEncode@i,w,c
 23727  00E466  2408               	addwf	AESEncode@block,w,c
 23728  00E468  6ED9               	movwf	fsr2l,c
 23729  00E46A  0E00               	movlw	0
 23730  00E46C  2009               	addwfc	AESEncode@block+1,w,c
 23731  00E46E  6EDA               	movwf	fsr2h,c
 23732  00E470  500C               	movf	??_AESEncode,w,c
 23733  00E472  1ADF               	xorwf	indf2,f,c
 23734  00E474  2A1E               	incf	AESEncode@i,f,c
 23735  00E476  0E0F               	movlw	15
 23736  00E478  641E               	cpfsgt	AESEncode@i,c
 23737  00E47A  D7EC               	goto	l8226
 23738                           
 23739                           ;AES.c: 305: };AES.c: 307: _roundCounter--;
 23740  00E47C  0101               	movlb	1	; () banked
 23741  00E47E  0715               	decf	__roundCounter& (0+255),f,b
 23742                           
 23743                           ; BSR set to: 1
 23744                           ;AES.c: 308: };AES.c: 309: while(_roundCounter !=0);
 23745  00E480  5115               	movf	__roundCounter& (0+255),w,b
 23746  00E482  B4D8               	btfsc	status,2,c
 23747  00E484  0012               	return	
 23748  00E486  D69B               	goto	u6740
 23749  00E488                     __end_of_AESEncode:
 23750                           	opt callstack 0
 23751                           
 23752 ;; *************** function _EncodeShiftRow *****************
 23753 ;; Defined at:
 23754 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 23755 ;; Parameters:    Size  Location     Type
 23756 ;;  stateTable      2    0[COMRAM] PTR unsigned char 
 23757 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 23758 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 23759 ;; Auto vars:     Size  Location     Type
 23760 ;;  temp            1    2[COMRAM] unsigned char 
 23761 ;; Return value:  Size  Location     Type
 23762 ;;                  1    wreg      void 
 23763 ;; Registers used:
 23764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23765 ;; Tracked objects:
 23766 ;;		On entry : 0/0
 23767 ;;		On exit  : 0/0
 23768 ;;		Unchanged: 0/0
 23769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23773 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23774 ;;Total ram usage:        3 bytes
 23775 ;; Hardware stack levels used:    1
 23776 ;; This function calls:
 23777 ;;		Nothing
 23778 ;; This function is called by:
 23779 ;;		_AESEncode
 23780 ;; This function uses a non-reentrant model
 23781 ;;
 23782                           
 23783                           	psect	text148
 23784  00C21E                     __ptext148:
 23785                           	opt callstack 0
 23786  00C21E                     _EncodeShiftRow:
 23787                           	opt callstack 22
 23788                           
 23789                           ;AES.c: 387: unsigned char temp;;AES.c: 392: temp=stateTable[1];
 23790                           
 23791                           ; BSR set to: 1
 23792                           ;incstack = 0
 23793  00C21E  EE20 F001          	lfsr	2,1
 23794  00C222  5001               	movf	EncodeShiftRow@stateTable,w,c
 23795  00C224  26D9               	addwf	fsr2l,f,c
 23796  00C226  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23797  00C228  22DA               	addwfc	fsr2h,f,c
 23798  00C22A  50DF               	movf	indf2,w,c
 23799  00C22C  6E03               	movwf	EncodeShiftRow@temp,c
 23800                           
 23801                           ;AES.c: 393: stateTable[1]=stateTable[5];
 23802  00C22E  EE20 F005          	lfsr	2,5
 23803  00C232  5001               	movf	EncodeShiftRow@stateTable,w,c
 23804  00C234  26D9               	addwf	fsr2l,f,c
 23805  00C236  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23806  00C238  22DA               	addwfc	fsr2h,f,c
 23807  00C23A  EE10 F001          	lfsr	1,1
 23808  00C23E  5001               	movf	EncodeShiftRow@stateTable,w,c
 23809  00C240  26E1               	addwf	fsr1l,f,c
 23810  00C242  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23811  00C244  22E2               	addwfc	fsr1h,f,c
 23812  00C246  CFDF FFE7          	movff	indf2,indf1
 23813                           
 23814                           ;AES.c: 394: stateTable[5]=stateTable[9];
 23815  00C24A  EE20 F009          	lfsr	2,9
 23816  00C24E  5001               	movf	EncodeShiftRow@stateTable,w,c
 23817  00C250  26D9               	addwf	fsr2l,f,c
 23818  00C252  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23819  00C254  22DA               	addwfc	fsr2h,f,c
 23820  00C256  EE10 F005          	lfsr	1,5
 23821  00C25A  5001               	movf	EncodeShiftRow@stateTable,w,c
 23822  00C25C  26E1               	addwf	fsr1l,f,c
 23823  00C25E  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23824  00C260  22E2               	addwfc	fsr1h,f,c
 23825  00C262  CFDF FFE7          	movff	indf2,indf1
 23826                           
 23827                           ;AES.c: 395: stateTable[9]=stateTable[13];
 23828  00C266  EE20 F00D          	lfsr	2,13
 23829  00C26A  5001               	movf	EncodeShiftRow@stateTable,w,c
 23830  00C26C  26D9               	addwf	fsr2l,f,c
 23831  00C26E  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23832  00C270  22DA               	addwfc	fsr2h,f,c
 23833  00C272  EE10 F009          	lfsr	1,9
 23834  00C276  5001               	movf	EncodeShiftRow@stateTable,w,c
 23835  00C278  26E1               	addwf	fsr1l,f,c
 23836  00C27A  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23837  00C27C  22E2               	addwfc	fsr1h,f,c
 23838  00C27E  CFDF FFE7          	movff	indf2,indf1
 23839                           
 23840                           ;AES.c: 396: stateTable[13]=temp;
 23841  00C282  EE20 F00D          	lfsr	2,13
 23842  00C286  5001               	movf	EncodeShiftRow@stateTable,w,c
 23843  00C288  26D9               	addwf	fsr2l,f,c
 23844  00C28A  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23845  00C28C  22DA               	addwfc	fsr2h,f,c
 23846  00C28E  C003  FFDF         	movff	EncodeShiftRow@temp,indf2
 23847                           
 23848                           ;AES.c: 399: temp=stateTable[2];
 23849  00C292  EE20 F002          	lfsr	2,2
 23850  00C296  5001               	movf	EncodeShiftRow@stateTable,w,c
 23851  00C298  26D9               	addwf	fsr2l,f,c
 23852  00C29A  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23853  00C29C  22DA               	addwfc	fsr2h,f,c
 23854  00C29E  50DF               	movf	indf2,w,c
 23855  00C2A0  6E03               	movwf	EncodeShiftRow@temp,c
 23856                           
 23857                           ;AES.c: 400: stateTable[2]=stateTable[10];
 23858  00C2A2  EE20 F00A          	lfsr	2,10
 23859  00C2A6  5001               	movf	EncodeShiftRow@stateTable,w,c
 23860  00C2A8  26D9               	addwf	fsr2l,f,c
 23861  00C2AA  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23862  00C2AC  22DA               	addwfc	fsr2h,f,c
 23863  00C2AE  EE10 F002          	lfsr	1,2
 23864  00C2B2  5001               	movf	EncodeShiftRow@stateTable,w,c
 23865  00C2B4  26E1               	addwf	fsr1l,f,c
 23866  00C2B6  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23867  00C2B8  22E2               	addwfc	fsr1h,f,c
 23868  00C2BA  CFDF FFE7          	movff	indf2,indf1
 23869                           
 23870                           ;AES.c: 401: stateTable[10]=temp;
 23871  00C2BE  EE20 F00A          	lfsr	2,10
 23872  00C2C2  5001               	movf	EncodeShiftRow@stateTable,w,c
 23873  00C2C4  26D9               	addwf	fsr2l,f,c
 23874  00C2C6  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23875  00C2C8  22DA               	addwfc	fsr2h,f,c
 23876  00C2CA  C003  FFDF         	movff	EncodeShiftRow@temp,indf2
 23877                           
 23878                           ;AES.c: 402: temp=stateTable[14];
 23879  00C2CE  EE20 F00E          	lfsr	2,14
 23880  00C2D2  5001               	movf	EncodeShiftRow@stateTable,w,c
 23881  00C2D4  26D9               	addwf	fsr2l,f,c
 23882  00C2D6  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23883  00C2D8  22DA               	addwfc	fsr2h,f,c
 23884  00C2DA  50DF               	movf	indf2,w,c
 23885  00C2DC  6E03               	movwf	EncodeShiftRow@temp,c
 23886                           
 23887                           ;AES.c: 403: stateTable[14]=stateTable[6];
 23888  00C2DE  EE20 F006          	lfsr	2,6
 23889  00C2E2  5001               	movf	EncodeShiftRow@stateTable,w,c
 23890  00C2E4  26D9               	addwf	fsr2l,f,c
 23891  00C2E6  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23892  00C2E8  22DA               	addwfc	fsr2h,f,c
 23893  00C2EA  EE10 F00E          	lfsr	1,14
 23894  00C2EE  5001               	movf	EncodeShiftRow@stateTable,w,c
 23895  00C2F0  26E1               	addwf	fsr1l,f,c
 23896  00C2F2  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23897  00C2F4  22E2               	addwfc	fsr1h,f,c
 23898  00C2F6  CFDF FFE7          	movff	indf2,indf1
 23899                           
 23900                           ;AES.c: 404: stateTable[6]=temp;
 23901  00C2FA  EE20 F006          	lfsr	2,6
 23902  00C2FE  5001               	movf	EncodeShiftRow@stateTable,w,c
 23903  00C300  26D9               	addwf	fsr2l,f,c
 23904  00C302  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23905  00C304  22DA               	addwfc	fsr2h,f,c
 23906  00C306  C003  FFDF         	movff	EncodeShiftRow@temp,indf2
 23907                           
 23908                           ;AES.c: 407: temp=stateTable[3];
 23909  00C30A  EE20 F003          	lfsr	2,3
 23910  00C30E  5001               	movf	EncodeShiftRow@stateTable,w,c
 23911  00C310  26D9               	addwf	fsr2l,f,c
 23912  00C312  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23913  00C314  22DA               	addwfc	fsr2h,f,c
 23914  00C316  50DF               	movf	indf2,w,c
 23915  00C318  6E03               	movwf	EncodeShiftRow@temp,c
 23916                           
 23917                           ;AES.c: 408: stateTable[3]=stateTable[15];
 23918  00C31A  EE20 F00F          	lfsr	2,15
 23919  00C31E  5001               	movf	EncodeShiftRow@stateTable,w,c
 23920  00C320  26D9               	addwf	fsr2l,f,c
 23921  00C322  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23922  00C324  22DA               	addwfc	fsr2h,f,c
 23923  00C326  EE10 F003          	lfsr	1,3
 23924  00C32A  5001               	movf	EncodeShiftRow@stateTable,w,c
 23925  00C32C  26E1               	addwf	fsr1l,f,c
 23926  00C32E  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23927  00C330  22E2               	addwfc	fsr1h,f,c
 23928  00C332  CFDF FFE7          	movff	indf2,indf1
 23929                           
 23930                           ;AES.c: 409: stateTable[15]=stateTable[11];
 23931  00C336  EE20 F00B          	lfsr	2,11
 23932  00C33A  5001               	movf	EncodeShiftRow@stateTable,w,c
 23933  00C33C  26D9               	addwf	fsr2l,f,c
 23934  00C33E  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23935  00C340  22DA               	addwfc	fsr2h,f,c
 23936  00C342  EE10 F00F          	lfsr	1,15
 23937  00C346  5001               	movf	EncodeShiftRow@stateTable,w,c
 23938  00C348  26E1               	addwf	fsr1l,f,c
 23939  00C34A  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23940  00C34C  22E2               	addwfc	fsr1h,f,c
 23941  00C34E  CFDF FFE7          	movff	indf2,indf1
 23942                           
 23943                           ;AES.c: 410: stateTable[11]=stateTable[7];
 23944  00C352  EE20 F007          	lfsr	2,7
 23945  00C356  5001               	movf	EncodeShiftRow@stateTable,w,c
 23946  00C358  26D9               	addwf	fsr2l,f,c
 23947  00C35A  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23948  00C35C  22DA               	addwfc	fsr2h,f,c
 23949  00C35E  EE10 F00B          	lfsr	1,11
 23950  00C362  5001               	movf	EncodeShiftRow@stateTable,w,c
 23951  00C364  26E1               	addwf	fsr1l,f,c
 23952  00C366  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23953  00C368  22E2               	addwfc	fsr1h,f,c
 23954  00C36A  CFDF FFE7          	movff	indf2,indf1
 23955                           
 23956                           ;AES.c: 411: stateTable[7]=temp;
 23957  00C36E  EE20 F007          	lfsr	2,7
 23958  00C372  5001               	movf	EncodeShiftRow@stateTable,w,c
 23959  00C374  26D9               	addwf	fsr2l,f,c
 23960  00C376  5002               	movf	EncodeShiftRow@stateTable+1,w,c
 23961  00C378  22DA               	addwfc	fsr2h,f,c
 23962  00C37A  C003  FFDF         	movff	EncodeShiftRow@temp,indf2
 23963  00C37E  0012               	return		;funcret
 23964  00C380                     __end_of_EncodeShiftRow:
 23965                           	opt callstack 0
 23966                           
 23967 ;; *************** function _EncKeySchedule *****************
 23968 ;; Defined at:
 23969 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 23970 ;; Parameters:    Size  Location     Type
 23971 ;;  key             2    0[COMRAM] PTR unsigned char 
 23972 ;;		 -> AESEncodeLoRa@useKey(16), 
 23973 ;; Auto vars:     Size  Location     Type
 23974 ;;		None
 23975 ;; Return value:  Size  Location     Type
 23976 ;;                  1    wreg      void 
 23977 ;; Registers used:
 23978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 23979 ;; Tracked objects:
 23980 ;;		On entry : 0/0
 23981 ;;		On exit  : 0/0
 23982 ;;		Unchanged: 0/0
 23983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23986 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23987 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23988 ;;Total ram usage:        7 bytes
 23989 ;; Hardware stack levels used:    1
 23990 ;; This function calls:
 23991 ;;		Nothing
 23992 ;; This function is called by:
 23993 ;;		_AESEncode
 23994 ;; This function uses a non-reentrant model
 23995 ;;
 23996                           
 23997                           	psect	text149
 23998  00D618                     __ptext149:
 23999                           	opt callstack 0
 24000  00D618                     _EncKeySchedule:
 24001                           	opt callstack 22
 24002                           
 24003                           ;AES.c: 340: key[0]^=STable[key[13]];
 24004                           
 24005                           ;incstack = 0
 24006  00D618  EE20 F00D          	lfsr	2,13
 24007  00D61C  5001               	movf	EncKeySchedule@key,w,c
 24008  00D61E  26D9               	addwf	fsr2l,f,c
 24009  00D620  5002               	movf	EncKeySchedule@key+1,w,c
 24010  00D622  22DA               	addwfc	fsr2h,f,c
 24011  00D624  50DF               	movf	indf2,w,c
 24012  00D626  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24013  00D628  6A04               	clrf	(??_EncKeySchedule+1)& (0+255),c
 24014  00D62A  0E67               	movlw	low _STable
 24015  00D62C  2403               	addwf	??_EncKeySchedule,w,c
 24016  00D62E  6EF6               	movwf	tblptrl,c
 24017  00D630  0EFE               	movlw	high _STable
 24018  00D632  2004               	addwfc	??_EncKeySchedule+1,w,c
 24019  00D634  6EF7               	movwf	tblptrh,c
 24020  00D636                     	if	1	;There are 3 active tblptr bytes
 24021  00D636  6AF8               	clrf	tblptru,c
 24022  00D638  0E00               	movlw	low (__mediumconst shr (0+16))
 24023  00D63A  22F8               	addwfc	tblptru,f,c
 24024  00D63C                     	endif
 24025  00D63C  0008               	tblrd		*
 24026  00D63E  CFF5 F005          	movff	tablat,??_EncKeySchedule+2
 24027  00D642  C001  FFD9         	movff	EncKeySchedule@key,fsr2l
 24028  00D646  C002  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 24029  00D64A  5005               	movf	??_EncKeySchedule+2,w,c
 24030  00D64C  1ADF               	xorwf	indf2,f,c
 24031                           
 24032                           ;AES.c: 341: key[1]^=STable[key[14]];
 24033  00D64E  EE20 F00E          	lfsr	2,14
 24034  00D652  5001               	movf	EncKeySchedule@key,w,c
 24035  00D654  26D9               	addwf	fsr2l,f,c
 24036  00D656  5002               	movf	EncKeySchedule@key+1,w,c
 24037  00D658  22DA               	addwfc	fsr2h,f,c
 24038  00D65A  50DF               	movf	indf2,w,c
 24039  00D65C  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24040  00D65E  6A04               	clrf	(??_EncKeySchedule+1)& (0+255),c
 24041  00D660  0E67               	movlw	low _STable
 24042  00D662  2403               	addwf	??_EncKeySchedule,w,c
 24043  00D664  6EF6               	movwf	tblptrl,c
 24044  00D666  0EFE               	movlw	high _STable
 24045  00D668  2004               	addwfc	??_EncKeySchedule+1,w,c
 24046  00D66A  6EF7               	movwf	tblptrh,c
 24047  00D66C                     	if	1	;There are 3 active tblptr bytes
 24048  00D66C  6AF8               	clrf	tblptru,c
 24049  00D66E  0E00               	movlw	low (__mediumconst shr (0+16))
 24050  00D670  22F8               	addwfc	tblptru,f,c
 24051  00D672                     	endif
 24052  00D672  0008               	tblrd		*
 24053  00D674  CFF5 F005          	movff	tablat,??_EncKeySchedule+2
 24054  00D678  EE20 F001          	lfsr	2,1
 24055  00D67C  5001               	movf	EncKeySchedule@key,w,c
 24056  00D67E  26D9               	addwf	fsr2l,f,c
 24057  00D680  5002               	movf	EncKeySchedule@key+1,w,c
 24058  00D682  22DA               	addwfc	fsr2h,f,c
 24059  00D684  5005               	movf	??_EncKeySchedule+2,w,c
 24060  00D686  1ADF               	xorwf	indf2,f,c
 24061                           
 24062                           ;AES.c: 342: key[2]^=STable[key[15]];
 24063  00D688  EE20 F00F          	lfsr	2,15
 24064  00D68C  5001               	movf	EncKeySchedule@key,w,c
 24065  00D68E  26D9               	addwf	fsr2l,f,c
 24066  00D690  5002               	movf	EncKeySchedule@key+1,w,c
 24067  00D692  22DA               	addwfc	fsr2h,f,c
 24068  00D694  50DF               	movf	indf2,w,c
 24069  00D696  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24070  00D698  6A04               	clrf	(??_EncKeySchedule+1)& (0+255),c
 24071  00D69A  0E67               	movlw	low _STable
 24072  00D69C  2403               	addwf	??_EncKeySchedule,w,c
 24073  00D69E  6EF6               	movwf	tblptrl,c
 24074  00D6A0  0EFE               	movlw	high _STable
 24075  00D6A2  2004               	addwfc	??_EncKeySchedule+1,w,c
 24076  00D6A4  6EF7               	movwf	tblptrh,c
 24077  00D6A6                     	if	1	;There are 3 active tblptr bytes
 24078  00D6A6  6AF8               	clrf	tblptru,c
 24079  00D6A8  0E00               	movlw	low (__mediumconst shr (0+16))
 24080  00D6AA  22F8               	addwfc	tblptru,f,c
 24081  00D6AC                     	endif
 24082  00D6AC  0008               	tblrd		*
 24083  00D6AE  CFF5 F005          	movff	tablat,??_EncKeySchedule+2
 24084  00D6B2  EE20 F002          	lfsr	2,2
 24085  00D6B6  5001               	movf	EncKeySchedule@key,w,c
 24086  00D6B8  26D9               	addwf	fsr2l,f,c
 24087  00D6BA  5002               	movf	EncKeySchedule@key+1,w,c
 24088  00D6BC  22DA               	addwfc	fsr2h,f,c
 24089  00D6BE  5005               	movf	??_EncKeySchedule+2,w,c
 24090  00D6C0  1ADF               	xorwf	indf2,f,c
 24091                           
 24092                           ;AES.c: 343: key[3]^=STable[key[12]];
 24093  00D6C2  EE20 F00C          	lfsr	2,12
 24094  00D6C6  5001               	movf	EncKeySchedule@key,w,c
 24095  00D6C8  26D9               	addwf	fsr2l,f,c
 24096  00D6CA  5002               	movf	EncKeySchedule@key+1,w,c
 24097  00D6CC  22DA               	addwfc	fsr2h,f,c
 24098  00D6CE  50DF               	movf	indf2,w,c
 24099  00D6D0  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24100  00D6D2  6A04               	clrf	(??_EncKeySchedule+1)& (0+255),c
 24101  00D6D4  0E67               	movlw	low _STable
 24102  00D6D6  2403               	addwf	??_EncKeySchedule,w,c
 24103  00D6D8  6EF6               	movwf	tblptrl,c
 24104  00D6DA  0EFE               	movlw	high _STable
 24105  00D6DC  2004               	addwfc	??_EncKeySchedule+1,w,c
 24106  00D6DE  6EF7               	movwf	tblptrh,c
 24107  00D6E0                     	if	1	;There are 3 active tblptr bytes
 24108  00D6E0  6AF8               	clrf	tblptru,c
 24109  00D6E2  0E00               	movlw	low (__mediumconst shr (0+16))
 24110  00D6E4  22F8               	addwfc	tblptru,f,c
 24111  00D6E6                     	endif
 24112  00D6E6  0008               	tblrd		*
 24113  00D6E8  CFF5 F005          	movff	tablat,??_EncKeySchedule+2
 24114  00D6EC  EE20 F003          	lfsr	2,3
 24115  00D6F0  5001               	movf	EncKeySchedule@key,w,c
 24116  00D6F2  26D9               	addwf	fsr2l,f,c
 24117  00D6F4  5002               	movf	EncKeySchedule@key+1,w,c
 24118  00D6F6  22DA               	addwfc	fsr2h,f,c
 24119  00D6F8  5005               	movf	??_EncKeySchedule+2,w,c
 24120  00D6FA  1ADF               	xorwf	indf2,f,c
 24121                           
 24122                           ;AES.c: 345: key[0]^=_rcon;
 24123  00D6FC  C001  FFD9         	movff	EncKeySchedule@key,fsr2l
 24124  00D700  C002  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 24125  00D704  0101               	movlb	1	; () banked
 24126  00D706  5114               	movf	__rcon& (0+255),w,b
 24127  00D708  1ADF               	xorwf	indf2,f,c
 24128                           
 24129                           ; BSR set to: 1
 24130                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 24131  00D70A  0E7F               	movlw	127
 24132  00D70C  6514               	cpfsgt	__rcon& (0+255),b
 24133  00D70E  D00C               	goto	l8066
 24134                           
 24135                           ; BSR set to: 1
 24136  00D710  0E1B               	movlw	27
 24137  00D712  C114  F003         	movff	__rcon,??_EncKeySchedule
 24138  00D716  6A04               	clrf	(??_EncKeySchedule+1)& (0+255),c
 24139  00D718  90D8               	bcf	status,0,c
 24140  00D71A  3603               	rlcf	??_EncKeySchedule,f,c
 24141  00D71C  3604               	rlcf	??_EncKeySchedule+1,f,c
 24142  00D71E  1803               	xorwf	??_EncKeySchedule,w,c
 24143  00D720  6E06               	movwf	_EncKeySchedule$520,c
 24144  00D722  5004               	movf	??_EncKeySchedule+1,w,c
 24145  00D724  6E07               	movwf	_EncKeySchedule$520+1,c
 24146  00D726  D005               	goto	l8068
 24147  00D728                     l8066:
 24148                           
 24149                           ; BSR set to: 1
 24150  00D728  90D8               	bcf	status,0,c
 24151  00D72A  3514               	rlcf	__rcon& (0+255),w,b
 24152  00D72C  6E06               	movwf	_EncKeySchedule$520,c
 24153  00D72E  6A07               	clrf	_EncKeySchedule$520+1,c
 24154  00D730  3607               	rlcf	_EncKeySchedule$520+1,f,c
 24155  00D732                     l8068:
 24156                           
 24157                           ; BSR set to: 1
 24158  00D732  C006  F114         	movff	_EncKeySchedule$520,__rcon
 24159                           
 24160                           ; BSR set to: 1
 24161                           ;AES.c: 349: key[4]^=key[0];
 24162  00D736  C001  FFD9         	movff	EncKeySchedule@key,fsr2l
 24163  00D73A  C002  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 24164  00D73E  50DF               	movf	indf2,w,c
 24165  00D740  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24166  00D742  EE20 F004          	lfsr	2,4
 24167  00D746  5001               	movf	EncKeySchedule@key,w,c
 24168  00D748  26D9               	addwf	fsr2l,f,c
 24169  00D74A  5002               	movf	EncKeySchedule@key+1,w,c
 24170  00D74C  22DA               	addwfc	fsr2h,f,c
 24171  00D74E  5003               	movf	??_EncKeySchedule,w,c
 24172  00D750  1ADF               	xorwf	indf2,f,c
 24173                           
 24174                           ; BSR set to: 1
 24175                           ;AES.c: 350: key[5]^=key[1];
 24176  00D752  EE20 F001          	lfsr	2,1
 24177  00D756  5001               	movf	EncKeySchedule@key,w,c
 24178  00D758  26D9               	addwf	fsr2l,f,c
 24179  00D75A  5002               	movf	EncKeySchedule@key+1,w,c
 24180  00D75C  22DA               	addwfc	fsr2h,f,c
 24181  00D75E  50DF               	movf	indf2,w,c
 24182  00D760  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24183  00D762  EE20 F005          	lfsr	2,5
 24184  00D766  5001               	movf	EncKeySchedule@key,w,c
 24185  00D768  26D9               	addwf	fsr2l,f,c
 24186  00D76A  5002               	movf	EncKeySchedule@key+1,w,c
 24187  00D76C  22DA               	addwfc	fsr2h,f,c
 24188  00D76E  5003               	movf	??_EncKeySchedule,w,c
 24189  00D770  1ADF               	xorwf	indf2,f,c
 24190                           
 24191                           ; BSR set to: 1
 24192                           ;AES.c: 351: key[6]^=key[2];
 24193  00D772  EE20 F002          	lfsr	2,2
 24194  00D776  5001               	movf	EncKeySchedule@key,w,c
 24195  00D778  26D9               	addwf	fsr2l,f,c
 24196  00D77A  5002               	movf	EncKeySchedule@key+1,w,c
 24197  00D77C  22DA               	addwfc	fsr2h,f,c
 24198  00D77E  50DF               	movf	indf2,w,c
 24199  00D780  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24200  00D782  EE20 F006          	lfsr	2,6
 24201  00D786  5001               	movf	EncKeySchedule@key,w,c
 24202  00D788  26D9               	addwf	fsr2l,f,c
 24203  00D78A  5002               	movf	EncKeySchedule@key+1,w,c
 24204  00D78C  22DA               	addwfc	fsr2h,f,c
 24205  00D78E  5003               	movf	??_EncKeySchedule,w,c
 24206  00D790  1ADF               	xorwf	indf2,f,c
 24207                           
 24208                           ; BSR set to: 1
 24209                           ;AES.c: 352: key[7]^=key[3];
 24210  00D792  EE20 F003          	lfsr	2,3
 24211  00D796  5001               	movf	EncKeySchedule@key,w,c
 24212  00D798  26D9               	addwf	fsr2l,f,c
 24213  00D79A  5002               	movf	EncKeySchedule@key+1,w,c
 24214  00D79C  22DA               	addwfc	fsr2h,f,c
 24215  00D79E  50DF               	movf	indf2,w,c
 24216  00D7A0  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24217  00D7A2  EE20 F007          	lfsr	2,7
 24218  00D7A6  5001               	movf	EncKeySchedule@key,w,c
 24219  00D7A8  26D9               	addwf	fsr2l,f,c
 24220  00D7AA  5002               	movf	EncKeySchedule@key+1,w,c
 24221  00D7AC  22DA               	addwfc	fsr2h,f,c
 24222  00D7AE  5003               	movf	??_EncKeySchedule,w,c
 24223  00D7B0  1ADF               	xorwf	indf2,f,c
 24224                           
 24225                           ; BSR set to: 1
 24226                           ;AES.c: 355: key[8]^=key[4];
 24227  00D7B2  EE20 F004          	lfsr	2,4
 24228  00D7B6  5001               	movf	EncKeySchedule@key,w,c
 24229  00D7B8  26D9               	addwf	fsr2l,f,c
 24230  00D7BA  5002               	movf	EncKeySchedule@key+1,w,c
 24231  00D7BC  22DA               	addwfc	fsr2h,f,c
 24232  00D7BE  50DF               	movf	indf2,w,c
 24233  00D7C0  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24234  00D7C2  EE20 F008          	lfsr	2,8
 24235  00D7C6  5001               	movf	EncKeySchedule@key,w,c
 24236  00D7C8  26D9               	addwf	fsr2l,f,c
 24237  00D7CA  5002               	movf	EncKeySchedule@key+1,w,c
 24238  00D7CC  22DA               	addwfc	fsr2h,f,c
 24239  00D7CE  5003               	movf	??_EncKeySchedule,w,c
 24240  00D7D0  1ADF               	xorwf	indf2,f,c
 24241                           
 24242                           ; BSR set to: 1
 24243                           ;AES.c: 356: key[9]^=key[5];
 24244  00D7D2  EE20 F005          	lfsr	2,5
 24245  00D7D6  5001               	movf	EncKeySchedule@key,w,c
 24246  00D7D8  26D9               	addwf	fsr2l,f,c
 24247  00D7DA  5002               	movf	EncKeySchedule@key+1,w,c
 24248  00D7DC  22DA               	addwfc	fsr2h,f,c
 24249  00D7DE  50DF               	movf	indf2,w,c
 24250  00D7E0  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24251  00D7E2  EE20 F009          	lfsr	2,9
 24252  00D7E6  5001               	movf	EncKeySchedule@key,w,c
 24253  00D7E8  26D9               	addwf	fsr2l,f,c
 24254  00D7EA  5002               	movf	EncKeySchedule@key+1,w,c
 24255  00D7EC  22DA               	addwfc	fsr2h,f,c
 24256  00D7EE  5003               	movf	??_EncKeySchedule,w,c
 24257  00D7F0  1ADF               	xorwf	indf2,f,c
 24258                           
 24259                           ; BSR set to: 1
 24260                           ;AES.c: 357: key[10]^=key[6];
 24261  00D7F2  EE20 F006          	lfsr	2,6
 24262  00D7F6  5001               	movf	EncKeySchedule@key,w,c
 24263  00D7F8  26D9               	addwf	fsr2l,f,c
 24264  00D7FA  5002               	movf	EncKeySchedule@key+1,w,c
 24265  00D7FC  22DA               	addwfc	fsr2h,f,c
 24266  00D7FE  50DF               	movf	indf2,w,c
 24267  00D800  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24268  00D802  EE20 F00A          	lfsr	2,10
 24269  00D806  5001               	movf	EncKeySchedule@key,w,c
 24270  00D808  26D9               	addwf	fsr2l,f,c
 24271  00D80A  5002               	movf	EncKeySchedule@key+1,w,c
 24272  00D80C  22DA               	addwfc	fsr2h,f,c
 24273  00D80E  5003               	movf	??_EncKeySchedule,w,c
 24274  00D810  1ADF               	xorwf	indf2,f,c
 24275                           
 24276                           ; BSR set to: 1
 24277                           ;AES.c: 358: key[11]^=key[7];
 24278  00D812  EE20 F007          	lfsr	2,7
 24279  00D816  5001               	movf	EncKeySchedule@key,w,c
 24280  00D818  26D9               	addwf	fsr2l,f,c
 24281  00D81A  5002               	movf	EncKeySchedule@key+1,w,c
 24282  00D81C  22DA               	addwfc	fsr2h,f,c
 24283  00D81E  50DF               	movf	indf2,w,c
 24284  00D820  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24285  00D822  EE20 F00B          	lfsr	2,11
 24286  00D826  5001               	movf	EncKeySchedule@key,w,c
 24287  00D828  26D9               	addwf	fsr2l,f,c
 24288  00D82A  5002               	movf	EncKeySchedule@key+1,w,c
 24289  00D82C  22DA               	addwfc	fsr2h,f,c
 24290  00D82E  5003               	movf	??_EncKeySchedule,w,c
 24291  00D830  1ADF               	xorwf	indf2,f,c
 24292                           
 24293                           ; BSR set to: 1
 24294                           ;AES.c: 361: key[12]^=key[8];
 24295  00D832  EE20 F008          	lfsr	2,8
 24296  00D836  5001               	movf	EncKeySchedule@key,w,c
 24297  00D838  26D9               	addwf	fsr2l,f,c
 24298  00D83A  5002               	movf	EncKeySchedule@key+1,w,c
 24299  00D83C  22DA               	addwfc	fsr2h,f,c
 24300  00D83E  50DF               	movf	indf2,w,c
 24301  00D840  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24302  00D842  EE20 F00C          	lfsr	2,12
 24303  00D846  5001               	movf	EncKeySchedule@key,w,c
 24304  00D848  26D9               	addwf	fsr2l,f,c
 24305  00D84A  5002               	movf	EncKeySchedule@key+1,w,c
 24306  00D84C  22DA               	addwfc	fsr2h,f,c
 24307  00D84E  5003               	movf	??_EncKeySchedule,w,c
 24308  00D850  1ADF               	xorwf	indf2,f,c
 24309                           
 24310                           ; BSR set to: 1
 24311                           ;AES.c: 362: key[13]^=key[9];
 24312  00D852  EE20 F009          	lfsr	2,9
 24313  00D856  5001               	movf	EncKeySchedule@key,w,c
 24314  00D858  26D9               	addwf	fsr2l,f,c
 24315  00D85A  5002               	movf	EncKeySchedule@key+1,w,c
 24316  00D85C  22DA               	addwfc	fsr2h,f,c
 24317  00D85E  50DF               	movf	indf2,w,c
 24318  00D860  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24319  00D862  EE20 F00D          	lfsr	2,13
 24320  00D866  5001               	movf	EncKeySchedule@key,w,c
 24321  00D868  26D9               	addwf	fsr2l,f,c
 24322  00D86A  5002               	movf	EncKeySchedule@key+1,w,c
 24323  00D86C  22DA               	addwfc	fsr2h,f,c
 24324  00D86E  5003               	movf	??_EncKeySchedule,w,c
 24325  00D870  1ADF               	xorwf	indf2,f,c
 24326                           
 24327                           ; BSR set to: 1
 24328                           ;AES.c: 363: key[14]^=key[10];
 24329  00D872  EE20 F00A          	lfsr	2,10
 24330  00D876  5001               	movf	EncKeySchedule@key,w,c
 24331  00D878  26D9               	addwf	fsr2l,f,c
 24332  00D87A  5002               	movf	EncKeySchedule@key+1,w,c
 24333  00D87C  22DA               	addwfc	fsr2h,f,c
 24334  00D87E  50DF               	movf	indf2,w,c
 24335  00D880  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24336  00D882  EE20 F00E          	lfsr	2,14
 24337  00D886  5001               	movf	EncKeySchedule@key,w,c
 24338  00D888  26D9               	addwf	fsr2l,f,c
 24339  00D88A  5002               	movf	EncKeySchedule@key+1,w,c
 24340  00D88C  22DA               	addwfc	fsr2h,f,c
 24341  00D88E  5003               	movf	??_EncKeySchedule,w,c
 24342  00D890  1ADF               	xorwf	indf2,f,c
 24343                           
 24344                           ; BSR set to: 1
 24345                           ;AES.c: 364: key[15]^=key[11];
 24346  00D892  EE20 F00B          	lfsr	2,11
 24347  00D896  5001               	movf	EncKeySchedule@key,w,c
 24348  00D898  26D9               	addwf	fsr2l,f,c
 24349  00D89A  5002               	movf	EncKeySchedule@key+1,w,c
 24350  00D89C  22DA               	addwfc	fsr2h,f,c
 24351  00D89E  50DF               	movf	indf2,w,c
 24352  00D8A0  6E03               	movwf	??_EncKeySchedule& (0+255),c
 24353  00D8A2  EE20 F00F          	lfsr	2,15
 24354  00D8A6  5001               	movf	EncKeySchedule@key,w,c
 24355  00D8A8  26D9               	addwf	fsr2l,f,c
 24356  00D8AA  5002               	movf	EncKeySchedule@key+1,w,c
 24357  00D8AC  22DA               	addwfc	fsr2h,f,c
 24358  00D8AE  5003               	movf	??_EncKeySchedule,w,c
 24359  00D8B0  1ADF               	xorwf	indf2,f,c
 24360                           
 24361                           ; BSR set to: 1
 24362  00D8B2  0012               	return		;funcret
 24363  00D8B4                     __end_of_EncKeySchedule:
 24364                           	opt callstack 0
 24365                           
 24366 ;; *************** function _LORAWAN_Init *****************
 24367 ;; Defined at:
 24368 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24369 ;; Parameters:    Size  Location     Type
 24370 ;;  RxPayload       2   74[COMRAM] PTR FTN(PTR unsigned cha
 24371 ;;		 -> RxData(1), 
 24372 ;;  RxJoinRespon    2   76[COMRAM] PTR FTN(unsigned char ,)
 24373 ;;		 -> RxJoinResponse(1), 
 24374 ;; Auto vars:     Size  Location     Type
 24375 ;;		None
 24376 ;; Return value:  Size  Location     Type
 24377 ;;                  1    wreg      void 
 24378 ;; Registers used:
 24379 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24380 ;; Tracked objects:
 24381 ;;		On entry : 0/0
 24382 ;;		On exit  : 0/0
 24383 ;;		Unchanged: 0/0
 24384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24388 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24389 ;;Total ram usage:        4 bytes
 24390 ;; Hardware stack levels used:    1
 24391 ;; Hardware stack levels required when called:    6
 24392 ;; This function calls:
 24393 ;;		_CreateAllSoftwareTimers
 24394 ;;		_LORAWAN_Reset
 24395 ;;		_RADIO_Init
 24396 ;;		_RADIO_ReadRandom
 24397 ;;		_SetCallbackSoftwareTimers
 24398 ;;		_StopAllSoftwareTimers
 24399 ;;		_srand
 24400 ;; This function is called by:
 24401 ;;		_main
 24402 ;; This function uses a non-reentrant model
 24403 ;;
 24404                           
 24405                           	psect	text150
 24406  009908                     __ptext150:
 24407                           	opt callstack 0
 24408  009908                     _LORAWAN_Init:
 24409                           	opt callstack 24
 24410                           
 24411                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 24412                           
 24413                           ; BSR set to: 1
 24414                           ;incstack = 0
 24415  009908  0102               	movlb	2	; () banked
 24416  00990A  51F0               	movf	(_loRa+240)& (0+255),w,b
 24417  00990C  A4D8               	btfss	status,2,c
 24418  00990E  D008               	goto	l15454
 24419                           
 24420                           ; BSR set to: 2
 24421                           ;lorawan_eu.c: 127: {;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 24422  009910  EC58  F04B         	call	_CreateAllSoftwareTimers	;wreg free
 24423                           
 24424                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 24425  009914  EC4D  F056         	call	_SetCallbackSoftwareTimers	;wreg free
 24426                           
 24427                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 24428  009918  0E01               	movlw	1
 24429  00991A  0102               	movlb	2	; () banked
 24430  00991C  6FF0               	movwf	(_loRa+240)& (0+255),b
 24431                           
 24432                           ;lorawan_eu.c: 131: }
 24433  00991E  D002               	goto	l15456
 24434  009920                     l15454:
 24435                           
 24436                           ; BSR set to: 2
 24437                           ;lorawan_eu.c: 132: else;lorawan_eu.c: 133: {;lorawan_eu.c: 134: StopAllSoftwareTimers (
      +                          );
 24438  009920  EC81  F04B         	call	_StopAllSoftwareTimers	;wreg free
 24439  009924                     l15456:
 24440                           
 24441                           ;lorawan_eu.c: 135: };lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 24442  009924  C04B  F0F0         	movff	LORAWAN_Init@RxPayload,_rxPayload
 24443  009928  C04C  F0F1         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 24444                           
 24445                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 24446  00992C  C04D  F0F2         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 24447  009930  C04E  F0F3         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 24448                           
 24449                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 24450  009934  0EBF               	movlw	low (_radioBuffer+16)
 24451  009936  6E1A               	movwf	RADIO_Init@radioBuffer,c
 24452  009938  0E05               	movlw	high (_radioBuffer+16)
 24453  00993A  6E1B               	movwf	RADIO_Init@radioBuffer+1,c
 24454  00993C  0EA0               	movlw	160
 24455  00993E  6E1C               	movwf	RADIO_Init@frequency,c
 24456  009940  0E27               	movlw	39
 24457  009942  6E1D               	movwf	RADIO_Init@frequency+1,c
 24458  009944  0EBE               	movlw	190
 24459  009946  6E1E               	movwf	RADIO_Init@frequency+2,c
 24460  009948  0E33               	movlw	51
 24461  00994A  6E1F               	movwf	RADIO_Init@frequency+3,c
 24462  00994C  EC78  F062         	call	_RADIO_Init	;wreg free
 24463                           
 24464                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 24465  009950  EC90  F052         	call	_RADIO_ReadRandom	;wreg free
 24466  009954  C00D  F013         	movff	?_RADIO_ReadRandom,srand@x
 24467  009958  C00E  F014         	movff	?_RADIO_ReadRandom+1,srand@x+1
 24468  00995C  EC89  F045         	call	_srand	;wreg free
 24469                           
 24470                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 24471  009960  0E00               	movlw	0
 24472  009962  EC2B  F064         	call	_LORAWAN_Reset
 24473  009966  0012               	return		;funcret
 24474  009968                     __end_of_LORAWAN_Init:
 24475                           	opt callstack 0
 24476                           
 24477 ;; *************** function _srand *****************
 24478 ;; Defined at:
 24479 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 24480 ;; Parameters:    Size  Location     Type
 24481 ;;  x               2   18[COMRAM] unsigned int 
 24482 ;; Auto vars:     Size  Location     Type
 24483 ;;		None
 24484 ;; Return value:  Size  Location     Type
 24485 ;;                  1    wreg      void 
 24486 ;; Registers used:
 24487 ;;		status,2
 24488 ;; Tracked objects:
 24489 ;;		On entry : 0/0
 24490 ;;		On exit  : 0/0
 24491 ;;		Unchanged: 0/0
 24492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24497 ;;Total ram usage:        2 bytes
 24498 ;; Hardware stack levels used:    1
 24499 ;; This function calls:
 24500 ;;		Nothing
 24501 ;; This function is called by:
 24502 ;;		_LORAWAN_Init
 24503 ;; This function uses a non-reentrant model
 24504 ;;
 24505                           
 24506                           	psect	text151
 24507  008B12                     __ptext151:
 24508                           	opt callstack 0
 24509  008B12                     _srand:
 24510                           	opt callstack 29
 24511                           
 24512                           ;incstack = 0
 24513  008B12  C013  F189         	movff	srand@x,_randx
 24514  008B16  C014  F18A         	movff	srand@x+1,_randx+1
 24515  008B1A  0101               	movlb	1	; () banked
 24516  008B1C  6B8B               	clrf	(_randx+2)& (0+255),b
 24517  008B1E  6B8C               	clrf	(_randx+3)& (0+255),b
 24518                           
 24519                           ; BSR set to: 1
 24520  008B20  0012               	return		;funcret
 24521  008B22                     __end_of_srand:
 24522                           	opt callstack 0
 24523                           
 24524 ;; *************** function _SetCallbackSoftwareTimers *****************
 24525 ;; Defined at:
 24526 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24527 ;; Parameters:    Size  Location     Type
 24528 ;;		None
 24529 ;; Auto vars:     Size  Location     Type
 24530 ;;		None
 24531 ;; Return value:  Size  Location     Type
 24532 ;;                  1    wreg      void 
 24533 ;; Registers used:
 24534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24535 ;; Tracked objects:
 24536 ;;		On entry : 0/0
 24537 ;;		On exit  : 0/0
 24538 ;;		Unchanged: 0/0
 24539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24544 ;;Total ram usage:        0 bytes
 24545 ;; Hardware stack levels used:    1
 24546 ;; Hardware stack levels required when called:    1
 24547 ;; This function calls:
 24548 ;;		_SwTimerSetCallback
 24549 ;; This function is called by:
 24550 ;;		_LORAWAN_Init
 24551 ;; This function uses a non-reentrant model
 24552 ;;
 24553                           
 24554                           	psect	text152
 24555  00AC9A                     __ptext152:
 24556                           	opt callstack 0
 24557  00AC9A                     _SetCallbackSoftwareTimers:
 24558                           	opt callstack 28
 24559                           
 24560                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 24561                           
 24562                           ; BSR set to: 1
 24563                           ;incstack = 0
 24564  00AC9A  0E7C               	movlw	low _LORAWAN_ReceiveWindow1Callback
 24565  00AC9C  6E01               	movwf	SwTimerSetCallback@callback,c
 24566  00AC9E  0EA1               	movlw	high _LORAWAN_ReceiveWindow1Callback
 24567  00ACA0  6E02               	movwf	SwTimerSetCallback@callback+1,c
 24568  00ACA2  0E00               	movlw	0
 24569  00ACA4  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 24570  00ACA6  0102               	movlb	2	; () banked
 24571  00ACA8  51E2               	movf	(_loRa+226)& (0+255),w,b
 24572  00ACAA  EC2B  F048         	call	_SwTimerSetCallback
 24573                           
 24574                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 24575  00ACAE  0ED2               	movlw	low _LORAWAN_ReceiveWindow2Callback
 24576  00ACB0  6E01               	movwf	SwTimerSetCallback@callback,c
 24577  00ACB2  0EAB               	movlw	high _LORAWAN_ReceiveWindow2Callback
 24578  00ACB4  6E02               	movwf	SwTimerSetCallback@callback+1,c
 24579  00ACB6  0E00               	movlw	0
 24580  00ACB8  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 24581  00ACBA  0102               	movlb	2	; () banked
 24582  00ACBC  51E3               	movf	(_loRa+227)& (0+255),w,b
 24583  00ACBE  EC2B  F048         	call	_SwTimerSetCallback
 24584                           
 24585                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 24586  00ACC2  0EC0               	movlw	low _LORAWAN_LinkCheckCallback
 24587  00ACC4  6E01               	movwf	SwTimerSetCallback@callback,c
 24588  00ACC6  0EBA               	movlw	high _LORAWAN_LinkCheckCallback
 24589  00ACC8  6E02               	movwf	SwTimerSetCallback@callback+1,c
 24590  00ACCA  0E00               	movlw	0
 24591  00ACCC  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 24592  00ACCE  0102               	movlb	2	; () banked
 24593  00ACD0  51E7               	movf	(_loRa+231)& (0+255),w,b
 24594  00ACD2  EC2B  F048         	call	_SwTimerSetCallback
 24595                           
 24596                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 24597  00ACD6  0E7C               	movlw	low _LORAWAN_ReceiveWindow1Callback
 24598  00ACD8  6E01               	movwf	SwTimerSetCallback@callback,c
 24599  00ACDA  0EA1               	movlw	high _LORAWAN_ReceiveWindow1Callback
 24600  00ACDC  6E02               	movwf	SwTimerSetCallback@callback+1,c
 24601  00ACDE  0E00               	movlw	0
 24602  00ACE0  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 24603  00ACE2  0102               	movlb	2	; () banked
 24604  00ACE4  51E4               	movf	(_loRa+228)& (0+255),w,b
 24605  00ACE6  EC2B  F048         	call	_SwTimerSetCallback
 24606                           
 24607                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 24608  00ACEA  0ED2               	movlw	low _LORAWAN_ReceiveWindow2Callback
 24609  00ACEC  6E01               	movwf	SwTimerSetCallback@callback,c
 24610  00ACEE  0EAB               	movlw	high _LORAWAN_ReceiveWindow2Callback
 24611  00ACF0  6E02               	movwf	SwTimerSetCallback@callback+1,c
 24612  00ACF2  0E00               	movlw	0
 24613  00ACF4  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 24614  00ACF6  0102               	movlb	2	; () banked
 24615  00ACF8  51E5               	movf	(_loRa+229)& (0+255),w,b
 24616  00ACFA  EC2B  F048         	call	_SwTimerSetCallback
 24617                           
 24618                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 24619  00ACFE  0EA4               	movlw	low _AckRetransmissionCallback
 24620  00AD00  6E01               	movwf	SwTimerSetCallback@callback,c
 24621  00AD02  0EB8               	movlw	high _AckRetransmissionCallback
 24622  00AD04  6E02               	movwf	SwTimerSetCallback@callback+1,c
 24623  00AD06  0E00               	movlw	0
 24624  00AD08  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 24625  00AD0A  0102               	movlb	2	; () banked
 24626  00AD0C  51E8               	movf	(_loRa+232)& (0+255),w,b
 24627  00AD0E  EC2B  F048         	call	_SwTimerSetCallback
 24628                           
 24629                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 24630  00AD12  0EE0               	movlw	low _AutomaticReplyCallback
 24631  00AD14  6E01               	movwf	SwTimerSetCallback@callback,c
 24632  00AD16  0E8D               	movlw	high _AutomaticReplyCallback
 24633  00AD18  6E02               	movwf	SwTimerSetCallback@callback+1,c
 24634  00AD1A  0E00               	movlw	0
 24635  00AD1C  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 24636  00AD1E  0102               	movlb	2	; () banked
 24637  00AD20  51E6               	movf	(_loRa+230)& (0+255),w,b
 24638  00AD22  EC2B  F048         	call	_SwTimerSetCallback
 24639                           
 24640                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 24641  00AD26  0E1E               	movlw	low _UnconfirmedTransmissionCallback
 24642  00AD28  6E01               	movwf	SwTimerSetCallback@callback,c
 24643  00AD2A  0E9C               	movlw	high _UnconfirmedTransmissionCallback
 24644  00AD2C  6E02               	movwf	SwTimerSetCallback@callback+1,c
 24645  00AD2E  0E00               	movlw	0
 24646  00AD30  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 24647  00AD32  0102               	movlb	2	; () banked
 24648  00AD34  51EA               	movf	(_loRa+234)& (0+255),w,b
 24649  00AD36  EC2B  F048         	call	_SwTimerSetCallback
 24650                           
 24651                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 24652  00AD3A  0EA2               	movlw	low _UpdateJoinSuccessState
 24653  00AD3C  6E01               	movwf	SwTimerSetCallback@callback,c
 24654  00AD3E  0EB4               	movlw	high _UpdateJoinSuccessState
 24655  00AD40  6E02               	movwf	SwTimerSetCallback@callback+1,c
 24656  00AD42  0E00               	movlw	0
 24657  00AD44  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 24658  00AD46  0102               	movlb	2	; () banked
 24659  00AD48  51F3               	movf	(_loRa+243)& (0+255),w,b
 24660  00AD4A  EC2B  F048         	call	_SwTimerSetCallback
 24661                           
 24662                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 24663  00AD4E  0EFE               	movlw	low _DutyCycleCallback
 24664  00AD50  6E01               	movwf	SwTimerSetCallback@callback,c
 24665  00AD52  0ED3               	movlw	high _DutyCycleCallback
 24666  00AD54  6E02               	movwf	SwTimerSetCallback@callback+1,c
 24667  00AD56  0E00               	movlw	0
 24668  00AD58  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 24669  00AD5A  0102               	movlb	2	; () banked
 24670  00AD5C  51E9               	movf	(_loRa+233)& (0+255),w,b
 24671  00AD5E  EC2B  F048         	call	_SwTimerSetCallback
 24672  00AD62  0012               	return		;funcret
 24673  00AD64                     __end_of_SetCallbackSoftwareTimers:
 24674                           	opt callstack 0
 24675                           
 24676 ;; *************** function _RADIO_ReadRandom *****************
 24677 ;; Defined at:
 24678 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24679 ;; Parameters:    Size  Location     Type
 24680 ;;		None
 24681 ;; Auto vars:     Size  Location     Type
 24682 ;;  retVal          2   15[COMRAM] unsigned int 
 24683 ;;  i               1   17[COMRAM] unsigned char 
 24684 ;; Return value:  Size  Location     Type
 24685 ;;                  2   12[COMRAM] unsigned int 
 24686 ;; Registers used:
 24687 ;;		wreg, status,2, status,0, cstack
 24688 ;; Tracked objects:
 24689 ;;		On entry : 0/0
 24690 ;;		On exit  : 0/0
 24691 ;;		Unchanged: 0/0
 24692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24694 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24695 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24696 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24697 ;;Total ram usage:        6 bytes
 24698 ;; Hardware stack levels used:    1
 24699 ;; Hardware stack levels required when called:    4
 24700 ;; This function calls:
 24701 ;;		_RADIO_RegisterRead
 24702 ;;		_RADIO_RegisterWrite
 24703 ;;		_RADIO_WriteMode
 24704 ;;		_SystemBlockingWaitMs
 24705 ;; This function is called by:
 24706 ;;		_LORAWAN_Init
 24707 ;; This function uses a non-reentrant model
 24708 ;;
 24709                           
 24710                           	psect	text153
 24711  00A520                     __ptext153:
 24712                           	opt callstack 0
 24713  00A520                     _RADIO_ReadRandom:
 24714                           	opt callstack 25
 24715                           
 24716                           ;radio_driver_SX1276.c: 1369: uint8_t i;;radio_driver_SX1276.c: 1370: uint16_t retVal;;r
      +                          adio_driver_SX1276.c: 1371: retVal = 0;
 24717                           
 24718                           ;incstack = 0
 24719  00A520  0E00               	movlw	0
 24720  00A522  6E11               	movwf	RADIO_ReadRandom@retVal+1,c
 24721  00A524  0E00               	movlw	0
 24722  00A526  6E10               	movwf	RADIO_ReadRandom@retVal,c
 24723                           
 24724                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 24725  00A528  0E01               	movlw	1
 24726  00A52A  6E06               	movwf	RADIO_WriteMode@newModulation,c
 24727  00A52C  0E01               	movlw	1
 24728  00A52E  6E07               	movwf	RADIO_WriteMode@blocking,c
 24729  00A530  0E00               	movlw	0
 24730  00A532  EC6A  F058         	call	_RADIO_WriteMode
 24731                           
 24732                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 24733  00A536  0EFF               	movlw	255
 24734  00A538  6E03               	movwf	RADIO_RegisterWrite@value,c
 24735  00A53A  0E11               	movlw	17
 24736  00A53C  ECF7  F045         	call	_RADIO_RegisterWrite
 24737                           
 24738                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 24739  00A540  0E01               	movlw	1
 24740  00A542  6E06               	movwf	RADIO_WriteMode@newModulation,c
 24741  00A544  0E01               	movlw	1
 24742  00A546  6E07               	movwf	RADIO_WriteMode@blocking,c
 24743  00A548  0E05               	movlw	5
 24744  00A54A  EC6A  F058         	call	_RADIO_WriteMode
 24745                           
 24746                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 24747  00A54E  0E00               	movlw	0
 24748  00A550  6E12               	movwf	RADIO_ReadRandom@i,c
 24749  00A552                     l15270:
 24750                           
 24751                           ;radio_driver_SX1276.c: 1377: {;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 24752  00A552  0E01               	movlw	1
 24753  00A554  6E01               	movwf	SystemBlockingWaitMs@ms,c
 24754  00A556  0E00               	movlw	0
 24755  00A558  6E02               	movwf	SystemBlockingWaitMs@ms+1,c
 24756  00A55A  0E00               	movlw	0
 24757  00A55C  6E03               	movwf	SystemBlockingWaitMs@ms+2,c
 24758  00A55E  0E00               	movlw	0
 24759  00A560  6E04               	movwf	SystemBlockingWaitMs@ms+3,c
 24760  00A562  EC3B  F047         	call	_SystemBlockingWaitMs	;wreg free
 24761                           
 24762                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 24763  00A566  90D8               	bcf	status,0,c
 24764  00A568  3610               	rlcf	RADIO_ReadRandom@retVal,f,c
 24765  00A56A  3611               	rlcf	RADIO_ReadRandom@retVal+1,f,c
 24766                           
 24767                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 24768  00A56C  0E2C               	movlw	44
 24769  00A56E  EC71  F046         	call	_RADIO_RegisterRead
 24770  00A572  6E0F               	movwf	??_RADIO_ReadRandom& (0+255),c
 24771  00A574  0E01               	movlw	1
 24772  00A576  160F               	andwf	??_RADIO_ReadRandom,f,c
 24773  00A578  500F               	movf	??_RADIO_ReadRandom,w,c
 24774  00A57A  1210               	iorwf	RADIO_ReadRandom@retVal,f,c
 24775  00A57C  2A12               	incf	RADIO_ReadRandom@i,f,c
 24776  00A57E  0E0F               	movlw	15
 24777  00A580  6412               	cpfsgt	RADIO_ReadRandom@i,c
 24778  00A582  D7E7               	goto	l15270
 24779                           
 24780                           ;radio_driver_SX1276.c: 1381: };radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP,
      +                           MODULATION_LORA, 1);
 24781  00A584  0E01               	movlw	1
 24782  00A586  6E06               	movwf	RADIO_WriteMode@newModulation,c
 24783  00A588  0E01               	movlw	1
 24784  00A58A  6E07               	movwf	RADIO_WriteMode@blocking,c
 24785  00A58C  0E00               	movlw	0
 24786  00A58E  EC6A  F058         	call	_RADIO_WriteMode
 24787                           
 24788                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 24789  00A592  0EFF               	movlw	255
 24790  00A594  6E03               	movwf	RADIO_RegisterWrite@value,c
 24791  00A596  0E12               	movlw	18
 24792  00A598  ECF7  F045         	call	_RADIO_RegisterWrite
 24793                           
 24794                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 24795  00A59C  0E00               	movlw	0
 24796  00A59E  6E03               	movwf	RADIO_RegisterWrite@value,c
 24797  00A5A0  0E11               	movlw	17
 24798  00A5A2  ECF7  F045         	call	_RADIO_RegisterWrite
 24799                           
 24800                           ;radio_driver_SX1276.c: 1389: return retVal;
 24801  00A5A6  C010  F00D         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 24802  00A5AA  C011  F00E         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 24803  00A5AE  0012               	return		;funcret
 24804  00A5B0                     __end_of_RADIO_ReadRandom:
 24805                           	opt callstack 0
 24806                           
 24807 ;; *************** function _LORAWAN_Reset *****************
 24808 ;; Defined at:
 24809 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24810 ;; Parameters:    Size  Location     Type
 24811 ;;  ismBandNew      1    wreg     enum E6149
 24812 ;; Auto vars:     Size  Location     Type
 24813 ;;  ismBandNew      1   73[COMRAM] enum E6149
 24814 ;; Return value:  Size  Location     Type
 24815 ;;                  1    wreg      void 
 24816 ;; Registers used:
 24817 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24818 ;; Tracked objects:
 24819 ;;		On entry : 0/0
 24820 ;;		On exit  : 0/0
 24821 ;;		Unchanged: 0/0
 24822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24827 ;;Total ram usage:        1 bytes
 24828 ;; Hardware stack levels used:    1
 24829 ;; Hardware stack levels required when called:    5
 24830 ;; This function calls:
 24831 ;;		_InitDefault433Channels
 24832 ;;		_InitDefault868Channels
 24833 ;;		_LORAWAN_LinkCheckConfigure
 24834 ;;		_RADIO_Init
 24835 ;;		_RADIO_SetLoRaSyncWord
 24836 ;;		_StopAllSoftwareTimers
 24837 ;;		_UpdateMinMaxChDataRate
 24838 ;;		_memset
 24839 ;; This function is called by:
 24840 ;;		_LORAWAN_Init
 24841 ;; This function uses a non-reentrant model
 24842 ;;
 24843                           
 24844                           	psect	text154
 24845  00C856                     __ptext154:
 24846                           	opt callstack 0
 24847  00C856                     _LORAWAN_Reset:
 24848                           	opt callstack 24
 24849                           
 24850                           ;incstack = 0
 24851                           ;LORAWAN_Reset@ismBandNew stored from wreg
 24852  00C856  6E4A               	movwf	LORAWAN_Reset@ismBandNew,c
 24853                           
 24854                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 24855  00C858  0102               	movlb	2	; () banked
 24856  00C85A  05F0               	decf	(_loRa+240)& (0+255),w,b
 24857  00C85C  B4D8               	btfsc	status,2,c
 24858                           
 24859                           ; BSR set to: 2
 24860                           ;lorawan_eu.c: 151: {;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 24861  00C85E  EC81  F04B         	call	_StopAllSoftwareTimers	;wreg free
 24862                           
 24863                           ;lorawan_eu.c: 153: };lorawan_eu.c: 155: loRa.syncWord = 0x34;
 24864  00C862  0E34               	movlw	52
 24865  00C864  0102               	movlb	2	; () banked
 24866  00C866  6FF4               	movwf	(_loRa+244)& (0+255),b
 24867                           
 24868                           ; BSR set to: 2
 24869                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 24870  00C868  51F4               	movf	(_loRa+244)& (0+255),w,b
 24871  00C86A  ECF3  F044         	call	_RADIO_SetLoRaSyncWord
 24872                           
 24873                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 24874  00C86E  0E00               	movlw	0
 24875  00C870  0102               	movlb	2	; () banked
 24876  00C872  6F02               	movwf	(_loRa+2)& (0+255),b
 24877  00C874  0E00               	movlw	0
 24878  00C876  6F03               	movwf	(_loRa+3)& (0+255),b
 24879  00C878  0E00               	movlw	0
 24880  00C87A  6F04               	movwf	(_loRa+4)& (0+255),b
 24881  00C87C  0E00               	movlw	0
 24882  00C87E  6F05               	movwf	(_loRa+5)& (0+255),b
 24883                           
 24884                           ; BSR set to: 2
 24885                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 24886  00C880  69DD               	setf	(_loRa+221)& (0+255),b
 24887                           
 24888                           ; BSR set to: 2
 24889                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 24890  00C882  0E00               	movlw	0
 24891  00C884  6FDE               	movwf	(_loRa+222)& (0+255),b
 24892                           
 24893                           ; BSR set to: 2
 24894                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 24895  00C886  0E00               	movlw	0
 24896  00C888  6FC8               	movwf	(_loRa+200)& (0+255),b
 24897  00C88A  0E00               	movlw	0
 24898  00C88C  6FC9               	movwf	(_loRa+201)& (0+255),b
 24899  00C88E  0E00               	movlw	0
 24900  00C890  6FCA               	movwf	(_loRa+202)& (0+255),b
 24901  00C892  0E00               	movlw	0
 24902  00C894  6FCB               	movwf	(_loRa+203)& (0+255),b
 24903                           
 24904                           ; BSR set to: 2
 24905                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 24906  00C896  0E00               	movlw	0
 24907  00C898  6FD5               	movwf	(_loRa+213)& (0+255),b
 24908  00C89A  0E00               	movlw	0
 24909  00C89C  6FD4               	movwf	(_loRa+212)& (0+255),b
 24910                           
 24911                           ; BSR set to: 2
 24912                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 24913  00C89E  0E00               	movlw	0
 24914  00C8A0  6F0A               	movwf	(_loRa+10)& (0+255),b
 24915  00C8A2  0E00               	movlw	0
 24916  00C8A4  6F0B               	movwf	(_loRa+11)& (0+255),b
 24917  00C8A6  0E00               	movlw	0
 24918  00C8A8  6F0C               	movwf	(_loRa+12)& (0+255),b
 24919  00C8AA  0E00               	movlw	0
 24920  00C8AC  6F0D               	movwf	(_loRa+13)& (0+255),b
 24921                           
 24922                           ; BSR set to: 2
 24923                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 24924  00C8AE  0E00               	movlw	0
 24925  00C8B0  6F06               	movwf	(_loRa+6)& (0+255),b
 24926  00C8B2  0E00               	movlw	0
 24927  00C8B4  6F07               	movwf	(_loRa+7)& (0+255),b
 24928  00C8B6  0E00               	movlw	0
 24929  00C8B8  6F08               	movwf	(_loRa+8)& (0+255),b
 24930  00C8BA  0E00               	movlw	0
 24931  00C8BC  6F09               	movwf	(_loRa+9)& (0+255),b
 24932                           
 24933                           ; BSR set to: 2
 24934                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 24935  00C8BE  0E00               	movlw	0
 24936  00C8C0  6FD3               	movwf	(_loRa+211)& (0+255),b
 24937  00C8C2  0E00               	movlw	0
 24938  00C8C4  6FD2               	movwf	(_loRa+210)& (0+255),b
 24939                           
 24940                           ; BSR set to: 2
 24941                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 24942  00C8C6  0E00               	movlw	0
 24943  00C8C8  6FDC               	movwf	(_loRa+220)& (0+255),b
 24944  00C8CA  0E01               	movlw	1
 24945  00C8CC  6FDB               	movwf	(_loRa+219)& (0+255),b
 24946                           
 24947                           ; BSR set to: 2
 24948                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 24949  00C8CE  0E00               	movlw	0
 24950  00C8D0  6FD1               	movwf	(_loRa+209)& (0+255),b
 24951  00C8D2  0E00               	movlw	0
 24952  00C8D4  6FD0               	movwf	(_loRa+208)& (0+255),b
 24953                           
 24954                           ; BSR set to: 2
 24955                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 24956  00C8D6  0E00               	movlw	0
 24957  00C8D8  6FEE               	movwf	(_loRa+238)& (0+255),b
 24958                           
 24959                           ; BSR set to: 2
 24960                           ;lorawan_eu.c: 169: loRa.offset = 0;
 24961  00C8DA  0E00               	movlw	0
 24962  00C8DC  6FEF               	movwf	(_loRa+239)& (0+255),b
 24963                           
 24964                           ; BSR set to: 2
 24965                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 24966  00C8DE  0E00               	movlw	0
 24967  00C8E0  6FC8               	movwf	(_loRa+200)& (0+255),b
 24968  00C8E2  0E00               	movlw	0
 24969  00C8E4  6FC9               	movwf	(_loRa+201)& (0+255),b
 24970  00C8E6  0E00               	movlw	0
 24971  00C8E8  6FCA               	movwf	(_loRa+202)& (0+255),b
 24972  00C8EA  0E00               	movlw	0
 24973  00C8EC  6FCB               	movwf	(_loRa+203)& (0+255),b
 24974                           
 24975                           ; BSR set to: 2
 24976                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 24977  00C8EE  9503               	bcf	(_loRa+3)& (0+255),2,b
 24978                           
 24979                           ; BSR set to: 2
 24980                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 24981  00C8F0  0E00               	movlw	0
 24982  00C8F2  6F02               	movwf	(_loRa+2)& (0+255),b
 24983  00C8F4  0E00               	movlw	0
 24984  00C8F6  6F03               	movwf	(_loRa+3)& (0+255),b
 24985  00C8F8  0E00               	movlw	0
 24986  00C8FA  6F04               	movwf	(_loRa+4)& (0+255),b
 24987  00C8FC  0E00               	movlw	0
 24988  00C8FE  6F05               	movwf	(_loRa+5)& (0+255),b
 24989                           
 24990                           ; BSR set to: 2
 24991                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 24992  00C900  0E00               	movlw	0
 24993  00C902  6F01               	movwf	(_loRa+1)& (0+255),b
 24994  00C904  0E00               	movlw	0
 24995  00C906  6F00               	movwf	_loRa& (0+255),b
 24996                           
 24997                           ; BSR set to: 2
 24998                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 24999  00C908  0E07               	movlw	7
 25000  00C90A  6FD7               	movwf	(_loRa+215)& (0+255),b
 25001                           
 25002                           ; BSR set to: 2
 25003                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 25004  00C90C  0E00               	movlw	0
 25005  00C90E  6FD6               	movwf	(_loRa+214)& (0+255),b
 25006                           
 25007                           ; BSR set to: 2
 25008                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 25009  00C910  0E01               	movlw	1
 25010  00C912  6FD9               	movwf	(_loRa+217)& (0+255),b
 25011                           
 25012                           ; BSR set to: 2
 25013                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 25014  00C914  0E01               	movlw	1
 25015  00C916  6FD8               	movwf	(_loRa+216)& (0+255),b
 25016                           
 25017                           ; BSR set to: 2
 25018                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 25019  00C918  69E0               	setf	(_loRa+224)& (0+255),b
 25020                           
 25021                           ; BSR set to: 2
 25022                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 25023  00C91A  C04A  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 25024                           
 25025                           ; BSR set to: 2
 25026                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 25027  00C91E  0E00               	movlw	0
 25028  00C920  6F12               	movwf	(_loRa+18)& (0+255),b
 25029                           
 25030                           ; BSR set to: 2
 25031                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 25032  00C922  0E10               	movlw	16
 25033  00C924  6FED               	movwf	(_loRa+237)& (0+255),b
 25034                           
 25035                           ; BSR set to: 2
 25036                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 25037  00C926  504A               	movf	LORAWAN_Reset@ismBandNew,w,c
 25038  00C928  A4D8               	btfss	status,2,c
 25039  00C92A  D01B               	goto	l15352
 25040                           
 25041                           ; BSR set to: 2
 25042                           ;lorawan_eu.c: 193: {;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 25043  00C92C  0EBF               	movlw	low (_radioBuffer+16)
 25044  00C92E  6E1A               	movwf	RADIO_Init@radioBuffer,c
 25045  00C930  0E05               	movlw	high (_radioBuffer+16)
 25046  00C932  6E1B               	movwf	RADIO_Init@radioBuffer+1,c
 25047  00C934  0EA0               	movlw	160
 25048  00C936  6E1C               	movwf	RADIO_Init@frequency,c
 25049  00C938  0E27               	movlw	39
 25050  00C93A  6E1D               	movwf	RADIO_Init@frequency+1,c
 25051  00C93C  0EBE               	movlw	190
 25052  00C93E  6E1E               	movwf	RADIO_Init@frequency+2,c
 25053  00C940  0E33               	movlw	51
 25054  00C942  6E1F               	movwf	RADIO_Init@frequency+3,c
 25055  00C944  EC78  F062         	call	_RADIO_Init	;wreg free
 25056                           
 25057                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 25058  00C948  EC1E  F04F         	call	_InitDefault868Channels	;wreg free
 25059                           
 25060                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 25061  00C94C  0E00               	movlw	0
 25062  00C94E  0102               	movlb	2	; () banked
 25063  00C950  6F1C               	movwf	(_loRa+28)& (0+255),b
 25064                           
 25065                           ; BSR set to: 2
 25066                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 25067  00C952  0E08               	movlw	8
 25068  00C954  6F18               	movwf	(_loRa+24)& (0+255),b
 25069  00C956  0EE6               	movlw	230
 25070  00C958  6F19               	movwf	(_loRa+25)& (0+255),b
 25071  00C95A  0ED3               	movlw	211
 25072  00C95C  6F1A               	movwf	(_loRa+26)& (0+255),b
 25073  00C95E  0E33               	movlw	51
 25074  00C960  D01A               	goto	L26
 25075  00C962                     l15352:
 25076                           
 25077                           ; BSR set to: 2
 25078                           ;lorawan_eu.c: 201: else;lorawan_eu.c: 202: {;lorawan_eu.c: 203: RADIO_Init(&radioBuffer
      +                          [16], (433300000));
 25079  00C962  0EBF               	movlw	low (_radioBuffer+16)
 25080  00C964  6E1A               	movwf	RADIO_Init@radioBuffer,c
 25081  00C966  0E05               	movlw	high (_radioBuffer+16)
 25082  00C968  6E1B               	movwf	RADIO_Init@radioBuffer+1,c
 25083  00C96A  0E20               	movlw	32
 25084  00C96C  6E1C               	movwf	RADIO_Init@frequency,c
 25085  00C96E  0EA2               	movlw	162
 25086  00C970  6E1D               	movwf	RADIO_Init@frequency+1,c
 25087  00C972  0ED3               	movlw	211
 25088  00C974  6E1E               	movwf	RADIO_Init@frequency+2,c
 25089  00C976  0E19               	movlw	25
 25090  00C978  6E1F               	movwf	RADIO_Init@frequency+3,c
 25091  00C97A  EC78  F062         	call	_RADIO_Init	;wreg free
 25092                           
 25093                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 25094  00C97E  ECE5  F04E         	call	_InitDefault433Channels	;wreg free
 25095                           
 25096                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 25097  00C982  0E00               	movlw	0
 25098  00C984  0102               	movlb	2	; () banked
 25099  00C986  6F1C               	movwf	(_loRa+28)& (0+255),b
 25100                           
 25101                           ; BSR set to: 2
 25102                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 25103  00C988  0E28               	movlw	40
 25104  00C98A  6F18               	movwf	(_loRa+24)& (0+255),b
 25105  00C98C  0E76               	movlw	118
 25106  00C98E  6F19               	movwf	(_loRa+25)& (0+255),b
 25107  00C990  0EE8               	movlw	232
 25108  00C992  6F1A               	movwf	(_loRa+26)& (0+255),b
 25109  00C994  0E19               	movlw	25
 25110  00C996                     L26:
 25111  00C996  6F1B               	movwf	(_loRa+27)& (0+255),b
 25112                           
 25113                           ; BSR set to: 2
 25114                           ;lorawan_eu.c: 209: };lorawan_eu.c: 211: loRa.txPower = 1;
 25115  00C998  0E01               	movlw	1
 25116  00C99A  6FE1               	movwf	(_loRa+225)& (0+255),b
 25117                           
 25118                           ; BSR set to: 2
 25119                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 25120  00C99C  0E00               	movlw	0
 25121  00C99E  6FDF               	movwf	(_loRa+223)& (0+255),b
 25122                           
 25123                           ; BSR set to: 2
 25124                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 25125  00C9A0  EC67  F054         	call	_UpdateMinMaxChDataRate	;wreg free
 25126                           
 25127                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 25128  00C9A4  0E00               	movlw	0
 25129  00C9A6  0102               	movlb	2	; () banked
 25130  00C9A8  6FA6               	movwf	(_loRa+166)& (0+255),b
 25131  00C9AA  0E00               	movlw	0
 25132  00C9AC  6FA5               	movwf	(_loRa+165)& (0+255),b
 25133                           
 25134                           ; BSR set to: 2
 25135                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 25136  00C9AE  0E1D               	movlw	low (_loRa+29)
 25137  00C9B0  6E01               	movwf	memset@p1,c
 25138  00C9B2  0E02               	movlw	high (_loRa+29)
 25139  00C9B4  6E02               	movwf	memset@p1+1,c
 25140  00C9B6  0E00               	movlw	0
 25141  00C9B8  6E04               	movwf	memset@c+1,c
 25142  00C9BA  0E00               	movlw	0
 25143  00C9BC  6E03               	movwf	memset@c,c
 25144  00C9BE  0E00               	movlw	0
 25145  00C9C0  6E06               	movwf	memset@n+1,c
 25146  00C9C2  0E69               	movlw	105
 25147  00C9C4  6E05               	movwf	memset@n,c
 25148  00C9C6  EC7A  F047         	call	_memset	;wreg free
 25149                           
 25150                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 25151  00C9CA  0E03               	movlw	3
 25152  00C9CC  0102               	movlb	2	; () banked
 25153  00C9CE  6F95               	movwf	(_loRa+149)& (0+255),b
 25154  00C9D0  0EE8               	movlw	232
 25155  00C9D2  6F94               	movwf	(_loRa+148)& (0+255),b
 25156                           
 25157                           ; BSR set to: 2
 25158                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 25159  00C9D4  0E07               	movlw	7
 25160  00C9D6  6F97               	movwf	(_loRa+151)& (0+255),b
 25161  00C9D8  0ED0               	movlw	208
 25162  00C9DA  6F96               	movwf	(_loRa+150)& (0+255),b
 25163                           
 25164                           ; BSR set to: 2
 25165                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 25166  00C9DC  0E13               	movlw	19
 25167  00C9DE  6F99               	movwf	(_loRa+153)& (0+255),b
 25168  00C9E0  0E88               	movlw	136
 25169  00C9E2  6F98               	movwf	(_loRa+152)& (0+255),b
 25170                           
 25171                           ; BSR set to: 2
 25172                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 25173  00C9E4  0E17               	movlw	23
 25174  00C9E6  6F9B               	movwf	(_loRa+155)& (0+255),b
 25175  00C9E8  0E70               	movlw	112
 25176  00C9EA  6F9A               	movwf	(_loRa+154)& (0+255),b
 25177                           
 25178                           ; BSR set to: 2
 25179                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 25180  00C9EC  0E07               	movlw	7
 25181  00C9EE  6FA1               	movwf	(_loRa+161)& (0+255),b
 25182  00C9F0  0ED0               	movlw	208
 25183  00C9F2  6FA0               	movwf	(_loRa+160)& (0+255),b
 25184                           
 25185                           ; BSR set to: 2
 25186                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 25187  00C9F4  0E20               	movlw	32
 25188  00C9F6  6FA3               	movwf	(_loRa+163)& (0+255),b
 25189                           
 25190                           ; BSR set to: 2
 25191                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 25192  00C9F8  0E40               	movlw	64
 25193  00C9FA  6FA2               	movwf	(_loRa+162)& (0+255),b
 25194                           
 25195                           ; BSR set to: 2
 25196                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 25197  00C9FC  0E40               	movlw	64
 25198  00C9FE  6F9D               	movwf	(_loRa+157)& (0+255),b
 25199  00CA00  0E00               	movlw	0
 25200  00CA02  6F9C               	movwf	(_loRa+156)& (0+255),b
 25201                           
 25202                           ; BSR set to: 2
 25203                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 25204  00CA04  0E40               	movlw	64
 25205  00CA06  6F9F               	movwf	(_loRa+159)& (0+255),b
 25206  00CA08  0E00               	movlw	0
 25207  00CA0A  6F9E               	movwf	(_loRa+158)& (0+255),b
 25208                           
 25209                           ; BSR set to: 2
 25210                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 25211  00CA0C  0E00               	movlw	0
 25212  00CA0E  6E40               	movwf	LORAWAN_LinkCheckConfigure@period+1,c
 25213  00CA10  0E00               	movlw	0
 25214  00CA12  6E3F               	movwf	LORAWAN_LinkCheckConfigure@period,c
 25215  00CA14  EC1B  F05F         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 25216  00CA18  0012               	return		;funcret
 25217  00CA1A                     __end_of_LORAWAN_Reset:
 25218                           	opt callstack 0
 25219                           
 25220 ;; *************** function _UpdateMinMaxChDataRate *****************
 25221 ;; Defined at:
 25222 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25223 ;; Parameters:    Size  Location     Type
 25224 ;;		None
 25225 ;; Auto vars:     Size  Location     Type
 25226 ;;  i               1    1[COMRAM] unsigned char 
 25227 ;; Return value:  Size  Location     Type
 25228 ;;                  1    wreg      void 
 25229 ;; Registers used:
 25230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25231 ;; Tracked objects:
 25232 ;;		On entry : 0/0
 25233 ;;		On exit  : 0/0
 25234 ;;		Unchanged: 0/0
 25235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25239 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25240 ;;Total ram usage:        2 bytes
 25241 ;; Hardware stack levels used:    1
 25242 ;; This function calls:
 25243 ;;		Nothing
 25244 ;; This function is called by:
 25245 ;;		_LORAWAN_Reset
 25246 ;; This function uses a non-reentrant model
 25247 ;;
 25248                           
 25249                           	psect	text155
 25250  00A8CE                     __ptext155:
 25251                           	opt callstack 0
 25252  00A8CE                     _UpdateMinMaxChDataRate:
 25253                           	opt callstack 28
 25254                           
 25255                           ;lorawan.c: 1065: uint8_t i;;lorawan.c: 1068: loRa.minDataRate = 7;
 25256                           
 25257                           ;incstack = 0
 25258  00A8CE  0E07               	movlw	7
 25259  00A8D0  0102               	movlb	2	; () banked
 25260  00A8D2  6FEB               	movwf	(_loRa+235)& (0+255),b
 25261                           
 25262                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 25263  00A8D4  0E00               	movlw	0
 25264  00A8D6  6FEC               	movwf	(_loRa+236)& (0+255),b
 25265                           
 25266                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 25267  00A8D8  0E00               	movlw	0
 25268  00A8DA  6E02               	movwf	UpdateMinMaxChDataRate@i,c
 25269  00A8DC  D050               	goto	l11348
 25270  00A8DE                     l11336:
 25271                           
 25272                           ; BSR set to: 2
 25273                           ;lorawan.c: 1072: {;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate)
      +                           && (Channels[i].status == 1) )
 25274  00A8DE  5002               	movf	UpdateMinMaxChDataRate@i,w,c
 25275  00A8E0  0D0E               	mullw	14
 25276  00A8E2  0E05               	movlw	low (_Channels+5)
 25277  00A8E4  24F3               	addwf	prodl,w,c
 25278  00A8E6  6ED9               	movwf	fsr2l,c
 25279  00A8E8  0E03               	movlw	high (_Channels+5)
 25280  00A8EA  20F4               	addwfc	prodh,w,c
 25281  00A8EC  6EDA               	movwf	fsr2h,c
 25282  00A8EE  0103               	movlb	3	; () banked
 25283  00A8F0  50DF               	movf	223,w,c
 25284  00A8F2  0B0F               	andlw	15
 25285  00A8F4  6E01               	movwf	??_UpdateMinMaxChDataRate& (0+255),c
 25286  00A8F6  0102               	movlb	2	; () banked
 25287  00A8F8  51EB               	movf	(_loRa+235)& (0+255),w,b
 25288  00A8FA  5C01               	subwf	??_UpdateMinMaxChDataRate,w,c
 25289  00A8FC  B0D8               	btfsc	status,0,c
 25290  00A8FE  D018               	goto	l1883
 25291                           
 25292                           ; BSR set to: 2
 25293  00A900  5002               	movf	UpdateMinMaxChDataRate@i,w,c
 25294  00A902  0D0E               	mullw	14
 25295  00A904  0E04               	movlw	low (_Channels+4)
 25296  00A906  24F3               	addwf	prodl,w,c
 25297  00A908  6ED9               	movwf	fsr2l,c
 25298  00A90A  0E03               	movlw	high (_Channels+4)
 25299  00A90C  20F4               	addwfc	prodh,w,c
 25300  00A90E  6EDA               	movwf	fsr2h,c
 25301  00A910  04DE               	decf	postinc2,w,c
 25302  00A912  A4D8               	btfss	status,2,c
 25303  00A914  D00D               	goto	l1883
 25304                           
 25305                           ; BSR set to: 2
 25306                           ;lorawan.c: 1074: {;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 25307  00A916  5002               	movf	UpdateMinMaxChDataRate@i,w,c
 25308  00A918  0D0E               	mullw	14
 25309  00A91A  0E05               	movlw	low (_Channels+5)
 25310  00A91C  24F3               	addwf	prodl,w,c
 25311  00A91E  6ED9               	movwf	fsr2l,c
 25312  00A920  0E03               	movlw	high (_Channels+5)
 25313  00A922  20F4               	addwfc	prodh,w,c
 25314  00A924  6EDA               	movwf	fsr2h,c
 25315  00A926  0103               	movlb	3	; () banked
 25316  00A928  50DF               	movf	223,w,c
 25317  00A92A  0B0F               	andlw	15
 25318  00A92C  0102               	movlb	2	; () banked
 25319  00A92E  6FEB               	movwf	(_loRa+235)& (0+255),b
 25320  00A930                     l1883:
 25321                           
 25322                           ; BSR set to: 2
 25323                           ;lorawan.c: 1076: };lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate)
      +                           && (Channels[i].status == 1) )
 25324  00A930  5002               	movf	UpdateMinMaxChDataRate@i,w,c
 25325  00A932  0D0E               	mullw	14
 25326  00A934  0E05               	movlw	low (_Channels+5)
 25327  00A936  24F3               	addwf	prodl,w,c
 25328  00A938  6ED9               	movwf	fsr2l,c
 25329  00A93A  0E03               	movlw	high (_Channels+5)
 25330  00A93C  20F4               	addwfc	prodh,w,c
 25331  00A93E  6EDA               	movwf	fsr2h,c
 25332  00A940  0103               	movlb	3	; () banked
 25333  00A942  38DF               	swapf	223,w,c
 25334  00A944  0B0F               	andlw	15
 25335  00A946  0102               	movlb	2	; () banked
 25336  00A948  61EC               	cpfslt	(_loRa+236)& (0+255),b
 25337  00A94A  D018               	goto	l11346
 25338                           
 25339                           ; BSR set to: 2
 25340  00A94C  5002               	movf	UpdateMinMaxChDataRate@i,w,c
 25341  00A94E  0D0E               	mullw	14
 25342  00A950  0E04               	movlw	low (_Channels+4)
 25343  00A952  24F3               	addwf	prodl,w,c
 25344  00A954  6ED9               	movwf	fsr2l,c
 25345  00A956  0E03               	movlw	high (_Channels+4)
 25346  00A958  20F4               	addwfc	prodh,w,c
 25347  00A95A  6EDA               	movwf	fsr2h,c
 25348  00A95C  04DE               	decf	postinc2,w,c
 25349  00A95E  A4D8               	btfss	status,2,c
 25350  00A960  D00D               	goto	l11346
 25351                           
 25352                           ; BSR set to: 2
 25353                           ;lorawan.c: 1078: {;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 25354  00A962  5002               	movf	UpdateMinMaxChDataRate@i,w,c
 25355  00A964  0D0E               	mullw	14
 25356  00A966  0E05               	movlw	low (_Channels+5)
 25357  00A968  24F3               	addwf	prodl,w,c
 25358  00A96A  6ED9               	movwf	fsr2l,c
 25359  00A96C  0E03               	movlw	high (_Channels+5)
 25360  00A96E  20F4               	addwfc	prodh,w,c
 25361  00A970  6EDA               	movwf	fsr2h,c
 25362  00A972  0103               	movlb	3	; () banked
 25363  00A974  38DF               	swapf	223,w,c
 25364  00A976  0B0F               	andlw	15
 25365  00A978  0102               	movlb	2	; () banked
 25366  00A97A  6FEC               	movwf	(_loRa+236)& (0+255),b
 25367  00A97C                     l11346:
 25368                           
 25369                           ; BSR set to: 2
 25370  00A97C  2A02               	incf	UpdateMinMaxChDataRate@i,f,c
 25371  00A97E                     l11348:
 25372                           
 25373                           ; BSR set to: 2
 25374  00A97E  51ED               	movf	(_loRa+237)& (0+255),w,b
 25375  00A980  5C02               	subwf	UpdateMinMaxChDataRate@i,w,c
 25376  00A982  B0D8               	btfsc	status,0,c
 25377  00A984  0012               	return	
 25378  00A986  D7AB               	goto	l11336
 25379  00A988                     __end_of_UpdateMinMaxChDataRate:
 25380                           	opt callstack 0
 25381                           
 25382 ;; *************** function _StopAllSoftwareTimers *****************
 25383 ;; Defined at:
 25384 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25385 ;; Parameters:    Size  Location     Type
 25386 ;;		None
 25387 ;; Auto vars:     Size  Location     Type
 25388 ;;		None
 25389 ;; Return value:  Size  Location     Type
 25390 ;;                  1    wreg      void 
 25391 ;; Registers used:
 25392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25393 ;; Tracked objects:
 25394 ;;		On entry : 0/0
 25395 ;;		On exit  : 0/0
 25396 ;;		Unchanged: 0/0
 25397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25402 ;;Total ram usage:        0 bytes
 25403 ;; Hardware stack levels used:    1
 25404 ;; Hardware stack levels required when called:    1
 25405 ;; This function calls:
 25406 ;;		_SwTimerStop
 25407 ;; This function is called by:
 25408 ;;		_LORAWAN_Init
 25409 ;;		_LORAWAN_Reset
 25410 ;; This function uses a non-reentrant model
 25411 ;;
 25412                           
 25413                           	psect	text156
 25414  009702                     __ptext156:
 25415                           	opt callstack 0
 25416  009702                     _StopAllSoftwareTimers:
 25417                           	opt callstack 28
 25418                           
 25419                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 25420                           
 25421                           ; BSR set to: 2
 25422                           ;incstack = 0
 25423  009702  0102               	movlb	2	; () banked
 25424  009704  51E2               	movf	(_loRa+226)& (0+255),w,b
 25425  009706  EC46  F046         	call	_SwTimerStop
 25426                           
 25427                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 25428  00970A  0102               	movlb	2	; () banked
 25429  00970C  51E3               	movf	(_loRa+227)& (0+255),w,b
 25430  00970E  EC46  F046         	call	_SwTimerStop
 25431                           
 25432                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 25433  009712  0102               	movlb	2	; () banked
 25434  009714  51E7               	movf	(_loRa+231)& (0+255),w,b
 25435  009716  EC46  F046         	call	_SwTimerStop
 25436                           
 25437                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 25438  00971A  0102               	movlb	2	; () banked
 25439  00971C  51E4               	movf	(_loRa+228)& (0+255),w,b
 25440  00971E  EC46  F046         	call	_SwTimerStop
 25441                           
 25442                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 25443  009722  0102               	movlb	2	; () banked
 25444  009724  51E5               	movf	(_loRa+229)& (0+255),w,b
 25445  009726  EC46  F046         	call	_SwTimerStop
 25446                           
 25447                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 25448  00972A  0102               	movlb	2	; () banked
 25449  00972C  51E8               	movf	(_loRa+232)& (0+255),w,b
 25450  00972E  EC46  F046         	call	_SwTimerStop
 25451                           
 25452                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 25453  009732  0102               	movlb	2	; () banked
 25454  009734  51E6               	movf	(_loRa+230)& (0+255),w,b
 25455  009736  EC46  F046         	call	_SwTimerStop
 25456                           
 25457                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 25458  00973A  0102               	movlb	2	; () banked
 25459  00973C  51EA               	movf	(_loRa+234)& (0+255),w,b
 25460  00973E  EC46  F046         	call	_SwTimerStop
 25461                           
 25462                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 25463  009742  0102               	movlb	2	; () banked
 25464  009744  51F3               	movf	(_loRa+243)& (0+255),w,b
 25465  009746  EC46  F046         	call	_SwTimerStop
 25466                           
 25467                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 25468  00974A  0102               	movlb	2	; () banked
 25469  00974C  51E9               	movf	(_loRa+233)& (0+255),w,b
 25470  00974E  EC46  F046         	call	_SwTimerStop
 25471  009752  0012               	return		;funcret
 25472  009754                     __end_of_StopAllSoftwareTimers:
 25473                           	opt callstack 0
 25474                           
 25475 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 25476 ;; Defined at:
 25477 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25478 ;; Parameters:    Size  Location     Type
 25479 ;;  syncWord        1    wreg     unsigned char 
 25480 ;; Auto vars:     Size  Location     Type
 25481 ;;  syncWord        1    0[COMRAM] unsigned char 
 25482 ;; Return value:  Size  Location     Type
 25483 ;;                  1    wreg      void 
 25484 ;; Registers used:
 25485 ;;		wreg
 25486 ;; Tracked objects:
 25487 ;;		On entry : 0/0
 25488 ;;		On exit  : 0/0
 25489 ;;		Unchanged: 0/0
 25490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25495 ;;Total ram usage:        1 bytes
 25496 ;; Hardware stack levels used:    1
 25497 ;; This function calls:
 25498 ;;		Nothing
 25499 ;; This function is called by:
 25500 ;;		_LORAWAN_Reset
 25501 ;;		_ConfigureRadio
 25502 ;; This function uses a non-reentrant model
 25503 ;;
 25504                           
 25505                           	psect	text157
 25506  0089E6                     __ptext157:
 25507                           	opt callstack 0
 25508  0089E6                     _RADIO_SetLoRaSyncWord:
 25509                           	opt callstack 24
 25510                           
 25511                           ;incstack = 0
 25512                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 25513  0089E6  6E01               	movwf	RADIO_SetLoRaSyncWord@syncWord,c
 25514                           
 25515                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 25516  0089E8  C001  F126         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 25517  0089EC  0012               	return		;funcret
 25518  0089EE                     __end_of_RADIO_SetLoRaSyncWord:
 25519                           	opt callstack 0
 25520                           
 25521 ;; *************** function _RADIO_Init *****************
 25522 ;; Defined at:
 25523 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25524 ;; Parameters:    Size  Location     Type
 25525 ;;  radioBuffer     2   25[COMRAM] PTR unsigned char 
 25526 ;;		 -> radioBuffer(271), 
 25527 ;;  frequency       4   27[COMRAM] unsigned long 
 25528 ;; Auto vars:     Size  Location     Type
 25529 ;;		None
 25530 ;; Return value:  Size  Location     Type
 25531 ;;                  1    wreg      void 
 25532 ;; Registers used:
 25533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25534 ;; Tracked objects:
 25535 ;;		On entry : 0/0
 25536 ;;		On exit  : 0/0
 25537 ;;		Unchanged: 0/0
 25538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25539 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25542 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25543 ;;Total ram usage:        7 bytes
 25544 ;; Hardware stack levels used:    1
 25545 ;; Hardware stack levels required when called:    4
 25546 ;; This function calls:
 25547 ;;		_RADIO_RegisterRead
 25548 ;;		_RADIO_RegisterWrite
 25549 ;;		_RADIO_Reset
 25550 ;;		_RADIO_WriteFrequency
 25551 ;;		_RADIO_WriteMode
 25552 ;;		_SwTimerCreate
 25553 ;;		_SwTimerSetCallback
 25554 ;;		_SwTimerStop
 25555 ;; This function is called by:
 25556 ;;		_LORAWAN_Init
 25557 ;;		_LORAWAN_Reset
 25558 ;; This function uses a non-reentrant model
 25559 ;;
 25560                           
 25561                           	psect	text158
 25562  00C4F0                     __ptext158:
 25563                           	opt callstack 0
 25564  00C4F0                     _RADIO_Init:
 25565                           	opt callstack 25
 25566                           
 25567                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 25568                           
 25569                           ;incstack = 0
 25570  00C4F0  C01C  F118         	movff	RADIO_Init@frequency,_RadioConfiguration
 25571  00C4F4  C01D  F119         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 25572  00C4F8  C01E  F11A         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 25573  00C4FC  C01F  F11B         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 25574                           
 25575                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 25576  00C500  0EA8               	movlw	168
 25577  00C502  0101               	movlb	1	; () banked
 25578  00C504  6F1C               	movwf	(_RadioConfiguration+4)& (0+255),b
 25579  00C506  0E61               	movlw	97
 25580  00C508  6F1D               	movwf	(_RadioConfiguration+5)& (0+255),b
 25581  00C50A  0E00               	movlw	0
 25582  00C50C  6F1E               	movwf	(_RadioConfiguration+6)& (0+255),b
 25583  00C50E  0E00               	movlw	0
 25584  00C510  6F1F               	movwf	(_RadioConfiguration+7)& (0+255),b
 25585                           
 25586                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 25587  00C512  0E50               	movlw	80
 25588  00C514  6F20               	movwf	(_RadioConfiguration+8)& (0+255),b
 25589  00C516  0EC3               	movlw	195
 25590  00C518  6F21               	movwf	(_RadioConfiguration+9)& (0+255),b
 25591  00C51A  0E00               	movlw	0
 25592  00C51C  6F22               	movwf	(_RadioConfiguration+10)& (0+255),b
 25593  00C51E  0E00               	movlw	0
 25594  00C520  6F23               	movwf	(_RadioConfiguration+11)& (0+255),b
 25595                           
 25596                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 25597  00C522  0E01               	movlw	1
 25598  00C524  6F30               	movwf	(_RadioConfiguration+24)& (0+255),b
 25599                           
 25600                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 25601  00C526  0E07               	movlw	7
 25602  00C528  6F32               	movwf	(_RadioConfiguration+26)& (0+255),b
 25603                           
 25604                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 25605  00C52A  0E01               	movlw	1
 25606  00C52C  6F33               	movwf	(_RadioConfiguration+27)& (0+255),b
 25607                           
 25608                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 25609  00C52E  0E01               	movlw	1
 25610  00C530  6F39               	movwf	(_RadioConfiguration+33)& (0+255),b
 25611                           
 25612                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 25613  00C532  0E00               	movlw	0
 25614  00C534  6F3A               	movwf	(_RadioConfiguration+34)& (0+255),b
 25615                           
 25616                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 25617  00C536  0E00               	movlw	0
 25618  00C538  6F25               	movwf	(_RadioConfiguration+13)& (0+255),b
 25619  00C53A  0E08               	movlw	8
 25620  00C53C  6F24               	movwf	(_RadioConfiguration+12)& (0+255),b
 25621                           
 25622                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 25623  00C53E  0E0C               	movlw	12
 25624  00C540  6F31               	movwf	(_RadioConfiguration+25)& (0+255),b
 25625                           
 25626                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 25627  00C542  0E01               	movlw	1
 25628  00C544  6F34               	movwf	(_RadioConfiguration+28)& (0+255),b
 25629                           
 25630                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 25631  00C546  0E00               	movlw	0
 25632  00C548  6F35               	movwf	(_RadioConfiguration+29)& (0+255),b
 25633                           
 25634                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 25635  00C54A  0E00               	movlw	0
 25636  00C54C  6F38               	movwf	(_RadioConfiguration+32)& (0+255),b
 25637                           
 25638                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 25639  00C54E  0EC1               	movlw	193
 25640  00C550  6F27               	movwf	(_RadioConfiguration+15)& (0+255),b
 25641                           
 25642                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 25643  00C552  0E94               	movlw	148
 25644  00C554  6F28               	movwf	(_RadioConfiguration+16)& (0+255),b
 25645                           
 25646                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 25647  00C556  0EC1               	movlw	193
 25648  00C558  6F29               	movwf	(_RadioConfiguration+17)& (0+255),b
 25649                           
 25650                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 25651  00C55A  0E03               	movlw	3
 25652  00C55C  6F2F               	movwf	(_RadioConfiguration+23)& (0+255),b
 25653                           
 25654                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 25655  00C55E  0E34               	movlw	52
 25656  00C560  6F26               	movwf	(_RadioConfiguration+14)& (0+255),b
 25657                           
 25658                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 25659  00C562  0E00               	movlw	0
 25660  00C564  6F3B               	movwf	(_RadioConfiguration+35)& (0+255),b
 25661                           
 25662                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 25663  00C566  0E00               	movlw	0
 25664  00C568  6F3C               	movwf	(_RadioConfiguration+36)& (0+255),b
 25665                           
 25666                           ; BSR set to: 1
 25667                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 25668  00C56A  C01A  F13D         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 25669  00C56E  C01B  F13E         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 25670                           
 25671                           ; BSR set to: 1
 25672                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 25673  00C572  0E00               	movlw	0
 25674  00C574  6F37               	movwf	(_RadioConfiguration+31)& (0+255),b
 25675  00C576  0E00               	movlw	0
 25676  00C578  6F36               	movwf	(_RadioConfiguration+30)& (0+255),b
 25677                           
 25678                           ; BSR set to: 1
 25679                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 25680  00C57A  0E80               	movlw	128
 25681  00C57C  6F4A               	movwf	(_RadioConfiguration+50)& (0+255),b
 25682                           
 25683                           ; BSR set to: 1
 25684                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 25685  00C57E  0E98               	movlw	152
 25686  00C580  6F42               	movwf	(_RadioConfiguration+42)& (0+255),b
 25687  00C582  0E3A               	movlw	58
 25688  00C584  6F43               	movwf	(_RadioConfiguration+43)& (0+255),b
 25689  00C586  0E00               	movlw	0
 25690  00C588  6F44               	movwf	(_RadioConfiguration+44)& (0+255),b
 25691  00C58A  0E00               	movlw	0
 25692  00C58C  6F45               	movwf	(_RadioConfiguration+45)& (0+255),b
 25693                           
 25694                           ; BSR set to: 1
 25695                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 25696  00C58E  0E02               	movlw	2
 25697  00C590  6F4B               	movwf	(_RadioConfiguration+51)& (0+255),b
 25698                           
 25699                           ; BSR set to: 1
 25700                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 25701  00C592  0E0B               	movlw	11
 25702  00C594  6F4C               	movwf	(_RadioConfiguration+52)& (0+255),b
 25703                           
 25704                           ; BSR set to: 1
 25705                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 25706  00C596  0E12               	movlw	18
 25707  00C598  6F4D               	movwf	(_RadioConfiguration+53)& (0+255),b
 25708                           
 25709                           ; BSR set to: 1
 25710                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 25711  00C59A  0E00               	movlw	0
 25712  00C59C  6F47               	movwf	(_RadioConfiguration+47)& (0+255),b
 25713  00C59E  0E00               	movlw	0
 25714  00C5A0  6F48               	movwf	(_RadioConfiguration+48)& (0+255),b
 25715                           
 25716                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 25717  00C5A2  5146               	movf	(_RadioConfiguration+46)& (0+255),w,b
 25718  00C5A4  A4D8               	btfss	status,2,c
 25719  00C5A6  D023               	goto	l14716
 25720                           
 25721                           ; BSR set to: 1
 25722                           ;radio_driver_SX1276.c: 457: {;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirT
      +                          imerId = SwTimerCreate();
 25723  00C5A8  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 25724  00C5AC  0101               	movlb	1	; () banked
 25725  00C5AE  6F3F               	movwf	(_RadioConfiguration+39)& (0+255),b
 25726                           
 25727                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 25728  00C5B0  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 25729  00C5B4  0101               	movlb	1	; () banked
 25730  00C5B6  6F40               	movwf	(_RadioConfiguration+40)& (0+255),b
 25731                           
 25732                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 25733  00C5B8  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 25734  00C5BC  0101               	movlb	1	; () banked
 25735  00C5BE  6F41               	movwf	(_RadioConfiguration+41)& (0+255),b
 25736                           
 25737                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 25738  00C5C0  0EA4               	movlw	low _RADIO_RxFSKTimeout
 25739  00C5C2  6E01               	movwf	SwTimerSetCallback@callback,c
 25740  00C5C4  0E8F               	movlw	high _RADIO_RxFSKTimeout
 25741  00C5C6  6E02               	movwf	SwTimerSetCallback@callback+1,c
 25742  00C5C8  0E00               	movlw	0
 25743  00C5CA  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 25744  00C5CC  5140               	movf	(_RadioConfiguration+40)& (0+255),w,b
 25745  00C5CE  EC2B  F048         	call	_SwTimerSetCallback
 25746                           
 25747                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 25748  00C5D2  0EF8               	movlw	low _RADIO_WatchdogTimeout
 25749  00C5D4  6E01               	movwf	SwTimerSetCallback@callback,c
 25750  00C5D6  0E92               	movlw	high _RADIO_WatchdogTimeout
 25751  00C5D8  6E02               	movwf	SwTimerSetCallback@callback+1,c
 25752  00C5DA  0E00               	movlw	0
 25753  00C5DC  6E03               	movwf	SwTimerSetCallback@callbackParameter,c
 25754  00C5DE  0101               	movlb	1	; () banked
 25755  00C5E0  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25756  00C5E2  EC2B  F048         	call	_SwTimerSetCallback
 25757                           
 25758                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 25759  00C5E6  0E01               	movlw	1
 25760  00C5E8  0101               	movlb	1	; () banked
 25761  00C5EA  6F46               	movwf	(_RadioConfiguration+46)& (0+255),b
 25762                           
 25763                           ;radio_driver_SX1276.c: 466: }
 25764  00C5EC  D00B               	goto	l14718
 25765  00C5EE                     l14716:
 25766                           
 25767                           ; BSR set to: 1
 25768                           ;radio_driver_SX1276.c: 467: else;radio_driver_SX1276.c: 468: {;radio_driver_SX1276.c: 4
      +                          69: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 25769  00C5EE  513F               	movf	(_RadioConfiguration+39)& (0+255),w,b
 25770  00C5F0  EC46  F046         	call	_SwTimerStop
 25771                           
 25772                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 25773  00C5F4  0101               	movlb	1	; () banked
 25774  00C5F6  5140               	movf	(_RadioConfiguration+40)& (0+255),w,b
 25775  00C5F8  EC46  F046         	call	_SwTimerStop
 25776                           
 25777                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 25778  00C5FC  0101               	movlb	1	; () banked
 25779  00C5FE  5141               	movf	(_RadioConfiguration+41)& (0+255),w,b
 25780  00C600  EC46  F046         	call	_SwTimerStop
 25781  00C604                     l14718:
 25782                           
 25783                           ;radio_driver_SX1276.c: 472: };radio_driver_SX1276.c: 474: RADIO_Reset();
 25784  00C604  EC9C  F049         	call	_RADIO_Reset	;wreg free
 25785                           
 25786                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 25787  00C608  0E00               	movlw	0
 25788  00C60A  6E06               	movwf	RADIO_WriteMode@newModulation,c
 25789  00C60C  0E01               	movlw	1
 25790  00C60E  6E07               	movwf	RADIO_WriteMode@blocking,c
 25791  00C610  0E01               	movlw	1
 25792  00C612  EC6A  F058         	call	_RADIO_WriteMode
 25793                           
 25794                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 25795  00C616  C118  F00E         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 25796  00C61A  C119  F00F         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 25797  00C61E  C11A  F010         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 25798  00C622  C11B  F011         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 25799  00C626  ECF6  F057         	call	_RADIO_WriteFrequency	;wreg free
 25800                           
 25801                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 25802  00C62A  0E42               	movlw	66
 25803  00C62C  6E03               	movwf	RADIO_RegisterWrite@value,c
 25804  00C62E  0E3B               	movlw	59
 25805  00C630  ECF7  F045         	call	_RADIO_RegisterWrite
 25806  00C634                     l14726:
 25807  00C634  0E3B               	movlw	59
 25808  00C636  EC71  F046         	call	_RADIO_RegisterRead
 25809  00C63A  6E20               	movwf	??_RADIO_Init& (0+255),c
 25810  00C63C  BA20               	btfsc	??_RADIO_Init,5,c
 25811  00C63E  D7FA               	goto	l14726
 25812                           
 25813                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 25814  00C640  0E23               	movlw	35
 25815  00C642  6E03               	movwf	RADIO_RegisterWrite@value,c
 25816  00C644  0E0C               	movlw	12
 25817  00C646  ECF7  F045         	call	_RADIO_RegisterWrite
 25818                           
 25819                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 25820  00C64A  0E1E               	movlw	30
 25821  00C64C  6E03               	movwf	RADIO_RegisterWrite@value,c
 25822  00C64E  0E0D               	movlw	13
 25823  00C650  ECF7  F045         	call	_RADIO_RegisterWrite
 25824                           
 25825                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 25826  00C654  0EAA               	movlw	170
 25827  00C656  6E03               	movwf	RADIO_RegisterWrite@value,c
 25828  00C658  0E1F               	movlw	31
 25829  00C65A  ECF7  F045         	call	_RADIO_RegisterWrite
 25830                           
 25831                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 25832  00C65E  0E8F               	movlw	143
 25833  00C660  6E03               	movwf	RADIO_RegisterWrite@value,c
 25834  00C662  0E35               	movlw	53
 25835  00C664  ECF7  F045         	call	_RADIO_RegisterWrite
 25836                           
 25837                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 25838  00C668  0EFF               	movlw	255
 25839  00C66A  6E03               	movwf	RADIO_RegisterWrite@value,c
 25840  00C66C  0E32               	movlw	50
 25841  00C66E  ECF7  F045         	call	_RADIO_RegisterWrite
 25842                           
 25843                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 25844  00C672  0E40               	movlw	64
 25845  00C674  6E03               	movwf	RADIO_RegisterWrite@value,c
 25846  00C676  0E31               	movlw	49
 25847  00C678  ECF7  F045         	call	_RADIO_RegisterWrite
 25848                           
 25849                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 25850  00C67C  0E01               	movlw	1
 25851  00C67E  6E06               	movwf	RADIO_WriteMode@newModulation,c
 25852  00C680  0E01               	movlw	1
 25853  00C682  6E07               	movwf	RADIO_WriteMode@blocking,c
 25854  00C684  0E00               	movlw	0
 25855  00C686  EC6A  F058         	call	_RADIO_WriteMode
 25856                           
 25857                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 25858  00C68A  0EFF               	movlw	255
 25859  00C68C  6E03               	movwf	RADIO_RegisterWrite@value,c
 25860  00C68E  0E23               	movlw	35
 25861  00C690  ECF7  F045         	call	_RADIO_RegisterWrite
 25862                           
 25863                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 25864  00C694  0E42               	movlw	66
 25865  00C696  EC71  F046         	call	_RADIO_RegisterRead
 25866  00C69A  0101               	movlb	1	; () banked
 25867  00C69C  6F49               	movwf	(_RadioConfiguration+49)& (0+255),b
 25868                           
 25869                           ; BSR set to: 1
 25870  00C69E  0012               	return		;funcret
 25871  00C6A0                     __end_of_RADIO_Init:
 25872                           	opt callstack 0
 25873                           
 25874 ;; *************** function _SwTimerSetCallback *****************
 25875 ;; Defined at:
 25876 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 25877 ;; Parameters:    Size  Location     Type
 25878 ;;  timerId         1    wreg     unsigned char 
 25879 ;;  callback        2    0[COMRAM] PTR FTN(unsigned char ,)
 25880 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 25881 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 25882 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 25883 ;;  callbackPara    1    2[COMRAM] unsigned char 
 25884 ;; Auto vars:     Size  Location     Type
 25885 ;;  timerId         1    3[COMRAM] unsigned char 
 25886 ;; Return value:  Size  Location     Type
 25887 ;;                  1    wreg      void 
 25888 ;; Registers used:
 25889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25890 ;; Tracked objects:
 25891 ;;		On entry : 0/0
 25892 ;;		On exit  : 0/0
 25893 ;;		Unchanged: 0/0
 25894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25895 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25898 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25899 ;;Total ram usage:        4 bytes
 25900 ;; Hardware stack levels used:    1
 25901 ;; This function calls:
 25902 ;;		Nothing
 25903 ;; This function is called by:
 25904 ;;		_RADIO_Init
 25905 ;;		_SetCallbackSoftwareTimers
 25906 ;; This function uses a non-reentrant model
 25907 ;;
 25908                           
 25909                           	psect	text159
 25910  009056                     __ptext159:
 25911                           	opt callstack 0
 25912  009056                     _SwTimerSetCallback:
 25913                           	opt callstack 28
 25914                           
 25915                           ; BSR set to: 1
 25916                           ;incstack = 0
 25917                           ;SwTimerSetCallback@timerId stored from wreg
 25918  009056  6E04               	movwf	SwTimerSetCallback@timerId,c
 25919                           
 25920                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 25921  009058  5004               	movf	SwTimerSetCallback@timerId,w,c
 25922  00905A  0D08               	mullw	8
 25923  00905C  0E06               	movlw	low (_swTimers+6)
 25924  00905E  24F3               	addwf	prodl,w,c
 25925  009060  6ED9               	movwf	fsr2l,c
 25926  009062  0E04               	movlw	high (_swTimers+6)
 25927  009064  20F4               	addwfc	prodh,w,c
 25928  009066  6EDA               	movwf	fsr2h,c
 25929  009068  C001  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 25930  00906C  C002  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 25931                           
 25932                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 25933  009070  5004               	movf	SwTimerSetCallback@timerId,w,c
 25934  009072  0D08               	mullw	8
 25935  009074  0E05               	movlw	low (_swTimers+5)
 25936  009076  24F3               	addwf	prodl,w,c
 25937  009078  6ED9               	movwf	fsr2l,c
 25938  00907A  0E04               	movlw	high (_swTimers+5)
 25939  00907C  20F4               	addwfc	prodh,w,c
 25940  00907E  6EDA               	movwf	fsr2h,c
 25941  009080  C003  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 25942  009084  0012               	return		;funcret
 25943  009086                     __end_of_SwTimerSetCallback:
 25944                           	opt callstack 0
 25945                           
 25946 ;; *************** function _RADIO_WriteMode *****************
 25947 ;; Defined at:
 25948 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25949 ;; Parameters:    Size  Location     Type
 25950 ;;  newMode         1    wreg     enum E6585
 25951 ;;  newModulatio    1    5[COMRAM] enum E5853
 25952 ;;  blocking        1    6[COMRAM] unsigned char 
 25953 ;; Auto vars:     Size  Location     Type
 25954 ;;  newMode         1   10[COMRAM] enum E6585
 25955 ;;  opMode          1   11[COMRAM] unsigned char 
 25956 ;;  currentMode     1    9[COMRAM] enum E6585
 25957 ;;  dioMapping      1    8[COMRAM] unsigned char 
 25958 ;;  currentModul    1    7[COMRAM] enum E5853
 25959 ;; Return value:  Size  Location     Type
 25960 ;;                  1    wreg      void 
 25961 ;; Registers used:
 25962 ;;		wreg, status,2, status,0, cstack
 25963 ;; Tracked objects:
 25964 ;;		On entry : 0/0
 25965 ;;		On exit  : 0/0
 25966 ;;		Unchanged: 0/0
 25967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25969 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25971 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25972 ;;Total ram usage:        7 bytes
 25973 ;; Hardware stack levels used:    1
 25974 ;; Hardware stack levels required when called:    3
 25975 ;; This function calls:
 25976 ;;		_HALDIO5PinValue
 25977 ;;		_RADIO_RegisterRead
 25978 ;;		_RADIO_RegisterWrite
 25979 ;;		_SystemBlockingWaitMs
 25980 ;; This function is called by:
 25981 ;;		_RADIO_Init
 25982 ;;		_RADIO_WriteConfiguration
 25983 ;;		_RADIO_Transmit
 25984 ;;		_RADIO_ReceiveStart
 25985 ;;		_RADIO_ReceiveStop
 25986 ;;		_RADIO_RxDone
 25987 ;;		_RADIO_FSKPayloadReady
 25988 ;;		_RADIO_RxTimeout
 25989 ;;		_RADIO_TxDone
 25990 ;;		_RADIO_FSKPacketSent
 25991 ;;		_RADIO_ReadRandom
 25992 ;;		_RADIO_RxFSKTimeout
 25993 ;;		_RADIO_WatchdogTimeout
 25994 ;;		_RADIO_StopCW
 25995 ;; This function uses a non-reentrant model
 25996 ;;
 25997                           
 25998                           	psect	text160
 25999  00B0D4                     __ptext160:
 26000                           	opt callstack 0
 26001  00B0D4                     _RADIO_WriteMode:
 26002                           	opt callstack 23
 26003                           
 26004                           ;incstack = 0
 26005                           ;RADIO_WriteMode@newMode stored from wreg
 26006  00B0D4  6E0B               	movwf	RADIO_WriteMode@newMode,c
 26007                           
 26008                           ;radio_driver_SX1276.c: 149: uint8_t opMode;;radio_driver_SX1276.c: 150: uint8_t dioMapp
      +                          ing;;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;;radio_driver_SX127
      +                          6.c: 152: RadioMode_t currentMode;;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == ne
      +                          wModulation) &&;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == 
      +                          newMode)))
 26009  00B0D6  5006               	movf	RADIO_WriteMode@newModulation,w,c
 26010  00B0D8  A4D8               	btfss	status,2,c
 26011  00B0DA  D008               	goto	l12690
 26012  00B0DC  0E06               	movlw	6
 26013  00B0DE  180B               	xorwf	RADIO_WriteMode@newMode,w,c
 26014  00B0E0  B4D8               	btfsc	status,2,c
 26015  00B0E2  0012               	return	
 26016  00B0E4  0E07               	movlw	7
 26017  00B0E6  180B               	xorwf	RADIO_WriteMode@newMode,w,c
 26018  00B0E8  B4D8               	btfsc	status,2,c
 26019  00B0EA  0012               	return	
 26020  00B0EC                     l12690:
 26021                           
 26022                           ;radio_driver_SX1276.c: 159: };radio_driver_SX1276.c: 162: newMode &= 0x07;
 26023  00B0EC  0E07               	movlw	7
 26024  00B0EE  160B               	andwf	RADIO_WriteMode@newMode,f,c
 26025                           
 26026                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 26027  00B0F0  0E01               	movlw	1
 26028  00B0F2  1606               	andwf	RADIO_WriteMode@newModulation,f,c
 26029                           
 26030                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 26031  00B0F4  0E01               	movlw	1
 26032  00B0F6  EC71  F046         	call	_RADIO_RegisterRead
 26033  00B0FA  6E0C               	movwf	RADIO_WriteMode@opMode,c
 26034                           
 26035                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 26036  00B0FC  AE0C               	btfss	RADIO_WriteMode@opMode,7,c
 26037  00B0FE  D002               	goto	l12698
 26038                           
 26039                           ;radio_driver_SX1276.c: 168: {;radio_driver_SX1276.c: 169: currentModulation = MODULATIO
      +                          N_LORA;
 26040  00B100  0E01               	movlw	1
 26041  00B102  D001               	goto	L27
 26042  00B104                     l12698:
 26043                           
 26044                           ;radio_driver_SX1276.c: 171: else;radio_driver_SX1276.c: 172: {;radio_driver_SX1276.c: 1
      +                          73: currentModulation = MODULATION_FSK;
 26045  00B104  0E00               	movlw	0
 26046  00B106                     L27:
 26047  00B106  6E08               	movwf	RADIO_WriteMode@currentModulation,c
 26048                           
 26049                           ;radio_driver_SX1276.c: 174: };radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 26050  00B108  500C               	movf	RADIO_WriteMode@opMode,w,c
 26051  00B10A  0B07               	andlw	7
 26052  00B10C  6E0A               	movwf	RADIO_WriteMode@currentMode,c
 26053                           
 26054                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 26055  00B10E  5008               	movf	RADIO_WriteMode@currentModulation,w,c
 26056  00B110  1806               	xorwf	RADIO_WriteMode@newModulation,w,c
 26057  00B112  B4D8               	btfsc	status,2,c
 26058  00B114  D01A               	goto	l12718
 26059                           
 26060                           ;radio_driver_SX1276.c: 181: {;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode
      +                          )
 26061  00B116  500A               	movf	RADIO_WriteMode@currentMode,w,c
 26062  00B118  B4D8               	btfsc	status,2,c
 26063  00B11A  D008               	goto	l12710
 26064                           
 26065                           ;radio_driver_SX1276.c: 184: {;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opM
      +                          ode & (~0x07));
 26066  00B11C  500C               	movf	RADIO_WriteMode@opMode,w,c
 26067  00B11E  0BF8               	andlw	248
 26068  00B120  6E03               	movwf	RADIO_RegisterWrite@value,c
 26069  00B122  0E01               	movlw	1
 26070  00B124  ECF7  F045         	call	_RADIO_RegisterWrite
 26071                           
 26072                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 26073  00B128  0E00               	movlw	0
 26074  00B12A  6E0A               	movwf	RADIO_WriteMode@currentMode,c
 26075  00B12C                     l12710:
 26076                           
 26077                           ;radio_driver_SX1276.c: 188: };radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModu
      +                          lation)
 26078  00B12C  5006               	movf	RADIO_WriteMode@newModulation,w,c
 26079  00B12E  A4D8               	btfss	status,2,c
 26080  00B130  D003               	goto	l12714
 26081                           
 26082                           ;radio_driver_SX1276.c: 191: {;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 26083  00B132  500C               	movf	RADIO_WriteMode@opMode,w,c
 26084  00B134  0B78               	andlw	120
 26085  00B136  D003               	goto	L28
 26086  00B138                     l12714:
 26087                           
 26088                           ;radio_driver_SX1276.c: 195: else;radio_driver_SX1276.c: 196: {;radio_driver_SX1276.c: 1
      +                          98: opMode = 0x80 | (opMode & (~0x87));
 26089  00B138  500C               	movf	RADIO_WriteMode@opMode,w,c
 26090  00B13A  0B78               	andlw	120
 26091  00B13C  0980               	iorlw	128
 26092  00B13E                     L28:
 26093  00B13E  6E0C               	movwf	RADIO_WriteMode@opMode,c
 26094                           
 26095                           ;radio_driver_SX1276.c: 199: };radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opM
      +                          ode);
 26096  00B140  C00C  F003         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 26097  00B144  0E01               	movlw	1
 26098  00B146  ECF7  F045         	call	_RADIO_RegisterWrite
 26099  00B14A                     l12718:
 26100                           
 26101                           ;radio_driver_SX1276.c: 201: };radio_driver_SX1276.c: 207: if (newMode != currentMode)
 26102  00B14A  500A               	movf	RADIO_WriteMode@currentMode,w,c
 26103  00B14C  180B               	xorwf	RADIO_WriteMode@newMode,w,c
 26104  00B14E  B4D8               	btfsc	status,2,c
 26105  00B150  0012               	return	
 26106                           
 26107                           ;radio_driver_SX1276.c: 208: {;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) &
      +                          & (1 == blocking))
 26108  00B152  500B               	movf	RADIO_WriteMode@newMode,w,c
 26109  00B154  B4D8               	btfsc	status,2,c
 26110  00B156  D014               	goto	l12734
 26111  00B158  0407               	decf	RADIO_WriteMode@blocking,w,c
 26112  00B15A  A4D8               	btfss	status,2,c
 26113  00B15C  D011               	goto	l12734
 26114                           
 26115                           ;radio_driver_SX1276.c: 212: {;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRe
      +                          ad(0x41);
 26116  00B15E  0E41               	movlw	65
 26117  00B160  EC71  F046         	call	_RADIO_RegisterRead
 26118  00B164  6E09               	movwf	RADIO_WriteMode@dioMapping,c
 26119                           
 26120                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 26121  00B166  5006               	movf	RADIO_WriteMode@newModulation,w,c
 26122  00B168  A4D8               	btfss	status,2,c
 26123  00B16A  D003               	goto	l12730
 26124                           
 26125                           ;radio_driver_SX1276.c: 215: {;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 26126  00B16C  0E30               	movlw	48
 26127  00B16E  1209               	iorwf	RADIO_WriteMode@dioMapping,f,c
 26128                           
 26129                           ;radio_driver_SX1276.c: 218: }
 26130  00B170  D002               	goto	l12732
 26131  00B172                     l12730:
 26132                           
 26133                           ;radio_driver_SX1276.c: 219: else;radio_driver_SX1276.c: 220: {;radio_driver_SX1276.c: 2
      +                          22: dioMapping &= ~0x30;
 26134  00B172  0ECF               	movlw	207
 26135  00B174  1609               	andwf	RADIO_WriteMode@dioMapping,f,c
 26136  00B176                     l12732:
 26137                           
 26138                           ;radio_driver_SX1276.c: 223: };radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dio
      +                          Mapping);
 26139  00B176  C009  F003         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 26140  00B17A  0E41               	movlw	65
 26141  00B17C  ECF7  F045         	call	_RADIO_RegisterWrite
 26142  00B180                     l12734:
 26143                           
 26144                           ;radio_driver_SX1276.c: 225: };radio_driver_SX1276.c: 228: opMode &= ~0x07;
 26145  00B180  0EF8               	movlw	248
 26146  00B182  160C               	andwf	RADIO_WriteMode@opMode,f,c
 26147                           
 26148                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 26149  00B184  500B               	movf	RADIO_WriteMode@newMode,w,c
 26150  00B186  120C               	iorwf	RADIO_WriteMode@opMode,f,c
 26151                           
 26152                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 26153  00B188  C00C  F003         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 26154  00B18C  0E01               	movlw	1
 26155  00B18E  ECF7  F045         	call	_RADIO_RegisterWrite
 26156                           
 26157                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 26158  00B192  0407               	decf	RADIO_WriteMode@blocking,w,c
 26159  00B194  A4D8               	btfss	status,2,c
 26160  00B196  0012               	return	
 26161                           
 26162                           ;radio_driver_SX1276.c: 234: {;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 26163  00B198  500B               	movf	RADIO_WriteMode@newMode,w,c
 26164  00B19A  B4D8               	btfsc	status,2,c
 26165  00B19C  D006               	goto	l12746
 26166  00B19E                     u13620:
 26167  00B19E  EC43  F045         	call	_HALDIO5PinValue	;wreg free
 26168  00B1A2  0900               	iorlw	0
 26169  00B1A4  A4D8               	btfss	status,2,c
 26170  00B1A6  0012               	return	
 26171  00B1A8  D7FA               	goto	u13620
 26172  00B1AA                     l12746:
 26173                           
 26174                           ;radio_driver_SX1276.c: 240: else;radio_driver_SX1276.c: 241: {;radio_driver_SX1276.c: 2
      +                          42: SystemBlockingWaitMs(1);
 26175  00B1AA  0E01               	movlw	1
 26176  00B1AC  6E01               	movwf	SystemBlockingWaitMs@ms,c
 26177  00B1AE  0E00               	movlw	0
 26178  00B1B0  6E02               	movwf	SystemBlockingWaitMs@ms+1,c
 26179  00B1B2  0E00               	movlw	0
 26180  00B1B4  6E03               	movwf	SystemBlockingWaitMs@ms+2,c
 26181  00B1B6  0E00               	movlw	0
 26182  00B1B8  6E04               	movwf	SystemBlockingWaitMs@ms+3,c
 26183  00B1BA  EC3B  F047         	call	_SystemBlockingWaitMs	;wreg free
 26184  00B1BE  0012               	return		;funcret
 26185  00B1C0                     __end_of_RADIO_WriteMode:
 26186                           	opt callstack 0
 26187                           
 26188 ;; *************** function _RADIO_RegisterRead *****************
 26189 ;; Defined at:
 26190 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26191 ;; Parameters:    Size  Location     Type
 26192 ;;  reg             1    wreg     unsigned char 
 26193 ;; Auto vars:     Size  Location     Type
 26194 ;;  reg             1    2[COMRAM] unsigned char 
 26195 ;;  readValue       1    3[COMRAM] unsigned char 
 26196 ;; Return value:  Size  Location     Type
 26197 ;;                  1    wreg      unsigned char 
 26198 ;; Registers used:
 26199 ;;		wreg, status,2, status,0, cstack
 26200 ;; Tracked objects:
 26201 ;;		On entry : 0/0
 26202 ;;		On exit  : 0/0
 26203 ;;		Unchanged: 0/0
 26204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26206 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26209 ;;Total ram usage:        2 bytes
 26210 ;; Hardware stack levels used:    1
 26211 ;; Hardware stack levels required when called:    2
 26212 ;; This function calls:
 26213 ;;		_HALSPICSAssert
 26214 ;;		_HALSPICSDeassert
 26215 ;;		_HALSPISend
 26216 ;; This function is called by:
 26217 ;;		_RADIO_WriteMode
 26218 ;;		_RADIO_WritePower
 26219 ;;		_RADIO_Init
 26220 ;;		_RADIO_WriteConfiguration
 26221 ;;		_RADIO_Transmit
 26222 ;;		_RADIO_RxDone
 26223 ;;		_RADIO_FSKPayloadReady
 26224 ;;		_RADIO_FSKPacketSent
 26225 ;;		_RADIO_FHSSChangeChannel
 26226 ;;		_RADIO_DIO0
 26227 ;;		_RADIO_DIO1
 26228 ;;		_RADIO_DIO2
 26229 ;;		_RADIO_DIO3
 26230 ;;		_RADIO_DIO4
 26231 ;;		_RADIO_DIO5
 26232 ;;		_RADIO_ReadRandom
 26233 ;;		_RADIO_RxFSKTimeout
 26234 ;; This function uses a non-reentrant model
 26235 ;;
 26236                           
 26237                           	psect	text161
 26238  008CE2                     __ptext161:
 26239                           	opt callstack 0
 26240  008CE2                     _RADIO_RegisterRead:
 26241                           	opt callstack 23
 26242                           
 26243                           ;incstack = 0
 26244                           ;RADIO_RegisterRead@reg stored from wreg
 26245  008CE2  6E03               	movwf	RADIO_RegisterRead@reg,c
 26246                           
 26247                           ;radio_driver_SX1276.c: 136: uint8_t readValue;;radio_driver_SX1276.c: 137: reg &= 0x7F;
 26248  008CE4  9E03               	bcf	RADIO_RegisterRead@reg,7,c
 26249                           
 26250                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 26251  008CE6  ECE2  F044         	call	_HALSPICSAssert	;wreg free
 26252                           
 26253                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 26254  008CEA  5003               	movf	RADIO_RegisterRead@reg,w,c
 26255  008CEC  EC1B  F045         	call	_HALSPISend
 26256                           
 26257                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 26258  008CF0  0EFF               	movlw	255
 26259  008CF2  EC1B  F045         	call	_HALSPISend
 26260  008CF6  6E04               	movwf	RADIO_RegisterRead@readValue,c
 26261                           
 26262                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 26263  008CF8  ECE4  F044         	call	_HALSPICSDeassert	;wreg free
 26264                           
 26265                           ;radio_driver_SX1276.c: 142: return readValue;
 26266  008CFC  5004               	movf	RADIO_RegisterRead@readValue,w,c
 26267  008CFE  0012               	return		;funcret
 26268  008D00                     __end_of_RADIO_RegisterRead:
 26269                           	opt callstack 0
 26270                           
 26271 ;; *************** function _HALDIO5PinValue *****************
 26272 ;; Defined at:
 26273 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 26274 ;; Parameters:    Size  Location     Type
 26275 ;;		None
 26276 ;; Auto vars:     Size  Location     Type
 26277 ;;		None
 26278 ;; Return value:  Size  Location     Type
 26279 ;;                  1    wreg      unsigned char 
 26280 ;; Registers used:
 26281 ;;		wreg
 26282 ;; Tracked objects:
 26283 ;;		On entry : 0/0
 26284 ;;		On exit  : 0/0
 26285 ;;		Unchanged: 0/0
 26286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26291 ;;Total ram usage:        0 bytes
 26292 ;; Hardware stack levels used:    1
 26293 ;; This function calls:
 26294 ;;		Nothing
 26295 ;; This function is called by:
 26296 ;;		_RADIO_WriteMode
 26297 ;; This function uses a non-reentrant model
 26298 ;;
 26299                           
 26300                           	psect	text162
 26301  008A86                     __ptext162:
 26302                           	opt callstack 0
 26303  008A86                     _HALDIO5PinValue:
 26304                           	opt callstack 25
 26305                           
 26306                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 26307                           
 26308                           ;incstack = 0
 26309  008A86  A081               	btfss	3969,0,c	;volatile
 26310  008A88  D002               	goto	u13320
 26311  008A8A  0E01               	movlw	1
 26312  008A8C  0012               	return	
 26313  008A8E                     u13320:
 26314  008A8E  0E00               	movlw	0
 26315  008A90  0012               	return		;funcret
 26316  008A92                     __end_of_HALDIO5PinValue:
 26317                           	opt callstack 0
 26318                           
 26319 ;; *************** function _RADIO_WriteFrequency *****************
 26320 ;; Defined at:
 26321 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26322 ;; Parameters:    Size  Location     Type
 26323 ;;  frequency       4   13[COMRAM] unsigned long 
 26324 ;; Auto vars:     Size  Location     Type
 26325 ;;  num             4   21[COMRAM] unsigned long 
 26326 ;;  num_mod         4   17[COMRAM] unsigned long 
 26327 ;; Return value:  Size  Location     Type
 26328 ;;                  1    wreg      void 
 26329 ;; Registers used:
 26330 ;;		wreg, status,2, status,0, cstack
 26331 ;; Tracked objects:
 26332 ;;		On entry : 0/0
 26333 ;;		On exit  : 0/0
 26334 ;;		Unchanged: 0/0
 26335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26336 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26337 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26339 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26340 ;;Total ram usage:       12 bytes
 26341 ;; Hardware stack levels used:    1
 26342 ;; Hardware stack levels required when called:    3
 26343 ;; This function calls:
 26344 ;;		_RADIO_RegisterWrite
 26345 ;;		___lldiv
 26346 ;;		___llmod
 26347 ;; This function is called by:
 26348 ;;		_RADIO_Init
 26349 ;;		_RADIO_WriteConfiguration
 26350 ;;		_RADIO_FHSSChangeChannel
 26351 ;; This function uses a non-reentrant model
 26352 ;;
 26353                           
 26354                           	psect	text163
 26355  00AFEC                     __ptext163:
 26356                           	opt callstack 0
 26357  00AFEC                     _RADIO_WriteFrequency:
 26358                           	opt callstack 22
 26359                           
 26360                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;;radio_driver_SX1276.c: 272: num = fr
      +                          equency / 15625;
 26361                           
 26362                           ;incstack = 0
 26363  00AFEC  C00E  F001         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 26364  00AFF0  C00F  F002         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 26365  00AFF4  C010  F003         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 26366  00AFF8  C011  F004         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 26367  00AFFC  0E09               	movlw	9
 26368  00AFFE  6E05               	movwf	___lldiv@divisor,c
 26369  00B000  0E3D               	movlw	61
 26370  00B002  6E06               	movwf	___lldiv@divisor+1,c
 26371  00B004  0E00               	movlw	0
 26372  00B006  6E07               	movwf	___lldiv@divisor+2,c
 26373  00B008  0E00               	movlw	0
 26374  00B00A  6E08               	movwf	___lldiv@divisor+3,c
 26375  00B00C  ECFE  F050         	call	___lldiv	;wreg free
 26376  00B010  C001  F016         	movff	?___lldiv,RADIO_WriteFrequency@num
 26377  00B014  C002  F017         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 26378  00B018  C003  F018         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 26379  00B01C  C004  F019         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 26380                           
 26381                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 26382  00B020  C00E  F001         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 26383  00B024  C00F  F002         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 26384  00B028  C010  F003         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 26385  00B02C  C011  F004         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 26386  00B030  0E09               	movlw	9
 26387  00B032  6E05               	movwf	___llmod@divisor,c
 26388  00B034  0E3D               	movlw	61
 26389  00B036  6E06               	movwf	___llmod@divisor+1,c
 26390  00B038  0E00               	movlw	0
 26391  00B03A  6E07               	movwf	___llmod@divisor+2,c
 26392  00B03C  0E00               	movlw	0
 26393  00B03E  6E08               	movwf	___llmod@divisor+3,c
 26394  00B040  ECA9  F04D         	call	___llmod	;wreg free
 26395  00B044  C001  F012         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 26396  00B048  C002  F013         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 26397  00B04C  C003  F014         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 26398  00B050  C004  F015         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 26399                           
 26400                           ;radio_driver_SX1276.c: 277: num <<= (8);
 26401  00B054  C018  F019         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 26402  00B058  C017  F018         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 26403  00B05C  C016  F017         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 26404  00B060  6A16               	clrf	RADIO_WriteFrequency@num,c
 26405                           
 26406                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 26407  00B062  C014  F015         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 26408  00B066  C013  F014         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 26409  00B06A  C012  F013         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 26410  00B06E  6A12               	clrf	RADIO_WriteFrequency@num_mod,c
 26411                           
 26412                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 26413  00B070  C012  F001         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 26414  00B074  C013  F002         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 26415  00B078  C014  F003         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 26416  00B07C  C015  F004         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 26417  00B080  0E09               	movlw	9
 26418  00B082  6E05               	movwf	___lldiv@divisor,c
 26419  00B084  0E3D               	movlw	61
 26420  00B086  6E06               	movwf	___lldiv@divisor+1,c
 26421  00B088  0E00               	movlw	0
 26422  00B08A  6E07               	movwf	___lldiv@divisor+2,c
 26423  00B08C  0E00               	movlw	0
 26424  00B08E  6E08               	movwf	___lldiv@divisor+3,c
 26425  00B090  ECFE  F050         	call	___lldiv	;wreg free
 26426  00B094  C001  F012         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 26427  00B098  C002  F013         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 26428  00B09C  C003  F014         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 26429  00B0A0  C004  F015         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 26430                           
 26431                           ;radio_driver_SX1276.c: 283: num += num_mod;
 26432  00B0A4  5012               	movf	RADIO_WriteFrequency@num_mod,w,c
 26433  00B0A6  2616               	addwf	RADIO_WriteFrequency@num,f,c
 26434  00B0A8  5013               	movf	RADIO_WriteFrequency@num_mod+1,w,c
 26435  00B0AA  2217               	addwfc	RADIO_WriteFrequency@num+1,f,c
 26436  00B0AC  5014               	movf	RADIO_WriteFrequency@num_mod+2,w,c
 26437  00B0AE  2218               	addwfc	RADIO_WriteFrequency@num+2,f,c
 26438  00B0B0  5015               	movf	RADIO_WriteFrequency@num_mod+3,w,c
 26439  00B0B2  2219               	addwfc	RADIO_WriteFrequency@num+3,f,c
 26440                           
 26441                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 26442  00B0B4  C018  F003         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 26443  00B0B8  0E06               	movlw	6
 26444  00B0BA  ECF7  F045         	call	_RADIO_RegisterWrite
 26445                           
 26446                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 26447  00B0BE  C017  F003         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 26448  00B0C2  0E07               	movlw	7
 26449  00B0C4  ECF7  F045         	call	_RADIO_RegisterWrite
 26450                           
 26451                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 26452  00B0C8  C016  F003         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 26453  00B0CC  0E08               	movlw	8
 26454  00B0CE  ECF7  F045         	call	_RADIO_RegisterWrite
 26455  00B0D2  0012               	return		;funcret
 26456  00B0D4                     __end_of_RADIO_WriteFrequency:
 26457                           	opt callstack 0
 26458                           
 26459 ;; *************** function ___llmod *****************
 26460 ;; Defined at:
 26461 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 26462 ;; Parameters:    Size  Location     Type
 26463 ;;  dividend        4    0[COMRAM] unsigned long 
 26464 ;;  divisor         4    4[COMRAM] unsigned long 
 26465 ;; Auto vars:     Size  Location     Type
 26466 ;;  counter         1    8[COMRAM] unsigned char 
 26467 ;; Return value:  Size  Location     Type
 26468 ;;                  4    0[COMRAM] unsigned long 
 26469 ;; Registers used:
 26470 ;;		wreg, status,2, status,0
 26471 ;; Tracked objects:
 26472 ;;		On entry : 0/0
 26473 ;;		On exit  : 0/0
 26474 ;;		Unchanged: 0/0
 26475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26476 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26479 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26480 ;;Total ram usage:        9 bytes
 26481 ;; Hardware stack levels used:    1
 26482 ;; This function calls:
 26483 ;;		Nothing
 26484 ;; This function is called by:
 26485 ;;		_RADIO_WriteFrequency
 26486 ;; This function uses a non-reentrant model
 26487 ;;
 26488                           
 26489                           	psect	text164
 26490  009B52                     __ptext164:
 26491                           	opt callstack 0
 26492  009B52                     ___llmod:
 26493                           	opt callstack 24
 26494                           
 26495                           ;incstack = 0
 26496  009B52  5005               	movf	___llmod@divisor,w,c
 26497  009B54  1006               	iorwf	___llmod@divisor+1,w,c
 26498  009B56  1007               	iorwf	___llmod@divisor+2,w,c
 26499  009B58  1008               	iorwf	___llmod@divisor+3,w,c
 26500  009B5A  B4D8               	btfsc	status,2,c
 26501  009B5C  D024               	goto	l2929
 26502  009B5E  0E01               	movlw	1
 26503  009B60  6E09               	movwf	___llmod@counter,c
 26504  009B62  D006               	goto	l12638
 26505  009B64                     l12636:
 26506  009B64  90D8               	bcf	status,0,c
 26507  009B66  3605               	rlcf	___llmod@divisor,f,c
 26508  009B68  3606               	rlcf	___llmod@divisor+1,f,c
 26509  009B6A  3607               	rlcf	___llmod@divisor+2,f,c
 26510  009B6C  3608               	rlcf	___llmod@divisor+3,f,c
 26511  009B6E  2A09               	incf	___llmod@counter,f,c
 26512  009B70                     l12638:
 26513  009B70  AE08               	btfss	___llmod@divisor+3,7,c
 26514  009B72  D7F8               	goto	l12636
 26515  009B74                     u13420:
 26516  009B74  5005               	movf	___llmod@divisor,w,c
 26517  009B76  5C01               	subwf	___llmod@dividend,w,c
 26518  009B78  5006               	movf	___llmod@divisor+1,w,c
 26519  009B7A  5802               	subwfb	___llmod@dividend+1,w,c
 26520  009B7C  5007               	movf	___llmod@divisor+2,w,c
 26521  009B7E  5803               	subwfb	___llmod@dividend+2,w,c
 26522  009B80  5008               	movf	___llmod@divisor+3,w,c
 26523  009B82  5804               	subwfb	___llmod@dividend+3,w,c
 26524  009B84  A0D8               	btfss	status,0,c
 26525  009B86  D008               	goto	l12644
 26526  009B88  5005               	movf	___llmod@divisor,w,c
 26527  009B8A  5E01               	subwf	___llmod@dividend,f,c
 26528  009B8C  5006               	movf	___llmod@divisor+1,w,c
 26529  009B8E  5A02               	subwfb	___llmod@dividend+1,f,c
 26530  009B90  5007               	movf	___llmod@divisor+2,w,c
 26531  009B92  5A03               	subwfb	___llmod@dividend+2,f,c
 26532  009B94  5008               	movf	___llmod@divisor+3,w,c
 26533  009B96  5A04               	subwfb	___llmod@dividend+3,f,c
 26534  009B98                     l12644:
 26535  009B98  90D8               	bcf	status,0,c
 26536  009B9A  3208               	rrcf	___llmod@divisor+3,f,c
 26537  009B9C  3207               	rrcf	___llmod@divisor+2,f,c
 26538  009B9E  3206               	rrcf	___llmod@divisor+1,f,c
 26539  009BA0  3205               	rrcf	___llmod@divisor,f,c
 26540  009BA2  2E09               	decfsz	___llmod@counter,f,c
 26541  009BA4  D7E7               	goto	u13420
 26542  009BA6                     l2929:
 26543  009BA6  C001  F001         	movff	___llmod@dividend,?___llmod
 26544  009BAA  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 26545  009BAE  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 26546  009BB2  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 26547  009BB6  0012               	return		;funcret
 26548  009BB8                     __end_of___llmod:
 26549                           	opt callstack 0
 26550                           
 26551 ;; *************** function _RADIO_RegisterWrite *****************
 26552 ;; Defined at:
 26553 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26554 ;; Parameters:    Size  Location     Type
 26555 ;;  reg             1    wreg     unsigned char 
 26556 ;;  value           1    2[COMRAM] unsigned char 
 26557 ;; Auto vars:     Size  Location     Type
 26558 ;;  reg             1    3[COMRAM] unsigned char 
 26559 ;; Return value:  Size  Location     Type
 26560 ;;                  1    wreg      void 
 26561 ;; Registers used:
 26562 ;;		wreg, status,2, status,0, cstack
 26563 ;; Tracked objects:
 26564 ;;		On entry : 0/0
 26565 ;;		On exit  : 0/0
 26566 ;;		Unchanged: 0/0
 26567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26568 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26572 ;;Total ram usage:        2 bytes
 26573 ;; Hardware stack levels used:    1
 26574 ;; Hardware stack levels required when called:    2
 26575 ;; This function calls:
 26576 ;;		_HALSPICSAssert
 26577 ;;		_HALSPICSDeassert
 26578 ;;		_HALSPISend
 26579 ;; This function is called by:
 26580 ;;		_RADIO_WriteMode
 26581 ;;		_RADIO_WriteFrequency
 26582 ;;		_RADIO_WriteFSKFrequencyDeviation
 26583 ;;		_RADIO_WriteFSKBitRate
 26584 ;;		_RADIO_WritePower
 26585 ;;		_RADIO_Init
 26586 ;;		_RADIO_WriteConfiguration
 26587 ;;		_RADIO_Transmit
 26588 ;;		_RADIO_ReceiveStart
 26589 ;;		_RADIO_RxDone
 26590 ;;		_RADIO_RxTimeout
 26591 ;;		_RADIO_TxDone
 26592 ;;		_RADIO_UnhandledInterrupt
 26593 ;;		_RADIO_FHSSChangeChannel
 26594 ;;		_RADIO_ReadRandom
 26595 ;;		_RADIO_TransmitCW
 26596 ;; This function uses a non-reentrant model
 26597 ;;
 26598                           
 26599                           	psect	text165
 26600  008BEE                     __ptext165:
 26601                           	opt callstack 0
 26602  008BEE                     _RADIO_RegisterWrite:
 26603                           	opt callstack 23
 26604                           
 26605                           ;incstack = 0
 26606                           ;RADIO_RegisterWrite@reg stored from wreg
 26607  008BEE  6E04               	movwf	RADIO_RegisterWrite@reg,c
 26608                           
 26609                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 26610  008BF0  ECE2  F044         	call	_HALSPICSAssert	;wreg free
 26611                           
 26612                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 26613  008BF4  5004               	movf	RADIO_RegisterWrite@reg,w,c
 26614  008BF6  0980               	iorlw	128
 26615  008BF8  EC1B  F045         	call	_HALSPISend
 26616                           
 26617                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 26618  008BFC  5003               	movf	RADIO_RegisterWrite@value,w,c
 26619  008BFE  EC1B  F045         	call	_HALSPISend
 26620                           
 26621                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 26622  008C02  ECE4  F044         	call	_HALSPICSDeassert	;wreg free
 26623  008C06  0012               	return		;funcret
 26624  008C08                     __end_of_RADIO_RegisterWrite:
 26625                           	opt callstack 0
 26626                           
 26627 ;; *************** function _HALSPISend *****************
 26628 ;; Defined at:
 26629 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 26630 ;; Parameters:    Size  Location     Type
 26631 ;;  data            1    wreg     unsigned char 
 26632 ;; Auto vars:     Size  Location     Type
 26633 ;;  data            1    1[COMRAM] unsigned char 
 26634 ;; Return value:  Size  Location     Type
 26635 ;;                  1    wreg      unsigned char 
 26636 ;; Registers used:
 26637 ;;		wreg, status,2, cstack
 26638 ;; Tracked objects:
 26639 ;;		On entry : 0/0
 26640 ;;		On exit  : 0/0
 26641 ;;		Unchanged: 0/0
 26642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26646 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26647 ;;Total ram usage:        1 bytes
 26648 ;; Hardware stack levels used:    1
 26649 ;; Hardware stack levels required when called:    1
 26650 ;; This function calls:
 26651 ;;		_SPI2_Exchange8bit
 26652 ;; This function is called by:
 26653 ;;		_RADIO_RegisterWrite
 26654 ;;		_RADIO_RegisterRead
 26655 ;;		_RADIO_Transmit
 26656 ;;		_RADIO_RxDone
 26657 ;;		_RADIO_FSKPayloadReady
 26658 ;; This function uses a non-reentrant model
 26659 ;;
 26660                           
 26661                           	psect	text166
 26662  008A36                     __ptext166:
 26663                           	opt callstack 0
 26664  008A36                     _HALSPISend:
 26665                           	opt callstack 23
 26666                           
 26667                           ;incstack = 0
 26668                           ;HALSPISend@data stored from wreg
 26669  008A36  6E02               	movwf	HALSPISend@data,c
 26670                           
 26671                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 26672  008A38  5002               	movf	HALSPISend@data,w,c
 26673  008A3A  EC81  F045         	call	_SPI2_Exchange8bit
 26674  008A3E  0012               	return		;funcret
 26675  008A40                     __end_of_HALSPISend:
 26676                           	opt callstack 0
 26677                           
 26678 ;; *************** function _SPI2_Exchange8bit *****************
 26679 ;; Defined at:
 26680 ;;		line 77 in file "mcc_generated_files/spi2.c"
 26681 ;; Parameters:    Size  Location     Type
 26682 ;;  data            1    wreg     unsigned char 
 26683 ;; Auto vars:     Size  Location     Type
 26684 ;;  data            1    0[COMRAM] unsigned char 
 26685 ;; Return value:  Size  Location     Type
 26686 ;;                  1    wreg      unsigned char 
 26687 ;; Registers used:
 26688 ;;		wreg, status,2
 26689 ;; Tracked objects:
 26690 ;;		On entry : 0/0
 26691 ;;		On exit  : 0/0
 26692 ;;		Unchanged: 0/0
 26693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26697 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26698 ;;Total ram usage:        1 bytes
 26699 ;; Hardware stack levels used:    1
 26700 ;; This function calls:
 26701 ;;		Nothing
 26702 ;; This function is called by:
 26703 ;;		_HALSPISend
 26704 ;;		_SPI2_Exchange8bitBuffer
 26705 ;; This function uses a non-reentrant model
 26706 ;;
 26707                           
 26708                           	psect	text167
 26709  008B02                     __ptext167:
 26710                           	opt callstack 0
 26711  008B02                     _SPI2_Exchange8bit:
 26712                           	opt callstack 23
 26713                           
 26714                           ;incstack = 0
 26715                           ;SPI2_Exchange8bit@data stored from wreg
 26716  008B02  6E01               	movwf	SPI2_Exchange8bit@data,c
 26717                           
 26718                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
 26719  008B04  9E6C               	bcf	3948,7,c	;volatile
 26720                           
 26721                           ;spi2.c: 82: SSP2BUF = data;
 26722  008B06  C001  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 26723  008B0A                     l2253:
 26724  008B0A  A06D               	btfss	3949,0,c	;volatile
 26725  008B0C  D7FE               	goto	l2253
 26726                           
 26727                           ;spi2.c: 86: };spi2.c: 88: return (SSP2BUF);
 26728  008B0E  506F               	movf	3951,w,c	;volatile
 26729  008B10  0012               	return		;funcret
 26730  008B12                     __end_of_SPI2_Exchange8bit:
 26731                           	opt callstack 0
 26732                           
 26733 ;; *************** function _HALSPICSDeassert *****************
 26734 ;; Defined at:
 26735 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 26736 ;; Parameters:    Size  Location     Type
 26737 ;;		None
 26738 ;; Auto vars:     Size  Location     Type
 26739 ;;		None
 26740 ;; Return value:  Size  Location     Type
 26741 ;;                  1    wreg      void 
 26742 ;; Registers used:
 26743 ;;		None
 26744 ;; Tracked objects:
 26745 ;;		On entry : 0/0
 26746 ;;		On exit  : 0/0
 26747 ;;		Unchanged: 0/0
 26748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26753 ;;Total ram usage:        0 bytes
 26754 ;; Hardware stack levels used:    1
 26755 ;; This function calls:
 26756 ;;		Nothing
 26757 ;; This function is called by:
 26758 ;;		_RADIO_RegisterWrite
 26759 ;;		_RADIO_RegisterRead
 26760 ;;		_RADIO_Transmit
 26761 ;;		_RADIO_RxDone
 26762 ;;		_RADIO_FSKPayloadReady
 26763 ;; This function uses a non-reentrant model
 26764 ;;
 26765                           
 26766                           	psect	text168
 26767  0089C8                     __ptext168:
 26768                           	opt callstack 0
 26769  0089C8                     _HALSPICSDeassert:
 26770                           	opt callstack 24
 26771                           
 26772                           ;incstack = 0
 26773                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 26774  0089C8  868C               	bsf	3980,3,c	;volatile
 26775  0089CA  0012               	return		;funcret
 26776  0089CC                     __end_of_HALSPICSDeassert:
 26777                           	opt callstack 0
 26778                           
 26779 ;; *************** function _HALSPICSAssert *****************
 26780 ;; Defined at:
 26781 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 26782 ;; Parameters:    Size  Location     Type
 26783 ;;		None
 26784 ;; Auto vars:     Size  Location     Type
 26785 ;;		None
 26786 ;; Return value:  Size  Location     Type
 26787 ;;                  1    wreg      void 
 26788 ;; Registers used:
 26789 ;;		None
 26790 ;; Tracked objects:
 26791 ;;		On entry : 0/0
 26792 ;;		On exit  : 0/0
 26793 ;;		Unchanged: 0/0
 26794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26799 ;;Total ram usage:        0 bytes
 26800 ;; Hardware stack levels used:    1
 26801 ;; This function calls:
 26802 ;;		Nothing
 26803 ;; This function is called by:
 26804 ;;		_RADIO_RegisterWrite
 26805 ;;		_RADIO_RegisterRead
 26806 ;;		_RADIO_Transmit
 26807 ;;		_RADIO_RxDone
 26808 ;;		_RADIO_FSKPayloadReady
 26809 ;; This function uses a non-reentrant model
 26810 ;;
 26811                           
 26812                           	psect	text169
 26813  0089C4                     __ptext169:
 26814                           	opt callstack 0
 26815  0089C4                     _HALSPICSAssert:
 26816                           	opt callstack 24
 26817                           
 26818                           ;incstack = 0
 26819                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 26820  0089C4  968C               	bcf	3980,3,c	;volatile
 26821  0089C6  0012               	return		;funcret
 26822  0089C8                     __end_of_HALSPICSAssert:
 26823                           	opt callstack 0
 26824                           
 26825 ;; *************** function _RADIO_Reset *****************
 26826 ;; Defined at:
 26827 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26828 ;; Parameters:    Size  Location     Type
 26829 ;;		None
 26830 ;; Auto vars:     Size  Location     Type
 26831 ;;		None
 26832 ;; Return value:  Size  Location     Type
 26833 ;;                  1    wreg      void 
 26834 ;; Registers used:
 26835 ;;		wreg, status,2, status,0, cstack
 26836 ;; Tracked objects:
 26837 ;;		On entry : 0/0
 26838 ;;		On exit  : 0/0
 26839 ;;		Unchanged: 0/0
 26840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26845 ;;Total ram usage:        0 bytes
 26846 ;; Hardware stack levels used:    1
 26847 ;; Hardware stack levels required when called:    1
 26848 ;; This function calls:
 26849 ;;		_HALResetPinMakeInput
 26850 ;;		_HALResetPinMakeOutput
 26851 ;;		_HALResetPinOutputValue
 26852 ;;		_SystemBlockingWaitMs
 26853 ;; This function is called by:
 26854 ;;		_RADIO_Init
 26855 ;; This function uses a non-reentrant model
 26856 ;;
 26857                           
 26858                           	psect	text170
 26859  009338                     __ptext170:
 26860                           	opt callstack 0
 26861  009338                     _RADIO_Reset:
 26862                           	opt callstack 27
 26863                           
 26864                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 26865                           
 26866                           ;incstack = 0
 26867  009338  ECE0  F044         	call	_HALResetPinMakeOutput	;wreg free
 26868                           
 26869                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 26870  00933C  0E00               	movlw	0
 26871  00933E  ECC9  F045         	call	_HALResetPinOutputValue
 26872                           
 26873                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 26874  009342  0E01               	movlw	1
 26875  009344  6E01               	movwf	SystemBlockingWaitMs@ms,c
 26876  009346  0E00               	movlw	0
 26877  009348  6E02               	movwf	SystemBlockingWaitMs@ms+1,c
 26878  00934A  0E00               	movlw	0
 26879  00934C  6E03               	movwf	SystemBlockingWaitMs@ms+2,c
 26880  00934E  0E00               	movlw	0
 26881  009350  6E04               	movwf	SystemBlockingWaitMs@ms+3,c
 26882  009352  EC3B  F047         	call	_SystemBlockingWaitMs	;wreg free
 26883                           
 26884                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 26885  009356  ECDE  F044         	call	_HALResetPinMakeInput	;wreg free
 26886                           
 26887                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 26888  00935A  0E0A               	movlw	10
 26889  00935C  6E01               	movwf	SystemBlockingWaitMs@ms,c
 26890  00935E  0E00               	movlw	0
 26891  009360  6E02               	movwf	SystemBlockingWaitMs@ms+1,c
 26892  009362  0E00               	movlw	0
 26893  009364  6E03               	movwf	SystemBlockingWaitMs@ms+2,c
 26894  009366  0E00               	movlw	0
 26895  009368  6E04               	movwf	SystemBlockingWaitMs@ms+3,c
 26896  00936A  EC3B  F047         	call	_SystemBlockingWaitMs	;wreg free
 26897                           
 26898                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 26899  00936E  0E01               	movlw	1
 26900  009370  ECC9  F045         	call	_HALResetPinOutputValue
 26901                           
 26902                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 26903  009374  ECE0  F044         	call	_HALResetPinMakeOutput	;wreg free
 26904  009378  0012               	return		;funcret
 26905  00937A                     __end_of_RADIO_Reset:
 26906                           	opt callstack 0
 26907                           
 26908 ;; *************** function _SystemBlockingWaitMs *****************
 26909 ;; Defined at:
 26910 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 26911 ;; Parameters:    Size  Location     Type
 26912 ;;  ms              4    0[COMRAM] unsigned long 
 26913 ;; Auto vars:     Size  Location     Type
 26914 ;;		None
 26915 ;; Return value:  Size  Location     Type
 26916 ;;                  1    wreg      void 
 26917 ;; Registers used:
 26918 ;;		wreg, status,2, status,0
 26919 ;; Tracked objects:
 26920 ;;		On entry : 0/0
 26921 ;;		On exit  : 0/0
 26922 ;;		Unchanged: 0/0
 26923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26927 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26928 ;;Total ram usage:        5 bytes
 26929 ;; Hardware stack levels used:    1
 26930 ;; This function calls:
 26931 ;;		Nothing
 26932 ;; This function is called by:
 26933 ;;		_RADIO_WriteMode
 26934 ;;		_RADIO_Reset
 26935 ;;		_RADIO_ReadRandom
 26936 ;;		_RADIO_StopCW
 26937 ;; This function uses a non-reentrant model
 26938 ;;
 26939                           
 26940                           	psect	text171
 26941  008E76                     __ptext171:
 26942                           	opt callstack 0
 26943  008E76                     _SystemBlockingWaitMs:
 26944                           	opt callstack 25
 26945                           
 26946                           ;sw_timer.c: 147: while (ms > 0)
 26947                           
 26948                           ;incstack = 0
 26949  008E76  D00D               	goto	l12576
 26950  008E78                     l12572:
 26951                           
 26952                           ;sw_timer.c: 148: {;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 26953  008E78  0E06               	movlw	6
 26954  008E7A  6E05               	movwf	??_SystemBlockingWaitMs& (0+255),c
 26955  008E7C  0E30               	movlw	48
 26956  008E7E                     u18277:
 26957  008E7E  2EE8               	decfsz	wreg,f,c
 26958  008E80  D7FE               	bra	u18277
 26959  008E82  2E05               	decfsz	??_SystemBlockingWaitMs& (0+255),f,c
 26960  008E84  D7FC               	bra	u18277
 26961  008E86  D000               	nop2	
 26962                           
 26963                           ;sw_timer.c: 150: ms--;
 26964  008E88  0601               	decf	SystemBlockingWaitMs@ms,f,c
 26965  008E8A  0E00               	movlw	0
 26966  008E8C  5A02               	subwfb	SystemBlockingWaitMs@ms+1,f,c
 26967  008E8E  5A03               	subwfb	SystemBlockingWaitMs@ms+2,f,c
 26968  008E90  5A04               	subwfb	SystemBlockingWaitMs@ms+3,f,c
 26969  008E92                     l12576:
 26970  008E92  5001               	movf	SystemBlockingWaitMs@ms,w,c
 26971  008E94  1002               	iorwf	SystemBlockingWaitMs@ms+1,w,c
 26972  008E96  1003               	iorwf	SystemBlockingWaitMs@ms+2,w,c
 26973  008E98  1004               	iorwf	SystemBlockingWaitMs@ms+3,w,c
 26974  008E9A  B4D8               	btfsc	status,2,c
 26975  008E9C  0012               	return	
 26976  008E9E  D7EC               	goto	l12572
 26977  008EA0                     __end_of_SystemBlockingWaitMs:
 26978                           	opt callstack 0
 26979                           
 26980 ;; *************** function _HALResetPinOutputValue *****************
 26981 ;; Defined at:
 26982 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 26983 ;; Parameters:    Size  Location     Type
 26984 ;;  value           1    wreg     unsigned char 
 26985 ;; Auto vars:     Size  Location     Type
 26986 ;;  value           1    0[COMRAM] unsigned char 
 26987 ;; Return value:  Size  Location     Type
 26988 ;;                  1    wreg      void 
 26989 ;; Registers used:
 26990 ;;		wreg, status,2, status,0
 26991 ;; Tracked objects:
 26992 ;;		On entry : 0/0
 26993 ;;		On exit  : 0/0
 26994 ;;		Unchanged: 0/0
 26995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27000 ;;Total ram usage:        1 bytes
 27001 ;; Hardware stack levels used:    1
 27002 ;; This function calls:
 27003 ;;		Nothing
 27004 ;; This function is called by:
 27005 ;;		_RADIO_Reset
 27006 ;; This function uses a non-reentrant model
 27007 ;;
 27008                           
 27009                           	psect	text172
 27010  008B92                     __ptext172:
 27011                           	opt callstack 0
 27012  008B92                     _HALResetPinOutputValue:
 27013                           	opt callstack 27
 27014                           
 27015                           ;incstack = 0
 27016                           ;HALResetPinOutputValue@value stored from wreg
 27017  008B92  6E01               	movwf	HALResetPinOutputValue@value,c
 27018                           
 27019                           ;radio_driver_hal.c: 57: if (value == 0)
 27020  008B94  5001               	movf	HALResetPinOutputValue@value,w,c
 27021  008B96  A4D8               	btfss	status,2,c
 27022  008B98  D002               	goto	l10052
 27023                           
 27024                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 27025  008B9A  948B               	bcf	3979,2,c	;volatile
 27026  008B9C  0012               	return	
 27027  008B9E                     l10052:
 27028                           
 27029                           ;radio_driver_hal.c: 59: else if (value == 1)
 27030  008B9E  0401               	decf	HALResetPinOutputValue@value,w,c
 27031  008BA0  A4D8               	btfss	status,2,c
 27032  008BA2  0012               	return	
 27033                           
 27034                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 27035  008BA4  848B               	bsf	3979,2,c	;volatile
 27036  008BA6  0012               	return		;funcret
 27037  008BA8                     __end_of_HALResetPinOutputValue:
 27038                           	opt callstack 0
 27039                           
 27040 ;; *************** function _HALResetPinMakeOutput *****************
 27041 ;; Defined at:
 27042 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 27043 ;; Parameters:    Size  Location     Type
 27044 ;;		None
 27045 ;; Auto vars:     Size  Location     Type
 27046 ;;		None
 27047 ;; Return value:  Size  Location     Type
 27048 ;;                  1    wreg      void 
 27049 ;; Registers used:
 27050 ;;		None
 27051 ;; Tracked objects:
 27052 ;;		On entry : 0/0
 27053 ;;		On exit  : 0/0
 27054 ;;		Unchanged: 0/0
 27055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27060 ;;Total ram usage:        0 bytes
 27061 ;; Hardware stack levels used:    1
 27062 ;; This function calls:
 27063 ;;		Nothing
 27064 ;; This function is called by:
 27065 ;;		_RADIO_Reset
 27066 ;; This function uses a non-reentrant model
 27067 ;;
 27068                           
 27069                           	psect	text173
 27070  0089C0                     __ptext173:
 27071                           	opt callstack 0
 27072  0089C0                     _HALResetPinMakeOutput:
 27073                           	opt callstack 27
 27074                           
 27075                           ;incstack = 0
 27076                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 27077  0089C0  9494               	bcf	3988,2,c	;volatile
 27078  0089C2  0012               	return		;funcret
 27079  0089C4                     __end_of_HALResetPinMakeOutput:
 27080                           	opt callstack 0
 27081                           
 27082 ;; *************** function _HALResetPinMakeInput *****************
 27083 ;; Defined at:
 27084 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 27085 ;; Parameters:    Size  Location     Type
 27086 ;;		None
 27087 ;; Auto vars:     Size  Location     Type
 27088 ;;		None
 27089 ;; Return value:  Size  Location     Type
 27090 ;;                  1    wreg      void 
 27091 ;; Registers used:
 27092 ;;		None
 27093 ;; Tracked objects:
 27094 ;;		On entry : 0/0
 27095 ;;		On exit  : 0/0
 27096 ;;		Unchanged: 0/0
 27097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27102 ;;Total ram usage:        0 bytes
 27103 ;; Hardware stack levels used:    1
 27104 ;; This function calls:
 27105 ;;		Nothing
 27106 ;; This function is called by:
 27107 ;;		_RADIO_Reset
 27108 ;; This function uses a non-reentrant model
 27109 ;;
 27110                           
 27111                           	psect	text174
 27112  0089BC                     __ptext174:
 27113                           	opt callstack 0
 27114  0089BC                     _HALResetPinMakeInput:
 27115                           	opt callstack 27
 27116                           
 27117                           ;incstack = 0
 27118                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 27119  0089BC  8494               	bsf	3988,2,c	;volatile
 27120  0089BE  0012               	return		;funcret
 27121  0089C0                     __end_of_HALResetPinMakeInput:
 27122                           	opt callstack 0
 27123                           
 27124 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 27125 ;; Defined at:
 27126 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27127 ;; Parameters:    Size  Location     Type
 27128 ;;  period          2   62[COMRAM] unsigned int 
 27129 ;; Auto vars:     Size  Location     Type
 27130 ;;  iCtr            1   72[COMRAM] unsigned char 
 27131 ;; Return value:  Size  Location     Type
 27132 ;;                  1    wreg      void 
 27133 ;; Registers used:
 27134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27135 ;; Tracked objects:
 27136 ;;		On entry : 0/0
 27137 ;;		On exit  : 0/0
 27138 ;;		Unchanged: 0/0
 27139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27141 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27143 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27144 ;;Total ram usage:       11 bytes
 27145 ;; Hardware stack levels used:    1
 27146 ;; Hardware stack levels required when called:    4
 27147 ;; This function calls:
 27148 ;;		_SwTimerSetTimeout
 27149 ;;		_SwTimerStart
 27150 ;;		_SwTimerStop
 27151 ;;		___lldiv
 27152 ;;		___lmul
 27153 ;; This function is called by:
 27154 ;;		_LORAWAN_Reset
 27155 ;; This function uses a non-reentrant model
 27156 ;;
 27157                           
 27158                           	psect	text175
 27159  00BE36                     __ptext175:
 27160                           	opt callstack 0
 27161  00BE36                     _LORAWAN_LinkCheckConfigure:
 27162                           	opt callstack 24
 27163                           
 27164                           ;lorawan.c: 757: uint8_t iCtr;;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL
      +                          ;
 27165                           
 27166                           ;incstack = 0
 27167  00BE36  C03F  F033         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 27168  00BE3A  C040  F034         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 27169  00BE3E  6A35               	clrf	___lmul@multiplier+2,c
 27170  00BE40  6A36               	clrf	___lmul@multiplier+3,c
 27171  00BE42  0EE8               	movlw	232
 27172  00BE44  6E37               	movwf	___lmul@multiplicand,c
 27173  00BE46  0E03               	movlw	3
 27174  00BE48  6E38               	movwf	___lmul@multiplicand+1,c
 27175  00BE4A  0E00               	movlw	0
 27176  00BE4C  6E39               	movwf	___lmul@multiplicand+2,c
 27177  00BE4E  0E00               	movlw	0
 27178  00BE50  6E3A               	movwf	___lmul@multiplicand+3,c
 27179  00BE52  ECD4  F04B         	call	___lmul	;wreg free
 27180  00BE56  C033  F2CC         	movff	?___lmul,_loRa+204
 27181  00BE5A  C034  F2CD         	movff	?___lmul+1,_loRa+205
 27182  00BE5E  C035  F2CE         	movff	?___lmul+2,_loRa+206
 27183  00BE62  C036  F2CF         	movff	?___lmul+3,_loRa+207
 27184                           
 27185                           ;lorawan.c: 761: if (period == 0)
 27186  00BE66  503F               	movf	LORAWAN_LinkCheckConfigure@period,w,c
 27187  00BE68  1040               	iorwf	LORAWAN_LinkCheckConfigure@period+1,w,c
 27188  00BE6A  A4D8               	btfss	status,2,c
 27189  00BE6C  D026               	goto	l1781
 27190                           
 27191                           ;lorawan.c: 762: {;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 27192  00BE6E  0102               	movlb	2	; () banked
 27193  00BE70  51E7               	movf	(_loRa+231)& (0+255),w,b
 27194  00BE72  EC46  F046         	call	_SwTimerStop
 27195                           
 27196                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 27197  00BE76  0102               	movlb	2	; () banked
 27198  00BE78  9503               	bcf	(_loRa+3)& (0+255),2,b
 27199                           
 27200                           ; BSR set to: 2
 27201                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 27202  00BE7A  0E00               	movlw	0
 27203  00BE7C  6E49               	movwf	LORAWAN_LinkCheckConfigure@iCtr,c
 27204  00BE7E  D018               	goto	l14964
 27205  00BE80                     l14956:
 27206                           
 27207                           ; BSR set to: 2
 27208                           ;lorawan.c: 766: {;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_C
      +                          ID)
 27209  00BE80  5049               	movf	LORAWAN_LinkCheckConfigure@iCtr,w,c
 27210  00BE82  0D02               	mullw	2
 27211  00BE84  0EA8               	movlw	low (_loRa+168)
 27212  00BE86  24F3               	addwf	prodl,w,c
 27213  00BE88  6ED9               	movwf	fsr2l,c
 27214  00BE8A  0E02               	movlw	high (_loRa+168)
 27215  00BE8C  20F4               	addwfc	prodh,w,c
 27216  00BE8E  6EDA               	movwf	fsr2h,c
 27217  00BE90  0E02               	movlw	2
 27218  00BE92  18DE               	xorwf	postinc2,w,c
 27219  00BE94  A4D8               	btfss	status,2,c
 27220  00BE96  D00B               	goto	l14962
 27221                           
 27222                           ; BSR set to: 2
 27223                           ;lorawan.c: 768: {;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 27224  00BE98  5049               	movf	LORAWAN_LinkCheckConfigure@iCtr,w,c
 27225  00BE9A  0D02               	mullw	2
 27226  00BE9C  0EA8               	movlw	low (_loRa+168)
 27227  00BE9E  24F3               	addwf	prodl,w,c
 27228  00BEA0  6ED9               	movwf	fsr2l,c
 27229  00BEA2  0E02               	movlw	high (_loRa+168)
 27230  00BEA4  20F4               	addwfc	prodh,w,c
 27231  00BEA6  6EDA               	movwf	fsr2h,c
 27232  00BEA8  0EFF               	movlw	255
 27233  00BEAA  6EDF               	movwf	indf2,c
 27234                           
 27235                           ; BSR set to: 2
 27236                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 27237  00BEAC  07A7               	decf	(_loRa+167)& (0+255),f,b
 27238  00BEAE                     l14962:
 27239                           
 27240                           ; BSR set to: 2
 27241  00BEAE  2A49               	incf	LORAWAN_LinkCheckConfigure@iCtr,f,c
 27242  00BEB0                     l14964:
 27243                           
 27244                           ; BSR set to: 2
 27245  00BEB0  51A7               	movf	(_loRa+167)& (0+255),w,b
 27246  00BEB2  5C49               	subwf	LORAWAN_LinkCheckConfigure@iCtr,w,c
 27247  00BEB4  B0D8               	btfsc	status,0,c
 27248  00BEB6  0012               	return	
 27249  00BEB8  D7E3               	goto	l14956
 27250  00BEBA                     l1781:
 27251                           
 27252                           ;lorawan.c: 776: else;lorawan.c: 777: {;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 27253  00BEBA  0102               	movlb	2	; () banked
 27254  00BEBC  8503               	bsf	(_loRa+3)& (0+255),2,b
 27255                           
 27256                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 27257  00BEBE  A902               	btfss	(_loRa+2)& (0+255),4,b
 27258  00BEC0  0012               	return	
 27259                           
 27260                           ; BSR set to: 2
 27261                           ;lorawan.c: 782: {;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.perio
      +                          dForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125U
      +                          L ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 27262  00BEC2  51CF               	movf	(_loRa+207)& (0+255),w,b
 27263  00BEC4  E107               	bnz	u17070
 27264  00BEC6  29CC               	incf	(_loRa+204)& (0+255),w,b
 27265  00BEC8  0EFF               	movlw	255
 27266  00BECA  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 27267  00BECC  0E0F               	movlw	15
 27268  00BECE  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 27269  00BED0  A0D8               	btfss	status,0,c
 27270  00BED2  D01B               	goto	l14970
 27271  00BED4                     u17070:
 27272                           
 27273                           ; BSR set to: 2
 27274  00BED4  C2CC  F001         	movff	_loRa+204,___lldiv@dividend
 27275  00BED8  C2CD  F002         	movff	_loRa+205,___lldiv@dividend+1
 27276  00BEDC  C2CE  F003         	movff	_loRa+206,___lldiv@dividend+2
 27277  00BEE0  C2CF  F004         	movff	_loRa+207,___lldiv@dividend+3
 27278  00BEE4  0E7D               	movlw	125
 27279  00BEE6  6E05               	movwf	___lldiv@divisor,c
 27280  00BEE8  0E00               	movlw	0
 27281  00BEEA  6E06               	movwf	___lldiv@divisor+1,c
 27282  00BEEC  0E00               	movlw	0
 27283  00BEEE  6E07               	movwf	___lldiv@divisor+2,c
 27284  00BEF0  0E00               	movlw	0
 27285  00BEF2  6E08               	movwf	___lldiv@divisor+3,c
 27286  00BEF4  ECFE  F050         	call	___lldiv	;wreg free
 27287  00BEF8  0E0C               	movlw	12
 27288  00BEFA                     u17085:
 27289  00BEFA  90D8               	bcf	status,0,c
 27290  00BEFC  3601               	rlcf	?___lldiv,f,c
 27291  00BEFE  3602               	rlcf	?___lldiv+1,f,c
 27292  00BF00  3603               	rlcf	?___lldiv+2,f,c
 27293  00BF02  3604               	rlcf	?___lldiv+3,f,c
 27294  00BF04  2EE8               	decfsz	wreg,f,c
 27295  00BF06  D7F9               	goto	u17085
 27296  00BF08  D022               	goto	L29
 27297  00BF0A                     l14970:
 27298                           
 27299                           ; BSR set to: 2
 27300  00BF0A  C2CC  F041         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 27301  00BF0E  C2CD  F042         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 27302  00BF12  C2CE  F043         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 27303  00BF16  C2CF  F044         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 27304  00BF1A  0E0C               	movlw	12
 27305  00BF1C                     u17095:
 27306  00BF1C  90D8               	bcf	status,0,c
 27307  00BF1E  3641               	rlcf	??_LORAWAN_LinkCheckConfigure,f,c
 27308  00BF20  3642               	rlcf	??_LORAWAN_LinkCheckConfigure+1,f,c
 27309  00BF22  3643               	rlcf	??_LORAWAN_LinkCheckConfigure+2,f,c
 27310  00BF24  3644               	rlcf	??_LORAWAN_LinkCheckConfigure+3,f,c
 27311  00BF26  2EE8               	decfsz	wreg,f,c
 27312  00BF28  D7F9               	goto	u17095
 27313  00BF2A  C041  F001         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 27314  00BF2E  C042  F002         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 27315  00BF32  C043  F003         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 27316  00BF36  C044  F004         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 27317  00BF3A  0E7D               	movlw	125
 27318  00BF3C  6E05               	movwf	___lldiv@divisor,c
 27319  00BF3E  0E00               	movlw	0
 27320  00BF40  6E06               	movwf	___lldiv@divisor+1,c
 27321  00BF42  0E00               	movlw	0
 27322  00BF44  6E07               	movwf	___lldiv@divisor+2,c
 27323  00BF46  0E00               	movlw	0
 27324  00BF48  6E08               	movwf	___lldiv@divisor+3,c
 27325  00BF4A  ECFE  F050         	call	___lldiv	;wreg free
 27326  00BF4E                     L29:
 27327  00BF4E  C001  F045         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2496
 27328  00BF52  C002  F046         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2496+1
 27329  00BF56  C003  F047         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2496+2
 27330  00BF5A  C004  F048         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2496+3
 27331  00BF5E  C045  F00E         	movff	_LORAWAN_LinkCheckConfigure$2496,SwTimerSetTimeout@timeout
 27332  00BF62  C046  F00F         	movff	_LORAWAN_LinkCheckConfigure$2496+1,SwTimerSetTimeout@timeout+1
 27333  00BF66  C047  F010         	movff	_LORAWAN_LinkCheckConfigure$2496+2,SwTimerSetTimeout@timeout+2
 27334  00BF6A  C048  F011         	movff	_LORAWAN_LinkCheckConfigure$2496+3,SwTimerSetTimeout@timeout+3
 27335  00BF6E  0102               	movlb	2	; () banked
 27336  00BF70  51E7               	movf	(_loRa+231)& (0+255),w,b
 27337  00BF72  EC5C  F049         	call	_SwTimerSetTimeout
 27338                           
 27339                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 27340  00BF76  0102               	movlb	2	; () banked
 27341  00BF78  51E7               	movf	(_loRa+231)& (0+255),w,b
 27342  00BF7A  ECC3  F051         	call	_SwTimerStart
 27343  00BF7E  0012               	return		;funcret
 27344  00BF80                     __end_of_LORAWAN_LinkCheckConfigure:
 27345                           	opt callstack 0
 27346                           
 27347 ;; *************** function ___lmul *****************
 27348 ;; Defined at:
 27349 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
 27350 ;; Parameters:    Size  Location     Type
 27351 ;;  multiplier      4   50[COMRAM] unsigned long 
 27352 ;;  multiplicand    4   54[COMRAM] unsigned long 
 27353 ;; Auto vars:     Size  Location     Type
 27354 ;;  product         4   58[COMRAM] unsigned long 
 27355 ;; Return value:  Size  Location     Type
 27356 ;;                  4   50[COMRAM] unsigned long 
 27357 ;; Registers used:
 27358 ;;		wreg, status,2, status,0
 27359 ;; Tracked objects:
 27360 ;;		On entry : 0/0
 27361 ;;		On exit  : 0/0
 27362 ;;		Unchanged: 0/0
 27363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27364 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27365 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27367 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27368 ;;Total ram usage:       12 bytes
 27369 ;; Hardware stack levels used:    1
 27370 ;; This function calls:
 27371 ;;		Nothing
 27372 ;; This function is called by:
 27373 ;;		_RADIO_WriteConfiguration
 27374 ;;		_RADIO_TxDone
 27375 ;;		_RADIO_FSKPacketSent
 27376 ;;		_LORAWAN_TxDone
 27377 ;;		_ExecuteNewChannel
 27378 ;;		_ExecuteRxParamSetupReq
 27379 ;;		_UpdateCfList
 27380 ;;		_LORAWAN_LinkCheckConfigure
 27381 ;;		_rand
 27382 ;;		_LORAWAN_Pause
 27383 ;; This function uses a non-reentrant model
 27384 ;;
 27385                           
 27386                           	psect	text176
 27387  0097A8                     __ptext176:
 27388                           	opt callstack 0
 27389  0097A8                     ___lmul:
 27390                           	opt callstack 23
 27391                           
 27392                           ;incstack = 0
 27393  0097A8  0E00               	movlw	0
 27394  0097AA  6E3B               	movwf	___lmul@product,c
 27395  0097AC  0E00               	movlw	0
 27396  0097AE  6E3C               	movwf	___lmul@product+1,c
 27397  0097B0  0E00               	movlw	0
 27398  0097B2  6E3D               	movwf	___lmul@product+2,c
 27399  0097B4  0E00               	movlw	0
 27400  0097B6  6E3E               	movwf	___lmul@product+3,c
 27401  0097B8                     l12602:
 27402  0097B8  A033               	btfss	___lmul@multiplier,0,c
 27403  0097BA  D008               	goto	l12606
 27404  0097BC  5037               	movf	___lmul@multiplicand,w,c
 27405  0097BE  263B               	addwf	___lmul@product,f,c
 27406  0097C0  5038               	movf	___lmul@multiplicand+1,w,c
 27407  0097C2  223C               	addwfc	___lmul@product+1,f,c
 27408  0097C4  5039               	movf	___lmul@multiplicand+2,w,c
 27409  0097C6  223D               	addwfc	___lmul@product+2,f,c
 27410  0097C8  503A               	movf	___lmul@multiplicand+3,w,c
 27411  0097CA  223E               	addwfc	___lmul@product+3,f,c
 27412  0097CC                     l12606:
 27413  0097CC  90D8               	bcf	status,0,c
 27414  0097CE  3637               	rlcf	___lmul@multiplicand,f,c
 27415  0097D0  3638               	rlcf	___lmul@multiplicand+1,f,c
 27416  0097D2  3639               	rlcf	___lmul@multiplicand+2,f,c
 27417  0097D4  363A               	rlcf	___lmul@multiplicand+3,f,c
 27418  0097D6  90D8               	bcf	status,0,c
 27419  0097D8  3236               	rrcf	___lmul@multiplier+3,f,c
 27420  0097DA  3235               	rrcf	___lmul@multiplier+2,f,c
 27421  0097DC  3234               	rrcf	___lmul@multiplier+1,f,c
 27422  0097DE  3233               	rrcf	___lmul@multiplier,f,c
 27423  0097E0  5033               	movf	___lmul@multiplier,w,c
 27424  0097E2  1034               	iorwf	___lmul@multiplier+1,w,c
 27425  0097E4  1035               	iorwf	___lmul@multiplier+2,w,c
 27426  0097E6  1036               	iorwf	___lmul@multiplier+3,w,c
 27427  0097E8  A4D8               	btfss	status,2,c
 27428  0097EA  D7E6               	goto	l12602
 27429  0097EC  C03B  F033         	movff	___lmul@product,?___lmul
 27430  0097F0  C03C  F034         	movff	___lmul@product+1,?___lmul+1
 27431  0097F4  C03D  F035         	movff	___lmul@product+2,?___lmul+2
 27432  0097F8  C03E  F036         	movff	___lmul@product+3,?___lmul+3
 27433  0097FC  0012               	return		;funcret
 27434  0097FE                     __end_of___lmul:
 27435                           	opt callstack 0
 27436                           
 27437 ;; *************** function ___lldiv *****************
 27438 ;; Defined at:
 27439 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 27440 ;; Parameters:    Size  Location     Type
 27441 ;;  dividend        4    0[COMRAM] unsigned long 
 27442 ;;  divisor         4    4[COMRAM] unsigned long 
 27443 ;; Auto vars:     Size  Location     Type
 27444 ;;  quotient        4    8[COMRAM] unsigned long 
 27445 ;;  counter         1   12[COMRAM] unsigned char 
 27446 ;; Return value:  Size  Location     Type
 27447 ;;                  4    0[COMRAM] unsigned long 
 27448 ;; Registers used:
 27449 ;;		wreg, status,2, status,0
 27450 ;; Tracked objects:
 27451 ;;		On entry : 0/0
 27452 ;;		On exit  : 0/0
 27453 ;;		Unchanged: 0/0
 27454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27455 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27456 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27458 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27459 ;;Total ram usage:       13 bytes
 27460 ;; Hardware stack levels used:    1
 27461 ;; This function calls:
 27462 ;;		Nothing
 27463 ;; This function is called by:
 27464 ;;		_RADIO_WriteFrequency
 27465 ;;		_RADIO_WriteFSKFrequencyDeviation
 27466 ;;		_RADIO_WriteFSKBitRate
 27467 ;;		_RADIO_Transmit
 27468 ;;		_RADIO_ReceiveStart
 27469 ;;		_LORAWAN_TxDone
 27470 ;;		_LORAWAN_RxTimeout
 27471 ;;		_StartReTxTimer
 27472 ;;		_DutyCycleCallback
 27473 ;;		_LORAWAN_LinkCheckConfigure
 27474 ;;		_LORAWAN_LinkCheckCallback
 27475 ;;		_UpdateRetransmissionAckTimeoutState
 27476 ;;		_UpdateJoinSuccessState
 27477 ;; This function uses a non-reentrant model
 27478 ;;
 27479                           
 27480                           	psect	text177
 27481  00A1FC                     __ptext177:
 27482                           	opt callstack 0
 27483  00A1FC                     ___lldiv:
 27484                           	opt callstack 27
 27485                           
 27486                           ;incstack = 0
 27487  00A1FC  0E00               	movlw	0
 27488  00A1FE  6E09               	movwf	___lldiv@quotient,c
 27489  00A200  0E00               	movlw	0
 27490  00A202  6E0A               	movwf	___lldiv@quotient+1,c
 27491  00A204  0E00               	movlw	0
 27492  00A206  6E0B               	movwf	___lldiv@quotient+2,c
 27493  00A208  0E00               	movlw	0
 27494  00A20A  6E0C               	movwf	___lldiv@quotient+3,c
 27495  00A20C  5005               	movf	___lldiv@divisor,w,c
 27496  00A20E  1006               	iorwf	___lldiv@divisor+1,w,c
 27497  00A210  1007               	iorwf	___lldiv@divisor+2,w,c
 27498  00A212  1008               	iorwf	___lldiv@divisor+3,w,c
 27499  00A214  B4D8               	btfsc	status,2,c
 27500  00A216  D02A               	goto	l2548
 27501  00A218  0E01               	movlw	1
 27502  00A21A  6E0D               	movwf	___lldiv@counter,c
 27503  00A21C  D006               	goto	l12618
 27504  00A21E                     l12616:
 27505  00A21E  90D8               	bcf	status,0,c
 27506  00A220  3605               	rlcf	___lldiv@divisor,f,c
 27507  00A222  3606               	rlcf	___lldiv@divisor+1,f,c
 27508  00A224  3607               	rlcf	___lldiv@divisor+2,f,c
 27509  00A226  3608               	rlcf	___lldiv@divisor+3,f,c
 27510  00A228  2A0D               	incf	___lldiv@counter,f,c
 27511  00A22A                     l12618:
 27512  00A22A  AE08               	btfss	___lldiv@divisor+3,7,c
 27513  00A22C  D7F8               	goto	l12616
 27514  00A22E                     u13390:
 27515  00A22E  90D8               	bcf	status,0,c
 27516  00A230  3609               	rlcf	___lldiv@quotient,f,c
 27517  00A232  360A               	rlcf	___lldiv@quotient+1,f,c
 27518  00A234  360B               	rlcf	___lldiv@quotient+2,f,c
 27519  00A236  360C               	rlcf	___lldiv@quotient+3,f,c
 27520  00A238  5005               	movf	___lldiv@divisor,w,c
 27521  00A23A  5C01               	subwf	___lldiv@dividend,w,c
 27522  00A23C  5006               	movf	___lldiv@divisor+1,w,c
 27523  00A23E  5802               	subwfb	___lldiv@dividend+1,w,c
 27524  00A240  5007               	movf	___lldiv@divisor+2,w,c
 27525  00A242  5803               	subwfb	___lldiv@dividend+2,w,c
 27526  00A244  5008               	movf	___lldiv@divisor+3,w,c
 27527  00A246  5804               	subwfb	___lldiv@dividend+3,w,c
 27528  00A248  A0D8               	btfss	status,0,c
 27529  00A24A  D009               	goto	l12628
 27530  00A24C  5005               	movf	___lldiv@divisor,w,c
 27531  00A24E  5E01               	subwf	___lldiv@dividend,f,c
 27532  00A250  5006               	movf	___lldiv@divisor+1,w,c
 27533  00A252  5A02               	subwfb	___lldiv@dividend+1,f,c
 27534  00A254  5007               	movf	___lldiv@divisor+2,w,c
 27535  00A256  5A03               	subwfb	___lldiv@dividend+2,f,c
 27536  00A258  5008               	movf	___lldiv@divisor+3,w,c
 27537  00A25A  5A04               	subwfb	___lldiv@dividend+3,f,c
 27538  00A25C  8009               	bsf	___lldiv@quotient,0,c
 27539  00A25E                     l12628:
 27540  00A25E  90D8               	bcf	status,0,c
 27541  00A260  3208               	rrcf	___lldiv@divisor+3,f,c
 27542  00A262  3207               	rrcf	___lldiv@divisor+2,f,c
 27543  00A264  3206               	rrcf	___lldiv@divisor+1,f,c
 27544  00A266  3205               	rrcf	___lldiv@divisor,f,c
 27545  00A268  2E0D               	decfsz	___lldiv@counter,f,c
 27546  00A26A  D7E1               	goto	u13390
 27547  00A26C                     l2548:
 27548  00A26C  C009  F001         	movff	___lldiv@quotient,?___lldiv
 27549  00A270  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 27550  00A274  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 27551  00A278  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 27552  00A27C  0012               	return		;funcret
 27553  00A27E                     __end_of___lldiv:
 27554                           	opt callstack 0
 27555                           
 27556 ;; *************** function _SwTimerStop *****************
 27557 ;; Defined at:
 27558 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 27559 ;; Parameters:    Size  Location     Type
 27560 ;;  timerId         1    wreg     unsigned char 
 27561 ;; Auto vars:     Size  Location     Type
 27562 ;;  timerId         1    0[COMRAM] unsigned char 
 27563 ;; Return value:  Size  Location     Type
 27564 ;;                  1    wreg      void 
 27565 ;; Registers used:
 27566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27567 ;; Tracked objects:
 27568 ;;		On entry : 0/0
 27569 ;;		On exit  : 0/0
 27570 ;;		Unchanged: 0/0
 27571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27576 ;;Total ram usage:        1 bytes
 27577 ;; Hardware stack levels used:    1
 27578 ;; This function calls:
 27579 ;;		Nothing
 27580 ;; This function is called by:
 27581 ;;		_RADIO_Init
 27582 ;;		_RADIO_Transmit
 27583 ;;		_RADIO_RxDone
 27584 ;;		_RADIO_FSKPayloadReady
 27585 ;;		_RADIO_RxTimeout
 27586 ;;		_RADIO_TxDone
 27587 ;;		_RADIO_FSKPacketSent
 27588 ;;		_RADIO_RxFSKTimeout
 27589 ;;		_LORAWAN_TxDone
 27590 ;;		_StopAllSoftwareTimers
 27591 ;;		_LORAWAN_LinkCheckConfigure
 27592 ;;		_LORAWAN_RxDone
 27593 ;; This function uses a non-reentrant model
 27594 ;;
 27595                           
 27596                           	psect	text178
 27597  008C8C                     __ptext178:
 27598                           	opt callstack 0
 27599  008C8C                     _SwTimerStop:
 27600                           	opt callstack 26
 27601                           
 27602                           ;incstack = 0
 27603                           ;SwTimerStop@timerId stored from wreg
 27604  008C8C  6E01               	movwf	SwTimerStop@timerId,c
 27605                           
 27606                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 27607  008C8E  9EF2               	bcf	4082,7,c	;volatile
 27608                           
 27609                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 27610  008C90  5001               	movf	SwTimerStop@timerId,w,c
 27611  008C92  0D08               	mullw	8
 27612  008C94  0E04               	movlw	low (_swTimers+4)
 27613  008C96  24F3               	addwf	prodl,w,c
 27614  008C98  6ED9               	movwf	fsr2l,c
 27615  008C9A  0E04               	movlw	high (_swTimers+4)
 27616  008C9C  20F4               	addwfc	prodh,w,c
 27617  008C9E  6EDA               	movwf	fsr2h,c
 27618  008CA0  0E00               	movlw	0
 27619  008CA2  6EDF               	movwf	indf2,c
 27620                           
 27621                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 27622  008CA4  8EF2               	bsf	4082,7,c	;volatile
 27623  008CA6  0012               	return		;funcret
 27624  008CA8                     __end_of_SwTimerStop:
 27625                           	opt callstack 0
 27626                           
 27627 ;; *************** function _SwTimerStart *****************
 27628 ;; Defined at:
 27629 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 27630 ;; Parameters:    Size  Location     Type
 27631 ;;  timerId         1    wreg     unsigned char 
 27632 ;; Auto vars:     Size  Location     Type
 27633 ;;  timerId         1   49[COMRAM] unsigned char 
 27634 ;;  ticksRemaini    4   45[COMRAM] unsigned long 
 27635 ;; Return value:  Size  Location     Type
 27636 ;;                  1    wreg      void 
 27637 ;; Registers used:
 27638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27639 ;; Tracked objects:
 27640 ;;		On entry : 0/0
 27641 ;;		On exit  : 0/0
 27642 ;;		Unchanged: 0/0
 27643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27645 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27646 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27647 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27648 ;;Total ram usage:        9 bytes
 27649 ;; Hardware stack levels used:    1
 27650 ;; Hardware stack levels required when called:    3
 27651 ;; This function calls:
 27652 ;;		_SwTimersInterrupt
 27653 ;;		_TMR_OverrideRemaining
 27654 ;; This function is called by:
 27655 ;;		_RADIO_Transmit
 27656 ;;		_RADIO_ReceiveStart
 27657 ;;		_LORAWAN_TxDone
 27658 ;;		_LORAWAN_RxTimeout
 27659 ;;		_StartReTxTimer
 27660 ;;		_DutyCycleCallback
 27661 ;;		_LORAWAN_Join
 27662 ;;		_LORAWAN_LinkCheckConfigure
 27663 ;;		_LORAWAN_LinkCheckCallback
 27664 ;;		_UpdateRetransmissionAckTimeoutState
 27665 ;;		_UpdateJoinSuccessState
 27666 ;; This function uses a non-reentrant model
 27667 ;;
 27668                           
 27669                           	psect	text179
 27670  00A386                     __ptext179:
 27671                           	opt callstack 0
 27672  00A386                     _SwTimerStart:
 27673                           	opt callstack 24
 27674                           
 27675                           ;incstack = 0
 27676                           ;SwTimerStart@timerId stored from wreg
 27677  00A386  6E32               	movwf	SwTimerStart@timerId,c
 27678                           
 27679                           ;sw_timer.c: 220: uint32_t ticksRemaining;;sw_timer.c: 222: (INTCONbits.GIE = 0);
 27680  00A388  9EF2               	bcf	4082,7,c	;volatile
 27681                           
 27682                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 27683  00A38A  EC59  F059         	call	_SwTimersInterrupt	;wreg free
 27684  00A38E  C019  F02E         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 27685  00A392  C01A  F02F         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 27686  00A396  C01B  F030         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 27687  00A39A  C01C  F031         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 27688                           
 27689                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 27690  00A39E  5032               	movf	SwTimerStart@timerId,w,c
 27691  00A3A0  0D08               	mullw	8
 27692  00A3A2  0E00               	movlw	low _swTimers
 27693  00A3A4  24F3               	addwf	prodl,w,c
 27694  00A3A6  6ED9               	movwf	fsr2l,c
 27695  00A3A8  0E04               	movlw	high _swTimers
 27696  00A3AA  20F4               	addwfc	prodh,w,c
 27697  00A3AC  6EDA               	movwf	fsr2h,c
 27698  00A3AE  502E               	movf	SwTimerStart@ticksRemaining,w,c
 27699  00A3B0  5CDE               	subwf	postinc2,w,c
 27700  00A3B2  502F               	movf	SwTimerStart@ticksRemaining+1,w,c
 27701  00A3B4  58DE               	subwfb	postinc2,w,c
 27702  00A3B6  5030               	movf	SwTimerStart@ticksRemaining+2,w,c
 27703  00A3B8  58DE               	subwfb	postinc2,w,c
 27704  00A3BA  5031               	movf	SwTimerStart@ticksRemaining+3,w,c
 27705  00A3BC  58DE               	subwfb	postinc2,w,c
 27706  00A3BE  B0D8               	btfsc	status,0,c
 27707  00A3C0  D010               	goto	l12960
 27708                           
 27709                           ;sw_timer.c: 225: {;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 27710  00A3C2  5032               	movf	SwTimerStart@timerId,w,c
 27711  00A3C4  0D08               	mullw	8
 27712  00A3C6  0E00               	movlw	low _swTimers
 27713  00A3C8  24F3               	addwf	prodl,w,c
 27714  00A3CA  6ED9               	movwf	fsr2l,c
 27715  00A3CC  0E04               	movlw	high _swTimers
 27716  00A3CE  20F4               	addwfc	prodh,w,c
 27717  00A3D0  6EDA               	movwf	fsr2h,c
 27718  00A3D2  CFDE F02E          	movff	postinc2,SwTimerStart@ticksRemaining
 27719  00A3D6  CFDE F02F          	movff	postinc2,SwTimerStart@ticksRemaining+1
 27720  00A3DA  CFDE F030          	movff	postinc2,SwTimerStart@ticksRemaining+2
 27721  00A3DE  CFDE F031          	movff	postinc2,SwTimerStart@ticksRemaining+3
 27722  00A3E2                     l12960:
 27723                           
 27724                           ;sw_timer.c: 227: };sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 27725  00A3E2  C02E  F00B         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 27726  00A3E6  C02F  F00C         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 27727  00A3EA  C030  F00D         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 27728  00A3EE  C031  F00E         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 27729  00A3F2  EC3F  F051         	call	_TMR_OverrideRemaining	;wreg free
 27730                           
 27731                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 27732  00A3F6  5032               	movf	SwTimerStart@timerId,w,c
 27733  00A3F8  0D08               	mullw	8
 27734  00A3FA  0E04               	movlw	low (_swTimers+4)
 27735  00A3FC  24F3               	addwf	prodl,w,c
 27736  00A3FE  6ED9               	movwf	fsr2l,c
 27737  00A400  0E04               	movlw	high (_swTimers+4)
 27738  00A402  20F4               	addwfc	prodh,w,c
 27739  00A404  6EDA               	movwf	fsr2h,c
 27740  00A406  0E01               	movlw	1
 27741  00A408  6EDF               	movwf	indf2,c
 27742                           
 27743                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 27744  00A40A  8EF2               	bsf	4082,7,c	;volatile
 27745  00A40C  0012               	return		;funcret
 27746  00A40E                     __end_of_SwTimerStart:
 27747                           	opt callstack 0
 27748                           
 27749 ;; *************** function _TMR_OverrideRemaining *****************
 27750 ;; Defined at:
 27751 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 27752 ;; Parameters:    Size  Location     Type
 27753 ;;  ticksRemaini    4   10[COMRAM] unsigned long 
 27754 ;; Auto vars:     Size  Location     Type
 27755 ;;  oldReloadVal    2   18[COMRAM] unsigned int 
 27756 ;;  tmrVal          2   16[COMRAM] unsigned int 
 27757 ;; Return value:  Size  Location     Type
 27758 ;;                  1    wreg      void 
 27759 ;; Registers used:
 27760 ;;		wreg, status,2, status,0, cstack
 27761 ;; Tracked objects:
 27762 ;;		On entry : 0/0
 27763 ;;		On exit  : 0/0
 27764 ;;		Unchanged: 0/0
 27765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27767 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27768 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27769 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27770 ;;Total ram usage:       10 bytes
 27771 ;; Hardware stack levels used:    1
 27772 ;; Hardware stack levels required when called:    2
 27773 ;; This function calls:
 27774 ;;		_TMR_SwapTimer
 27775 ;; This function is called by:
 27776 ;;		_SwTimerStart
 27777 ;; This function uses a non-reentrant model
 27778 ;;
 27779                           
 27780                           	psect	text180
 27781  00A27E                     __ptext180:
 27782                           	opt callstack 0
 27783  00A27E                     _TMR_OverrideRemaining:
 27784                           	opt callstack 24
 27785                           
 27786                           ;sw_timer.c: 67: uint16_t tmrVal;;sw_timer.c: 68: uint16_t oldReloadVal;;sw_timer.c: 71:
      +                           if (ticksToScheduledInterrupt > 10)
 27787                           
 27788                           ;incstack = 0
 27789  00A27E  0101               	movlb	1	; () banked
 27790  00A280  5194               	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
 27791  00A282  1193               	iorwf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
 27792  00A284  1192               	iorwf	(_ticksToScheduledInterrupt+1)& (0+255),w,b	;volatile
 27793  00A286  E104               	bnz	u13440
 27794  00A288  0E0B               	movlw	11
 27795  00A28A  5D91               	subwf	_ticksToScheduledInterrupt& (0+255),w,b	;volatile
 27796  00A28C  A0D8               	btfss	status,0,c
 27797  00A28E  0012               	return	
 27798  00A290                     u13440:
 27799                           
 27800                           ; BSR set to: 1
 27801                           ;sw_timer.c: 72: {;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 27802  00A290  5191               	movf	_ticksToScheduledInterrupt& (0+255),w,b	;volatile
 27803  00A292  5C0B               	subwf	TMR_OverrideRemaining@ticksRemaining,w,c
 27804  00A294  5192               	movf	(_ticksToScheduledInterrupt+1)& (0+255),w,b	;volatile
 27805  00A296  580C               	subwfb	TMR_OverrideRemaining@ticksRemaining+1,w,c
 27806  00A298  5193               	movf	(_ticksToScheduledInterrupt+2)& (0+255),w,b	;volatile
 27807  00A29A  580D               	subwfb	TMR_OverrideRemaining@ticksRemaining+2,w,c
 27808  00A29C  5194               	movf	(_ticksToScheduledInterrupt+3)& (0+255),w,b	;volatile
 27809  00A29E  580E               	subwfb	TMR_OverrideRemaining@ticksRemaining+3,w,c
 27810  00A2A0  B0D8               	btfsc	status,0,c
 27811  00A2A2  0012               	return	
 27812                           
 27813                           ; BSR set to: 1
 27814                           ;sw_timer.c: 74: {;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 27815  00A2A4  C00B  F191         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 27816  00A2A8  C00C  F192         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 27817  00A2AC  C00D  F193         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 27818  00A2B0  C00E  F194         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 27819                           
 27820                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 27821  00A2B4  C0F4  F013         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 27822  00A2B8  C0F5  F014         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 27823                           
 27824                           ; BSR set to: 1
 27825                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 27826  00A2BC  500B               	movf	TMR_OverrideRemaining@ticksRemaining,w,c
 27827  00A2BE  0800               	sublw	0
 27828  00A2C0  0100               	movlb	0	; () banked
 27829  00A2C2  6FF4               	movwf	_reloadVal& (0+255),b	;volatile
 27830  00A2C4  500C               	movf	TMR_OverrideRemaining@ticksRemaining+1,w,c
 27831  00A2C6  A0D8               	btfss	status,0,c
 27832  00A2C8  2AE8               	incf	wreg,f,c
 27833  00A2CA  0800               	sublw	0
 27834  00A2CC  6FF5               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 27835                           
 27836                           ; BSR set to: 0
 27837                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 27838  00A2CE  C0F4  F009         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 27839  00A2D2  C0F5  F00A         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 27840  00A2D6  ECDE  F049         	call	_TMR_SwapTimer	;wreg free
 27841  00A2DA  C009  F011         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 27842  00A2DE  C00A  F012         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 27843                           
 27844                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 27845  00A2E2  5013               	movf	TMR_OverrideRemaining@oldReloadVal,w,c
 27846  00A2E4  5C11               	subwf	TMR_OverrideRemaining@tmrVal,w,c
 27847  00A2E6  6E0F               	movwf	??_TMR_OverrideRemaining& (0+255),c
 27848  00A2E8  5014               	movf	TMR_OverrideRemaining@oldReloadVal+1,w,c
 27849  00A2EA  5812               	subwfb	TMR_OverrideRemaining@tmrVal+1,w,c
 27850  00A2EC  6E10               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),c
 27851  00A2EE  500F               	movf	??_TMR_OverrideRemaining,w,c
 27852  00A2F0  0101               	movlb	1	; () banked
 27853  00A2F2  2708               	addwf	_ticksAdded& (0+255),f,b	;volatile
 27854  00A2F4  5010               	movf	??_TMR_OverrideRemaining+1,w,c
 27855  00A2F6  2309               	addwfc	(_ticksAdded+1)& (0+255),f,b	;volatile
 27856  00A2F8  0E00               	movlw	0
 27857  00A2FA  230A               	addwfc	(_ticksAdded+2)& (0+255),f,b	;volatile
 27858  00A2FC  0E00               	movlw	0
 27859  00A2FE  230B               	addwfc	(_ticksAdded+3)& (0+255),f,b	;volatile
 27860                           
 27861                           ; BSR set to: 1
 27862  00A300  0012               	return		;funcret
 27863  00A302                     __end_of_TMR_OverrideRemaining:
 27864                           	opt callstack 0
 27865                           
 27866 ;; *************** function _TMR_SwapTimer *****************
 27867 ;; Defined at:
 27868 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 27869 ;; Parameters:    Size  Location     Type
 27870 ;;  timerVal        2    8[COMRAM] unsigned int 
 27871 ;; Auto vars:     Size  Location     Type
 27872 ;;		None
 27873 ;; Return value:  Size  Location     Type
 27874 ;;                  2    8[COMRAM] unsigned int 
 27875 ;; Registers used:
 27876 ;;		wreg, status,2, status,0, cstack
 27877 ;; Tracked objects:
 27878 ;;		On entry : 0/0
 27879 ;;		On exit  : 0/0
 27880 ;;		Unchanged: 0/0
 27881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27886 ;;Total ram usage:        2 bytes
 27887 ;; Hardware stack levels used:    1
 27888 ;; Hardware stack levels required when called:    1
 27889 ;; This function calls:
 27890 ;;		_TMR1_ReadTimer
 27891 ;;		_TMR1_WriteTimer
 27892 ;; This function is called by:
 27893 ;;		_TMR_OverrideRemaining
 27894 ;;		_TMR_ISR_lora
 27895 ;; This function uses a non-reentrant model
 27896 ;;
 27897                           
 27898                           	psect	text181
 27899  0093BC                     __ptext181:
 27900                           	opt callstack 0
 27901  0093BC                     _TMR_SwapTimer:
 27902                           	opt callstack 24
 27903                           
 27904                           ;sw_timer.c: 114: static uint16_t oldVal;;sw_timer.c: 115: static uint16_t retVal;;sw_ti
      +                          mer.c: 117: oldVal = TMR1_ReadTimer();
 27905                           
 27906                           ; BSR set to: 1
 27907                           ;incstack = 0
 27908  0093BC  EC62  F046         	call	_TMR1_ReadTimer	;wreg free
 27909  0093C0  C001  F110         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 27910  0093C4  C002  F111         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 27911  0093C8                     l12538:
 27912  0093C8  EC62  F046         	call	_TMR1_ReadTimer	;wreg free
 27913  0093CC  0101               	movlb	1	; () banked
 27914  0093CE  5110               	movf	TMR_SwapTimer@oldVal& (0+255),w,b
 27915  0093D0  1801               	xorwf	?_TMR1_ReadTimer,w,c
 27916  0093D2  E104               	bnz	u13330
 27917  0093D4  5111               	movf	(TMR_SwapTimer@oldVal+1)& (0+255),w,b
 27918  0093D6  1802               	xorwf	?_TMR1_ReadTimer+1,w,c
 27919  0093D8  B4D8               	btfsc	status,2,c
 27920  0093DA  D7F6               	goto	l12538
 27921  0093DC                     u13330:
 27922                           
 27923                           ; BSR set to: 1
 27924                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 27925  0093DC  C009  F001         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 27926  0093E0  C00A  F002         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 27927  0093E4  EC38  F046         	call	_TMR1_WriteTimer	;wreg free
 27928                           
 27929                           ;sw_timer.c: 128: oldVal++;
 27930  0093E8  0101               	movlb	1	; () banked
 27931  0093EA  4B10               	infsnz	TMR_SwapTimer@oldVal& (0+255),f,b
 27932  0093EC  2B11               	incf	(TMR_SwapTimer@oldVal+1)& (0+255),f,b
 27933                           
 27934                           ; BSR set to: 1
 27935                           ;sw_timer.c: 130: retVal = oldVal;
 27936  0093EE  C110  F10E         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 27937  0093F2  C111  F10F         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 27938                           
 27939                           ; BSR set to: 1
 27940                           ;sw_timer.c: 132: return retVal;
 27941  0093F6  C10E  F009         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 27942  0093FA  C10F  F00A         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 27943                           
 27944                           ; BSR set to: 1
 27945  0093FE  0012               	return		;funcret
 27946  009400                     __end_of_TMR_SwapTimer:
 27947                           	opt callstack 0
 27948                           
 27949 ;; *************** function _TMR1_WriteTimer *****************
 27950 ;; Defined at:
 27951 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 27952 ;; Parameters:    Size  Location     Type
 27953 ;;  timerVal        2    0[COMRAM] unsigned int 
 27954 ;; Auto vars:     Size  Location     Type
 27955 ;;		None
 27956 ;; Return value:  Size  Location     Type
 27957 ;;                  1    wreg      void 
 27958 ;; Registers used:
 27959 ;;		wreg, status,2
 27960 ;; Tracked objects:
 27961 ;;		On entry : 0/0
 27962 ;;		On exit  : 0/0
 27963 ;;		Unchanged: 0/0
 27964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27969 ;;Total ram usage:        2 bytes
 27970 ;; Hardware stack levels used:    1
 27971 ;; This function calls:
 27972 ;;		Nothing
 27973 ;; This function is called by:
 27974 ;;		_TMR_SwapTimer
 27975 ;; This function uses a non-reentrant model
 27976 ;;
 27977                           
 27978                           	psect	text182
 27979  008C70                     __ptext182:
 27980                           	opt callstack 0
 27981  008C70                     _TMR1_WriteTimer:
 27982                           	opt callstack 24
 27983                           
 27984                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 27985                           
 27986                           ; BSR set to: 1
 27987                           ;incstack = 0
 27988  008C70  A4CD               	btfss	4045,2,c	;volatile
 27989  008C72  D007               	goto	l12516
 27990                           
 27991                           ;tmr1.c: 123: {;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 27992  008C74  90CD               	bcf	4045,0,c	;volatile
 27993                           
 27994                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 27995  008C76  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
 27996  008C78  6ECF               	movwf	4047,c	;volatile
 27997                           
 27998                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 27999  008C7A  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 28000                           
 28001                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 28002  008C7E  80CD               	bsf	4045,0,c	;volatile
 28003                           
 28004                           ;tmr1.c: 133: }
 28005  008C80  0012               	return	
 28006  008C82                     l12516:
 28007                           
 28008                           ;tmr1.c: 134: else;tmr1.c: 135: {;tmr1.c: 137: TMR1H = (timerVal >> 8);
 28009  008C82  5002               	movf	TMR1_WriteTimer@timerVal+1,w,c
 28010  008C84  6ECF               	movwf	4047,c	;volatile
 28011                           
 28012                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 28013  008C86  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 28014  008C8A  0012               	return		;funcret
 28015  008C8C                     __end_of_TMR1_WriteTimer:
 28016                           	opt callstack 0
 28017                           
 28018 ;; *************** function _SwTimersInterrupt *****************
 28019 ;; Defined at:
 28020 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 28021 ;; Parameters:    Size  Location     Type
 28022 ;;		None
 28023 ;; Auto vars:     Size  Location     Type
 28024 ;;  ticksToNextT    4   36[COMRAM] unsigned long 
 28025 ;;  timeElapsed     4   32[COMRAM] unsigned long 
 28026 ;;  i               1   40[COMRAM] unsigned char 
 28027 ;; Return value:  Size  Location     Type
 28028 ;;                  4   24[COMRAM] unsigned long 
 28029 ;; Registers used:
 28030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28031 ;; Tracked objects:
 28032 ;;		On entry : 0/0
 28033 ;;		On exit  : 0/0
 28034 ;;		Unchanged: 0/0
 28035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28037 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28038 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28039 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28040 ;;Total ram usage:       17 bytes
 28041 ;; Hardware stack levels used:    1
 28042 ;; Hardware stack levels required when called:    2
 28043 ;; This function calls:
 28044 ;;		_TMR_GetDeltaTime
 28045 ;; This function is called by:
 28046 ;;		_SwTimerReadValue
 28047 ;;		_SwTimerStart
 28048 ;;		_TMR_ISR_lora
 28049 ;;		_SwTimersCanSleep
 28050 ;; This function uses a non-reentrant model
 28051 ;;
 28052                           
 28053                           	psect	text183
 28054  00B2B2                     __ptext183:
 28055                           	opt callstack 0
 28056  00B2B2                     _SwTimersInterrupt:
 28057                           	opt callstack 24
 28058                           
 28059                           ;sw_timer.c: 289: uint8_t i;;sw_timer.c: 290: uint32_t timeElapsed;;sw_timer.c: 291: uin
      +                          t32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 28060                           
 28061                           ;incstack = 0
 28062  00B2B2  6825               	setf	SwTimersInterrupt@ticksToNextTimerEvent,c
 28063  00B2B4  6826               	setf	SwTimersInterrupt@ticksToNextTimerEvent+1,c
 28064  00B2B6  6827               	setf	SwTimersInterrupt@ticksToNextTimerEvent+2,c
 28065  00B2B8  6828               	setf	SwTimersInterrupt@ticksToNextTimerEvent+3,c
 28066                           
 28067                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 28068  00B2BA  ECD8  F05C         	call	_TMR_GetDeltaTime	;wreg free
 28069  00B2BE  C009  F021         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 28070  00B2C2  C00A  F022         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 28071  00B2C6  C00B  F023         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 28072  00B2CA  C00C  F024         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 28073                           
 28074                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 28075  00B2CE  0E00               	movlw	0
 28076  00B2D0  6E29               	movwf	SwTimersInterrupt@i,c
 28077  00B2D2  D05D               	goto	l12682
 28078  00B2D4                     l12670:
 28079                           
 28080                           ; BSR set to: 0
 28081                           ;sw_timer.c: 298: {;sw_timer.c: 301: if (swTimers[i].running == 1)
 28082  00B2D4  5029               	movf	SwTimersInterrupt@i,w,c
 28083  00B2D6  0D08               	mullw	8
 28084  00B2D8  0E04               	movlw	low (_swTimers+4)
 28085  00B2DA  24F3               	addwf	prodl,w,c
 28086  00B2DC  6ED9               	movwf	fsr2l,c
 28087  00B2DE  0E04               	movlw	high (_swTimers+4)
 28088  00B2E0  20F4               	addwfc	prodh,w,c
 28089  00B2E2  6EDA               	movwf	fsr2h,c
 28090  00B2E4  04DE               	decf	postinc2,w,c
 28091  00B2E6  A4D8               	btfss	status,2,c
 28092  00B2E8  D051               	goto	l12680
 28093                           
 28094                           ; BSR set to: 0
 28095                           ;sw_timer.c: 302: {;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 28096  00B2EA  5029               	movf	SwTimersInterrupt@i,w,c
 28097  00B2EC  0D08               	mullw	8
 28098  00B2EE  0E00               	movlw	low _swTimers
 28099  00B2F0  24F3               	addwf	prodl,w,c
 28100  00B2F2  6ED9               	movwf	fsr2l,c
 28101  00B2F4  0E04               	movlw	high _swTimers
 28102  00B2F6  20F4               	addwfc	prodh,w,c
 28103  00B2F8  6EDA               	movwf	fsr2h,c
 28104  00B2FA  50DE               	movf	postinc2,w,c
 28105  00B2FC  5C21               	subwf	SwTimersInterrupt@timeElapsed,w,c
 28106  00B2FE  50DE               	movf	postinc2,w,c
 28107  00B300  5822               	subwfb	SwTimersInterrupt@timeElapsed+1,w,c
 28108  00B302  50DE               	movf	postinc2,w,c
 28109  00B304  5823               	subwfb	SwTimersInterrupt@timeElapsed+2,w,c
 28110  00B306  50DE               	movf	postinc2,w,c
 28111  00B308  5824               	subwfb	SwTimersInterrupt@timeElapsed+3,w,c
 28112  00B30A  A0D8               	btfss	status,0,c
 28113  00B30C  D00D               	goto	l12676
 28114                           
 28115                           ; BSR set to: 0
 28116                           ;sw_timer.c: 304: {;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 28117  00B30E  5029               	movf	SwTimersInterrupt@i,w,c
 28118  00B310  0D08               	mullw	8
 28119  00B312  0E00               	movlw	low _swTimers
 28120  00B314  24F3               	addwf	prodl,w,c
 28121  00B316  6ED9               	movwf	fsr2l,c
 28122  00B318  0E04               	movlw	high _swTimers
 28123  00B31A  20F4               	addwfc	prodh,w,c
 28124  00B31C  6EDA               	movwf	fsr2h,c
 28125  00B31E  6ADE               	clrf	postinc2,c
 28126  00B320  6ADE               	clrf	postinc2,c
 28127  00B322  6ADE               	clrf	postinc2,c
 28128  00B324  6ADD               	clrf	postdec2,c
 28129                           
 28130                           ;sw_timer.c: 306: }
 28131  00B326  D032               	goto	l12680
 28132  00B328                     l12676:
 28133                           
 28134                           ; BSR set to: 0
 28135                           ;sw_timer.c: 307: else;sw_timer.c: 308: {;sw_timer.c: 309: swTimers[i].ticksRemaining -=
      +                           timeElapsed;
 28136  00B328  5029               	movf	SwTimersInterrupt@i,w,c
 28137  00B32A  0D08               	mullw	8
 28138  00B32C  0E00               	movlw	low _swTimers
 28139  00B32E  24F3               	addwf	prodl,w,c
 28140  00B330  6ED9               	movwf	fsr2l,c
 28141  00B332  0E04               	movlw	high _swTimers
 28142  00B334  20F4               	addwfc	prodh,w,c
 28143  00B336  6EDA               	movwf	fsr2h,c
 28144  00B338  5021               	movf	SwTimersInterrupt@timeElapsed,w,c
 28145  00B33A  5EDE               	subwf	postinc2,f,c
 28146  00B33C  5022               	movf	SwTimersInterrupt@timeElapsed+1,w,c
 28147  00B33E  5ADE               	subwfb	postinc2,f,c
 28148  00B340  5023               	movf	SwTimersInterrupt@timeElapsed+2,w,c
 28149  00B342  5ADE               	subwfb	postinc2,f,c
 28150  00B344  5024               	movf	SwTimersInterrupt@timeElapsed+3,w,c
 28151  00B346  5ADE               	subwfb	postinc2,f,c
 28152                           
 28153                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 28154  00B348  5029               	movf	SwTimersInterrupt@i,w,c
 28155  00B34A  0D08               	mullw	8
 28156  00B34C  0E00               	movlw	low _swTimers
 28157  00B34E  24F3               	addwf	prodl,w,c
 28158  00B350  6ED9               	movwf	fsr2l,c
 28159  00B352  0E04               	movlw	high _swTimers
 28160  00B354  20F4               	addwfc	prodh,w,c
 28161  00B356  6EDA               	movwf	fsr2h,c
 28162  00B358  5025               	movf	SwTimersInterrupt@ticksToNextTimerEvent,w,c
 28163  00B35A  5CDE               	subwf	postinc2,w,c
 28164  00B35C  5026               	movf	SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 28165  00B35E  58DE               	subwfb	postinc2,w,c
 28166  00B360  5027               	movf	SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 28167  00B362  58DE               	subwfb	postinc2,w,c
 28168  00B364  5028               	movf	SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 28169  00B366  58DE               	subwfb	postinc2,w,c
 28170  00B368  B0D8               	btfsc	status,0,c
 28171  00B36A  D010               	goto	l12680
 28172                           
 28173                           ; BSR set to: 0
 28174                           ;sw_timer.c: 313: {;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 28175  00B36C  5029               	movf	SwTimersInterrupt@i,w,c
 28176  00B36E  0D08               	mullw	8
 28177  00B370  0E00               	movlw	low _swTimers
 28178  00B372  24F3               	addwf	prodl,w,c
 28179  00B374  6ED9               	movwf	fsr2l,c
 28180  00B376  0E04               	movlw	high _swTimers
 28181  00B378  20F4               	addwfc	prodh,w,c
 28182  00B37A  6EDA               	movwf	fsr2h,c
 28183  00B37C  CFDE F025          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 28184  00B380  CFDE F026          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 28185  00B384  CFDE F027          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 28186  00B388  CFDE F028          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 28187  00B38C                     l12680:
 28188                           
 28189                           ; BSR set to: 0
 28190  00B38C  2A29               	incf	SwTimersInterrupt@i,f,c
 28191  00B38E                     l12682:
 28192  00B38E  0100               	movlb	0	; () banked
 28193  00B390  51F7               	movf	_allocatedTimers& (0+255),w,b	;volatile
 28194  00B392  5C29               	subwf	SwTimersInterrupt@i,w,c
 28195  00B394  A0D8               	btfss	status,0,c
 28196  00B396  D79E               	goto	l12670
 28197                           
 28198                           ; BSR set to: 0
 28199                           ;sw_timer.c: 315: };sw_timer.c: 316: };sw_timer.c: 317: };sw_timer.c: 318: };sw_timer.c:
      +                           320: return ticksToNextTimerEvent;
 28200  00B398  C025  F019         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 28201  00B39C  C026  F01A         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 28202  00B3A0  C027  F01B         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 28203  00B3A4  C028  F01C         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 28204                           
 28205                           ; BSR set to: 0
 28206  00B3A8  0012               	return		;funcret
 28207  00B3AA                     __end_of_SwTimersInterrupt:
 28208                           	opt callstack 0
 28209                           
 28210 ;; *************** function _TMR_GetDeltaTime *****************
 28211 ;; Defined at:
 28212 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 28213 ;; Parameters:    Size  Location     Type
 28214 ;;		None
 28215 ;; Auto vars:     Size  Location     Type
 28216 ;;		None
 28217 ;; Return value:  Size  Location     Type
 28218 ;;                  4    8[COMRAM] unsigned long 
 28219 ;; Registers used:
 28220 ;;		wreg, status,2, status,0, cstack
 28221 ;; Tracked objects:
 28222 ;;		On entry : 0/0
 28223 ;;		On exit  : 0/0
 28224 ;;		Unchanged: 0/0
 28225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28228 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28229 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28230 ;;Total ram usage:       16 bytes
 28231 ;; Hardware stack levels used:    1
 28232 ;; Hardware stack levels required when called:    1
 28233 ;; This function calls:
 28234 ;;		_TMR1_ReadTimer
 28235 ;; This function is called by:
 28236 ;;		_SwTimersInterrupt
 28237 ;; This function uses a non-reentrant model
 28238 ;;
 28239                           
 28240                           	psect	text184
 28241  00B9B0                     __ptext184:
 28242                           	opt callstack 0
 28243  00B9B0                     _TMR_GetDeltaTime:
 28244                           	opt callstack 24
 28245                           
 28246                           ;sw_timer.c: 90: static uint32_t retVal;;sw_timer.c: 91: static uint16_t tmrVal;;sw_time
      +                          r.c: 93: tmrVal = TMR1_ReadTimer();
 28247                           
 28248                           ; BSR set to: 0
 28249                           ;incstack = 0
 28250  00B9B0  EC62  F046         	call	_TMR1_ReadTimer	;wreg free
 28251  00B9B4  C001  F112         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 28252  00B9B8  C002  F113         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 28253                           
 28254                           ;sw_timer.c: 95: if (timerOverflow == 1)
 28255  00B9BC  0101               	movlb	1	; () banked
 28256  00B9BE  0516               	decf	_timerOverflow& (0+255),w,b	;volatile
 28257  00B9C0  A4D8               	btfss	status,2,c
 28258  00B9C2  D049               	goto	l12564
 28259                           
 28260                           ; BSR set to: 1
 28261                           ;sw_timer.c: 96: {;sw_timer.c: 97: timerOverflow = 0;
 28262  00B9C4  0E00               	movlw	0
 28263  00B9C6  6F16               	movwf	_timerOverflow& (0+255),b	;volatile
 28264                           
 28265                           ; BSR set to: 1
 28266                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 28267  00B9C8  0100               	movlb	0	; () banked
 28268  00B9CA  51F4               	movf	_reloadVal& (0+255),w,b	;volatile
 28269  00B9CC  0101               	movlb	1	; () banked
 28270  00B9CE  5D12               	subwf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 28271  00B9D0  6E0D               	movwf	??_TMR_GetDeltaTime& (0+255),c
 28272  00B9D2  0100               	movlb	0	; () banked
 28273  00B9D4  51F5               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 28274  00B9D6  0101               	movlb	1	; () banked
 28275  00B9D8  5913               	subwfb	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 28276  00B9DA  6E0E               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),c
 28277  00B9DC  6A0F               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),c
 28278  00B9DE  A0D8               	btfss	status,0,c
 28279  00B9E0  060F               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,c
 28280  00B9E2  500F               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,c
 28281  00B9E4  6E10               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),c
 28282  00B9E6  5104               	movf	_ticksAccounted& (0+255),w,b	;volatile
 28283  00B9E8  5C0D               	subwf	??_TMR_GetDeltaTime,w,c
 28284  00B9EA  6E11               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),c
 28285  00B9EC  5105               	movf	(_ticksAccounted+1)& (0+255),w,b	;volatile
 28286  00B9EE  580E               	subwfb	??_TMR_GetDeltaTime+1,w,c
 28287  00B9F0  6E12               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),c
 28288  00B9F2  5106               	movf	(_ticksAccounted+2)& (0+255),w,b	;volatile
 28289  00B9F4  580F               	subwfb	??_TMR_GetDeltaTime+2,w,c
 28290  00B9F6  6E13               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),c
 28291  00B9F8  5107               	movf	(_ticksAccounted+3)& (0+255),w,b	;volatile
 28292  00B9FA  5810               	subwfb	??_TMR_GetDeltaTime+3,w,c
 28293  00B9FC  6E14               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),c
 28294  00B9FE  5108               	movf	_ticksAdded& (0+255),w,b	;volatile
 28295  00BA00  2411               	addwf	??_TMR_GetDeltaTime+4,w,c
 28296  00BA02  6E15               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),c
 28297  00BA04  5109               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
 28298  00BA06  2012               	addwfc	??_TMR_GetDeltaTime+5,w,c
 28299  00BA08  6E16               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),c
 28300  00BA0A  510A               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
 28301  00BA0C  2013               	addwfc	??_TMR_GetDeltaTime+6,w,c
 28302  00BA0E  6E17               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),c
 28303  00BA10  510B               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
 28304  00BA12  2014               	addwfc	??_TMR_GetDeltaTime+7,w,c
 28305  00BA14  6E18               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),c
 28306  00BA16  0E00               	movlw	0
 28307  00BA18  2415               	addwf	??_TMR_GetDeltaTime+8,w,c
 28308  00BA1A  6F00               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 28309  00BA1C  0E00               	movlw	0
 28310  00BA1E  2016               	addwfc	??_TMR_GetDeltaTime+9,w,c
 28311  00BA20  6F01               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 28312  00BA22  0E01               	movlw	1
 28313  00BA24  2017               	addwfc	??_TMR_GetDeltaTime+10,w,c
 28314  00BA26  6F02               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 28315  00BA28  0E00               	movlw	0
 28316  00BA2A  2018               	addwfc	??_TMR_GetDeltaTime+11,w,c
 28317  00BA2C  6F03               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 28318                           
 28319                           ; BSR set to: 1
 28320                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 28321  00BA2E  C112  F104         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 28322  00BA32  C113  F105         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 28323  00BA36  6B06               	clrf	(_ticksAccounted+2)& (0+255),b	;volatile
 28324  00BA38  6B07               	clrf	(_ticksAccounted+3)& (0+255),b	;volatile
 28325                           
 28326                           ; BSR set to: 1
 28327                           ;sw_timer.c: 100: ticksAdded = 0;
 28328  00BA3A  0E00               	movlw	0
 28329  00BA3C  6F08               	movwf	_ticksAdded& (0+255),b	;volatile
 28330  00BA3E  0E00               	movlw	0
 28331  00BA40  6F09               	movwf	(_ticksAdded+1)& (0+255),b	;volatile
 28332  00BA42  0E00               	movlw	0
 28333  00BA44  6F0A               	movwf	(_ticksAdded+2)& (0+255),b	;volatile
 28334  00BA46  0E00               	movlw	0
 28335  00BA48  6F0B               	movwf	(_ticksAdded+3)& (0+255),b	;volatile
 28336                           
 28337                           ; BSR set to: 1
 28338                           ;sw_timer.c: 101: reloadVal = 0;
 28339  00BA4A  0E00               	movlw	0
 28340  00BA4C  0100               	movlb	0	; () banked
 28341  00BA4E  6FF5               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 28342  00BA50  0E00               	movlw	0
 28343  00BA52  6FF4               	movwf	_reloadVal& (0+255),b	;volatile
 28344                           
 28345                           ;sw_timer.c: 102: }
 28346  00BA54  D02C               	goto	l12566
 28347  00BA56                     l12564:
 28348                           
 28349                           ; BSR set to: 1
 28350                           ;sw_timer.c: 103: else;sw_timer.c: 104: {;sw_timer.c: 105: retVal = tmrVal - reloadVal -
      +                           ticksAccounted + ticksAdded;
 28351  00BA56  0100               	movlb	0	; () banked
 28352  00BA58  51F4               	movf	_reloadVal& (0+255),w,b	;volatile
 28353  00BA5A  0101               	movlb	1	; () banked
 28354  00BA5C  5D12               	subwf	TMR_GetDeltaTime@tmrVal& (0+255),w,b
 28355  00BA5E  6E0D               	movwf	??_TMR_GetDeltaTime& (0+255),c
 28356  00BA60  0100               	movlb	0	; () banked
 28357  00BA62  51F5               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 28358  00BA64  0101               	movlb	1	; () banked
 28359  00BA66  5913               	subwfb	(TMR_GetDeltaTime@tmrVal+1)& (0+255),w,b
 28360  00BA68  6E0E               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),c
 28361  00BA6A  6A0F               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),c
 28362  00BA6C  6A10               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),c
 28363  00BA6E  5104               	movf	_ticksAccounted& (0+255),w,b	;volatile
 28364  00BA70  5C0D               	subwf	??_TMR_GetDeltaTime,w,c
 28365  00BA72  6E11               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),c
 28366  00BA74  5105               	movf	(_ticksAccounted+1)& (0+255),w,b	;volatile
 28367  00BA76  580E               	subwfb	??_TMR_GetDeltaTime+1,w,c
 28368  00BA78  6E12               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),c
 28369  00BA7A  5106               	movf	(_ticksAccounted+2)& (0+255),w,b	;volatile
 28370  00BA7C  580F               	subwfb	??_TMR_GetDeltaTime+2,w,c
 28371  00BA7E  6E13               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),c
 28372  00BA80  5107               	movf	(_ticksAccounted+3)& (0+255),w,b	;volatile
 28373  00BA82  5810               	subwfb	??_TMR_GetDeltaTime+3,w,c
 28374  00BA84  6E14               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),c
 28375  00BA86  5108               	movf	_ticksAdded& (0+255),w,b	;volatile
 28376  00BA88  2411               	addwf	??_TMR_GetDeltaTime+4,w,c
 28377  00BA8A  6F00               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 28378  00BA8C  5109               	movf	(_ticksAdded+1)& (0+255),w,b	;volatile
 28379  00BA8E  2012               	addwfc	??_TMR_GetDeltaTime+5,w,c
 28380  00BA90  6F01               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 28381  00BA92  510A               	movf	(_ticksAdded+2)& (0+255),w,b	;volatile
 28382  00BA94  2013               	addwfc	??_TMR_GetDeltaTime+6,w,c
 28383  00BA96  6F02               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 28384  00BA98  510B               	movf	(_ticksAdded+3)& (0+255),w,b	;volatile
 28385  00BA9A  2014               	addwfc	??_TMR_GetDeltaTime+7,w,c
 28386  00BA9C  6F03               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 28387                           
 28388                           ;sw_timer.c: 106: ticksAccounted += retVal;
 28389  00BA9E  5100               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 28390  00BAA0  2704               	addwf	_ticksAccounted& (0+255),f,b	;volatile
 28391  00BAA2  5101               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 28392  00BAA4  2305               	addwfc	(_ticksAccounted+1)& (0+255),f,b	;volatile
 28393  00BAA6  5102               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 28394  00BAA8  2306               	addwfc	(_ticksAccounted+2)& (0+255),f,b	;volatile
 28395  00BAAA  5103               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 28396  00BAAC  2307               	addwfc	(_ticksAccounted+3)& (0+255),f,b	;volatile
 28397  00BAAE                     l12566:
 28398                           
 28399                           ;sw_timer.c: 107: };sw_timer.c: 109: return retVal;
 28400  00BAAE  C100  F009         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 28401  00BAB2  C101  F00A         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 28402  00BAB6  C102  F00B         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 28403  00BABA  C103  F00C         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 28404  00BABE  0012               	return		;funcret
 28405  00BAC0                     __end_of_TMR_GetDeltaTime:
 28406                           	opt callstack 0
 28407                           
 28408 ;; *************** function _TMR1_ReadTimer *****************
 28409 ;; Defined at:
 28410 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 28411 ;; Parameters:    Size  Location     Type
 28412 ;;		None
 28413 ;; Auto vars:     Size  Location     Type
 28414 ;;  readVal         2    4[COMRAM] unsigned int 
 28415 ;;  readValLow      1    7[COMRAM] unsigned char 
 28416 ;;  readValHigh     1    6[COMRAM] unsigned char 
 28417 ;; Return value:  Size  Location     Type
 28418 ;;                  2    0[COMRAM] unsigned int 
 28419 ;; Registers used:
 28420 ;;		wreg, status,2
 28421 ;; Tracked objects:
 28422 ;;		On entry : 0/0
 28423 ;;		On exit  : 0/0
 28424 ;;		Unchanged: 0/0
 28425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28427 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28429 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28430 ;;Total ram usage:        8 bytes
 28431 ;; Hardware stack levels used:    1
 28432 ;; This function calls:
 28433 ;;		Nothing
 28434 ;; This function is called by:
 28435 ;;		_TMR_GetDeltaTime
 28436 ;;		_TMR_SwapTimer
 28437 ;; This function uses a non-reentrant model
 28438 ;;
 28439                           
 28440                           	psect	text185
 28441  008CC4                     __ptext185:
 28442                           	opt callstack 0
 28443  008CC4                     _TMR1_ReadTimer:
 28444                           	opt callstack 24
 28445                           
 28446                           ;tmr1.c: 108: uint16_t readVal;;tmr1.c: 109: uint8_t readValHigh;;tmr1.c: 110: uint8_t r
      +                          eadValLow;;tmr1.c: 112: readValLow = TMR1L;
 28447                           
 28448                           ;incstack = 0
 28449  008CC4  CFCE F008          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 28450                           
 28451                           ;tmr1.c: 113: readValHigh = TMR1H;
 28452  008CC8  CFCF F007          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 28453                           
 28454                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 28455  008CCC  5007               	movf	TMR1_ReadTimer@readValHigh,w,c
 28456  008CCE  6E03               	movwf	??_TMR1_ReadTimer& (0+255),c
 28457  008CD0  5008               	movf	TMR1_ReadTimer@readValLow,w,c
 28458  008CD2  6E05               	movwf	TMR1_ReadTimer@readVal,c
 28459  008CD4  C003  F006         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 28460                           
 28461                           ;tmr1.c: 117: return readVal;
 28462  008CD8  C005  F001         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 28463  008CDC  C006  F002         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 28464  008CE0  0012               	return		;funcret
 28465  008CE2                     __end_of_TMR1_ReadTimer:
 28466                           	opt callstack 0
 28467                           
 28468 ;; *************** function _SwTimerSetTimeout *****************
 28469 ;; Defined at:
 28470 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 28471 ;; Parameters:    Size  Location     Type
 28472 ;;  timerId         1    wreg     unsigned char 
 28473 ;;  timeout         4   13[COMRAM] unsigned long 
 28474 ;; Auto vars:     Size  Location     Type
 28475 ;;  timerId         1   21[COMRAM] unsigned char 
 28476 ;; Return value:  Size  Location     Type
 28477 ;;                  1    wreg      void 
 28478 ;; Registers used:
 28479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28480 ;; Tracked objects:
 28481 ;;		On entry : 0/0
 28482 ;;		On exit  : 0/0
 28483 ;;		Unchanged: 0/0
 28484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28487 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28488 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28489 ;;Total ram usage:        9 bytes
 28490 ;; Hardware stack levels used:    1
 28491 ;; This function calls:
 28492 ;;		Nothing
 28493 ;; This function is called by:
 28494 ;;		_RADIO_Transmit
 28495 ;;		_RADIO_ReceiveStart
 28496 ;;		_LORAWAN_TxDone
 28497 ;;		_LORAWAN_RxTimeout
 28498 ;;		_StartReTxTimer
 28499 ;;		_DutyCycleCallback
 28500 ;;		_LORAWAN_Join
 28501 ;;		_LORAWAN_LinkCheckConfigure
 28502 ;;		_LORAWAN_LinkCheckCallback
 28503 ;;		_UpdateRetransmissionAckTimeoutState
 28504 ;;		_UpdateJoinSuccessState
 28505 ;; This function uses a non-reentrant model
 28506 ;;
 28507                           
 28508                           	psect	text186
 28509  0092B8                     __ptext186:
 28510                           	opt callstack 0
 28511  0092B8                     _SwTimerSetTimeout:
 28512                           	opt callstack 27
 28513                           
 28514                           ;incstack = 0
 28515                           ;SwTimerSetTimeout@timerId stored from wreg
 28516  0092B8  6E16               	movwf	SwTimerSetTimeout@timerId,c
 28517                           
 28518                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 28519  0092BA  9EF2               	bcf	4082,7,c	;volatile
 28520                           
 28521                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 28522  0092BC  0EE0               	movlw	224
 28523  0092BE  240E               	addwf	SwTimerSetTimeout@timeout,w,c
 28524  0092C0  6E12               	movwf	??_SwTimerSetTimeout& (0+255),c
 28525  0092C2  0EFF               	movlw	255
 28526  0092C4  200F               	addwfc	SwTimerSetTimeout@timeout+1,w,c
 28527  0092C6  6E13               	movwf	(??_SwTimerSetTimeout+1)& (0+255),c
 28528  0092C8  0EFF               	movlw	255
 28529  0092CA  2010               	addwfc	SwTimerSetTimeout@timeout+2,w,c
 28530  0092CC  6E14               	movwf	(??_SwTimerSetTimeout+2)& (0+255),c
 28531  0092CE  0EFF               	movlw	255
 28532  0092D0  2011               	addwfc	SwTimerSetTimeout@timeout+3,w,c
 28533  0092D2  6E15               	movwf	(??_SwTimerSetTimeout+3)& (0+255),c
 28534  0092D4  5016               	movf	SwTimerSetTimeout@timerId,w,c
 28535  0092D6  0D08               	mullw	8
 28536  0092D8  0E00               	movlw	low _swTimers
 28537  0092DA  24F3               	addwf	prodl,w,c
 28538  0092DC  6ED9               	movwf	fsr2l,c
 28539  0092DE  0E04               	movlw	high _swTimers
 28540  0092E0  20F4               	addwfc	prodh,w,c
 28541  0092E2  6EDA               	movwf	fsr2h,c
 28542  0092E4  C012  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 28543  0092E8  C013  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 28544  0092EC  C014  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 28545  0092F0  C015  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 28546                           
 28547                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 28548  0092F4  8EF2               	bsf	4082,7,c	;volatile
 28549  0092F6  0012               	return		;funcret
 28550  0092F8                     __end_of_SwTimerSetTimeout:
 28551                           	opt callstack 0
 28552                           
 28553 ;; *************** function _InitDefault868Channels *****************
 28554 ;; Defined at:
 28555 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28556 ;; Parameters:    Size  Location     Type
 28557 ;;		None
 28558 ;; Auto vars:     Size  Location     Type
 28559 ;;  i               1   11[COMRAM] unsigned char 
 28560 ;; Return value:  Size  Location     Type
 28561 ;;                  1    wreg      void 
 28562 ;; Registers used:
 28563 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28564 ;; Tracked objects:
 28565 ;;		On entry : 0/0
 28566 ;;		On exit  : 0/0
 28567 ;;		Unchanged: 0/0
 28568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28573 ;;Total ram usage:        1 bytes
 28574 ;; Hardware stack levels used:    1
 28575 ;; Hardware stack levels required when called:    1
 28576 ;; This function calls:
 28577 ;;		_memcpy
 28578 ;;		_memset
 28579 ;; This function is called by:
 28580 ;;		_LORAWAN_Reset
 28581 ;; This function uses a non-reentrant model
 28582 ;;
 28583                           
 28584                           	psect	text187
 28585  009E3C                     __ptext187:
 28586                           	opt callstack 0
 28587  009E3C                     _InitDefault868Channels:
 28588                           	opt callstack 27
 28589                           
 28590                           ;lorawan_eu.c: 981: uint8_t i;;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) 
      +                          );
 28591                           
 28592                           ;incstack = 0
 28593  009E3C  0E00               	movlw	low _Channels
 28594  009E3E  6E01               	movwf	memset@p1,c
 28595  009E40  0E03               	movlw	high _Channels
 28596  009E42  6E02               	movwf	memset@p1+1,c
 28597  009E44  0E00               	movlw	0
 28598  009E46  6E04               	movwf	memset@c+1,c
 28599  009E48  0E00               	movlw	0
 28600  009E4A  6E03               	movwf	memset@c,c
 28601  009E4C  0E00               	movlw	0
 28602  009E4E  6E06               	movwf	memset@n+1,c
 28603  009E50  0EE0               	movlw	224
 28604  009E52  6E05               	movwf	memset@n,c
 28605  009E54  EC7A  F047         	call	_memset	;wreg free
 28606                           
 28607                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 28608  009E58  0E00               	movlw	low _Channels
 28609  009E5A  6E01               	movwf	memcpy@d1,c
 28610  009E5C  0E03               	movlw	high _Channels
 28611  009E5E  6E02               	movwf	memcpy@d1+1,c
 28612  009E60  0ED2               	movlw	low _DefaultChannels868
 28613  009E62  6E03               	movwf	memcpy@s1,c
 28614  009E64  0EFF               	movlw	high _DefaultChannels868
 28615  009E66  6E04               	movwf	memcpy@s1+1,c
 28616  009E68  0E00               	movlw	0
 28617  009E6A  6E06               	movwf	memcpy@n+1,c
 28618  009E6C  0E2A               	movlw	42
 28619  009E6E  6E05               	movwf	memcpy@n,c
 28620  009E70  EC56  F04C         	call	_memcpy	;wreg free
 28621                           
 28622                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 28623  009E74  0E03               	movlw	3
 28624  009E76  6E0C               	movwf	InitDefault868Channels@i,c
 28625  009E78                     l14924:
 28626                           
 28627                           ;lorawan_eu.c: 986: {;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 28628  009E78  500C               	movf	InitDefault868Channels@i,w,c
 28629  009E7A  0D0E               	mullw	14
 28630  009E7C  0E06               	movlw	low (_Channels+6)
 28631  009E7E  24F3               	addwf	prodl,w,c
 28632  009E80  6ED9               	movwf	fsr2l,c
 28633  009E82  0E03               	movlw	high (_Channels+6)
 28634  009E84  20F4               	addwfc	prodh,w,c
 28635  009E86  6EDA               	movwf	fsr2h,c
 28636  009E88  0EFF               	movlw	255
 28637  009E8A  6EDE               	movwf	postinc2,c
 28638  009E8C  0EFF               	movlw	255
 28639  009E8E  6EDD               	movwf	postdec2,c
 28640                           
 28641                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 28642  009E90  500C               	movf	InitDefault868Channels@i,w,c
 28643  009E92  0D0E               	mullw	14
 28644  009E94  0E05               	movlw	low (_Channels+5)
 28645  009E96  24F3               	addwf	prodl,w,c
 28646  009E98  6ED9               	movwf	fsr2l,c
 28647  009E9A  0E03               	movlw	high (_Channels+5)
 28648  009E9C  20F4               	addwfc	prodh,w,c
 28649  009E9E  6EDA               	movwf	fsr2h,c
 28650  009EA0  0EFF               	movlw	255
 28651  009EA2  6EDF               	movwf	indf2,c
 28652  009EA4  2A0C               	incf	InitDefault868Channels@i,f,c
 28653  009EA6  0E0F               	movlw	15
 28654  009EA8  640C               	cpfsgt	InitDefault868Channels@i,c
 28655  009EAA  D7E6               	goto	l14924
 28656  009EAC  0012               	return	
 28657  009EAE                     __end_of_InitDefault868Channels:
 28658                           	opt callstack 0
 28659                           
 28660 ;; *************** function _InitDefault433Channels *****************
 28661 ;; Defined at:
 28662 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28663 ;; Parameters:    Size  Location     Type
 28664 ;;		None
 28665 ;; Auto vars:     Size  Location     Type
 28666 ;;  i               1   11[COMRAM] unsigned char 
 28667 ;; Return value:  Size  Location     Type
 28668 ;;                  1    wreg      void 
 28669 ;; Registers used:
 28670 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28671 ;; Tracked objects:
 28672 ;;		On entry : 0/0
 28673 ;;		On exit  : 0/0
 28674 ;;		Unchanged: 0/0
 28675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28680 ;;Total ram usage:        1 bytes
 28681 ;; Hardware stack levels used:    1
 28682 ;; Hardware stack levels required when called:    1
 28683 ;; This function calls:
 28684 ;;		_memcpy
 28685 ;;		_memset
 28686 ;; This function is called by:
 28687 ;;		_LORAWAN_Reset
 28688 ;; This function uses a non-reentrant model
 28689 ;;
 28690                           
 28691                           	psect	text188
 28692  009DCA                     __ptext188:
 28693                           	opt callstack 0
 28694  009DCA                     _InitDefault433Channels:
 28695                           	opt callstack 27
 28696                           
 28697                           ;lorawan_eu.c: 996: uint8_t i;;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) 
      +                          );
 28698                           
 28699                           ;incstack = 0
 28700  009DCA  0E00               	movlw	low _Channels
 28701  009DCC  6E01               	movwf	memset@p1,c
 28702  009DCE  0E03               	movlw	high _Channels
 28703  009DD0  6E02               	movwf	memset@p1+1,c
 28704  009DD2  0E00               	movlw	0
 28705  009DD4  6E04               	movwf	memset@c+1,c
 28706  009DD6  0E00               	movlw	0
 28707  009DD8  6E03               	movwf	memset@c,c
 28708  009DDA  0E00               	movlw	0
 28709  009DDC  6E06               	movwf	memset@n+1,c
 28710  009DDE  0EE0               	movlw	224
 28711  009DE0  6E05               	movwf	memset@n,c
 28712  009DE2  EC7A  F047         	call	_memset	;wreg free
 28713                           
 28714                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 28715  009DE6  0E00               	movlw	low _Channels
 28716  009DE8  6E01               	movwf	memcpy@d1,c
 28717  009DEA  0E03               	movlw	high _Channels
 28718  009DEC  6E02               	movwf	memcpy@d1+1,c
 28719  009DEE  0EA8               	movlw	low _DefaultChannels433
 28720  009DF0  6E03               	movwf	memcpy@s1,c
 28721  009DF2  0EFF               	movlw	high _DefaultChannels433
 28722  009DF4  6E04               	movwf	memcpy@s1+1,c
 28723  009DF6  0E00               	movlw	0
 28724  009DF8  6E06               	movwf	memcpy@n+1,c
 28725  009DFA  0E2A               	movlw	42
 28726  009DFC  6E05               	movwf	memcpy@n,c
 28727  009DFE  EC56  F04C         	call	_memcpy	;wreg free
 28728                           
 28729                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 28730  009E02  0E03               	movlw	3
 28731  009E04  6E0C               	movwf	InitDefault433Channels@i,c
 28732  009E06                     l14940:
 28733                           
 28734                           ;lorawan_eu.c: 1001: {;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 28735  009E06  500C               	movf	InitDefault433Channels@i,w,c
 28736  009E08  0D0E               	mullw	14
 28737  009E0A  0E06               	movlw	low (_Channels+6)
 28738  009E0C  24F3               	addwf	prodl,w,c
 28739  009E0E  6ED9               	movwf	fsr2l,c
 28740  009E10  0E03               	movlw	high (_Channels+6)
 28741  009E12  20F4               	addwfc	prodh,w,c
 28742  009E14  6EDA               	movwf	fsr2h,c
 28743  009E16  0EFF               	movlw	255
 28744  009E18  6EDE               	movwf	postinc2,c
 28745  009E1A  0EFF               	movlw	255
 28746  009E1C  6EDD               	movwf	postdec2,c
 28747                           
 28748                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 28749  009E1E  500C               	movf	InitDefault433Channels@i,w,c
 28750  009E20  0D0E               	mullw	14
 28751  009E22  0E05               	movlw	low (_Channels+5)
 28752  009E24  24F3               	addwf	prodl,w,c
 28753  009E26  6ED9               	movwf	fsr2l,c
 28754  009E28  0E03               	movlw	high (_Channels+5)
 28755  009E2A  20F4               	addwfc	prodh,w,c
 28756  009E2C  6EDA               	movwf	fsr2h,c
 28757  009E2E  0EFF               	movlw	255
 28758  009E30  6EDF               	movwf	indf2,c
 28759  009E32  2A0C               	incf	InitDefault433Channels@i,f,c
 28760  009E34  0E0F               	movlw	15
 28761  009E36  640C               	cpfsgt	InitDefault433Channels@i,c
 28762  009E38  D7E6               	goto	l14940
 28763  009E3A  0012               	return	
 28764  009E3C                     __end_of_InitDefault433Channels:
 28765                           	opt callstack 0
 28766                           
 28767 ;; *************** function _memset *****************
 28768 ;; Defined at:
 28769 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
 28770 ;; Parameters:    Size  Location     Type
 28771 ;;  p1              2    0[COMRAM] PTR void 
 28772 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 28773 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 28774 ;;  c               2    2[COMRAM] int 
 28775 ;;  n               2    4[COMRAM] unsigned int 
 28776 ;; Auto vars:     Size  Location     Type
 28777 ;;  p               2    6[COMRAM] PTR unsigned char 
 28778 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 28779 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 28780 ;; Return value:  Size  Location     Type
 28781 ;;                  2    0[COMRAM] PTR void 
 28782 ;; Registers used:
 28783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28784 ;; Tracked objects:
 28785 ;;		On entry : 0/0
 28786 ;;		On exit  : 0/0
 28787 ;;		Unchanged: 0/0
 28788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28789 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28790 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28792 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28793 ;;Total ram usage:        8 bytes
 28794 ;; Hardware stack levels used:    1
 28795 ;; This function calls:
 28796 ;;		Nothing
 28797 ;; This function is called by:
 28798 ;;		_AESCmac
 28799 ;;		_GenerateSubkey
 28800 ;;		_LORAWAN_Reset
 28801 ;;		_InitDefault868Channels
 28802 ;;		_InitDefault433Channels
 28803 ;;		_AssemblePacket
 28804 ;;		_PrepareJoinRequestFrame
 28805 ;;		_PrepareSessionKeys
 28806 ;;		_AssembleEncryptionBlock
 28807 ;; This function uses a non-reentrant model
 28808 ;;
 28809                           
 28810                           	psect	text189
 28811  008EF4                     __ptext189:
 28812                           	opt callstack 0
 28813  008EF4                     _memset:
 28814                           	opt callstack 25
 28815                           
 28816                           ;incstack = 0
 28817  008EF4  C001  F007         	movff	memset@p1,memset@p
 28818  008EF8  C002  F008         	movff	memset@p1+1,memset@p+1
 28819  008EFC  D008               	goto	l8312
 28820  008EFE                     l8308:
 28821  008EFE  C007  FFD9         	movff	memset@p,fsr2l
 28822  008F02  C008  FFDA         	movff	memset@p+1,fsr2h
 28823  008F06  C003  FFDF         	movff	memset@c,indf2
 28824  008F0A  4A07               	infsnz	memset@p,f,c
 28825  008F0C  2A08               	incf	memset@p+1,f,c
 28826  008F0E                     l8312:
 28827  008F0E  0605               	decf	memset@n,f,c
 28828  008F10  A0D8               	btfss	status,0,c
 28829  008F12  0606               	decf	memset@n+1,f,c
 28830  008F14  2805               	incf	memset@n,w,c
 28831  008F16  E1F3               	bnz	l8308
 28832  008F18  2806               	incf	memset@n+1,w,c
 28833  008F1A  B4D8               	btfsc	status,2,c
 28834  008F1C  0012               	return	
 28835  008F1E  D7EF               	goto	l8308
 28836  008F20                     __end_of_memset:
 28837                           	opt callstack 0
 28838                           
 28839 ;; *************** function _memcpy *****************
 28840 ;; Defined at:
 28841 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memcpy.c"
 28842 ;; Parameters:    Size  Location     Type
 28843 ;;  d1              2    0[COMRAM] PTR void 
 28844 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 28845 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 28846 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 28847 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 28848 ;;  s1              2    2[COMRAM] PTR const void 
 28849 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), appSKey(16), nwkSKey(16), 
 28850 ;;		 -> AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4),
      + loRa.fCntUp.valueLow(2), 
 28851 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.ap
      +plicationSessionKey(16), 
 28852 ;;		 -> loRa.activationParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), loRa.activationPara
      +meters.applicationEui(8), loRa.activationParameters.deviceEui(8), 
 28853 ;;		 -> loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
      +loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), 
 28854 ;;		 -> UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), 
 28855 ;;		 -> radioBuffer(271), loRa(245), DefaultChannels433(42), DefaultChannels868(42), 
 28856 ;;		 -> RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 28857 ;;  n               2    4[COMRAM] unsigned int 
 28858 ;; Auto vars:     Size  Location     Type
 28859 ;;  s               2    9[COMRAM] PTR const unsigned char 
 28860 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), appSKey(16), nwkSKey(16), 
 28861 ;;		 -> AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4),
      + loRa.fCntUp.valueLow(2), 
 28862 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.ap
      +plicationSessionKey(16), 
 28863 ;;		 -> loRa.activationParameters.networkSessionKey(16), loRa.activationParameters.deviceAddress(4), loRa.activationPara
      +meters.applicationEui(8), loRa.activationParameters.deviceEui(8), 
 28864 ;;		 -> loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activationParameters.mcastNetworkSessionKey(16), 
      +loRa.activationParameters.mcastDeviceAddress(4), FskSyncWordBuff(3), 
 28865 ;;		 -> UpdateCfList@joinAccept(2), loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), 
 28866 ;;		 -> radioBuffer(271), loRa(245), DefaultChannels433(42), DefaultChannels868(42), 
 28867 ;;		 -> RadioConfiguration.syncWord(8), RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 28868 ;;  d               2    7[COMRAM] PTR unsigned char 
 28869 ;;		 -> ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), LORAWAN_RxDone@computedMic(4), 
 28870 ;;		 -> loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(8), AESEncodeLoRa@useKey(16), U
      +pdateCfList@frequency(4), 
 28871 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), radioBuffer(271), 
 28872 ;;		 -> loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 28873 ;;  tmp             1    6[COMRAM] unsigned char 
 28874 ;; Return value:  Size  Location     Type
 28875 ;;                  2    0[COMRAM] PTR void 
 28876 ;; Registers used:
 28877 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28878 ;; Tracked objects:
 28879 ;;		On entry : 0/0
 28880 ;;		On exit  : 0/0
 28881 ;;		Unchanged: 0/0
 28882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28883 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28884 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28886 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28887 ;;Total ram usage:       11 bytes
 28888 ;; Hardware stack levels used:    1
 28889 ;; This function calls:
 28890 ;;		Nothing
 28891 ;; This function is called by:
 28892 ;;		_AESCmac
 28893 ;;		_RADIO_SetFSKSyncWord
 28894 ;;		_UpdateCfList
 28895 ;;		_InitDefault868Channels
 28896 ;;		_InitDefault433Channels
 28897 ;;		_AESEncodeLoRa
 28898 ;;		_LORAWAN_SetNetworkSessionKey
 28899 ;;		_LORAWAN_SetApplicationSessionKey
 28900 ;;		_LORAWAN_RxDone
 28901 ;;		_AssemblePacket
 28902 ;;		_PrepareJoinRequestFrame
 28903 ;;		_PrepareSessionKeys
 28904 ;;		_AssembleEncryptionBlock
 28905 ;;		_ExtractMic
 28906 ;;		_ComputeMic
 28907 ;;		_RADIO_GetData
 28908 ;;		_RADIO_GetFSKSyncWord
 28909 ;;		_LORAWAN_SetMcastNetworkSessionKey
 28910 ;;		_LORAWAN_SetMcastApplicationSessionKey
 28911 ;;		_LORAWAN_GetMcastApplicationSessionKey
 28912 ;;		_LORAWAN_GetMcastNetworkSessionKey
 28913 ;;		_LORAWAN_SetDeviceEui
 28914 ;;		_LORAWAN_GetDeviceEui
 28915 ;;		_LORAWAN_SetApplicationEui
 28916 ;;		_LORAWAN_GetApplicationEui
 28917 ;;		_LORAWAN_GetNetworkSessionKey
 28918 ;;		_LORAWAN_GetApplicationSessionKey
 28919 ;;		_LORAWAN_SetApplicationKey
 28920 ;;		_LORAWAN_GetApplicationKey
 28921 ;; This function uses a non-reentrant model
 28922 ;;
 28923                           
 28924                           	psect	text190
 28925  0098AC                     __ptext190:
 28926                           	opt callstack 0
 28927  0098AC                     _memcpy:
 28928                           	opt callstack 29
 28929                           
 28930                           ;incstack = 0
 28931  0098AC  C003  F00A         	movff	memcpy@s1,memcpy@s
 28932  0098B0  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
 28933  0098B4  C001  F008         	movff	memcpy@d1,memcpy@d
 28934  0098B8  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
 28935  0098BC  D01C               	goto	l12530
 28936  0098BE                     l12522:
 28937  0098BE  C00A  FFF6         	movff	memcpy@s,tblptrl
 28938  0098C2  C00B  FFF7         	movff	memcpy@s+1,tblptrh
 28939  0098C6  0E00               	movlw	low (__mediumconst shr (0+16))
 28940  0098C8  6EF8               	movwf	tblptru,c
 28941  0098CA  0E0F               	movlw	(high __ramtop+-1)
 28942  0098CC  64F7               	cpfsgt	tblptrh,c
 28943  0098CE  D003               	bra	u13307
 28944  0098D0  0008               	tblrd		*
 28945  0098D2  50F5               	movf	tablat,w,c
 28946  0098D4  D005               	bra	u13300
 28947  0098D6                     u13307:
 28948  0098D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 28949  0098DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 28950  0098DE  50EF               	movf	indf0,w,c
 28951  0098E0                     u13300:
 28952  0098E0  6E07               	movwf	memcpy@tmp,c
 28953  0098E2  4A0A               	infsnz	memcpy@s,f,c
 28954  0098E4  2A0B               	incf	memcpy@s+1,f,c
 28955  0098E6  C008  FFD9         	movff	memcpy@d,fsr2l
 28956  0098EA  C009  FFDA         	movff	memcpy@d+1,fsr2h
 28957  0098EE  C007  FFDF         	movff	memcpy@tmp,indf2
 28958  0098F2  4A08               	infsnz	memcpy@d,f,c
 28959  0098F4  2A09               	incf	memcpy@d+1,f,c
 28960  0098F6                     l12530:
 28961  0098F6  0605               	decf	memcpy@n,f,c
 28962  0098F8  A0D8               	btfss	status,0,c
 28963  0098FA  0606               	decf	memcpy@n+1,f,c
 28964  0098FC  2805               	incf	memcpy@n,w,c
 28965  0098FE  E1DF               	bnz	l12522
 28966  009900  2806               	incf	memcpy@n+1,w,c
 28967  009902  B4D8               	btfsc	status,2,c
 28968  009904  0012               	return	
 28969  009906  D7DB               	goto	l12522
 28970  009908                     __end_of_memcpy:
 28971                           	opt callstack 0
 28972                           
 28973 ;; *************** function _CreateAllSoftwareTimers *****************
 28974 ;; Defined at:
 28975 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28976 ;; Parameters:    Size  Location     Type
 28977 ;;		None
 28978 ;; Auto vars:     Size  Location     Type
 28979 ;;		None
 28980 ;; Return value:  Size  Location     Type
 28981 ;;                  1    wreg      void 
 28982 ;; Registers used:
 28983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28984 ;; Tracked objects:
 28985 ;;		On entry : 0/0
 28986 ;;		On exit  : 0/0
 28987 ;;		Unchanged: 0/0
 28988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28993 ;;Total ram usage:        0 bytes
 28994 ;; Hardware stack levels used:    1
 28995 ;; Hardware stack levels required when called:    1
 28996 ;; This function calls:
 28997 ;;		_SwTimerCreate
 28998 ;; This function is called by:
 28999 ;;		_LORAWAN_Init
 29000 ;; This function uses a non-reentrant model
 29001 ;;
 29002                           
 29003                           	psect	text191
 29004  0096B0                     __ptext191:
 29005                           	opt callstack 0
 29006  0096B0                     _CreateAllSoftwareTimers:
 29007                           	opt callstack 28
 29008                           
 29009                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 29010                           
 29011                           ;incstack = 0
 29012  0096B0  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 29013  0096B4  0102               	movlb	2	; () banked
 29014  0096B6  6FE2               	movwf	(_loRa+226)& (0+255),b
 29015                           
 29016                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 29017  0096B8  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 29018  0096BC  0102               	movlb	2	; () banked
 29019  0096BE  6FE3               	movwf	(_loRa+227)& (0+255),b
 29020                           
 29021                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 29022  0096C0  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 29023  0096C4  0102               	movlb	2	; () banked
 29024  0096C6  6FE4               	movwf	(_loRa+228)& (0+255),b
 29025                           
 29026                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 29027  0096C8  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 29028  0096CC  0102               	movlb	2	; () banked
 29029  0096CE  6FE5               	movwf	(_loRa+229)& (0+255),b
 29030                           
 29031                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 29032  0096D0  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 29033  0096D4  0102               	movlb	2	; () banked
 29034  0096D6  6FE7               	movwf	(_loRa+231)& (0+255),b
 29035                           
 29036                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 29037  0096D8  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 29038  0096DC  0102               	movlb	2	; () banked
 29039  0096DE  6FE8               	movwf	(_loRa+232)& (0+255),b
 29040                           
 29041                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 29042  0096E0  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 29043  0096E4  0102               	movlb	2	; () banked
 29044  0096E6  6FE6               	movwf	(_loRa+230)& (0+255),b
 29045                           
 29046                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 29047  0096E8  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 29048  0096EC  0102               	movlb	2	; () banked
 29049  0096EE  6FEA               	movwf	(_loRa+234)& (0+255),b
 29050                           
 29051                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 29052  0096F0  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 29053  0096F4  0102               	movlb	2	; () banked
 29054  0096F6  6FF3               	movwf	(_loRa+243)& (0+255),b
 29055                           
 29056                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 29057  0096F8  ECAC  F04E         	call	_SwTimerCreate	;wreg free
 29058  0096FC  0102               	movlb	2	; () banked
 29059  0096FE  6FE9               	movwf	(_loRa+233)& (0+255),b
 29060                           
 29061                           ; BSR set to: 2
 29062  009700  0012               	return		;funcret
 29063  009702                     __end_of_CreateAllSoftwareTimers:
 29064                           	opt callstack 0
 29065                           
 29066 ;; *************** function _SwTimerCreate *****************
 29067 ;; Defined at:
 29068 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 29069 ;; Parameters:    Size  Location     Type
 29070 ;;		None
 29071 ;; Auto vars:     Size  Location     Type
 29072 ;;  retVal          1    0[COMRAM] unsigned char 
 29073 ;; Return value:  Size  Location     Type
 29074 ;;                  1    wreg      unsigned char 
 29075 ;; Registers used:
 29076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29077 ;; Tracked objects:
 29078 ;;		On entry : 0/0
 29079 ;;		On exit  : 0/0
 29080 ;;		Unchanged: 0/0
 29081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29086 ;;Total ram usage:        1 bytes
 29087 ;; Hardware stack levels used:    1
 29088 ;; This function calls:
 29089 ;;		Nothing
 29090 ;; This function is called by:
 29091 ;;		_RADIO_Init
 29092 ;;		_CreateAllSoftwareTimers
 29093 ;; This function uses a non-reentrant model
 29094 ;;
 29095                           
 29096                           	psect	text192
 29097  009D58                     __ptext192:
 29098                           	opt callstack 0
 29099  009D58                     _SwTimerCreate:
 29100                           	opt callstack 28
 29101                           
 29102                           ;sw_timer.c: 156: uint8_t retVal;;sw_timer.c: 157: if (allocatedTimers < 20)
 29103                           
 29104                           ; BSR set to: 2
 29105                           ;incstack = 0
 29106  009D58  0E14               	movlw	20
 29107  009D5A  0100               	movlb	0	; () banked
 29108  009D5C  61F7               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 29109  009D5E  D032               	goto	l246
 29110                           
 29111                           ; BSR set to: 0
 29112                           ;sw_timer.c: 158: {;sw_timer.c: 159: (INTCONbits.GIE = 0);
 29113  009D60  9EF2               	bcf	4082,7,c	;volatile
 29114                           
 29115                           ;sw_timer.c: 160: retVal = allocatedTimers;
 29116  009D62  C0F7  F001         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 29117                           
 29118                           ; BSR set to: 0
 29119                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 29120  009D66  5001               	movf	SwTimerCreate@retVal,w,c
 29121  009D68  0D08               	mullw	8
 29122  009D6A  0E04               	movlw	low (_swTimers+4)
 29123  009D6C  24F3               	addwf	prodl,w,c
 29124  009D6E  6ED9               	movwf	fsr2l,c
 29125  009D70  0E04               	movlw	high (_swTimers+4)
 29126  009D72  20F4               	addwfc	prodh,w,c
 29127  009D74  6EDA               	movwf	fsr2h,c
 29128  009D76  0E00               	movlw	0
 29129  009D78  6EDF               	movwf	indf2,c
 29130                           
 29131                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 29132  009D7A  5001               	movf	SwTimerCreate@retVal,w,c
 29133  009D7C  0D08               	mullw	8
 29134  009D7E  0E00               	movlw	low _swTimers
 29135  009D80  24F3               	addwf	prodl,w,c
 29136  009D82  6ED9               	movwf	fsr2l,c
 29137  009D84  0E04               	movlw	high _swTimers
 29138  009D86  20F4               	addwfc	prodh,w,c
 29139  009D88  6EDA               	movwf	fsr2h,c
 29140  009D8A  6ADE               	clrf	postinc2,c
 29141  009D8C  6ADE               	clrf	postinc2,c
 29142  009D8E  6ADE               	clrf	postinc2,c
 29143  009D90  6ADD               	clrf	postdec2,c
 29144                           
 29145                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 29146  009D92  5001               	movf	SwTimerCreate@retVal,w,c
 29147  009D94  0D08               	mullw	8
 29148  009D96  0E05               	movlw	low (_swTimers+5)
 29149  009D98  24F3               	addwf	prodl,w,c
 29150  009D9A  6ED9               	movwf	fsr2l,c
 29151  009D9C  0E04               	movlw	high (_swTimers+5)
 29152  009D9E  20F4               	addwfc	prodh,w,c
 29153  009DA0  6EDA               	movwf	fsr2h,c
 29154  009DA2  0E00               	movlw	0
 29155  009DA4  6EDF               	movwf	indf2,c
 29156                           
 29157                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 29158  009DA6  5001               	movf	SwTimerCreate@retVal,w,c
 29159  009DA8  0D08               	mullw	8
 29160  009DAA  0E06               	movlw	low (_swTimers+6)
 29161  009DAC  24F3               	addwf	prodl,w,c
 29162  009DAE  6ED9               	movwf	fsr2l,c
 29163  009DB0  0E04               	movlw	high (_swTimers+6)
 29164  009DB2  20F4               	addwfc	prodh,w,c
 29165  009DB4  6EDA               	movwf	fsr2h,c
 29166  009DB6  0E00               	movlw	0
 29167  009DB8  6EDE               	movwf	postinc2,c
 29168  009DBA  0E00               	movlw	0
 29169  009DBC  6EDD               	movwf	postdec2,c
 29170                           
 29171                           ; BSR set to: 0
 29172                           ;sw_timer.c: 165: allocatedTimers++;
 29173  009DBE  2BF7               	incf	_allocatedTimers& (0+255),f,b	;volatile
 29174                           
 29175                           ; BSR set to: 0
 29176                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 29177  009DC0  8EF2               	bsf	4082,7,c	;volatile
 29178                           
 29179                           ;sw_timer.c: 167: }
 29180  009DC2  D001               	goto	l10420
 29181  009DC4                     l246:
 29182  009DC4  D7FF               	goto	l246
 29183  009DC6                     l10420:
 29184                           
 29185                           ; BSR set to: 0
 29186                           ;sw_timer.c: 175: };sw_timer.c: 176: };sw_timer.c: 177: return retVal;
 29187  009DC6  5001               	movf	SwTimerCreate@retVal,w,c
 29188                           
 29189                           ; BSR set to: 0
 29190  009DC8  0012               	return		;funcret
 29191  009DCA                     __end_of_SwTimerCreate:
 29192                           	opt callstack 0
 29193                           
 29194                           	psect	text193
 29195  000000                     __ptext193:
 29196                           	opt callstack 0
 29197                           
 29198                           	psect	rparam
 29199  0000                     tosu	equ	0xFFF
 29200                           tosh	equ	0xFFE
 29201                           tosl	equ	0xFFD
 29202                           stkptr	equ	0xFFC
 29203                           pclatu	equ	0xFFB
 29204                           pclath	equ	0xFFA
 29205                           pcl	equ	0xFF9
 29206                           tblptru	equ	0xFF8
 29207                           tblptrh	equ	0xFF7
 29208                           tblptrl	equ	0xFF6
 29209                           tablat	equ	0xFF5
 29210                           prodh	equ	0xFF4
 29211                           prodl	equ	0xFF3
 29212                           indf0	equ	0xFEF
 29213                           postinc0	equ	0xFEE
 29214                           postdec0	equ	0xFED
 29215                           preinc0	equ	0xFEC
 29216                           plusw0	equ	0xFEB
 29217                           fsr0h	equ	0xFEA
 29218                           fsr0l	equ	0xFE9
 29219                           wreg	equ	0xFE8
 29220                           indf1	equ	0xFE7
 29221                           postinc1	equ	0xFE6
 29222                           postdec1	equ	0xFE5
 29223                           preinc1	equ	0xFE4
 29224                           plusw1	equ	0xFE3
 29225                           fsr1h	equ	0xFE2
 29226                           fsr1l	equ	0xFE1
 29227                           bsr	equ	0xFE0
 29228                           indf2	equ	0xFDF
 29229                           postinc2	equ	0xFDE
 29230                           postdec2	equ	0xFDD
 29231                           preinc2	equ	0xFDC
 29232                           plusw2	equ	0xFDB
 29233                           fsr2h	equ	0xFDA
 29234                           fsr2l	equ	0xFD9
 29235                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    408
    Data        87
    BSS         1273
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    144     152
    BANK1           256     47     240
    BANK2           256      0     245
    BANK3           256      0     224
    BANK4           256      0     160
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1242$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK3[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(COMRAM[16]), AESCmac@x(BANK0[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK3[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(COMRAM[16]), AESCmac@x(BANK0[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK1[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(COMRAM[16]), UpdateCfList@frequency(COMRAM[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK3[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK0[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK1[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(COMRAM[16]), UpdateCfList@frequency(COMRAM[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK3[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK0[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), appSKey(BANK1[16]), nwkSKey(BANK1[16]), 
		 -> AssembleEncryptionBlock@frameCounter(COMRAM[4]), ComputeSessionKeys@joinAcceptBuffer(COMRAM[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), 
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), 
		 -> loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), 
		 -> UpdateCfList@joinAccept(COMRAM[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), 
		 -> RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK0[16]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), appSKey(BANK1[16]), nwkSKey(BANK1[16]), 
		 -> AssembleEncryptionBlock@frameCounter(COMRAM[4]), ComputeSessionKeys@joinAcceptBuffer(COMRAM[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), 
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), 
		 -> loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), 
		 -> UpdateCfList@joinAccept(COMRAM[2]), loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), 
		 -> RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), AESCmac@y(BANK0[16]), NULL(NULL[0]), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 0

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 0

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 0

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(COMRAM[2]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(COMRAM[2]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK1[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(COMRAM[16]), AESCmac@y(BANK0[16]), AESCmac@x(BANK0[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK1[1]), SelectChannelForTransmission@channelIndex(COMRAM[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1242$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1242$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S573$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S573$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(COMRAM[16]), AESCmac@y(BANK0[16]), AESCmac@x(BANK0[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(COMRAM[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(COMRAM[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(COMRAM[16]), AESCmac@y(BANK0[16]), AESCmac@x(BANK0[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S351$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(COMRAM[16]), AESCmac@k1(BANK0[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK0[16]), AESCmac@k1(BANK0[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK0[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK0[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> ComputeMic@mic(BANK0[4]), ExtractMic@mic(COMRAM[4]), aesBuffer(BANK1[16]), LORAWAN_RxDone@computedMic(BANK1[4]), 
		 -> loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(COMRAM[16]), UpdateCfList@frequency(COMRAM[4]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK3[224]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK0[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK3[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(COMRAM[16]), AESCmac@x(BANK0[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO5_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO1
    _SwTimersExecute->_AckRetransmissionCallback
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_ComputeMic
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _main in BANK0

    _LORAWAN_Mainloop->_RADIO_DIO0
    _AutomaticReplyCallback->_LORAWAN_Send
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_LORAWAN_Send
    _LORAWAN_Send->_AssemblePacket
    _AssemblePacket->_AESCmac
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _PrepareJoinRequestFrame->_ComputeMic
    _ComputeMic->_AESCmac

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0 6483763
                                             20 BANK1     27    27      0
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2000
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0    1000
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0     200
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     600
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   14102
                                             11 COMRAM     2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   14102
                                             11 COMRAM     2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 6019771
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2354284
                                            130 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     1      0  155996
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     1      0  692582
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     2      0  507893
                                             12 COMRAM     1     1      0
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     5      0  158309
                                             83 COMRAM     4     4      0
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                           10    10      0    9383
                                             50 COMRAM     9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   19    19      0    9826
                                             50 COMRAM    18    18      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     1      0  318766
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            6     6      0  165773
                                             90 COMRAM     5     5      0
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9960
                                              5 COMRAM     2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           2     2      0    9960
                                              5 COMRAM     2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9960
                                              5 COMRAM     2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36563
                                             26 COMRAM     3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  554116
                                             94 COMRAM     1     1      0
                                              5 BANK0      1     1      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  517525
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26569
                                             25 COMRAM     1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 3044905
                                            140 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              4 COMRAM     1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                         8     8      0  216932
                                             26 BANK0      8     8      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1064494
                                            138 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              7     6      1     389
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1546058
                                            138 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  491783
                                             90 COMRAM     4     4      0
                                              0 BANK0      5     5      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       2     2      0  326252
                                             83 COMRAM     1     1      0
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1038004
                                            130 BANK0      8     5      3
                                              0 BANK1     20    20      0
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9244
                                             50 COMRAM     4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               9     9      0    9281
                                             50 COMRAM     8     8      0
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     177
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                        13    11      2   23111
                                             62 COMRAM    13    11      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9535
                                             50 COMRAM     9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  167977
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   24100
                                             70 COMRAM     8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2     664
                                              7 COMRAM     3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  1     1      0     507
                                              6 COMRAM     1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               7     5      2    7225
                                             62 COMRAM     7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     400
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                    8     6      2   12176
                                             62 COMRAM     8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     558
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     204
                                              2 COMRAM     4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     333
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     333
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     489
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2033
                                              4 COMRAM     3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     802
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     157
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                       9     7      2    2590
                                             15 COMRAM     9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  5     3      2     225
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    1647
                                             12 COMRAM     3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      8     3      5    1425
                                              4 COMRAM     8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     778
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     201
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     111
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_Send                                         7     3      4  318766
                                            123 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_GetMaxPayloadSize                            3     3      0     184
                                              8 COMRAM     3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (5) _AssemblePacket                                      12     7      5  150297
                                             90 COMRAM     5     0      5
                                            116 BANK0      7     7      0
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _IncludeMacCommandsResponse                          14     9      5    1870
                                              0 COMRAM    14     9      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (7) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _FindSmallestDataRate                                 4     4      0     315
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (6) _EncryptFRMPayload                                   22     8     14   44425
                                             50 COMRAM    22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     478
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _AssembleEncryptionBlock                              9     2      7   19538
                                             11 COMRAM     9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _CountfOptsLength                                     8     8      0     136
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          10     6      4   14693
                                             11 COMRAM    10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   37491
                                             50 COMRAM     2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   17977
                                             11 COMRAM     7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     221
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     177
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                  9     9      0  207300
                                             26 BANK0      9     9      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      36    34      2  184884
                                             83 COMRAM    10     8      2
                                              0 BANK0     26    26      0
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                             _RxData *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             41 COMRAM     9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  163126
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (4) _RxData                                               4     0      4    4851
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  126814
                                             73 COMRAM    10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   15546
                                             19 COMRAM     5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  259047
                                            129 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _SelectChannelForTransmission                         3     3      0   23204
                                             83 COMRAM     3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (5) _SearchAvailableChannel                              12     9      3    7600
                                             71 COMRAM    12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadioTx                                     6     2      4   15406
                                             19 COMRAM     6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetOutputPower                                 1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetIQInverted                                  1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetCRC                                         1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadio                                       5     1      4   15110
                                             14 COMRAM     5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetModulation                                  1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetFSKSyncWord                                 3     1      2   14167
                                             11 COMRAM     3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetChannelFrequency                            4     0      4     321
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetBandwidth                                   1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_Transmit                                      17    14      3  127941
                                             73 COMRAM    17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteConfiguration                            11     9      2   91386
                                             62 COMRAM    11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _RADIO_WritePower                                     3     3      0   10383
                                              4 COMRAM     3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15890
                                             13 COMRAM     8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFSKBitRate                                8     4      4   15887
                                             13 COMRAM     8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  104356
                                            120 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _Random                                               2     0      2    6391
                                             69 COMRAM     2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (7) _rand                                                 2     0      2    5712
                                             62 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     440
                                             64 COMRAM     5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   80300
                                             90 COMRAM     5     0      5
                                            116 BANK0      4     4      0
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AESCmac                                            116   109      7   65576
                                              0 BANK0    116   109      7
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (7) _GenerateSubkey                                      40    34      6   24960
                                             50 COMRAM    40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (8) _FillSubKey                                           8     3      5    1270
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) _AESEncodeLoRa                                       20    16      4   19283
                                             30 COMRAM    20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (8) _AESEncode                                           24    20      4    3397
                                              7 COMRAM    23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (9) _EncodeShiftRow                                       3     1      2     709
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (9) _EncKeySchedule                                       7     5      2     839
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  174624
                                             74 COMRAM     4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 COMRAM     2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             12 COMRAM     6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0   99035
                                             73 COMRAM     1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46235
                                             25 COMRAM     7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteMode                                      7     5      2   15915
                                              5 COMRAM     7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (6) _RADIO_RegisterRead                                   2     2      0     130
                                              2 COMRAM     2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFrequency                                12     8      4   16640
                                             13 COMRAM    12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     440
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) _RADIO_RegisterWrite                                  2     1      1    9796
                                              2 COMRAM     2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (7) _HALSPISend                                           1     1      0      62
                                              1 COMRAM     1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (8) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (6) _SystemBlockingWaitMs                                 5     1      4     658
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   15289
                                             62 COMRAM    11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    5712
                                             50 COMRAM    12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    5857
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _SwTimerStop                                          1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _SwTimerStart                                         9     9      0    1453
                                             41 COMRAM     9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (5) _TMR_OverrideRemaining                               10     6      4     834
                                             10 COMRAM    10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (6) _TMR_SwapTimer                                        2     0      2     569
                                              8 COMRAM     2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     228
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _SwTimersInterrupt                                   17    13      4     458
                                             24 COMRAM    17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (6) _TMR_GetDeltaTime                                    16    12      4     102
                                              8 COMRAM    16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       8     6      2     102
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _SwTimerSetTimeout                                    9     5      4    1934
                                             13 COMRAM     9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   17099
                                             11 COMRAM     1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   17099
                                             11 COMRAM     1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    3033
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6   13936
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      A0      14       62.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E0      11       87.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2F      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      98       5       95.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     45C      12        0.0%
DATA                 0      0     67A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 11 03:43:27 2019

                                        ??_LORAWAN_TxDone 0056  
                              __end_of_DIO3_ISR_Lora_Init 89BA  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 0038  
                                          HALSPISend@data 0002  
                         __end_of_ValidateChannelMaskCntl 8CC4  
                                            ___awdiv@sign 0006  
                         __size_of_UpdateJoinSuccessState 00F8  
                                     ___wmul@multiplicand 0003  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 000000  
                                   __end_of_AESEncodeLoRa 90E8  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0001  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                              ?_AckRetransmissionCallback 0001  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 005B  
                                                     l246 9DC4  
                                                     l605 91BA  
                                                     l473 E9C8  
                                                     l492 EC7A  
                                             ?_RADIO_Init 001A  
                                                     l479 EBB2  
                                                     l686 9324  
                                         ??_UpdateTxPower 0001  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 9A28  
                   __size_of_SelectChannelForTransmission 0060  
                            _SelectChannelForTransmission 99C8  
                                  _ExecuteRxParamSetupReq BF80  
                                      _RADIO_Transmit$780 0055  
                              ??_INT0_SetInterruptHandler 0003  
                                      _DIO2_ISR_Lora_Init 8ABC  
                                      __size_of_AESEncode 0300  
                                         _timer1ReloadVal 01E8  
                                         ?_EncKeySchedule 0001  
                                   _RADIO_SetLoRaSyncWord 89E6  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac DE8C  
                                 __end_of_SwTimersExecute AA44  
                                  SystemBlockingWaitMs@ms 0001  
                                 LORAWAN_Join@bufferIndex 00E1  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0001  
                                ??_SearchAvailableChannel 004B  
                            __end_of_FindSmallestDataRate A81E  
                     __end_of_RADIO_SetFrequencyHopPeriod 8A4A  
                             _RADIO_SetFrequencyHopPeriod 8A40  
                                              _CheckFlags 97FE  
                                  ?_TMR_OverrideRemaining 000B  
                                 RADIO_RxFSKTimeout@param 0001  
                                ?_AssembleEncryptionBlock 000C  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0005  
                                                    l1104 964C  
                                                    l1112 C780  
                                                    l1035 EF30  
                                                    l1123 CB04  
                                                    l1044 F1B0  
                                                    l1140 C062  
                                                    l1062 D8EE  
                                                    l2023 E5E2  
                                                    l1303 D4D8  
                                                    l2024 E5DC  
                                                    l1217 B626  
                                                    l3010 93B2  
                                                    l2019 E508  
                                                    l1251 923A  
                                                    l1067 D8F8  
                                                    l1228 B834  
                                                    l1092 8B7A  
                                                    l1244 9C1A  
                                                    l1236 8B8E  
                                                    l1149 B272  
                                                    l2029 E5F0  
                                                    l1159 B2AE  
                                                    l2071 E10A  
                                                    l1263 8CC0  
                                                    l1096 8DBA  
                                                    l1257 8D76  
                                                    l1506 A73A  
                                                    l1292 9B1E  
                                                    l2253 8B0A  
                                                    l1277 9452  
                                                    l1534 AE24  
                                                    l1805 AC88  
                   RADIO_WriteConfiguration@symbolTimeout 003F  
                                                    l1907 F3DE  
                                                    l2548 A26C  
                                                    l1781 BEBA  
                                                    l1883 A930  
                                                    l2929 9BA6  
                                                    l8200 E30A  
                                                    l8202 E314  
                                                    l8206 E336  
                                                    l8312 8F0E  
                                                    l8208 E340  
                                                    l8066 D728  
                                                    l8226 E454  
                                                    l8170 E1C2  
                                                    l8322 95CA  
                                                    l8308 8EFE  
                                                    l8068 D732  
                                                    l8158 E196  
                                                    l8326 9606  
                                                    l9206 B672  
                                                    l9400 A802  
                                                    l9208 B674  
                                                    l8194 E2DE  
                                                    l8186 E218  
                                                    l9162 9BF2  
                                                    l8196 E2E8  
                                                    l9408 A81A  
                                                    l9512 DFB8  
                                                    l9504 DF70  
                                                    l8560 B7E2  
                                                    l9514 DFBC  
                                                    l8570 B880  
                                                    l9282 9474  
                                                    l9418 926A  
                                                    l9380 A782  
                                                    l9524 E002  
                                                    l9508 DF94  
                                                    l8572 B882  
                                                    l9196 B5D4  
                                                    l9390 A7E2  
                                                    l9382 A788  
                                                    l9534 E03C  
                                                    l8558 B7DC  
                                                    l8902 9B48  
                                                    l9472 AAFA  
                                                    l9392 A7E4  
                                                    l9552 E09E  
                                                    l9528 E026  
                                                    l9466 AA4E  
                                                    l9474 AAFC  
                                                    l9570 E110  
                                                    l9562 E0E4  
                                                    l9476 AB06  
                                                    l9548 E088  
                                                    l9580 E132  
                                                    l9582 E16E  
                                                    l9494 DF2A  
                                                    l9486 DE9E  
                                                    l8960 A344  
                                                    l8952 A326  
                                                    l9584 E170  
                                                    l9728 9656  
                                                    l9760 C760  
                                                    l9752 C730  
                                                    l8970 A364  
                                                    l8946 A316  
                                                    l8890 9B12  
                                                    l8884 9AFC  
                                                    l9780 C7FE  
                                                    l8958 A33C  
                                                    l8974 A36E  
                                                    l8896 9B2E  
                                                    l8888 9B08  
                                                    l9784 C816  
                                                    l8978 A37C  
                                                    l9890 94B6  
                                                    l8898 9B38  
                                                    l9786 C84C  
                                        _RADIO_WritePower AF0E  
                                                    l9892 94D4  
                            ??_LORAWAN_SetChannelIdStatus 0006  
                                 _PrepareJoinRequestFrame C0CE  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                                    u8210 9236  
                                                    u9004 963C  
                                                    u9005 9636  
                                                    u6800 E444  
                                                    u8320 8DB0  
                                                    u8160 9BEC  
                                            ?_RADIO_Reset 0001  
                                                    u8330 8DB6  
                                                    u6740 E1BE  
                                                    u6920 9602  
                                                    u8600 A812  
                                                    u6930 9604  
                                                    u8380 9470  
                                                    u7750 8D72  
                                                    u8560 A7EE  
                                                    u8800 E078  
                                                    u8720 DF28  
                              __size_of_RADIO_ReceiveStop 001E  
                                                    u7860 A348  
                                                    u8830 E17A  
                                                    u8750 DFA8  
                                                    u8680 AABC  
                                                    u8690 AB06  
                                                    _TMR1 000FCE  
                                                    u9890 9FCA  
                                       ??_UpdateDutyCycle 0003  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0003  
                          AckRetransmissionCallback@param 0001  
                                ??_InitDefault433Channels 000C  
                                ExecuteNewChannel@drRange 0041  
                                ??_AutomaticReplyCallback 0060  
                                      _PrepareSessionKeys A640  
                                                    _loRa 0200  
                                                    _main A086  
                                                    _rand 9754  
                          __end_of_UpdateMinMaxChDataRate A988  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr2h 000FDA  
                                                    fsr0l 000FE9  
                                                    indf1 000FE7  
                                                    indf2 000FDF  
                                                    fsr1l 000FE1  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 01FC  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00D4  
                                           ComputeMic@key 005B  
                               __end_of_LORAWAN_RxTimeout DB96  
                               __size_of_ConfigureRadioRx 0026  
                               __size_of_ConfigureRadioTx 0046  
                       __size_of_INT2_SetInterruptHandler 000A  
                           __end_of_StopAllSoftwareTimers 9754  
                               ?_INT2_SetInterruptHandler 0001  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 0000  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength AB0A  
                                   ExecuteLinkAdr@txPower 0015  
                                     __size_of_HALSPISend 000A  
                              ??_TMR1_SetInterruptHandler 0003  
                              EnableChannels1@channelMask 0005  
                                        ??_AssemblePacket 00D4  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 000C  
                                  __size_of_TMR_SwapTimer 0044  
                              __end_of_RADIO_GetPacketSnr 89E6  
                                            ___param_bank 000000  
                                              _GetRx1Freq 8B44  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0003  
                         __end_of_CreateAllSoftwareTimers 9702  
                  SearchAvailableChannel@transmissionType 0048  
                         __size_of_HALResetPinOutputValue 0016  
                                   MacExecuteCommands@ptr 004D  
                                   _RADIO_WriteFSKBitRate 9A8A  
                                __size_of_SystemTimerInit 0008  
                          __size_of_OSCILLATOR_Initialize 000E  
                                  ExecuteLinkAdr@dataRate 0018  
                           __end_of_OSCILLATOR_Initialize 8AF4  
                      __size_of_LORAWAN_LinkCheckCallback 0116  
                                                   l10052 8B9E  
                                                   l10150 8BCA  
                                                   l10312 A00A  
                                                   l11032 9A38  
                                                   l10420 9DC6  
                                                   l11044 9A52  
                                                   l11060 9A80  
                                                   l10350 983A  
                                                   l10342 9812  
                                                   l11038 9A42  
                                                   l11056 9A78  
                                                   l11048 9A58  
                                                   l13010 E9C6  
                                                   l10346 9826  
                                                   l13100 EBBE  
                                                   l10294 9FCE  
                                                   l11336 A8DE  
                                                   l13120 EC52  
                                                   l13040 EA3A  
                                                   l11346 A97C  
                                         __end_of___abdiv 9A8A  
                                                   l11348 A97E  
                                                   l13204 DC4A  
                                                   l13116 EC38  
                                                   l13222 DCE4  
                                                   l13214 DCA4  
                                                   l13206 DC7E  
                                                   l13126 EC70  
                                                   l13150 A630  
                                                   l13310 D286  
                                                   l13302 D22A  
                                                   l13224 DCF4  
                                                   l13048 EA58  
                                                   l13304 D236  
                                                   l14040 A070  
                                                   l15000 D53C  
                                                   l12522 98BE  
                                                   l12530 98F6  
                                                   l12602 97B8  
                                                   l13250 DD5E  
                                                   l13234 DD00  
                                                   l13218 DCCA  
                                                   l13090 EB6E  
                                                   l13082 EB28  
                                                   l13322 D2BC  
                                                   l13170 AB76  
                                                   l14050 CDF8  
                                                   l14122 F3DA  
                                                   l12516 8C82  
                                                   l13244 DD5A  
                                                   l13092 EB78  
                                                   l13340 D3F4  
                                                   l13308 D25E  
                                                   l14060 CEEA  
                                                   l14220 F712  
                                                   l14140 F46E  
                                                   l14116 F3A0  
                                                   l15100 B930  
                                                   l15012 D5A2  
                                                   l12606 97CC  
                                                   l12710 B12C  
                                                   l13270 DE24  
                                                   l13262 DDF0  
                                                   l13510 CCB0  
                                                   l13334 D380  
                                                   l13318 D2A6  
                                                   l13174 AB98  
                                                   l14070 CF58  
                                                   l14062 CF00  
                                                   l14054 CEA8  
                                                   l14230 F75A  
                                                   l14222 F72A  
                                                   l15110 B96A  
                                                   l12616 A21E  
                                                   l13192 DBEE  
                                                   l13520 CCD4  
                                                   l13504 CC8A  
                                                   l13328 D32A  
                                                   l13168 AB6E  
                                                   l14064 CF16  
                                                   l14080 CFA4  
                                                   l14056 CEBC  
                                                   l14304 F8D6  
                                                   l14240 F766  
                                                   l14144 F480  
                                                   l15200 A516  
                                                   l15104 B936  
                                                   l15120 B9AA  
                                                   l12538 93C8  
                                                   l12618 A22A  
                                                   l12730 B172  
                                                   l12714 B138  
                                                   l13098 EB9E  
                                                   l13506 CC9E  
                                                   l13426 C3A4  
                                                   l14066 CF2C  
                                                   l14058 CED4  
                                                   l15210 959E  
                                                   l15130 9C50  
                                                   l12564 BA56  
                                                   l12628 A25E  
                                                   l12572 8E78  
                                                   l12644 9B98  
                                                   l12636 9B64  
                                                   l12732 B176  
                                                   l12820 AF9A  
                                                   l12812 AF7E  
                                                   l13516 CCC0  
                                                   l13364 B1DA  
                                                   l13292 D1FE  
                                                   l13436 C3DE  
                                                   l14068 CF42  
                                                   l14420 FCB6  
                                                   l14324 F9CE  
                                                   l14260 F7A4  
                                                   l14252 F77A  
                                                   l15028 A19C  
                                                   l12566 BAAE  
                                                   l12670 B2D4  
                                                   l12638 9B70  
                                                   l12734 B180  
                                                   l12718 B14A  
                                                   l13198 DC18  
                                                   l12806 AF62  
                                                   l13550 CDE0  
                                                   l13470 CBFE  
                                                   l13366 B1E0  
                                                   l13382 B274  
                                                   l13390 B290  
                                                   l13462 C4DE  
                                                   l13446 C448  
                                                   l13630 CB86  
                                                   l14078 CF6A  
                                                   l14086 CFC4  
                                                   l14414 FC22  
                                                   l14182 F59A  
                                                   l14502 FDFE  
                                                   l14166 F528  
                                                   l15206 9592  
                                                   l15214 95A6  
                                                   l15230 950E  
                                                   l15070 BB60  
                                                   l15054 BAE8  
                                                   l12680 B38C  
                                                   l12576 8E92  
                                                   l12840 AFCA  
                                                   l12816 AF8C  
                                                   l12808 AF70  
                                                   l13544 CD6C  
                                                   l13456 C498  
                                                   l13720 E594  
                                                   l13616 CAE4  
                                                   l14512 FE40  
                                                   l14352 FA62  
                                                   l14256 F794  
                                                   l15208 9598  
                                                   l15224 9500  
                                                   l15048 BACE  
                                                   l15064 BB14  
                                                   l12682 B38E  
                                                   l12746 B1AA  
                                                   l12690 B0EC  
                                                   l12922 BC52  
                                                   l12914 BC36  
                                                   l15410 C10C  
                                                   l12834 AFC2  
                                                   l13298 D214  
                                                   l13634 CBD4  
                                                   l14362 FABA  
                                                   l14354 FA7A  
                                                   l14506 FE04  
                                                   l15218 95B8  
                                                   l15226 9506  
                                                   l15154 A992  
                                                   l12676 B328  
                                                   l12940 BCBC  
                                                   l12932 BCA0  
                                                   l13484 CC2A  
                                                   l13476 CC14  
                                                   l13396 B2AA  
                                                   l13724 E598  
                                                   l13636 CBE0  
                                                   l13628 CB7A  
                                                   l14372 FAC0  
                                                   l14276 F856  
                                                   l14188 F5AA  
                                                   l14292 F89C  
                                                   l14540 D972  
                                                   l14524 D8DE  
                                                   l15180 A4CE  
                                                   l15270 A552  
                                                   l14614 EE28  
                                                   l13750 E61E  
                                                   l13638 CBE4  
                                                   l13662 C040  
                                                   l13910 BDBC  
                                                   l14470 FD7C  
                                                   l15190 A4F8  
                                                   l15166 AA34  
                                                   l12960 A3E2  
                                                   l15352 C962  
                                                   l15424 C14E  
                                                   l12792 AF34  
                                                   l14632 F0D6  
                                                   l13912 BDBE  
                                                   l14472 FD82  
                                                   l14384 FADA  
                                                   l14296 F8CA  
                                                   l15176 A4C2  
                                                   l15184 A4D6  
                                                   l15168 AA38  
                                                   l12698 B104  
                                                   l12890 9388  
                                                   l12874 8F2C  
                                                   l13658 C01E  
                                                   l14466 FD70  
                                                   l14546 D9A6  
                                                   l15194 A506  
                                                   l15186 A4E6  
                                                   l15178 A4C8  
                                                   l13850 AC80  
                                                   l14716 C5EE  
                                                   l12892 9390  
                                                   l12788 AF26  
                                                   l12980 E8F6  
                                                   l13588 9A24  
                                                   l14628 F066  
                                                   l13764 E680  
                                                   l13748 E60C  
                                                   l13676 C0C4  
                                                   l14468 FD76  
                                                   l14396 FB40  
                                                   l14388 FAEA  
                                                   l14580 DABA  
                                                   l14564 D9EE  
                                                   l14812 A8B2  
                                                   l15196 A50E  
                                                   l14726 C634  
                                                   l14718 C604  
                                                   l15454 9920  
                                                   l12982 E92C  
                                                   l12990 E96C  
                                                   l14638 F0DC  
                                                   l13694 E500  
                                                   l13942 ADAC  
                                                   l13934 AD84  
                                                   l14398 FB4E  
                                                   l14566 D9F6  
                                                   l14558 D9E8  
                                                   l14590 DB66  
                                                   l13854 AC90  
                                                   l13846 AC72  
                                                   l15456 9924  
                                                   l12992 E97C  
                                                   l12976 E8AA  
                                                   l14648 F198  
                                                   l14656 F216  
                                                   l14680 F308  
                                                   l13784 E764  
                                                   l13776 E700  
                                                   l13872 CFFE  
                                                   l14584 DB32  
                                                   l14816 A8C8  
                                                   l14808 A8AE  
                                                   l14752 AE9A  
                                                   l12898 93A8  
                                                   l12978 E8D0  
                                                   l12986 E93E  
                                                   l14674 F2F0  
                                                   l13890 D1E0  
                                                   l14578 DAB6  
                                                   l14842 B42C  
                                                   l14940 9E06  
                                                   l14924 9E78  
                                                   l12988 E954  
                                                   l14684 F33A  
                                                   l14668 F27C  
                                                   l13948 ADBC  
                                                   l14756 AEB8  
                                                   l14766 AEE6  
                                                   l14864 B71A  
                                                   l13888 D1D4  
                                                   l14792 A876  
                                                   l14768 AEEA  
                                                   l13992 B578  
                                                   l14970 BF0A  
                                                   l14962 BEAE  
                                                   l13898 BD02  
                                                   l13986 B504  
                                                   l14956 BE80  
                                                   l14964 BEB0  
                                                   l14788 A858  
                                                   l14876 8EB4  
                                                   l14992 D4C0  
                                                   l14984 D40E  
                                                   l15794 A0F8  
                                                   ?_main 0001  
                              ?_LORAWAN_LinkCheckCallback 0001  
                                                   ?_rand 003F  
                                         __end_of___awdiv A386  
                                              _FillSubKey 95C0  
                                         _TMR1_StartTimer 89D0  
                       __end_of_IOCB4_SetInterruptHandler 8A7C  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv A27E  
                                         RADIO_Transmit@i 005A  
                                         ___awdiv@divisor 0003  
                                                   u11360 9A66  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 9BB8  
                                                   u13300 98E0  
                                                   u14005 EA70  
                                                   u13320 8A8E  
                                                   u13330 93DC  
                                                   u13307 98D6  
                                                   u13420 9B74  
                                       ??_EnableChannels1 000A  
                                                   u13440 A290  
                                                   u14240 DD36  
                                                   _LATC2 007C5A  
                                                   u14170 DBFE  
                                    RxJoinResponse@status 0001  
                                                   u14155 DBD4  
                                                   _LATD3 007C63  
                                                   u13620 B19E  
                                                   u14180 DC00  
                                                   u13390 A22E  
                                                   u13800 9394  
                                                   u14360 D34A  
                                                   u15048 AC60  
                       __end_of_AckRetransmissionCallback B9B0  
                  SearchAvailableChannel@randomNumberCopy 004F  
                                                   u14345 D2D8  
                                                   u13730 A436  
                                                   u14450 B270  
                                                   u15410 A02A  
                                                   u13900 E966  
                                                   u16140 FDCC  
                                                   u16108 FDA8  
                                                   u15340 B4CE  
                                                   u13821 BBE0  
                                                   u15325 9D04  
                                                   u16109 FDBC  
                                                   u14630 CD36  
                                                   u13750 A45E  
                                                   u14470 B282  
                                                   u15078 8F90  
                                                   u16070 FD40  
                                                   u16038 FD1A  
                                                   u14375 D370  
                                                   u16039 FD2E  
                                                   u13840 BC7A  
                                                   u14720 CAD0  
                                                   u16208 FE54  
                                                   u13905 E95C  
                                                   u14385 D392  
                                                   u15185 BDE2  
                                                   u13930 E9B2  
                                                   u13770 A484  
                                                   u14490 B296  
                                                   u15610 F544  
                                                   u15355 B4F4  
                                                   u17300 BB2A  
                                                   u14645 CD5C  
                                                   u15365 B516  
                                                   u17070 BED4  
                                                   u13950 E9C2  
                                                   u15550 F44C  
                                                   u16318 D994  
                                                   u14655 CD7E  
                                                   u15631 F582  
                                                   u15448 A058  
                                                   u17400 B92A  
                                                   u16505 ED72  
                                                   u15449 A06C  
                                                   u16425 DAD6  
                                                   u15490 CFE2  
                                                   u15810 F8C6  
                                                   u15650 F59A  
                                                   u17170 D56C  
                                                   u16515 EE56  
                                                   u17315 BB50  
                                                   u13980 EA12  
                                                   u14940 E604  
                                                   u15708 F70C  
                                                   u15580 F468  
                                                   u17260 BAF0  
                                                   u15388 B586  
                                                   u17085 BEFA  
                                                   u16525 EED0  
                                                   u17325 BB72  
                                                   u16550 F01E  
                                                   u16198 FE2E  
                                                   u15830 F9C8  
                                          __CFG_DEBUG$OFF 000000  
                                                   u17095 BF1C  
                                                   u16295 D91E  
                                                   u14688 9F0E  
                                                   u16560 F03C  
                                                   u15808 F88A  
                                                   u16448 DB54  
                                                   u17185 D592  
                                                   u16570 F098  
                                                   u15930 FAD4  
                                                   u15690 F6F8  
                                                   u17195 D5B4  
                                                   u18251 A090  
                                                   u16660 F246  
                                                   u15780 F7E6  
                                                   u16468 DB84  
                                                   u17508 9C72  
                                                   u17428 B958  
                                                   u16565 F032  
                                                   u18261 A0AA  
                                                   u16718 F326  
                                                   u16575 F08E  
                                                   u16495 ECF8  
                                                   u16920 B6DA  
                                                   u16840 A8A8  
                                                   u16738 F358  
                                                   u16930 B6F0  
                                                   u15970 FB84  
                                                   u16675 F26C  
                                                   u16940 B754  
                                                   u17468 B998  
                                                   u17548 AA0E  
                                                   u18277 8E7E  
                                                   u16685 F28E  
                                                   u17565 A4A4  
                                                   u17549 AA32  
                                                   u16790 AE74  
                                                   u16870 B3EC  
                                                   u16935 B6E6  
                                                   u15888 FA48  
                                                   u16880 B402  
                                                   u16945 B74A  
                                                   u15889 FA5C  
                                                   u16890 B466  
                                                   u16885 B3F8  
                                                   u16895 B45C  
                                         __end_of___lwmod 93BC  
                                           ?_RADIO_RxDone 0001  
                                         ___awdiv@counter 0005  
                             __size_of_RADIO_ReceiveStart 0210  
                     __size_of_LORAWAN_SetChannelIdStatus 0038  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 002A  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 0037  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 89B6  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0012  
                               FindSmallestDataRate@found 0002  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                  LORAWAN_RxTimeout@minim 0060  
                             __size_of_RADIO_SetBandwidth 0008  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0040  
                                                   __rcon 0114  
                            ??_IncludeMacCommandsResponse 0006  
                           __end_of_RADIO_WatchdogTimeout 9338  
                                                   _count 010C  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 000E  
                               __size_of_ValidateDataRate 0014  
                                                   _randx 0189  
                          LORAWAN_RxDone@frmPayloadLength 01C6  
                           ValidateChannelMaskCntl@result 0001  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 8B12  
                                        UpdateDataRange@i 0004  
                                LORAWAN_RxDone@joinAccept 01C4  
                                  _UpdateJoinSuccessState B4A2  
                                _INT1_SetInterruptHandler 8A5E  
                                              _ComputeMic 9968  
                                 __end_of_TMR1_Initialize 9056  
                                  UpdateCfList@joinAccept 003F  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                 RADIO_WriteFrequency@num 0016  
                          __size_of_UpdateCurrentDataRate 0008  
                          __size_of_UpdateChannelIdStatus 010C  
                              PrepareSessionKeys@appNonce 000E  
                                  UpdateChannelIdStatus@i 0004  
                           __end_of_UpdateCurrentDataRate 8A26  
                            __size_of_RADIO_FSKPacketSent 0104  
                           __end_of_UpdateChannelIdStatus B8A4  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                UpdateFrequency@channelId 0005  
                                                   status 000FD8  
                                      _MacExecuteCommands CDEA  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 004A  
                                     __size_of_RADIO_DIO0 008A  
                                     __size_of_RADIO_DIO1 004E  
                                     __size_of_RADIO_DIO2 004C  
                                     __size_of_RADIO_DIO3 001A  
                                     __size_of_RADIO_DIO4 001A  
                                     __size_of_RADIO_DIO5 001A  
                      PrepareJoinRequestFrame@bufferIndex 00E0  
                                         _TMR1_WriteTimer 8C70  
                       TMR_OverrideRemaining@oldReloadVal 0013  
                                     LORAWAN_RxDone@fPort 01B5  
                                __size_of_RADIO_WriteMode 00EC  
                                       __end_of_AESEncode E488  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 01B0  
                        __end_of_RADIO_WriteConfiguration EC90  
                            __size_of_RADIO_SetIQInverted 0008  
                               RADIO_WriteMode@dioMapping 0009  
                                         __initialization 9F20  
                                        LORAWAN_Send@port 00DB  
                             __size_of_DIO1_ISR_Lora_Init 000E  
                                     ?_MacExecuteCommands 0047  
                                       _SPI2_Exchange8bit 8B02  
                                            __end_of_main A0FE  
                              AssembleEncryptionBlock@dir 0013  
                                            __end_of_rand 97A8  
                                       ?_TMR_GetDeltaTime 0009  
                                           AESCmac@padded 009E  
                                __end_of_RADIO_ReadRandom A5B0  
                                        _SetJoinFailState 8F78  
                                 RADIO_WriteMode@blocking 0007  
                                    _UpdateJoinInProgress 8B56  
                                    _ExecuteRxTimingSetup 8E50  
                               __size_of_UpdateDLSettings 0018  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0014  
              AckRetransmissionCallback@maximumPacketSize 005F  
                                      ??_TMR_GetDeltaTime 000D  
                                           AESCmac@output 0062  
                            __end_of_RADIO_SetOutputPower 8A1E  
                                               ??_AESCmac 0067  
                                          ??_RADIO_SetCRC 0001  
                                  MacExecuteCommands@done 004C  
                                 InitDefault868Channels@i 000C  
                                                  ??_main 0060  
                                                  ??_rand 0041  
                                          ??_RADIO_RxDone 0060  
                             AutomaticReplyCallback@param 0001  
                                          ??_RADIO_TxDone 005E  
                                           main@deviceEui 01DC  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 89B8  
                       __end_of_LORAWAN_LinkCheckCallback BBD6  
                          __end_of_SetReceptionNotOkState A086  
                             __end_of_UpdateReceiveDelays 927A  
                         __end_of_AssembleEncryptionBlock ABD2  
                                __size_of_SPI2_Initialize 000E  
                                  ??_SystemBlockingWaitMs 0005  
                                        ??_StartReTxTimer 0033  
                                     ??_SPI2_Exchange8bit 0001  
                        CountfOptsLength@macCommandLength 0007  
                                      EncodeShiftRow@temp 0003  
                                ??_InitDefault868Channels 000C  
                             __size_of_RADIO_RegisterRead 001E  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 93BC  
                                          _EnableChannels 8C08  
                               ??_PrepareJoinRequestFrame 00D8  
                                          _HALSPICSAssert 89C4  
                                    ??_MacExecuteCommands 004A  
                                             ?_CheckFlags 0001  
                                 LORAWAN_TxDone@timeOnAir 0054  
                                              _ExtractMic 9524  
                         __size_of_SearchAvailableChannel 00F2  
                                      ??_HALSPICSDeassert 0001  
                                  _HALResetPinOutputValue 8B92  
                                        ___llmod@dividend 0001  
                                        ___awdiv@dividend 0001  
                                                  ?_srand 0013  
                  __end_of_LORAWAN_ReceiveWindow1Callback A1FC  
                 __size_of_LORAWAN_ReceiveWindow1Callback 0080  
                          _LORAWAN_ReceiveWindow1Callback A17C  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 8D9C  
                                                  _T1GCON 000FCC  
                                 SwTimerReadValue@timerId 0032  
                                 TMR1_WriteTimer@timerVal 0001  
                                          _ExecuteLinkAdr C6A0  
                  __end_of_LORAWAN_ReceiveWindow2Callback AC9A  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00C8  
                          _LORAWAN_ReceiveWindow2Callback ABD2  
                                          __CFG_WDTEN$OFF 000000  
                           __size_of_RADIO_SetFSKSyncWord 002C  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0001  
                        __size_of_ValidateChannelMaskCntl 001C  
                         __size_of_InitDefault433Channels 0072  
                                                  _TRISC2 007CA2  
                                           ?_LORAWAN_Init 004B  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0011  
                                           ?_LORAWAN_Send 00DB  
                         __size_of_AutomaticReplyCallback 0024  
                              __size_of_LORAWAN_RxTimeout 02E2  
                                       ?_ExecuteDevStatus 0001  
                              __end_of_DIO0_ISR_Lora_Init 8AAE  
                                       ExecuteLinkAdr@ptr 0010  
                           __size_of_RADIO_WriteFrequency 00E8  
                                                  _STable FE67  
                             RADIO_WriteFrequency@num_mod 0012  
                                     LORAWAN_TxDone@delta 0069  
                             __size_of_ComputeSessionKeys 007E  
                                               AESCmac@k1 007E  
                                               AESCmac@k2 006E  
                               __end_of_SPI2_Exchange8bit 8B12  
                                     LORAWAN_TxDone@found 0068  
                                         _CheckMcastFlags 9F96  
                                     LORAWAN_TxDone@minim 0075  
                                      ??_ExecuteDevStatus 0003  
                                                  _Random 8D7A  
                                          __CFG_XINST$OFF 000000  
                                                  _RxData 89B4  
                                     LORAWAN_TxDone@ticks 0071  
                      SearchAvailableChannel@randomNumber 0052  
                            _TMR1_DefaultInterruptHandler 000000  
                                             ?_GetRx1Freq 0001  
                           ValidateDataRange@dataRangeNew 0004  
                                 _RADIO_FHSSChangeChannel 918E  
                                               ??___abdiv 0002  
                                                  ___lmul 97A8  
                                  ?_RADIO_WriteFSKBitRate 000E  
                                 __end_of_TMR1_StartTimer 89D4  
                                   ?_UpdateJoinInProgress 0001  
                                                  ___wmul 8E2A  
                             ?_LORAWAN_LinkCheckConfigure 003F  
                                   ?_ExecuteRxTimingSetup 0008  
                                               ??___awdiv 0005  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate A770  
                                               ??___lldiv 0009  
                                               ??___llmod 0009  
                                               ??___lwmod 0045  
                      RADIO_SetChannelFrequency@frequency 0001  
                                         StartReTxTimer@i 003B  
                               ExecuteRxParamSetupReq@ptr 003F  
                                  __size_of_LORAWAN_Reset 01C4  
                                                  _memcpy 98AC  
                                  _DutyCycleCallback$1857 003B  
                      LORAWAN_ReceiveWindow1Callback@freq 0054  
                                                  _memset 8EF4  
                                                  clear_0 9F48  
                                                  clear_1 9F5A  
                                                  clear_2 9F66  
                                                  clear_3 9F72  
                                                  clear_4 9F7E  
                                                  clear_5 9F8A  
                                 SwTimerIsRunning@timerId 0001  
                                        ___awdiv@quotient 0007  
                             __size_of_DIO5_ISR_Lora_Init 000E  
                                             ?_FillSubKey 0001  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0001  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0162  
                                  __end_of_EnableChannels 8C22  
                              ??_RADIO_UnhandledInterrupt 0005  
                                            ??_HALSPISend 0002  
                            _INT2_DefaultInterruptHandler 000000  
                                             RxData@pData 0001  
                                  __end_of_HALSPICSAssert 89C8  
                       __size_of_RADIO_SetSpreadingFactor 0008  
                            __size_of_ValidateChannelMask 0048  
                                           ??_SwTimerStop 0001  
                                       ??_SystemTimerInit 0001  
                               ?_RADIO_SetSpreadingFactor 0001  
                                       ?_SwTimerReadValue 002A  
                                      ??_SwTimerIsRunning 0001  
                                          ?_TMR_SwapTimer 0009  
                                       ?_ExecuteDutyCycle 0001  
                                      ??_ExecuteLinkCheck 0003  
                                            __mediumconst FE66  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0013  
                                      ??_SwTimerReadValue 002E  
                                         _UpdateDataRange B59A  
                                  __end_of_ExecuteLinkAdr C856  
                                      ??_ExecuteDutyCycle 0003  
               IOCB4_SetInterruptHandler@InterruptHandler 0001  
                TMR1_SetInterruptHandler@InterruptHandler 0001  
                INT0_SetInterruptHandler@InterruptHandler 0001  
                INT2_SetInterruptHandler@InterruptHandler 0001  
                INT1_SetInterruptHandler@InterruptHandler 0001  
                      __end_of_LORAWAN_SetChannelIdStatus 9156  
                              _LORAWAN_SetChannelIdStatus 911E  
                                           AESEncode@aux1 001C  
                                           AESEncode@aux2 001B  
                                           AESEncode@aux3 001D  
                                 __end_of_TMR1_WriteTimer 8C8C  
                                   __end_of_SwTimerCreate 9DCA  
                          ??_SelectChannelForTransmission 0054  
                                             ?_ComputeMic 005B  
                           __size_of_INTERRUPT_Initialize 0004  
                               ExecuteDutyCycle@maxDCycle 0006  
                                       ??_RADIO_RxTimeout 005F  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0001  
                                       _SYSTEM_Initialize 8D3C  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 011E  
                                          ??_LORAWAN_Init 004F  
                                          ??_LORAWAN_Join 0060  
                                          ??_LORAWAN_Send 00DF  
                          __size_of_RADIO_FSKPayloadReady 00B0  
                                              __accesstop 0060  
                                 __end_of__initialization 9F90  
                           __end_of_RADIO_FSKPayloadReady A8CE  
                                          _RADIO_Transmit CBEE  
                                    LORAWAN_RxDone@buffer 00E2  
                                  RADIO_ReadRandom@retVal 0010  
                                        _ConfigureRadioRx 8E04  
                                    __size_of_RADIO_Reset 0042  
                                        _ConfigureRadioTx 9400  
                                     ExecuteDevStatus@ptr 0001  
                        ??_UpdateReceiveWindow2Parameters 0006  
                         ?_UpdateReceiveWindow2Parameters 0001  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 01BE  
                                          _maxPayloadSize FF77  
                           RADIO_SetLoRaSyncWord@syncWord 0001  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0003  
                               ExecuteLinkAdr@channelMask 0013  
                                      __end_of_HALSPISend 8A40  
                                          __pcstackCOMRAM 0001  
                                  _SearchAvailableChannel B1C0  
                                 ValidateChannelId@result 0002  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 9855  
                                     ??_SYSTEM_Initialize 0003  
                              __end_of_DIO4_ISR_Lora_Init 89BC  
                                     __size_of_CheckFlags 0056  
                                _RADIO_WriteConfiguration E802  
                                       ??_RADIO_WriteMode 0008  
                                         _spreadingFactor FF95  
                               __size_of_LORAWAN_Mainloop 003E  
                                        ??_EncKeySchedule 0003  
                           _IOCB4_DefaultInterruptHandler 000000  
                                __end_of_RADIO_WritePower AFEC  
                                 ?_ExecuteRxParamSetupReq 003F  
                                           __end_of_srand 8B22  
                                       LORAWAN_RxDone@hdr 01C7  
                                            ??_RADIO_DIO0 00EC  
                                            ??_RADIO_DIO1 005F  
                                            ??_RADIO_DIO2 001B  
                                            ??_RADIO_DIO3 0006  
                                            ??_RADIO_DIO4 0006  
                                            ??_RADIO_DIO5 0006  
                                  _InitDefault433Channels 9DCA  
                                         _UpdateFrequency 9156  
                                  _AutomaticReplyCallback 8DE0  
                             ??_IOCB4_SetInterruptHandler 0003  
                                ??_INTERRUPT_GetDioStatus 0001  
                             ??_AckRetransmissionCallback 005B  
                                            ??_RADIO_Init 0020  
                               SwTimerSetCallback@timerId 0004  
                              LORAWAN_RxDone@channelIndex 01B6  
                          AssembleEncryptionBlock@blockId 0010  
                             __size_of_EXT_INT_Initialize 0036  
                                         _UpdateDutyCycle 9086  
                                         ?_EnableChannels 000D  
                                 ??_TMR_OverrideRemaining 000F  
                                 __end_of_ValidateTxPower 8DBE  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 89B8  
                            __end_of_HALResetPinMakeInput 89C0  
                                 __size_of_TMR1_ReadTimer 001E  
                        __end_of_INT2_SetInterruptHandler 8A72  
                                        RADIO_DIO0@opMode 00EF  
                             RADIO_RegisterRead@readValue 0004  
                      __end_of_IncludeMacCommandsResponse E188  
                              _IncludeMacCommandsResponse DE8C  
                         __size_of_InitDefault868Channels 0072  
                                UpdateCfList@bufferLength 0045  
                                   LORAWAN_Send@confirmed 00E1  
                                             ?_ExtractMic 000C  
                                         ?_ExecuteLinkAdr 0010  
                                        _ValidateDataRate 8B6A  
                         LORAWAN_GetMaxPayloadSize@result 000B  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 8D5A  
                      __size_of_RADIO_SetChannelFrequency 0088  
                                                 ??_srand 0015  
                                  __end_of_RADIO_Transmit CDEA  
                                       ??_SPI2_Initialize 0001  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset C856  
                              RADIO_WatchdogTimeout@param 0001  
                              ?_RADIO_SetChannelFrequency 0001  
                                              __pbssBANK0 00F0  
                                              __pbssBANK1 0100  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                        RxData@dataLength 0003  
                                     __end_of_SwTimerStop 8CA8  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags A00E  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF7F  
                                   _INT0_InterruptHandler 01EA  
                                      SwTimersInterrupt@i 0029  
                                    _RADIO_SetOutputPower 8A16  
                                    __end_of_RADIO_SetCRC 8A0E  
                                  _RADIO_ReceiveStart$783 0050  
                                 ??_HALResetPinMakeOutput 0001  
                                    __end_of_RADIO_RxDone AF0E  
                              __end_of_RADIO_RxFSKTimeout 8FD0  
                                    __end_of_RADIO_TxDone B4A2  
                                     __size_of_FillSubKey 0050  
                                      __end_of_RADIO_DIO0 A520  
                                      __end_of_RADIO_DIO1 95C0  
                                      __end_of_RADIO_DIO2 9524  
                                      __end_of_RADIO_DIO3 8C3C  
                                      __end_of_RADIO_DIO4 8C56  
                                      __end_of_RADIO_DIO5 8C70  
                               ??_RADIO_FHSSChangeChannel 001A  
                             __size_of_SwTimerSetCallback 0030  
                               RADIO_SetOutputPower@power 0001  
                              __size_of_SPI2_Exchange8bit 0010  
                                      __end_of_RADIO_Init C6A0  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                        ??_LORAWAN_EnterContinuousReceive 0054  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                                                 ?_Random 0046  
                                       ?_CountfOptsLength 0001  
                                                 ?_RxData 0001  
                               ?_LORAWAN_SetDeviceAddress 0001  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0005  
                                         _EnableChannels1 9AEE  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 001A  
                                  ??_UpdateJoinInProgress 0001  
                        __size_of_AssembleEncryptionBlock 00C8  
                                  ??_ExecuteRxTimingSetup 000A  
                                        FillSubKey@source 0001  
            SelectChannelForTransmission@transmissionType 0054  
                                                 ?___lmul 0033  
                  AssembleEncryptionBlock@multicastStatus 0012  
                          __end_of_ExecuteRxParamSetupReq C0CE  
                                      ??_CountfOptsLength 0001  
                                                 ?___wmul 0001  
                                        ?_TMR1_StartTimer 0001  
                                      EncryptFRMPayload@i 0047  
                                      EncryptFRMPayload@j 0048  
                                      EncryptFRMPayload@k 0046  
                                      __CFG_CCP3MX$PORTB5 000000  
                                    ??_DIO3_ISR_Lora_Init 0001  
                                        _UpdateDLSettings 8BBE  
                                        _ValidateRxOffset 8B7E  
                                                 ?_memcpy 0001  
                                                 ?_memset 0001  
                                          ___lmul@product 003B  
                                       _TMR_ISR_Lora_Init 8AD8  
                                  RADIO_RegisterWrite@reg 0004  
                                     __size_of_ComputeMic 0060  
                                  RADIO_Transmit@regValue 0059  
                            __size_of_RADIO_SetModulation 0008  
                                     _RADIO_FSKPacketSent B694  
                                                 _AESCmac DB96  
                                  ComputeMic@bufferLength 005F  
                                 __end_of_UpdateDataRange B694  
                             ??_LORAWAN_LinkCheckCallback 0033  
                                         ??_TMR_SwapTimer 000B  
                                RADIO_WriteFSKBitRate@num 0012  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0003  
                                    EncryptFRMPayload@dir 0036  
                                      _RADIO_GetPacketSnr 89E0  
                                    EncryptFRMPayload@key 003B  
                                   __end_of_UpdateTxPower 8A2E  
                                     _RADIO_SetIQInverted 8A0E  
                                                 _OSCCON2 000FD2  
                                 ?_UpdateJoinSuccessState 0001  
                                 __size_of_ConfigureRadio 0090  
                                                 _OSCTUNE 000F9B  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0003  
                                       __end_of_bandwidth FF95  
                  UpdateReceiveWindow2Parameters@dataRate 0005  
                                __end_of_SetJoinFailState 8FA4  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0006  
                                  ValidateDataRate@result 0002  
                                        ?_TMR1_WriteTimer 0001  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0001  
                                         ?_RADIO_Transmit 004A  
                                 _ValidateChannelMaskCntl 8CA8  
                                         ___abdiv@counter 0004  
                                     StartReTxTimer@minim 0037  
                              AssemblePacket@bufferLength 005E  
                            PrepareSessionKeys@sessionKey 000C  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 0009  
                       __end_of_RADIO_SetChannelFrequency A496  
                             PrepareJoinRequestFrame@iCtr 00DF  
                               _IOCB4_SetInterruptHandler 8A72  
                       __end_of_SetCallbackSoftwareTimers AD64  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback B8A4  
                             PrepareJoinRequestFrame@mhdr 00DE  
                                  __size_of_AESEncodeLoRa 0032  
                                      _EncKeySchedule$520 0006  
                       __size_of_INT0_SetInterruptHandler 000A  
                           __size_of_LORAWAN_PlatformInit 0022  
                               ?_INT0_SetInterruptHandler 0001  
                                          _ticksAccounted 0104  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 0060  
                                              AESCmac@ptr 00CE  
                                 __end_of_spreadingFactor FF9C  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0001  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00DA  
                                  _InitDefault868Channels 9E3C  
                                RADIO_RegisterWrite@value 0003  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0001  
                                LORAWAN_Send@bufferLength 00DE  
                                   _StopAllSoftwareTimers 9702  
                                         __size_of_Random 0022  
                                         __size_of_RxData 0002  
                                 __end_of_UpdateFrequency 918E  
                                     AssemblePacket@fCtrl 00D8  
                                                 ___abdiv 9A28  
                                              AESEncode@i 001E  
                                               _AESEncode E188  
                                  ValidateRxOffset@result 0002  
                               __end_of_TMR_ISR_Lora_Init 8AE6  
                                                 ___awdiv A302  
                                         __size_of___lmul 0056  
                             __size_of_DIO2_ISR_Lora_Init 000E  
                                 __end_of_UpdateDutyCycle 90B6  
                                                 ___lldiv A1FC  
                                     __size_of_ExtractMic 004E  
                                         __size_of___wmul 0026  
                                    ??_RADIO_GetPacketSnr 0001  
                                                 ___llmod 9B52  
                                       ?_RADIO_ReadRandom 000D  
                                                 ___lwmod 937A  
                               SwTimerIsRunning@isRunning 0002  
                                 ??_RADIO_SetLoRaSyncWord 0001  
                                                 _devAddr 018D  
                                    ValidateChannelMask@i 0005  
                                                 __pcinit 9F20  
                      __size_of_LORAWAN_GetMaxPayloadSize 004A  
                                                 _appSKey 0195  
                                         __size_of_memcpy 005C  
                              __end_of_RADIO_ReceiveStart D3FE  
                                   RADIO_Init@radioBuffer 001A  
                                         __size_of_memset 002C  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 0008  
                        EncryptFRMPayload@multicastStatus 0040  
                                      ??_RADIO_ReadRandom 000F  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0001  
                                                 __ptext0 A086  
                                                 __ptext1 8D3C  
                                                 __ptext2 9028  
                                                 __ptext3 89D0  
                                                 __ptext4 8AF4  
                                                 __ptext5 9660  
                                                 __ptext6 8AE6  
                                                 __ptext7 8DBE  
                                                 __ptext8 8AD8  
                                                 __ptext9 8A7C  
                                    __end_of_LORAWAN_Init 9968  
                                    __end_of_LORAWAN_Join A770  
                                    __end_of_LORAWAN_Send AE32  
                                           _DIO0_ISR_Lora 000000  
                                      DutyCycleCallback@i 0044  
                         RADIO_SetFSKSyncWord@syncWordLen 000E  
                                          _EncodeShiftRow C21E  
                              ExecuteNewChannel@frequency 0042  
                               TMR1_ReadTimer@readValHigh 0007  
                         __size_of_INTERRUPT_GetDioStatus 0012  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 0055  
                                 __size_of_LORAWAN_RxDone 0AFC  
                                   _OSCILLATOR_Initialize 8AE6  
                          __end_of_UpdateJoinSuccessState B59A  
                                 __size_of_LORAWAN_TxDone 06DA  
                              __end_of_RADIO_SetBandwidth 89F6  
                                         _RADIO_GetStatus 89DA  
                     LORAWAN_ReceiveWindow1Callback@param 0001  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF8E  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 000000  
                                             _SwTimerStop 8C8C  
                                ??_PIN_MANAGER_Initialize 0003  
                               ?_TMR1_SetInterruptHandler 0001  
                                                 _nwkSKey 01A5  
                             IncludeMacCommandsResponse@i 000D  
                                           ?_UpdateCfList 003F  
                                       _ExecuteNewChannel CA1A  
                             __size_of_PrepareSessionKeys 0090  
                                            ??_CheckFlags 0003  
                           RADIO_SetModulation@modulation 0001  
                                 UpdateDLSettings@dlRx2Dr 0002  
                               __size_of_TMR_GetDeltaTime 0110  
                                           _DIO2_ISR_Lora 000000  
                              __size_of_SYSTEM_Initialize 001E  
                                                 main@msg 01C9  
                    __end_of_LORAWAN_SetNetworkSessionKey 9028  
                   __size_of_LORAWAN_SetNetworkSessionKey 002C  
                            _LORAWAN_SetNetworkSessionKey 8FFC  
                                      ?_ExecuteNewChannel 003F  
                              RADIO_WriteMode@currentMode 000A  
                                        ComputeMic@buffer 005D  
                                    end_of_initialization 9F90  
                                 _CreateAllSoftwareTimers 96B0  
                                     SwTimerCreate@retVal 0001  
                             _UpdateJoinSuccessState$2526 0037  
                                _INT2_SetInterruptHandler 8A68  
                                   ??_RADIO_FSKPacketSent 005E  
                                          _GenerateSubkey BBD6  
                                   _RADIO_WatchdogTimeout 92F8  
                                              _modulation FF67  
                                        ?_CheckMcastFlags 0001  
                                  ExtractMic@bufferLength 000E  
                                                 memcpy@d 0008  
                                                 memcpy@n 0005  
                                                 memcpy@s 000A  
                                 __end_of_EnableChannels1 9B52  
                                                 memset@c 0003  
                                                 memset@n 0005  
                                                 memset@p 0007  
                               _LORAWAN_LinkCheckCallback BAC0  
                                          ??_SwTimerStart 002A  
                                     ??_ExecuteNewChannel 0041  
                                   _UpdateCurrentDataRate 8A1E  
                                   _UpdateChannelIdStatus B798  
                                 ??_RADIO_WriteFSKBitRate 0012  
                                   ??_RADIO_SetIQInverted 0001  
                              __end_of_DIO1_ISR_Lora_Init 8ABC  
                                         ___lldiv@divisor 0005  
                                     _ValidateChannelMask 9446  
                                              _ticksAdded 0108  
                             HALResetPinOutputValue@value 0001  
                                EncodeShiftRow@stateTable 0001  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0001  
                                         ___lldiv@counter 000D  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 0011  
                                ExecuteLinkAdr@redundancy 0016  
                                       GenerateSubkey@key 0033  
                                    _HALResetPinMakeInput 89BC  
                                            ??_GetRx1Freq 0005  
                           UpdateDLSettings@dlRx1DrOffset 0001  
                              LORAWAN_Init@RxJoinResponse 004D  
                              LORAWAN_RxDone@bufferLength 00E4  
                        __end_of_RADIO_SetSpreadingFactor 8A06  
                      AssembleEncryptionBlock@bufferIndex 0014  
                                            RxData@status 0004  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 0008  
                                         _SystemTimerInit 8A2E  
                                                 postinc0 000FEE  
                                                 postinc2 000FDE  
                                           _AESEncode$515 0014  
                                           _AESEncode$516 0016  
                                           _AESEncode$517 0018  
                                        ??_RxJoinResponse 0001  
                                        _LORAWAN_Mainloop 927A  
                            __end_of_RADIO_SetFSKSyncWord 8F4C  
                                      LORAWAN_Join@result 00E2  
                                      __end_of_CheckFlags 9854  
                               ValidateTxPower@txPowerNew 0002  
                                          AESEncode@block 0008  
                       SearchAvailableChannel@maxChannels 0051  
                                  __end_of_EncodeShiftRow C380  
                                      _DIO0_ISR_Lora_Init 8AA0  
                              RADIO_RxFSKTimeout@irqFlags 000D  
                                       ??_HALDIO5PinValue 0001  
                                   _INT1_InterruptHandler 01EE  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 0006  
                            SwTimersInterrupt@timeElapsed 0021  
                                           _AESEncodeLoRa 90B6  
                               __size_of_ExecuteDevStatus 000A  
                            __end_of_RADIO_WriteFrequency B0D4  
                              __end_of_RADIO_RegisterRead 8D00  
                       __end_of_LORAWAN_GetMaxPayloadSize 94D8  
                          __end_of_HALResetPinOutputValue 8BA8  
                                        ?_UpdateDataRange 0001  
                                __end_of_ConfigureRadioRx 8E2A  
                                __end_of_ConfigureRadioTx 9446  
                                         _RADIO_RxTimeout 8ECA  
                          UpdateChannelIdStatus@channelId 0003  
                               __end_of_ExecuteNewChannel CBEE  
                                        EnableChannels1@i 000C  
                                 __size_of_AssemblePacket 037A  
                                    ?_ValidateChannelMask 0001  
                                       _SwTimerSetTimeout 92B8  
                                          _TMR1_ReadTimer 8CC4  
                                          ??_UpdateCfList 0041  
                                              _txPower433 FF9C  
                                              _txPower868 FFA2  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         ??_LORAWAN_Reset 004A  
                           __size_of_SystemBlockingWaitMs 002A  
                               ??_ValidateChannelMaskCntl 0001  
                                      ?_SwTimerSetTimeout 000E  
                             __size_of_MacExecuteCommands 0202  
                                    ExecuteNewChannel@ptr 003F  
                                ??_UpdateMinMaxChDataRate 0001  
                                  __end_of_GenerateSubkey BCF4  
                                           RADIO_RxDone@i 00EB  
                                   __size_of_RADIO_SetCRC 0008  
                                 AssemblePacket@macCmdIdx 00D9  
                             ?_LORAWAN_SetChannelIdStatus 0005  
                                          _localDioStatus 00F6  
                                      __end_of_GetRx1Freq 8B56  
                                   __size_of_RADIO_RxDone 00DC  
                                            ??_ComputeMic 0060  
                            __size_of_UpdateReceiveDelays 003C  
                                   __size_of_RADIO_TxDone 00F8  
                                  ??_RADIO_SetOutputPower 0001  
                         EncryptFRMPayload@macBufferIndex 003D  
                           ?_LORAWAN_SetNetworkSessionKey 000C  
                                 UpdateMinMaxChDataRate@i 0002  
                                 LORAWAN_Reset@ismBandNew 004A  
                               __size_of_SwTimerIsRunning 001E  
                              __end_of_ComputeSessionKeys A17C  
                                     ??_SwTimerSetTimeout 0012  
                                __size_of_SwTimersExecute 00BC  
                               __size_of_ExecuteLinkCheck 002C  
                                  _INTERRUPT_GetDioStatus 8B32  
                                         _RADIO_WriteMode B0D4  
                              ??_RADIO_WriteConfiguration 0041  
                                   SPI2_Exchange8bit@data 0001  
                                 ?_SearchAvailableChannel 0048  
                               __size_of_SwTimerReadValue 003C  
                             RADIO_FSKPacketSent@irqFlags 0082  
                               __size_of_ExecuteDutyCycle 0050  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00D6  
                                      __end_of_FillSubKey 9610  
                                 _AssembleEncryptionBlock AB0A  
                                    ??_DIO0_ISR_Lora_Init 0003  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF67  
                                     AESEncodeLoRa@useKey 0023  
                              SwTimerSetCallback@callback 0001  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0001  
                                        ?_UpdateFrequency 0001  
                                      LORAWAN_Send@buffer 00DC  
                                          __end_of_Random 8D9C  
                                          __end_of_RxData 89B6  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 000E  
                                __end_of_ValidateDataRate 8B7E  
                                 ?_AutomaticReplyCallback 0001  
                            __end_of_INTERRUPT_Initialize 89D0  
                          EnableChannels1@channelMaskCntl 0007  
                          EnableChannels1@channelIndexMax 0009  
                          EnableChannels1@channelIndexMin 0008  
                     LORAWAN_SetChannelIdStatus@channelId 0007  
                                        ?_UpdateDutyCycle 0001  
                            _INT0_DefaultInterruptHandler 000000  
                              __end_of_DIO5_ISR_Lora_Init 8AD8  
                                 __end_of_RADIO_GetStatus 89E0  
                                          __end_of___lmul 97FE  
                                      LORAWAN_Send@result 00E0  
                                        ??_EnableChannels 0010  
                                          __end_of___wmul 8E50  
                                        ??_HALSPICSAssert 0001  
                     TMR_OverrideRemaining@ticksRemaining 000B  
                                       ?_RADIO_WritePower 0001  
                                         ?_EncodeShiftRow 0001  
                                          ?_AESEncodeLoRa 001F  
                                      __end_of_ComputeMic 99C8  
                                               Random@max 0046  
                                          __end_of_memcpy 9908  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 92F8  
                                  __end_of_TMR1_ReadTimer 8CE2  
                                          __end_of_memset 8F20  
                                         _SPI2_Initialize 8AF4  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0005  
                                            _RADIO_SetCRC 8A06  
                                   ??_ValidateChannelMask 0003  
                                        ??_ExecuteLinkAdr 0012  
                                   UpdateCfList@frequency 0046  
                                            _RADIO_RxDone AE32  
                                            _RADIO_TxDone B3AA  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 000C  
                                     start_initialization 9F20  
                                          _ConfigureRadio A5B0  
                                      LORAWAN_RxDone@mhdr 01B7  
                                      LORAWAN_RxDone@temp 01BD  
                                      _DIO4_ISR_Lora_Init 89BA  
                          __size_of_TMR_OverrideRemaining 0084  
                                     _RADIO_RegisterWrite 8BEE  
                                            AESCmac@mLast 008E  
                               ??_CreateAllSoftwareTimers 0002  
                         __size_of_PIN_MANAGER_Initialize 0050  
                           __end_of_TMR_OverrideRemaining A302  
                             ?_IncludeMacCommandsResponse 0001  
                                            ??_ExtractMic 0010  
                    EncryptFRMPayload@bufferToBeEncrypted 003E  
                                            AESCmac@input 0064  
                        __end_of_LORAWAN_SetDeviceAddress 8BEE  
                                         ?_GenerateSubkey 0033  
                            ?_RADIO_SetFrequencyHopPeriod 0001  
                                         LORAWAN_TxDone@i 0079  
                                  ?_RADIO_WatchdogTimeout 0001  
                                   LORAWAN_Init@RxPayload 004B  
                     AssembleEncryptionBlock@frameCounter 000C  
                                           ??_RADIO_Reset 0006  
                                __end_of_UpdateDLSettings 8BD6  
                              SwTimerStart@ticksRemaining 002E  
                                  RADIO_WriteMode@newMode 000B  
                                __end_of_ValidateRxOffset 8B92  
                             ??_RADIO_SetChannelFrequency 0005  
                             ??_SetCallbackSoftwareTimers 0005  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 89F6  
                           ExecuteNewChannel@channelIndex 0046  
                          __end_of_SearchAvailableChannel B2B2  
                                        ?_EnableChannels1 0005  
                                 __size_of_StartReTxTimer 0142  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0001  
                                         ___llmod@divisor 0005  
                              MacExecuteCommands@fOptsLen 0049  
                                 _RADIO_FSKPacketSent$799 007E  
                                 __end_of_SystemTimerInit 8A36  
                          UpdateChannelIdStatus@statusNew 0001  
                       __size_of_RADIO_UnhandledInterrupt 002A  
                                         ___llmod@counter 0009  
                                     TMR_SwapTimer@oldVal 0110  
                               ?_RADIO_UnhandledInterrupt 0001  
                                     TMR_SwapTimer@retVal 010E  
                                   _RADIO_FSKPayloadReady A81E  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 89C4  
                                                ??_Random 0048  
                                                ??_RxData 0005  
                                                AESCmac@i 00D3  
                                                AESCmac@j 00D2  
                                                AESCmac@n 00D1  
                                                AESCmac@x 00BE  
                                                AESCmac@y 00AE  
                              SwTimerReadValue@ticksCount 002E  
                                    ?_RADIO_RegisterWrite 0003  
                          __end_of_InitDefault433Channels 9E3C  
                          __end_of_AutomaticReplyCallback 8E04  
                                     RADIO_Init@frequency 001C  
                                __size_of_TMR1_Initialize 002E  
                                    _macEndDevCmdReplyLen FF87  
                                                ??___lmul 003B  
                                             ??_AESEncode 000C  
                       RADIO_WriteConfiguration@tempValue 0045  
                                   __size_of_LORAWAN_Init 0060  
                      __size_of_AckRetransmissionCallback 010C  
                                   __size_of_LORAWAN_Join 00A0  
                                                ??___wmul 0005  
                                   __size_of_LORAWAN_Send 00CE  
                                 __end_of_RADIO_RxTimeout 8EF4  
                                MacExecuteCommands@buffer 0047  
                                ??_SetReceptionNotOkState 0054  
                                             __pdataBANK1 015E  
                                       _ValidateDataRange 9202  
                                      __end_of_ExtractMic 9572  
                  SwTimersInterrupt@ticksToNextTimerEvent 0025  
                                                ??_memcpy 0007  
                                  __size_of_SwTimerCreate 0072  
                                                ??_memset 0007  
                                    ??_DIO4_ISR_Lora_Init 0001  
                              __end_of_EXT_INT_Initialize 911E  
                                       _ValidateChannelId 8D5A  
                                    ?_RADIO_SetModulation 0001  
                                _RADIO_SetSpreadingFactor 89FE  
                                      _RADIO_RxFSKTimeout 8FA4  
                                                ?_AESCmac 0060  
                                      ?_ValidateDataRange 0001  
                                ValidateRxOffset@rxOffset 0001  
                                            AESEncode@aux 001A  
                                            AESEncode@key 000A  
                                  TMR_GetDeltaTime@retVal 0100  
                                         ?_TMR1_ReadTimer 0001  
                                  __end_of_ConfigureRadio A640  
                                          _LORAWAN_RxDone F36A  
                                      ?_ValidateChannelId 0001  
                                  TMR_GetDeltaTime@tmrVal 0112  
                                          _LORAWAN_TxDone EC90  
                              __size_of_ExecuteNewChannel 01D4  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 000A  
                                    __end_of_SwTimerStart A40E  
                  __end_of_LORAWAN_EnterContinuousReceive 9F20  
                 __size_of_LORAWAN_EnterContinuousReceive 0072  
                          _LORAWAN_EnterContinuousReceive 9EAE  
                                             __pbssBIGRAM 04A0  
                               __size_of_CountfOptsLength 00C6  
                                       CountfOptsLength@i 0008  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 004D  
                        __end_of_INT0_SetInterruptHandler 8A5E  
                                      LORAWAN_RxTimeout@i 0064  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 01B5  
                                     ?_RADIO_RxFSKTimeout 0001  
                                     ??_ValidateDataRange 0003  
                                        _TMR_GetDeltaTime B9B0  
                          LORAWAN_LinkCheckCallback@param 0001  
                           EnableChannels@channelMaskCntl 000F  
                                 __end_of_RADIO_WriteMode B1C0  
                 __end_of_UnconfirmedTransmissionCallback 9C84  
                __size_of_UnconfirmedTransmissionCallback 0066  
                       ??_UnconfirmedTransmissionCallback 005B  
                        ?_UnconfirmedTransmissionCallback 0001  
                         _UnconfirmedTransmissionCallback 9C1E  
                                 SearchAvailableChannel@i 0053  
                                     ??_ValidateChannelId 0002  
                                   RADIO_RegisterRead@reg 0003  
                         __size_of_UpdateMinMaxChDataRate 00BA  
                     LORAWAN_SetChannelIdStatus@statusNew 0005  
                                               _aesBuffer 014E  
                                 INTERRUPT_GetDioStatus@a 0001  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0032  
                           ??_RADIO_SetFrequencyHopPeriod 0003  
                                    _RADIO_SetFSKSyncWord 8F20  
                             RADIO_SetBandwidth@bandwidth 0001  
                              __end_of_SwTimerSetCallback 9086  
       __end_of_ResetParametersForUnconfirmedTransmission 8B32  
      __size_of_ResetParametersForUnconfirmedTransmission 0010  
             ??_ResetParametersForUnconfirmedTransmission 0001  
              ?_ResetParametersForUnconfirmedTransmission 0001  
               _ResetParametersForUnconfirmedTransmission 8B22  
                               ??_AssembleEncryptionBlock 0013  
                                   _INT2_InterruptHandler 01EC  
                                               _bandwidth FF8E  
                                      ??_SetJoinFailState 0001  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 9908  
                                            _LORAWAN_Join A6D0  
                                            _LORAWAN_Send AD64  
                                  RADIO_FSKPayloadReady@i 00EB  
                                       _ValidateFrequency 9BB8  
                                               __pnvBANK1 01E4  
                                  ??_HALResetPinMakeInput 0001  
                                    _RADIO_WriteFrequency AFEC  
                                         FillSubKey@carry 0007  
                                        _HALSPICSDeassert 89C8  
                          ??_LORAWAN_SetNetworkSessionKey 000E  
                                     __end_of_RADIO_Reset 937A  
                                   ??_RADIO_RegisterWrite 0004  
                                  _PIN_MANAGER_Initialize 9660  
                                    ??_RADIO_RxFSKTimeout 000D  
                                           FillSubKey@key 0003  
                                      ?_ValidateFrequency 0001  
                                    __end_of_UpdateCfList D1EE  
                     RADIO_WriteFSKFrequencyDeviation@num 0012  
                               EnableChannels@channelMask 000D  
                                               _macBuffer 04A0  
                                               _dioStatus 0117  
                               __end_of_ValidateDataRange 923E  
                           RADIO_FSKPayloadReady@irqFlags 00EA  
                                       _SwTimersInterrupt B2B2  
                                       ??_SwTimersExecute 00E2  
                                                ?___abdiv 0001  
                        __end_of_TMR1_SetInterruptHandler 8A86  
                                           __pmediumconst FE66  
                                 RADIO_Transmit@bufferLen 004C  
                                 __end_of_SPI2_Initialize 8B02  
                                                ?___awdiv 0001  
                                               __ptext100 A0FE  
                                               __ptext101 A640  
                                               __ptext110 89B4  
                                               __ptext102 9F96  
                               __end_of_ValidateChannelId 8D7A  
                                               __ptext111 8B22  
                                               __ptext103 97FE  
                                               __ptext120 99C8  
                                               __ptext112 8A92  
                                               __ptext104 B694  
                                               __ptext121 B1C0  
                                               __ptext113 89D4  
                                               __ptext105 EC90  
                                               __ptext130 8F20  
                                               __ptext122 9400  
                                               __ptext114 8D00  
                                               __ptext106 91C6  
                                               __ptext131 A40E  
                                               __ptext123 8A16  
                                               __ptext115 D1EE  
                                               __ptext107 8D1E  
                                               __ptext140 9754  
                                               __ptext132 89EE  
                                               __ptext124 8A0E  
                                               __ptext116 8E04  
                                               __ptext108 89DA  
                                               __ptext141 937A  
                                               __ptext133 CBEE  
                                               __ptext125 8A06  
                                               __ptext117 8B32  
                                               __ptext109 9EAE  
                                               __ptext150 9908  
                                               __ptext142 9968  
                                               __ptext134 E802  
                                               __ptext126 A5B0  
                                               __ptext118 A6D0  
                                               __ptext151 8B12  
                                               __ptext143 DB96  
                                               __ptext135 AF0E  
                                               __ptext127 89FE  
                                               __ptext119 8B56  
                                               __ptext160 B0D4  
                                               __ptext152 AC9A  
                                               __ptext144 BBD6  
                                               __ptext136 9C84  
                                               __ptext128 89F6  
                                               __ptext161 8CE2  
                                               __ptext153 A520  
                                               __ptext145 95C0  
                                               __ptext137 9A8A  
                                               __ptext129 8A40  
                                               __ptext170 9338  
                                               __ptext162 8A86  
                                               __ptext154 C856  
                                               __ptext146 90B6  
                                               __ptext138 C0CE  
                                               __ptext171 8E76  
                                               __ptext163 AFEC  
                                               __ptext155 A8CE  
                                               __ptext147 E188  
                                               __ptext139 8D7A  
                                               __ptext180 A27E  
                                               __ptext172 8B92  
                                               __ptext164 9B52  
                                               __ptext156 9702  
                                               __ptext148 C21E  
                                               __ptext181 93BC  
                                               __ptext173 89C0  
                                               __ptext165 8BEE  
                                               __ptext157 89E6  
                                               __ptext149 D618  
                                               __ptext190 98AC  
                                               __ptext182 8C70  
                                               __ptext174 89BC  
                                               __ptext166 8A36  
                                               __ptext158 C4F0  
                                               __ptext191 96B0  
                                               __ptext183 B2B2  
                                               __ptext175 BE36  
                                               __ptext167 8B02  
                                               __ptext159 9056  
                                               __ptext192 9D58  
                                               __ptext184 B9B0  
                                               __ptext176 97A8  
                                               __ptext168 89C8  
                                               __ptext193 0000  
                                               __ptext185 8CC4  
                                               __ptext177 A1FC  
                                               __ptext169 89C4  
                                               __ptext186 92B8  
                                               __ptext178 8C8C  
                                               __ptext187 9E3C  
                                               __ptext179 A386  
                                               __ptext188 9DCA  
                                               __ptext189 8EF4  
                                       _EncryptFRMPayload C380  
                                                ?___lldiv 0001  
                            RADIO_FSKPacketSent@timeOnAir 007A  
                           __size_of_UpdateJoinInProgress 0014  
                                                ?___llmod 0001  
                           __size_of_ExecuteRxTimingSetup 0026  
                                         ??_AESEncodeLoRa 0023  
                SelectChannelForTransmission@channelIndex 0056  
                         __end_of_PrepareJoinRequestFrame C21E  
                                                ?___lwmod 0041  
                                      ?_SwTimersInterrupt 0019  
                               _RADIO_SetChannelFrequency A40E  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 000E  
                               _SetCallbackSoftwareTimers AC9A  
                                      ConfigureRadio@freq 000F  
                                   ??_RADIO_SetModulation 0001  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone FE66  
                                     ??_ValidateFrequency 0005  
                                  __end_of_LORAWAN_TxDone F36A  
                                      ?_EncryptFRMPayload 0033  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 8DE0  
                          __size_of_RADIO_SetLoRaSyncWord 0008  
                                        _ExecuteDevStatus 8A4A  
                           __end_of_RADIO_SetLoRaSyncWord 89EE  
                  IncludeMacCommandsResponse@pBufferIndex 0003  
                              __size_of_SwTimerSetTimeout 0040  
                             ??_LORAWAN_GetMaxPayloadSize 0009  
                          LORAWAN_LinkCheckConfigure@iCtr 0049  
                        ExecuteRxParamSetupReq@dlSettings 0045  
                                          _AssemblePacket E488  
                                         ?_ConfigureRadio 000F  
                               AssemblePacket@bufferIndex 00DA  
                              ??_INT2_SetInterruptHandler 0003  
                                __size_of_TMR1_StartTimer 0004  
                                     ??_SwTimersInterrupt 001D  
                                    RADIO_DIO0@dioMapping 00EE  
                                       _DutyCycleCallback D3FE  
                                 InitDefault433Channels@i 000C  
                                   __end_of_TMR_SwapTimer 9400  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 0041  
                     LORAWAN_ReceiveWindow2Callback@param 0001  
                                 __size_of_EncKeySchedule 029C  
                                      ?_DutyCycleCallback 0001  
                                      AssemblePacket@mhdr 00D7  
                                      AssemblePacket@port 005B  
                               __size_of_RADIO_ReadRandom 0090  
                                ConfigureRadioRx@dataRate 0018  
                                      _RADIO_ReceiveStart D1EE  
                                          __size_of_srand 0010  
                                __end_of_LORAWAN_Mainloop 92B8  
                                   ?_RADIO_SetFSKSyncWord 000C  
                                    _INTERRUPT_Initialize 89CC  
                                           _SwTimerCreate 9D58  
                          __end_of_InitDefault868Channels 9EAE  
                     IncludeMacCommandsResponse@macBuffer 0001  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0001  
                               __end_of_ValidateFrequency 9C1E  
                                        _SwTimerIsRunning 8D1E  
                                        _ExecuteLinkCheck 8F4C  
                                     ??_DutyCycleCallback 0033  
                                _LORAWAN_SetDeviceAddress 8BD6  
                                       EncKeySchedule@key 0001  
                                          ___wmul@product 0005  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 89EE  
                                  ?_RADIO_FSKPayloadReady 0001  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF87  
                                   ?_RADIO_WriteFrequency 000E  
                               ?_INT1_SetInterruptHandler 0001  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00F4  
                                     ?_RADIO_ReceiveStart 004A  
                                        _SwTimerReadValue 91C6  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle 9610  
                                         _HALDIO5PinValue 8A86  
                                    RADIO_DIO1@dioMapping 0065  
                               __end_of_SwTimersInterrupt B3AA  
                                __size_of_TMR1_WriteTimer 001C  
                    UnconfirmedTransmissionCallback@param 0001  
                              __end_of_DIO2_ISR_Lora_Init 8ACA  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 0035  
                                        GenerateSubkey@k2 0037  
                                    ConfigureRadioRx@freq 0014  
                               __end_of_EncryptFRMPayload C4F0  
                          __size_of_RADIO_WriteFSKBitRate 0064  
                                UpdateReceiveDelays@delay 0007  
                               LORAWAN_RxDone@bufferIndex 01BC  
                                  __size_of_UpdateTxPower 0008  
                           __end_of_RADIO_WriteFSKBitRate 9AEE  
                                    ConfigureRadioTx@freq 0014  
                             UpdateDataRange@dataRangeNew 0001  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 0049  
                                               _rxPayload 00F0  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate A8CE  
                           EncryptFRMPayload@bufferLength 0035  
                                               main@F6873 015E  
                                               main@F6875 0181  
                                 ValidateDataRange@result 0003  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0001  
              ValidateChannelId@allowedForDefaultChannels 0001  
                           __size_of_FindSmallestDataRate 00AE  
                                ConfigureRadioTx@dataRate 0018  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0001  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 02FC  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 0041  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 923E  
                         __size_of_SetReceptionNotOkState 0078  
                                  __end_of_AssemblePacket E802  
                                         ?_LORAWAN_RxDone 00E2  
                                         ?_LORAWAN_TxDone 0054  
                                  DutyCycleCallback@found 003F  
                                  DutyCycleCallback@param 0001  
                                  DutyCycleCallback@minim 0040  
                                       ??_TMR1_Initialize 0003  
                                        ___abdiv@dividend 0007  
                                      _DIO1_ISR_Lora_Init 8AAE  
                               __end_of_DutyCycleCallback D618  
                                       ___wmul@multiplier 0001  
                                        __size_of_AESCmac 02F6  
                                    ??_RADIO_ReceiveStart 004C  
                                 ValidateFrequency@result 0005  
                              __end_of_PrepareSessionKeys A6D0  
                                       ?_ConfigureRadioRx 0014  
                                       ?_ConfigureRadioTx 0014  
                                    RADIO_DIO2@dioMapping 001D  
                                      AESEncodeLoRa@block 001F  
                                                _Channels 0300  
                             __end_of_RADIO_FSKPacketSent B798  
                 RADIO_SetSpreadingFactor@spreadingFactor 0001  
                                      ??_ConfigureRadioRx 0018  
                                      ??_ConfigureRadioTx 0018  
                                    ??_RADIO_SetBandwidth 0001  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0001  
                                        ?_RADIO_WriteMode 0006  
                               LORAWAN_RxDone@computedMic 01C0  
                                       ___lmul@multiplier 0033  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 9F34  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                _INT0_SetInterruptHandler 8A54  
                             __end_of_RADIO_SetIQInverted 8A16  
                                             _RADIO_Reset 9338  
                                     ExecuteLinkCheck@ptr 0001  
                                      _RADIO_RegisterRead 8CE2  
                                __size_of_ValidateTxPower 0022  
                                 ??_StopAllSoftwareTimers 0002  
                                          _StartReTxTimer BCF4  
                               _LORAWAN_GetMaxPayloadSize 948E  
                              LORAWAN_RxDone@extractedMic 01B8  
                                             AESCmac@flag 00D0  
                           EncryptFRMPayload@frameCounter 0037  
                                      CheckMcastFlags@hdr 0001  
                                             AESCmac@size 0066  
                                SwTimerSetTimeout@timerId 0016  
                                SwTimerSetTimeout@timeout 000E  
                                   RADIO_WriteMode@opMode 000C  
                                ??_ExecuteRxParamSetupReq 0041  
                     __size_of_LORAWAN_LinkCheckConfigure 014A  
                                        ___abdiv@quotient 0006  
                 UpdateReceiveWindow2Parameters@frequency 0001  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 8EA0  
                  ValidateChannelMaskCntl@channelMaskCntl 0002  
                                               memcpy@tmp 0007  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0003  
                                    ??_DIO1_ISR_Lora_Init 0003  
                                __size_of_CheckMcastFlags 0078  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0005  
                              __size_of_ValidateDataRange 003C  
                               _ticksToScheduledInterrupt 0191  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0005  
                            ValidateDataRange@dataRateMin 0006  
                              __size_of_ValidateChannelId 0020  
                                        ?_SPI2_Initialize 0001  
                                        __size_of___abdiv 0062  
                                 ??_OSCILLATOR_Initialize 0001  
                                       ?_ValidateDataRate 0001  
                                        __size_of___awdiv 0084  
                                      _ComputeSessionKeys A0FE  
                                   __size_of_SwTimerStart 0088  
                                        __size_of___lldiv 0082  
                                        __size_of___llmod 0066  
                                        __size_of___lwmod 0042  
                                         ?_AssemblePacket 005B  
                                    AssemblePacket@buffer 005C  
                                        SwTimersExecute@i 00E6  
                           LORAWAN_LinkCheckCallback@iCtr 003B  
                                      ??_ValidateDataRate 0001  
                                _TMR1_SetInterruptHandler 8A7C  
                                  _IOCB4_InterruptHandler 01E4  
                                             _radioBuffer 05AF  
         __end_of_ResetParametersForConfirmedTransmission 8AA0  
        __size_of_ResetParametersForConfirmedTransmission 000E  
               ??_ResetParametersForConfirmedTransmission 0001  
                ?_ResetParametersForConfirmedTransmission 0001  
                 _ResetParametersForConfirmedTransmission 8A92  
                                   _TMR1_InterruptHandler 01E6  
                                        ??_GenerateSubkey 0039  
                                        _CountfOptsLength AA44  
                                              _HALSPISend 8A36  
                                     ?_ComputeSessionKeys 0033  
                                          _rxWindowOffset FF6F  
                      RADIO_UnhandledInterrupt@modulation 0005  
                              __end_of_MacExecuteCommands CFEC  
                                    ??_RADIO_RegisterRead 0003  
                                 ??_RADIO_WatchdogTimeout 000D  
                        __end_of_RADIO_UnhandledInterrupt 8ECA  
                                           _UpdateTxPower 8A26  
                                    RADIO_Transmit@buffer 004A  
                         __end_of_RADIO_FHSSChangeChannel 91C6  
                                         _allocatedTimers 00F7  
                          __end_of_INTERRUPT_GetDioStatus 8B44  
                                      _DIO5_ISR_Lora_Init 8ACA  
                                                __ptext10 8A2E  
                                                __ptext11 8ACA  
                                                __ptext20 8A68  
                                                __ptext12 89BA  
                                                __ptext21 8A5E  
                                                __ptext13 89B8  
                                              _T1GCONbits 000FCC  
                                                __ptext30 8DE0  
                                                __ptext22 8A54  
                                                __ptext14 8ABC  
                                                __ptext31 B8A4  
                                                __ptext23 8FFC  
                                                __ptext15 8A72  
                                                __ptext40 8C3C  
                                                __ptext32 BAC0  
                                                __ptext24 8BD6  
                                                __ptext16 8AAE  
                                                __ptext41 8C22  
                                                __ptext33 A17C  
                                                __ptext25 8FD0  
                                                __ptext17 8AA0  
                                                __ptext50 9A28  
                                                __ptext42 94D8  
                                                __ptext34 ABD2  
                                                __ptext26 927A  
                                                __ptext18 89CC  
                                                __ptext51 A81E  
                                                __ptext43 9572  
                                                __ptext35 92F8  
                                                __ptext27 A988  
                                                __ptext19 90E8  
                                                __ptext60 89B6  
                                                __ptext52 D8B4  
                                                __ptext44 8ECA  
                                                __ptext36 8FA4  
                                                __ptext28 D3FE  
                                                __ptext61 CDEA  
                                                __ptext53 F36A  
                                                __ptext45 918E  
                                                __ptext37 9C1E  
                                                __ptext29 B4A2  
                                                __ptext70 9202  
                                                __ptext62 8E50  
                                                __ptext54 9CEC  
                                                __ptext46 A496  
                                                __ptext38 8B44  
                                                __ptext71 9156  
                                                __ptext63 923E  
                                                __ptext55 8BBE  
                                                __ptext47 8EA0  
                                                __ptext39 8C56  
                                                __ptext80 8CA8  
                                                __ptext72 9086  
                                                __ptext64 8E2A  
                                                __ptext56 CFEC  
                                                __ptext48 B3AA  
                                                __ptext81 9446  
                                                __ptext73 B59A  
                                                __ptext65 BF80  
                                                __ptext57 BCF4  
                                                __ptext49 AE32  
                                                __ptext90 948E  
                                                __ptext82 8A26  
                                                __ptext74 911E  
                                                __ptext66 8B7E  
                                                __ptext58 A00E  
                                                __ptext91 E488  
                                                __ptext83 8A1E  
                                                __ptext75 8D5A  
                                                __ptext67 8BA8  
                                                __ptext59 8F78  
                                                __ptext92 DE8C  
                                                __ptext84 8C08  
                                                __ptext76 8F4C  
                                                __ptext68 CA1A  
                                                __ptext93 89E0  
                                                __ptext85 9AEE  
                                                __ptext77 C6A0  
                                                __ptext69 9BB8  
                                                __ptext94 A770  
                                                __ptext86 B798  
                                                __ptext78 8D9C  
                                                __ptext95 C380  
                                                __ptext87 9610  
                                                __ptext79 8B6A  
                                                __ptext96 A302  
                                                __ptext88 8A4A  
                                                __ptext97 AB0A  
                                                __ptext89 AD64  
                                                __ptext98 AA44  
                                                __ptext99 9524  
                                 ExecuteRxTimingSetup@ptr 0008  
                                  ??_RADIO_SetFSKSyncWord 000E  
                                   ??_UpdateReceiveDelays 0007  
                                   __end_of_LORAWAN_Reset CA1A  
                                  __end_of_StartReTxTimer BE36  
                                 ??_UpdateCurrentDataRate 0001  
                                 ??_UpdateChannelIdStatus 0002  
                                __size_of_UpdateDataRange 00FA  
                                  _SetReceptionNotOkState A00E  
                                            _SSP2CON1bits 000F6C  
                                     GenerateSubkey@F5972 0171  
                                       ??_TMR1_StartTimer 0001  
                               __size_of_RADIO_WritePower 00DE  
                                 __end_of_HALDIO5PinValue 8A92  
                                       ?_UpdateDLSettings 0001  
                                  ConfigureRadio@dataRate 0013  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 0066  
                        __size_of_PrepareJoinRequestFrame 0150  
                                           CheckFlags@hdr 0001  
                                  ??_RADIO_WriteFrequency 0012  
                                   __size_of_UpdateCfList 0202  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 0008  
                                           __size_of_main 0078  
                                           __size_of_rand 0054  
                                       _RADIO_ReceiveStop 8D00  
                                      ??_UpdateDLSettings 0002  
                                    _LORAWAN_PlatformInit 8DBE  
                                         _FskSyncWordBuff FFFC  
                                      ??_ValidateRxOffset 0001  
               IncludeMacCommandsResponse@bIncludeInFopts 0005  
                                    ??_ComputeSessionKeys 0035  
                                           _timerOverflow 0116  
                                            _SwTimerStart A386  
                              __size_of_SwTimersInterrupt 00F8  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0001  
                                   RADIO_TxDone@timeOnAir 007A  
                          ValidateChannelMask@channelMask 0001  
                             __size_of_DIO0_ISR_Lora_Init 000E  
                              __size_of_EncryptFRMPayload 0170  
                                         GenerateSubkey@i 005A  
                                         GenerateSubkey@l 004A  
                                 PrepareSessionKeys@index 0012  
                                __end_of_TMR_GetDeltaTime BAC0  
                                      SwTimerStop@timerId 0001  
                                                _swTimers 0400  
                                        ??_TMR1_ReadTimer 0003  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 000C  
                                    RADIO_RxDone@irqFlags 00EA  
                             __end_of_ValidateChannelMask 948E  
                                ??_UpdateJoinSuccessState 0033  
                                           UpdateCfList@i 004B  
                                     ??_RADIO_ReceiveStop 000D  
                             PrepareSessionKeys@networkId 0010  
                                       _RADIO_ReleaseData 89D4  
                                       ??_TMR1_WriteTimer 0003  
                        ??_LORAWAN_ReceiveWindow1Callback 0054  
                         ?_LORAWAN_ReceiveWindow1Callback 0001  
                                              _RADIO_DIO0 A496  
                                              _RADIO_DIO1 9572  
                                              _RADIO_DIO2 94D8  
                                              _RADIO_DIO3 8C22  
                                              _RADIO_DIO4 8C3C  
                                              _RADIO_DIO5 8C56  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0003  
                            _INT1_DefaultInterruptHandler 000000  
                        ??_LORAWAN_ReceiveWindow2Callback 0054  
                         ?_LORAWAN_ReceiveWindow2Callback 0001  
                       __size_of_RADIO_WriteConfiguration 048E  
                                  __end_of_rxWindowOffset FF77  
                              __size_of_DutyCycleCallback 021A  
                                 EncryptFRMPayload@buffer 0033  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 003F  
                                      __end_of_modulation FF6F  
                                              _RADIO_Init C4F0  
                         ExecuteRxParamSetupReq@frequency 0041  
                                __size_of_UpdateFrequency 0038  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0115  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 0019  
                                __end_of_HALSPICSDeassert 89CC  
                                __size_of_UpdateDutyCycle 0030  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0001  
                                                memcpy@s1 0003  
                                          _EncKeySchedule D618  
                      __size_of_SetCallbackSoftwareTimers 00CA  
                                 __size_of_RxJoinResponse 0002  
                                         ??_SwTimerCreate 0001  
                                     ExecuteDutyCycle@ptr 0001  
                                            _UpdateCfList CFEC  
                                     ??_RADIO_ReleaseData 0001  
                                  ??_INTERRUPT_Initialize 0001  
                                                memset@p1 0001  
                                    __size_of_SwTimerStop 001C  
                                        _RADIO_ReadRandom A520  
                                      _EXT_INT_Initialize 90E8  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining A27E  
                          RADIO_ReceiveStart@rxWindowSize 004A  
                               __end_of_RADIO_ReceiveStop 8D1E  
                                         _SwTimersExecute A988  
                     SwTimerSetCallback@callbackParameter 0003  
                                             FillSubKey@i 0008  
                           RADIO_WriteFrequency@frequency 000E  
                                        ___lwmod@dividend 0041  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0001  
                                __end_of_ExecuteDevStatus 8A54  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels433 FFA8  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0005  
                                UpdateDutyCycle@channelId 0003  
                                  GenerateSubkey@const_Rb 003A  
                         __size_of_ExecuteRxParamSetupReq 014E  
                               UpdateJoinInProgress@state 0001  
                                       ??_ValidateTxPower 0001  
                                     _LORAWAN_TxDone$5110 006D  
                                     _LORAWAN_TxDone$1671 0060  
                                     _LORAWAN_TxDone$1672 0064  
                      __end_of_LORAWAN_LinkCheckConfigure BF80  
                               __end_of_RADIO_ReleaseData 89DA  
                              _LORAWAN_LinkCheckConfigure BE36  
                                      __end_of_txPower433 FFA2  
                                __size_of_EnableChannels1 0064  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput 89C0  
                                ??_HALResetPinOutputValue 0001  
                               RADIO_WriteConfiguration@i 0044  
                               ExecuteRxTimingSetup@delay 000A  
                                        AESEncodeLoRa@key 0021  
                               __size_of_SetJoinFailState 002C  
                        LORAWAN_LinkCheckConfigure@period 003F  
                                        ??_ConfigureRadio 0013  
                                      _SwTimerSetCallback 9056  
             __end_of_UpdateRetransmissionAckTimeoutState 9D58  
            __size_of_UpdateRetransmissionAckTimeoutState 006C  
                   ??_UpdateRetransmissionAckTimeoutState 0033  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                     _UpdateRetransmissionAckTimeoutState 9CEC  
                          _LORAWAN_LinkCheckCallback$2509 0037  
                                       RADIO_ReadRandom@i 0012  
                            SearchAvailableChannel@result 0050  
                                   RADIO_WritePower@paDac 0006  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                __end_of_SwTimerIsRunning 8D3C  
                                       ??_CheckMcastFlags 0003  
                                __end_of_ExecuteLinkCheck 8F78  
                                   RADIO_WritePower@power 0007  
                                        _RADIO_TxDone$795 007E  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 0008  
                                    ??_EXT_INT_Initialize 0003  
                            RADIO_SetFSKSyncWord@syncWord 000C  
                                            _rxWindowSize FF7F  
                                  __end_of_EncKeySchedule D8B4  
                                     ?_SwTimerSetCallback 0001  
                                __end_of_SwTimerReadValue 9202  
                                        ___lldiv@quotient 0009  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 9660  
                                         ___lwmod@divisor 0043  
                  __end_of_UpdateReceiveWindow2Parameters 8BBE  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 8BA8  
                                 UpdateTxPower@txPowerNew 0001  
                                         ___lwmod@counter 0045  
                         _LORAWAN_LinkCheckConfigure$2496 0045  
                        __end_of_INT1_SetInterruptHandler 8A68  
                            FindSmallestDataRate@dataRate 0004  
                           LORAWAN_Join@activationTypeNew 00E3  
                              ??_LORAWAN_SetDeviceAddress 0005  
                                       __CFG_T3CMX$PORTC0 000000  
                                    _SystemBlockingWaitMs 8E76  
                                   FindSmallestDataRate@i 0003  
                      ComputeSessionKeys@joinAcceptBuffer 0033  
                                 __size_of_EnableChannels 001A  
                            __end_of_UpdateJoinInProgress 8B6A  
                            __end_of_ExecuteRxTimingSetup 8E76  
                                 __size_of_HALSPICSAssert 0004  
                                 __end_of_FskSyncWordBuff FFFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 9CEC  
               __size_of_RADIO_WriteFSKFrequencyDeviation 0068  
                      ??_RADIO_WriteFSKFrequencyDeviation 0012  
                       ?_RADIO_WriteFSKFrequencyDeviation 000E  
                        _RADIO_WriteFSKFrequencyDeviation 9C84  
                __end_of_LORAWAN_SetApplicationSessionKey 8FFC  
               __size_of_LORAWAN_SetApplicationSessionKey 002C  
                      ??_LORAWAN_SetApplicationSessionKey 000E  
                       ?_LORAWAN_SetApplicationSessionKey 000C  
                        _LORAWAN_SetApplicationSessionKey 8FD0  
                                        ExtractMic@buffer 000C  
                                 ??_RADIO_FSKPayloadReady 0060  
                                UpdateDataRange@channelId 0003  
                                _RADIO_UnhandledInterrupt 8EA0  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 96B0  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 8C08  
                                 __size_of_ExecuteLinkAdr 01B6  
                            RADIO_WriteFSKBitRate@bitRate 000E  
                                         RADIO_SetCRC@crc 0001  
                             UpdateJoinSuccessState@param 0001  
                                       __CFG_FOSC$INTIO67 000000  
                                     RADIO_WritePower@ocp 0005  
                                      ??_LORAWAN_Mainloop 0060  
                                    ??_SwTimerSetCallback 0004  
                                       ??_UpdateDataRange 0002  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 9028  
                        RADIO_WriteConfiguration@regValue 0049  
                                      _RadioConfiguration 0118  
                                           ExtractMic@mic 0012  
                                       _LORAWAN_RxTimeout D8B4  
                             __end_of_RADIO_SetModulation 89FE  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 002C  
                                        ??_LORAWAN_RxDone 00E5  
